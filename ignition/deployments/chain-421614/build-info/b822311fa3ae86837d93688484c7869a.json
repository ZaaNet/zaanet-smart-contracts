{
  "id": "b822311fa3ae86837d93688484c7869a",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/ZaaNetAdmin.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./ZaaNetStorage.sol\";\n\ncontract ZaaNetAdmin is Ownable, Pausable, ReentrancyGuard {\n    ZaaNetStorage public storageContract;\n    address public treasuryAddress; // Address to receive platform fees\n    address public paymentAddress; // Address to make voucher payments\n    uint256 public platformFeePercent; // Platform fee percentage (1-20%)\n    uint256 public hostingFee; // Hosting fee in USDT (6 decimals)\n\n    // Constants for validation\n    uint256 public constant MAX_PLATFORM_FEE = 20; // 20% maximum fee\n    uint256 public constant MIN_PLATFORM_FEE = 1;  // 1% minimum fee\n    uint256 public constant MAX_HOSTING_FEE = 100 * (10 ** 6); // 100 USDT maximum hosting fee\n    uint256 public constant MIN_HOSTING_FEE = 0; // 0 USDT minimum hosting fee (can be free)\n\n    // Emergency controls\n    bool public emergencyMode = false;\n    mapping(address => bool) public emergencyOperators;\n\n    // Fee history for transparency\n    struct FeeChange {\n        uint256 oldFee;\n        uint256 newFee;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    FeeChange[] public feeHistory;\n    \n    // Treasury change history\n    struct TreasuryChange {\n        address oldTreasury;\n        address newTreasury;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    TreasuryChange[] public treasuryHistory;\n\n    // Hosting fee history\n    struct HostingFeeChange {\n        uint256 oldFee;\n        uint256 newFee;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    HostingFeeChange[] public hostingFeeHistory;\n\n    // Events\n    event PlatformFeeUpdated(uint256 indexed oldFee, uint256 indexed newFee, address indexed changedBy);\n    event TreasuryUpdated(address indexed oldTreasury, address indexed newTreasury, address indexed changedBy);\n    event HostingFeeUpdated(uint256 indexed oldFee, uint256 indexed newFee, address indexed changedBy);\n    event AdminPaused(address indexed triggeredBy);\n    event AdminUnpaused(address indexed triggeredBy);\n    event EmergencyModeToggled(bool enabled, address indexed triggeredBy);\n    event EmergencyOperatorUpdated(address indexed operator, bool status, address indexed updatedBy);\n    event ContractsInitialized(address indexed storageContract, uint256 timestamp);\n\n    modifier onlyEmergencyOperator() {\n        require(emergencyOperators[msg.sender] || msg.sender == owner(), \"Not emergency operator\");\n        _;\n    }\n\n    modifier notInEmergencyMode() {\n        require(!emergencyMode, \"System in emergency mode\");\n        _;\n    }\n\n    constructor(\n        address _storageContract,\n        address _treasuryAddress,\n        address _paymentAddress,\n        uint256 _platformFeePercent,\n        uint256 _hostingFee\n    ) Ownable(msg.sender) {\n        require(_treasuryAddress != address(0), \"Treasury cannot be zero address\");\n        require(\n            _platformFeePercent >= MIN_PLATFORM_FEE && _platformFeePercent <= MAX_PLATFORM_FEE, \n            \"Platform fee must be between 1% and 20%\"\n        );\n        require(_paymentAddress != address(0), \"Payment address cannot be zero address\");\n        require(\n            _hostingFee >= MIN_HOSTING_FEE && _hostingFee <= MAX_HOSTING_FEE,\n            \"Hosting fee must be between 0 and 100 USDT\"\n        );\n\n        if (_storageContract != address(0)) {\n            storageContract = ZaaNetStorage(_storageContract);\n            emit ContractsInitialized(_storageContract, block.timestamp);\n        }\n        \n        treasuryAddress = _treasuryAddress;\n        platformFeePercent = _platformFeePercent;\n        hostingFee = _hostingFee;\n\n        // Record initial settings\n        feeHistory.push(FeeChange({\n            oldFee: 0,\n            newFee: _platformFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        treasuryHistory.push(TreasuryChange({\n            oldTreasury: address(0),\n            newTreasury: _treasuryAddress,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        hostingFeeHistory.push(HostingFeeChange({\n            oldFee: 0,\n            newFee: _hostingFee,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        // Set owner as emergency operator\n        emergencyOperators[msg.sender] = true;\n        emit EmergencyOperatorUpdated(msg.sender, true, msg.sender);\n    }\n\n    function setPlatformFee(uint256 _newFeePercent) external onlyOwner notInEmergencyMode {\n        require(\n            _newFeePercent >= MIN_PLATFORM_FEE && _newFeePercent <= MAX_PLATFORM_FEE, \n            \"Fee must be between 1% and 20%\"\n        );\n        require(_newFeePercent != platformFeePercent, \"Fee unchanged\");\n\n        uint256 oldFee = platformFeePercent;\n        platformFeePercent = _newFeePercent;\n\n        // Record fee change\n        feeHistory.push(FeeChange({\n            oldFee: oldFee,\n            newFee: _newFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit PlatformFeeUpdated(oldFee, _newFeePercent, msg.sender);\n    }\n\n    function setHostingFee(uint256 _newFee) external onlyOwner notInEmergencyMode {\n        require(\n            _newFee >= MIN_HOSTING_FEE && _newFee <= MAX_HOSTING_FEE,\n            \"Fee must be between 0 and 100 USDT\"\n        );\n        require(_newFee != hostingFee, \"Fee unchanged\");\n        \n        uint256 oldFee = hostingFee;\n        hostingFee = _newFee;\n        \n        // Record hosting fee change\n        hostingFeeHistory.push(HostingFeeChange({\n            oldFee: oldFee,\n            newFee: _newFee,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n        \n        emit HostingFeeUpdated(oldFee, _newFee, msg.sender);\n    }\n\n    function setTreasuryAddress(address _newTreasuryAddress) external onlyOwner notInEmergencyMode {\n        require(_newTreasuryAddress != address(0), \"Invalid treasury address\");\n        require(_newTreasuryAddress != treasuryAddress, \"Treasury unchanged\");\n\n        address oldTreasury = treasuryAddress;\n        treasuryAddress = _newTreasuryAddress;\n\n        // Record treasury change\n        treasuryHistory.push(TreasuryChange({\n            oldTreasury: oldTreasury,\n            newTreasury: _newTreasuryAddress,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit TreasuryUpdated(oldTreasury, _newTreasuryAddress, msg.sender);\n    }\n\n    function setPaymentAddress(address _newPaymentAddress) external onlyOwner notInEmergencyMode {\n        require(_newPaymentAddress != address(0), \"Invalid payment address\");\n        require(_newPaymentAddress != paymentAddress, \"Payment address unchanged\");\n\n        paymentAddress = _newPaymentAddress;\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n        emit AdminPaused(msg.sender);\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n        emit AdminUnpaused(msg.sender);\n    }\n\n    /// @notice Toggle emergency mode (stops most operations)\n    function toggleEmergencyMode() external onlyEmergencyOperator {\n        emergencyMode = !emergencyMode;\n        emit EmergencyModeToggled(emergencyMode, msg.sender);\n    }\n\n    /// @notice Add or remove emergency operators\n    function setEmergencyOperator(address operator, bool status) external onlyOwner {\n        require(operator != address(0), \"Invalid operator address\");\n        emergencyOperators[operator] = status;\n        emit EmergencyOperatorUpdated(operator, status, msg.sender);\n    }\n\n    /// @notice Emergency function to deactivate a network\n    function emergencyDeactivateNetwork(uint256 networkId) external onlyEmergencyOperator {\n        require(address(storageContract) != address(0), \"Storage not initialized\");\n        storageContract.emergencyDeactivateNetwork(networkId);\n    }\n\n    /// @notice Emergency fee adjustment (bypasses normal restrictions)\n    function emergencySetPlatformFee(uint256 _newFeePercent) external onlyEmergencyOperator {\n        require(_newFeePercent <= MAX_PLATFORM_FEE, \"Fee cannot exceed maximum\");\n        \n        uint256 oldFee = platformFeePercent;\n        platformFeePercent = _newFeePercent;\n\n        feeHistory.push(FeeChange({\n            oldFee: oldFee,\n            newFee: _newFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit PlatformFeeUpdated(oldFee, _newFeePercent, msg.sender);\n    }\n\n    /// @notice Emergency hosting fee adjustment (bypasses normal restrictions)\n    function emergencySetHostingFee(uint256 _newFee) external onlyEmergencyOperator {\n        require(_newFee <= MAX_HOSTING_FEE, \"Fee cannot exceed maximum\");\n        \n        uint256 oldFee = hostingFee;\n        hostingFee = _newFee;\n\n        hostingFeeHistory.push(HostingFeeChange({\n            oldFee: oldFee,\n            newFee: _newFee,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit HostingFeeUpdated(oldFee, _newFee, msg.sender);\n    }\n\n    // --- View Functions ---\n\n    /// @notice Expose admin address for other contracts (interface compatibility)\n    function admin() external view returns (address) {\n        return owner();\n    }\n\n    /// @notice Get fee change history\n    function getFeeHistory() external view returns (FeeChange[] memory) {\n        return feeHistory;\n    }\n\n    /// @notice Get treasury change history\n    function getTreasuryHistory() external view returns (TreasuryChange[] memory) {\n        return treasuryHistory;\n    }\n\n    /// @notice Get hosting fee change history\n    function getHostingFeeHistory() external view returns (HostingFeeChange[] memory) {\n        return hostingFeeHistory;\n    }\n\n    /// @notice Get current fee in basis points (for more precise calculations)\n    function getPlatformFeeBasisPoints() external view returns (uint256) {\n        return platformFeePercent * 100; // Convert percentage to basis points\n    }   \n\n    /// @notice Calculate platform fee for a given amount\n    function calculatePlatformFee(uint256 amount) external view returns (uint256) {\n        return (amount * platformFeePercent) / 100;\n    }\n\n    /// @notice Get comprehensive admin statistics\n    function getAdminStats() external view returns (\n        uint256 totalFeeChanges,\n        uint256 totalTreasuryChanges,\n        uint256 totalHostingFeeChanges,\n        bool isEmergencyMode,\n        uint256 currentPlatformFee,\n        uint256 currentHostingFee,\n        address currentTreasury\n    ) {\n        totalFeeChanges = feeHistory.length;\n        totalTreasuryChanges = treasuryHistory.length;\n        totalHostingFeeChanges = hostingFeeHistory.length;\n        isEmergencyMode = emergencyMode;\n        currentPlatformFee = platformFeePercent;\n        currentHostingFee = hostingFee;\n        currentTreasury = treasuryAddress;\n    }\n\n    /// @notice Check if address is emergency operator\n    function isEmergencyOperator(address operator) external view returns (bool) {\n        return emergencyOperators[operator];\n    }\n\n    /// @notice Get latest fee change details\n    function getLatestFeeChange() external view returns (FeeChange memory) {\n        require(feeHistory.length > 0, \"No fee changes recorded\");\n        return feeHistory[feeHistory.length - 1];\n    }\n\n    /// @notice Get latest treasury change details\n    function getLatestTreasuryChange() external view returns (TreasuryChange memory) {\n        require(treasuryHistory.length > 0, \"No treasury changes recorded\");\n        return treasuryHistory[treasuryHistory.length - 1];\n    }\n\n    /// @notice Get latest hosting fee change details\n    function getLatestHostingFeeChange() external view returns (HostingFeeChange memory) {\n        require(hostingFeeHistory.length > 0, \"No hosting fee changes recorded\");\n        return hostingFeeHistory[hostingFeeHistory.length - 1];\n    }\n\n    /// @notice Get all current fees in one call (gas efficient)\n    function getCurrentFees() external view returns (\n        uint256 platformFeePercentage,\n        uint256 hostingFeeAmount,\n        address treasury\n    ) {\n        return (platformFeePercent, hostingFee, treasuryAddress);\n    }\n\n    // --- Compatibility Functions (for interface alignment) ---\n\n    /// @notice Alternative name for treasury address (interface compatibility)\n    function treasury() external view returns (address) {\n        return treasuryAddress;\n    }\n\n    /// @notice Check if contract is paused (interface compatibility)\n    function paused() public view override returns (bool) {\n        return super.paused();\n    }\n}"
      },
      "contracts/ZaaNetNetwork.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./ZaaNetStorage.sol\";\n\ninterface IZaaNetAdmin {\n    function hostingFee() external view returns (uint256);\n\n    function treasuryAddress() external view returns (address);\n}\n\ncontract ZaaNetNetwork is Ownable, Pausable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    ZaaNetStorage public storageContract;\n    IZaaNetAdmin public adminContract;\n    IERC20 public usdt;\n\n    // Constants for validation (updated for 6-decimal USDT)\n    uint256 public constant MIN_PRICE_PER_SESSION = 10000; // 0.01 USDT (6 decimals)\n    uint256 public constant MAX_PRICE_PER_SESSION = 50000000; // 50 USDT (6 decimals)\n    uint256 public constant MAX_MONGO_DATA_LENGTH = 200; // Reasonable limit for data ID\n\n    mapping(address => bool) public isHost;\n    mapping(address => uint256[]) private hostNetworks;\n    mapping(uint256 => address) public networkToHost; // For quick lookups\n\n    // Rate limiting\n    mapping(address => uint256) public lastRegistrationTime;\n    uint256 public constant REGISTRATION_COOLDOWN = 1 minutes;\n\n    // Enhanced events\n    event NetworkRegistered(\n        uint256 indexed networkId,\n        address indexed hostAddress,\n        string mongoDataId,\n        uint256 pricePerSession,\n        bool isActive,\n        uint256 hostingFeePaid,\n        uint256 timestamp\n    );\n\n    event HostingFeePaid(\n        address indexed host,\n        uint256 amount,\n        uint256 timestamp\n    );\n\n    event NetworkUpdated(\n        uint256 indexed networkId,\n        address indexed hostAddress,\n        uint256 pricePerSession,\n        string mongoDataId,\n        bool isActive\n    );\n\n    event NetworkPriceUpdated(\n        uint256 indexed networkId,\n        uint256 oldPrice,\n        uint256 newPrice\n    );\n\n    event NetworkStatusChanged(\n        uint256 indexed networkId,\n        bool oldStatus,\n        bool newStatus\n    );\n\n    event HostAdded(address indexed host);\n\n    constructor(\n        address _storageContract,\n        address _adminContract,\n        address _usdt\n    ) Ownable(msg.sender) {\n        require(\n            _storageContract != address(0),\n            \"Invalid storage contract address\"\n        );\n        require(_adminContract != address(0), \"Invalid admin contract address\");\n        require(_usdt != address(0), \"Invalid USDT contract address\");\n\n        storageContract = ZaaNetStorage(_storageContract);\n        adminContract = IZaaNetAdmin(_adminContract);\n        usdt = IERC20(_usdt);\n    }\n\n    /// @notice Register a new network with mongoDataID and pay hosting fee\n    function registerNetwork(\n        uint256 _pricePerSession,\n        string memory _mongoDataId,\n        bool _isActive\n    ) external whenNotPaused nonReentrant {\n        require(\n            block.timestamp >=\n                lastRegistrationTime[msg.sender] + REGISTRATION_COOLDOWN,\n            \"Registration cooldown active\"\n        );\n        require(\n            _pricePerSession >= MIN_PRICE_PER_SESSION &&\n                _pricePerSession <= MAX_PRICE_PER_SESSION,\n            \"Price out of allowed range\"\n        );\n        require(\n            bytes(_mongoDataId).length > 0 &&\n                bytes(_mongoDataId).length <= MAX_MONGO_DATA_LENGTH,\n            \"Invalid MongoDataID length\"\n        );\n\n        // Get hosting fee from admin contract\n        uint256 hostingFee = adminContract.hostingFee();\n        address treasuryAddress = adminContract.treasuryAddress();\n\n        // Collect hosting fee if required\n        if (hostingFee > 0 && treasuryAddress != address(0)) {\n            require(\n                usdt.balanceOf(msg.sender) >= hostingFee,\n                \"Insufficient USDT balance for hosting fee\"\n            );\n            require(\n                usdt.allowance(msg.sender, address(this)) >= hostingFee,\n                \"Insufficient USDT allowance for hosting fee\"\n            );\n\n            // Transfer hosting fee to treasury\n            usdt.safeTransferFrom(msg.sender, treasuryAddress, hostingFee);\n\n            // Increase ZaaNet earnings in storage\n            storageContract.increaseZaaNetEarnings(hostingFee);\n\n            emit HostingFeePaid(msg.sender, hostingFee, block.timestamp);\n        }\n\n        // Request a new ID from storage\n        uint256 networkId = storageContract.incrementNetworkId();\n\n        // Save the network details into storage\n        storageContract.setNetwork(\n            networkId,\n            ZaaNetStorage.Network({\n                id: networkId,\n                hostAddress: msg.sender,\n                pricePerSession: _pricePerSession,\n                mongoDataId: _mongoDataId,\n                isActive: _isActive,\n                createdAt: block.timestamp,\n                updatedAt: block.timestamp\n            })\n        );\n\n        hostNetworks[msg.sender].push(networkId);\n        networkToHost[networkId] = msg.sender;\n        lastRegistrationTime[msg.sender] = block.timestamp;\n\n        if (!isHost[msg.sender]) {\n            isHost[msg.sender] = true;\n            emit HostAdded(msg.sender);\n        }\n\n        // Enhanced event with hosting fee information\n        emit NetworkRegistered(\n            networkId,\n            msg.sender,\n            _mongoDataId,\n            _pricePerSession,\n            _isActive,\n            hostingFee,\n            block.timestamp\n        );\n    }\n\n    /// @notice Internal function to update network details\n    function _updateNetwork(\n        uint256 _networkId,\n        uint256 _pricePerSession,\n        bool _isActive,\n        address sender\n    ) internal {\n        ZaaNetStorage.Network memory network = storageContract.getNetwork(\n            _networkId\n        );\n        require(network.hostAddress == sender, \"Only host can update\");\n        require(\n            _pricePerSession >= MIN_PRICE_PER_SESSION &&\n                _pricePerSession <= MAX_PRICE_PER_SESSION,\n            \"Price out of allowed range\"\n        );\n\n        // Store old values for events\n        uint256 oldPrice = network.pricePerSession;\n        bool oldStatus = network.isActive;\n\n        storageContract.setNetwork(\n            _networkId,\n            ZaaNetStorage.Network({\n                id: _networkId,\n                hostAddress: sender,\n                pricePerSession: _pricePerSession,\n                mongoDataId: network.mongoDataId, // Keep existing metadata\n                isActive: _isActive,\n                createdAt: network.createdAt, // Keep original creation time\n                updatedAt: block.timestamp\n            })\n        );\n\n        // Emit detailed events for better tracking\n        if (oldPrice != _pricePerSession) {\n            emit NetworkPriceUpdated(_networkId, oldPrice, _pricePerSession);\n        }\n        if (oldStatus != _isActive) {\n            emit NetworkStatusChanged(_networkId, oldStatus, _isActive);\n        }\n\n        emit NetworkUpdated(\n            _networkId,\n            sender,\n            _pricePerSession,\n            network.mongoDataId,\n            _isActive\n        );\n    }\n\n    /// @notice Update existing network with new details\n    function updateNetwork(\n        uint256 _networkId,\n        uint256 _pricePerSession,\n        bool _isActive\n    ) external whenNotPaused nonReentrant {\n        _updateNetwork(_networkId, _pricePerSession, _isActive, msg.sender);\n    }\n\n    /// @notice Deactivate a network (soft delete)\n    function deactivateNetwork(uint256 _networkId) external whenNotPaused {\n        ZaaNetStorage.Network memory network = storageContract.getNetwork(\n            _networkId\n        );\n        require(network.hostAddress == msg.sender, \"Only host can deactivate\");\n        require(network.isActive, \"Network already inactive\");\n\n        _updateNetwork(_networkId, network.pricePerSession, false, msg.sender);\n    }\n\n    /// @notice Get full network details from storage\n    function getHostedNetworkById(\n        uint256 _networkId\n    ) external view returns (ZaaNetStorage.Network memory) {\n        return storageContract.getNetwork(_networkId);\n    }\n\n    /// @notice Get all network IDs registered by a host\n    function getHostNetworks(\n        address hostAddress\n    ) external view returns (uint256[] memory) {\n        return hostNetworks[hostAddress];\n    }\n\n    /// @notice Get active networks for a host\n    function getActiveHostNetworks(\n        address hostAddress\n    ) external view returns (ZaaNetStorage.Network[] memory) {\n        uint256[] memory networkIds = hostNetworks[hostAddress];\n        uint256 activeCount = 0;\n\n        // First pass: count active networks\n        for (uint256 i = 0; i < networkIds.length; i++) {\n            ZaaNetStorage.Network memory network = storageContract.getNetwork(\n                networkIds[i]\n            );\n            if (network.isActive) {\n                activeCount++;\n            }\n        }\n\n        // Second pass: populate active networks\n        ZaaNetStorage.Network[]\n            memory activeNetworks = new ZaaNetStorage.Network[](activeCount);\n        uint256 index = 0;\n        for (uint256 i = 0; i < networkIds.length; i++) {\n            ZaaNetStorage.Network memory network = storageContract.getNetwork(\n                networkIds[i]\n            );\n            if (network.isActive) {\n                activeNetworks[index] = network;\n                index++;\n            }\n        }\n\n        return activeNetworks;\n    }\n\n    /// @notice Public method to check if an address is a registered host\n    function isRegisteredHost(\n        address hostAddress\n    ) external view returns (bool) {\n        return isHost[hostAddress];\n    }\n\n    /// @notice Get host statistics\n    function getHostStats(\n        address hostAddress\n    )\n        external\n        view\n        returns (\n            uint256 totalNetworks,\n            uint256 activeNetworks,\n            uint256 totalEarnings\n        )\n    {\n        totalNetworks = hostNetworks[hostAddress].length;\n        totalEarnings = storageContract.getHostEarnings(hostAddress);\n\n        // Count active networks\n        uint256[] memory networkIds = hostNetworks[hostAddress];\n        for (uint256 i = 0; i < networkIds.length; i++) {\n            ZaaNetStorage.Network memory network = storageContract.getNetwork(\n                networkIds[i]\n            );\n            if (network.isActive) {\n                activeNetworks++;\n            }\n        }\n    }\n\n    /// @notice Retrieve networks with pagination (gas-optimized)\n    function getNetworksPaginated(\n        uint256 offset,\n        uint256 limit\n    )\n        external\n        view\n        returns (ZaaNetStorage.Network[] memory networks, uint256 totalCount)\n    {\n        return storageContract.getNetworksPaginated(offset, limit);\n    }\n\n    /// @notice Get all active networks (limited to prevent gas issues)\n    function getAllActiveNetworks()\n        external\n        view\n        returns (ZaaNetStorage.Network[] memory)\n    {\n        (ZaaNetStorage.Network[] memory allNetworks, ) = storageContract\n            .getNetworksPaginated(0, 100);\n        uint256 activeCount = 0;\n\n        // Count active networks first\n        for (uint256 i = 0; i < allNetworks.length; i++) {\n            if (allNetworks[i].isActive) {\n                activeCount++;\n            }\n        }\n\n        // Create properly sized array and populate with active networks\n        ZaaNetStorage.Network[]\n            memory activeNetworks = new ZaaNetStorage.Network[](activeCount);\n        uint256 index = 0;\n        for (uint256 i = 0; i < allNetworks.length; i++) {\n            if (allNetworks[i].isActive) {\n                activeNetworks[index] = allNetworks[i];\n                index++;\n            }\n        }\n\n        return activeNetworks;\n    }\n\n    /// @notice Get current hosting fee\n    function getCurrentHostingFee() external view returns (uint256) {\n        return adminContract.hostingFee();\n    }\n\n    /// @notice Get treasury address\n    function getTreasuryAddress() external view returns (address) {\n        return adminContract.treasuryAddress();\n    }\n\n    // --- Admin Functions ---\n\n    /// @notice Update admin contract address (owner only)\n    function setAdminContract(address _newAdminContract) external onlyOwner {\n        require(_newAdminContract != address(0), \"Invalid admin contract\");\n        adminContract = IZaaNetAdmin(_newAdminContract);\n    }\n\n    /// @notice Update USDT contract address (owner only)\n    function setUsdtContract(address _newUsdt) external onlyOwner {\n        require(_newUsdt != address(0), \"Invalid USDT contract\");\n        usdt = IERC20(_newUsdt);\n    }\n\n    /// @notice Emergency pause (only owner)\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /// @notice Unpause (only owner)\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /// @notice Get contract statistics\n    function getContractStats() external view returns (uint256 totalNetworks) {\n        totalNetworks = storageContract.networkIdCounter();\n    }\n}\n"
      },
      "contracts/ZaaNetStorage.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract ZaaNetStorage is Ownable, ReentrancyGuard {\n    struct Network {\n        uint256 id;\n        address hostAddress;\n        uint256 pricePerSession;\n        string mongoDataId;\n        bool isActive;\n        uint256 createdAt;\n        uint256 updatedAt;\n    }\n\n    mapping(address => bool) public allowedCallers; // Addresses allowed to call storage functions\n    uint256 public networkIdCounter; // Counter for network IDs\n    uint256 public zaanetEarnings = 0; // Total earnings for ZaaNet platform\n    mapping(uint256 => Network) public networks;\n    mapping(address => uint256) public hostEarnings;\n\n    // New mappings for better data management\n    mapping(address => uint256[]) public hostNetworkIds;\n    mapping(uint256 => bool) public networkExists;\n    mapping(uint256 => bool) public sessionExists;\n\n    modifier onlyAllowed() {\n        require(\n            allowedCallers[msg.sender] || msg.sender == owner(),\n            \"Not authorized\"\n        );\n        _;\n    }\n\n    event AllowedCallerUpdated(address indexed caller, bool status);\n    event NetworkStored(\n        uint256 indexed id,\n        address indexed hostAddress,\n        uint256 pricePerSession\n    );\n    event NetworkUpdated(uint256 indexed id, address indexed hostAddress);\n    event SessionStored(\n        uint256 indexed sessionId,\n        address indexed paymentAddress,\n        uint256 amount\n    );\n    event HostEarningsUpdated(address indexed hostAddress, uint256 totalEarned);\n    event ZaaNetEarningsUpdated(uint256 totalEarned);\n\n    // --- Constructor ---\n    constructor() Ownable(msg.sender) {}\n\n    // --- Caller Management ---\n    function setAllowedCaller(address _caller, bool status) external onlyOwner {\n        require(_caller != address(0), \"Invalid caller address\");\n        allowedCallers[_caller] = status;\n        emit AllowedCallerUpdated(_caller, status);\n    }\n\n    // Batch set allowed callers for initial setup\n    function setAllowedCallers(\n        address[] calldata _callers,\n        bool status\n    ) external onlyOwner {\n        for (uint256 i = 0; i < _callers.length; i++) {\n            require(_callers[i] != address(0), \"Invalid caller address\");\n            allowedCallers[_callers[i]] = status;\n            emit AllowedCallerUpdated(_callers[i], status);\n        }\n    }\n\n    // --- Network Functions ---\n    function incrementNetworkId() external onlyAllowed returns (uint256) {\n        return ++networkIdCounter;\n    }\n\n    function setNetwork(uint256 id, Network calldata net) external onlyAllowed {\n        require(id > 0, \"Invalid network ID\");\n        require(net.hostAddress != address(0), \"Invalid host address\");\n        require(net.pricePerSession > 0, \"Price must be greater than 0\");\n        require(bytes(net.mongoDataId).length > 0, \"MongoDataID required\");\n\n        bool isNewNetwork = !networkExists[id];\n\n        networks[id] = Network({\n            id: net.id,\n            hostAddress: net.hostAddress,\n            pricePerSession: net.pricePerSession,\n            mongoDataId: net.mongoDataId,\n            isActive: net.isActive,\n            createdAt: isNewNetwork ? block.timestamp : networks[id].createdAt,\n            updatedAt: block.timestamp\n        });\n\n        if (isNewNetwork) {\n            networkExists[id] = true;\n            hostNetworkIds[net.hostAddress].push(id);\n            emit NetworkStored(id, net.hostAddress, net.pricePerSession);\n        } else {\n            emit NetworkUpdated(id, net.hostAddress);\n        }\n    }\n\n    function getNetwork(uint256 id) external view returns (Network memory) {\n        require(networkExists[id], \"Network does not exist\");\n        return networks[id];\n    }\n\n    function getNetworksPaginated(\n        uint256 offset,\n        uint256 limit\n    ) external view returns (Network[] memory, uint256 total) {\n        total = networkIdCounter;\n        if (offset >= total) {\n            return (new Network[](0), total);\n        }\n\n        uint256 end = offset + limit;\n        if (end > total) {\n            end = total;\n        }\n\n        Network[] memory result = new Network[](end - offset);\n        for (uint256 i = offset; i < end; i++) {\n            result[i - offset] = networks[i + 1]; // Networks start at ID 1\n        }\n\n        return (result, total);\n    }\n\n    function getHostNetworks(\n        address hostAddress\n    ) external view returns (uint256[] memory) {\n        return hostNetworkIds[hostAddress];\n    }\n\n    // --- Earnings ---\n    function increaseHostEarnings(\n        address hostAddress,\n        uint256 amount\n    ) external onlyAllowed nonReentrant {\n        require(hostAddress != address(0), \"Invalid host address\");\n        require(amount > 0, \"Amount must be greater than 0\");\n\n        hostEarnings[hostAddress] += amount;\n        emit HostEarningsUpdated(hostAddress, hostEarnings[hostAddress]);\n    }\n\n    function getHostEarnings(\n        address hostAddress\n    ) external view returns (uint256) {\n        return hostEarnings[hostAddress];\n    }\n\n    function increaseZaaNetEarnings(\n        uint256 amount\n    ) external onlyAllowed nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        zaanetEarnings += amount;\n    }\n\n    function getZaaNetEarnings() external view returns (uint256) {\n        return zaanetEarnings;\n    }\n\n    // Emergency function to deactivate a network\n    function emergencyDeactivateNetwork(uint256 networkId) external onlyOwner {\n        require(networkExists[networkId], \"Network does not exist\");\n        networks[networkId].isActive = false;\n        networks[networkId].updatedAt = block.timestamp;\n        emit NetworkUpdated(networkId, networks[networkId].hostAddress);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "8760",
        "formattedMessage": "Warning: This declaration has the same name as another declaration.\n   --> contracts/ZaaNetAdmin.sol:338:9:\n    |\n338 |         address treasury\n    |         ^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n   --> contracts/ZaaNetAdmin.sol:346:5:\n    |\n346 |     function treasury() external view returns (address) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "This declaration has the same name as another declaration.",
        "secondarySourceLocations": [
          {
            "end": 12676,
            "file": "contracts/ZaaNetAdmin.sol",
            "message": "The other declaration is here:",
            "start": 12585
          }
        ],
        "severity": "warning",
        "sourceLocation": {
          "end": 12353,
          "file": "contracts/ZaaNetAdmin.sol",
          "start": 12337
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              809
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 810,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 809,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 809,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                809
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 791,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
          "exportedSymbols": {
            "IERC1363": [
              229
            ],
            "IERC165": [
              998
            ],
            "IERC20": [
              315
            ]
          },
          "id": 230,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 230,
              "sourceUnit": 238,
              "src": "133:36:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 150,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 315,
                    "src": "141:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 153,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 230,
              "sourceUnit": 234,
              "src": "170:38:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 152,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 998,
                    "src": "178:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 155,
                    "name": "IERC20",
                    "nameLocations": [
                      "590:6:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 315,
                    "src": "590:6:1"
                  },
                  "id": 156,
                  "nodeType": "InheritanceSpecifier",
                  "src": "590:6:1"
                },
                {
                  "baseName": {
                    "id": 157,
                    "name": "IERC165",
                    "nameLocations": [
                      "598:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 998,
                    "src": "598:7:1"
                  },
                  "id": 158,
                  "nodeType": "InheritanceSpecifier",
                  "src": "598:7:1"
                }
              ],
              "canonicalName": "IERC1363",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 154,
                "nodeType": "StructuredDocumentation",
                "src": "210:357:1",
                "text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
              },
              "fullyImplemented": false,
              "id": 229,
              "linearizedBaseContracts": [
                229,
                998,
                315
              ],
              "name": "IERC1363",
              "nameLocation": "578:8:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 159,
                    "nodeType": "StructuredDocumentation",
                    "src": "1148:370:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "1296ee62",
                  "id": 168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "1532:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1556:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1548:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1548:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1568:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1560:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1560:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1547:27:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1593:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1592:6:1"
                  },
                  "scope": 229,
                  "src": "1523:76:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "1605:453:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "4000aea0",
                  "id": 180,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "2072:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2096:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2088:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2088:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2108:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2100:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2130:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2115:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2115:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2087:48:1"
                  },
                  "returnParameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2154:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:6:1"
                  },
                  "scope": 229,
                  "src": "2063:97:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 181,
                    "nodeType": "StructuredDocumentation",
                    "src": "2166:453:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "d8fbe994",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "2633:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2661:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2653:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2675:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2667:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2667:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2687:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2679:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2679:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2652:41:1"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2712:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:6:1"
                  },
                  "scope": 229,
                  "src": "2624:94:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "2724:536:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "c1d34b89",
                  "id": 206,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "3274:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3302:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3294:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3294:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3316:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3308:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3308:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3328:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3320:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3320:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3350:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3335:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3335:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3293:62:1"
                  },
                  "returnParameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3374:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3374:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3373:6:1"
                  },
                  "scope": 229,
                  "src": "3265:115:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "3386:390:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "3177029f",
                  "id": 216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "3790:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3813:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3805:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3805:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3830:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3822:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3822:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3804:32:1"
                  },
                  "returnParameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3855:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3855:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3854:6:1"
                  },
                  "scope": 229,
                  "src": "3781:80:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "3867:478:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "cae9ca51",
                  "id": 228,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "4359:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4382:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4374:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4399:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4391:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4391:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4421:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4406:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4406:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4373:53:1"
                  },
                  "returnParameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4445:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4445:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4444:6:1"
                  },
                  "scope": 229,
                  "src": "4350:101:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 230,
              "src": "568:3885:1",
              "usedErrors": [],
              "usedEvents": [
                249,
                258
              ]
            }
          ],
          "src": "107:4347:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              998
            ]
          },
          "id": 234,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 231,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../utils/introspection/IERC165.sol",
              "id": 233,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 234,
              "sourceUnit": 999,
              "src": "132:59:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 232,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 998,
                    "src": "140:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "106:86:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              315
            ]
          },
          "id": 238,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 235,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 237,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 238,
              "sourceUnit": 316,
              "src": "131:49:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 236,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 315,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "105:76:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              315
            ]
          },
          "id": 316,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 239,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 240,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:4",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 315,
              "linearizedBaseContracts": [
                315
              ],
              "name": "IERC20",
              "nameLocation": "214:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 241,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 249,
                  "name": "Transfer",
                  "nameLocation": "396:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "405:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "427:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "447:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:4"
                  },
                  "src": "390:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 258,
                  "name": "Approval",
                  "nameLocation": "627:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "636:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "659:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "684:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:4"
                  },
                  "src": "621:78:4"
                },
                {
                  "documentation": {
                    "id": 259,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 264,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:4"
                  },
                  "returnParameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "821:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:4"
                  },
                  "scope": 315,
                  "src": "775:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 265,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 272,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "931:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:4"
                  },
                  "returnParameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "971:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:4"
                  },
                  "scope": 315,
                  "src": "912:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 273,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 282,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1222:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1234:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:4"
                  },
                  "returnParameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 280,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1267:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:4"
                  },
                  "scope": 315,
                  "src": "1204:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 283,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 292,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 288,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "1567:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "1582:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:4"
                  },
                  "returnParameters": {
                    "id": 291,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 290,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "1622:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 289,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:4"
                  },
                  "scope": 315,
                  "src": "1548:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 293,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 302,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2326:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2343:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:4"
                  },
                  "returnParameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 300,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2376:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:4"
                  },
                  "scope": 315,
                  "src": "2309:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 303,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 314,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 314,
                        "src": "2712:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 314,
                        "src": "2726:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 314,
                        "src": "2738:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:4"
                  },
                  "returnParameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 314,
                        "src": "2771:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:4"
                  },
                  "scope": 315,
                  "src": "2690:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 316,
              "src": "204:2575:4",
              "usedErrors": [],
              "usedEvents": [
                249,
                258
              ]
            }
          ],
          "src": "106:2674:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "IERC1363": [
              229
            ],
            "IERC20": [
              315
            ],
            "SafeERC20": [
              779
            ]
          },
          "id": 780,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 317,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 319,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 780,
              "sourceUnit": 316,
              "src": "141:37:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 318,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 315,
                    "src": "149:6:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
              "file": "../../../interfaces/IERC1363.sol",
              "id": 321,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 780,
              "sourceUnit": 230,
              "src": "179:58:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 320,
                    "name": "IERC1363",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 229,
                    "src": "187:8:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeERC20",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 322,
                "nodeType": "StructuredDocumentation",
                "src": "239:458:5",
                "text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 779,
              "linearizedBaseContracts": [
                779
              ],
              "name": "SafeERC20",
              "nameLocation": "706:9:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 323,
                    "nodeType": "StructuredDocumentation",
                    "src": "722:65:5",
                    "text": " @dev An operation with an ERC-20 token failed."
                  },
                  "errorSelector": "5274afe7",
                  "id": 327,
                  "name": "SafeERC20FailedOperation",
                  "nameLocation": "798:24:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "831:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "823:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "822:15:5"
                  },
                  "src": "792:46:5"
                },
                {
                  "documentation": {
                    "id": 328,
                    "nodeType": "StructuredDocumentation",
                    "src": "844:71:5",
                    "text": " @dev Indicates a failed `decreaseAllowance` request."
                  },
                  "errorSelector": "e570110f",
                  "id": 336,
                  "name": "SafeERC20FailedDecreaseAllowance",
                  "nameLocation": "926:32:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "967:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "959:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "959:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 332,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "984:16:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "976:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "976:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 334,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "1010:17:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1002:25:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1002:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "958:70:5"
                  },
                  "src": "920:109:5"
                },
                {
                  "body": {
                    "id": 359,
                    "nodeType": "Block",
                    "src": "1291:88:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 348,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 340,
                              "src": "1321:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 351,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 340,
                                    "src": "1343:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1349:8:5",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 282,
                                  "src": "1343:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 353,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 342,
                                      "src": "1360:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 354,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 344,
                                      "src": "1364:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 355,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1359:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 349,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1328:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1332:10:5",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1328:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1328:43:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 347,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 737,
                            "src": "1301:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1301:71:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 358,
                        "nodeType": "ExpressionStatement",
                        "src": "1301:71:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "1035:179:5",
                    "text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 360,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "1228:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1248:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "1241:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 339,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 338,
                            "name": "IERC20",
                            "nameLocations": [
                              "1241:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "1241:6:5"
                          },
                          "referencedDeclaration": 315,
                          "src": "1241:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1263:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "1255:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1275:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "1267:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1240:41:5"
                  },
                  "returnParameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1291:0:5"
                  },
                  "scope": 779,
                  "src": "1219:160:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 386,
                    "nodeType": "Block",
                    "src": "1708:98:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 374,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "1738:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 377,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 364,
                                    "src": "1760:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1766:12:5",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 314,
                                  "src": "1760:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 379,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 366,
                                      "src": "1781:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 380,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 368,
                                      "src": "1787:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 381,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 370,
                                      "src": "1791:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 382,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1780:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 375,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1745:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1749:10:5",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1745:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1745:53:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 373,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 737,
                            "src": "1718:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1718:81:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "1718:81:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 361,
                    "nodeType": "StructuredDocumentation",
                    "src": "1385:228:5",
                    "text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
                  },
                  "id": 387,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1627:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1651:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "1644:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 363,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 362,
                            "name": "IERC20",
                            "nameLocations": [
                              "1644:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "1644:6:5"
                          },
                          "referencedDeclaration": 315,
                          "src": "1644:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1666:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "1658:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1658:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 368,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1680:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "1672:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 367,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1672:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 370,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1692:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "1684:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 369,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:55:5"
                  },
                  "returnParameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:0:5"
                  },
                  "scope": 779,
                  "src": "1618:188:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "2033:99:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 401,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "2074:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 404,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 391,
                                    "src": "2096:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 405,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2102:8:5",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 282,
                                  "src": "2096:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 406,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 393,
                                      "src": "2113:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 407,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 395,
                                      "src": "2117:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 408,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2112:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 402,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2081:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2085:10:5",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2081:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2081:43:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 400,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "2050:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2050:75:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 399,
                        "id": 411,
                        "nodeType": "Return",
                        "src": "2043:82:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 388,
                    "nodeType": "StructuredDocumentation",
                    "src": "1812:126:5",
                    "text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 413,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransfer",
                  "nameLocation": "1952:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1975:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "1968:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 390,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 389,
                            "name": "IERC20",
                            "nameLocations": [
                              "1968:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "1968:6:5"
                          },
                          "referencedDeclaration": 315,
                          "src": "1968:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1990:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "1982:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1982:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2002:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "1994:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1994:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1967:41:5"
                  },
                  "returnParameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "2027:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2026:6:5"
                  },
                  "scope": 779,
                  "src": "1943:189:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 441,
                    "nodeType": "Block",
                    "src": "2381:109:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 429,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "2422:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 432,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 417,
                                    "src": "2444:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 433,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2450:12:5",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 314,
                                  "src": "2444:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 434,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 419,
                                      "src": "2465:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 435,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 421,
                                      "src": "2471:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 436,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 423,
                                      "src": "2475:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 437,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2464:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 430,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2429:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2433:10:5",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2429:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2429:53:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 428,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "2398:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2398:85:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 427,
                        "id": 440,
                        "nodeType": "Return",
                        "src": "2391:92:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 414,
                    "nodeType": "StructuredDocumentation",
                    "src": "2138:130:5",
                    "text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 442,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransferFrom",
                  "nameLocation": "2282:19:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 424,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2309:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "2302:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 416,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 415,
                            "name": "IERC20",
                            "nameLocations": [
                              "2302:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "2302:6:5"
                          },
                          "referencedDeclaration": 315,
                          "src": "2302:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2324:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "2316:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2316:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2338:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "2330:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 423,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "2342:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2301:55:5"
                  },
                  "returnParameters": {
                    "id": 427,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 426,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "2375:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 425,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:5"
                  },
                  "scope": 779,
                  "src": "2273:217:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 472,
                    "nodeType": "Block",
                    "src": "3232:139:5",
                    "statements": [
                      {
                        "assignments": [
                          454
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 454,
                            "mutability": "mutable",
                            "name": "oldAllowance",
                            "nameLocation": "3250:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 472,
                            "src": "3242:20:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 453,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3242:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 463,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 459,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3289:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeERC20_$779",
                                    "typeString": "library SafeERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeERC20_$779",
                                    "typeString": "library SafeERC20"
                                  }
                                ],
                                "id": 458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3281:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 457,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3281:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3281:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 461,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 448,
                              "src": "3296:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 455,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "3265:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3271:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 292,
                            "src": "3265:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:39:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3242:62:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 465,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "3327:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 466,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 448,
                              "src": "3334:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 467,
                                "name": "oldAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 454,
                                "src": "3343:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 468,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 450,
                                "src": "3358:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3343:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 464,
                            "name": "forceApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "3314:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3314:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 471,
                        "nodeType": "ExpressionStatement",
                        "src": "3314:50:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 443,
                    "nodeType": "StructuredDocumentation",
                    "src": "2496:645:5",
                    "text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 473,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nameLocation": "3155:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3184:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 473,
                        "src": "3177:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 445,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 444,
                            "name": "IERC20",
                            "nameLocations": [
                              "3177:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "3177:6:5"
                          },
                          "referencedDeclaration": 315,
                          "src": "3177:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3199:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 473,
                        "src": "3191:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3191:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3216:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 473,
                        "src": "3208:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3208:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3176:46:5"
                  },
                  "returnParameters": {
                    "id": 452,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3232:0:5"
                  },
                  "scope": 779,
                  "src": "3146:225:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 515,
                    "nodeType": "Block",
                    "src": "4137:370:5",
                    "statements": [
                      {
                        "id": 514,
                        "nodeType": "UncheckedBlock",
                        "src": "4147:354:5",
                        "statements": [
                          {
                            "assignments": [
                              485
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 485,
                                "mutability": "mutable",
                                "name": "currentAllowance",
                                "nameLocation": "4179:16:5",
                                "nodeType": "VariableDeclaration",
                                "scope": 514,
                                "src": "4171:24:5",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 484,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4171:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 494,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 490,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4222:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$779",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$779",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4214:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 488,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4214:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 491,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4214:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 492,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 479,
                                  "src": "4229:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 486,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 477,
                                  "src": "4198:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$315",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4204:9:5",
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 292,
                                "src": "4198:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4198:39:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4171:66:5"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 495,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 485,
                                "src": "4255:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 496,
                                "name": "requestedDecrease",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 481,
                                "src": "4274:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4255:36:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 505,
                            "nodeType": "IfStatement",
                            "src": "4251:160:5",
                            "trueBody": {
                              "id": 504,
                              "nodeType": "Block",
                              "src": "4293:118:5",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 499,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 479,
                                        "src": "4351:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 500,
                                        "name": "currentAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 485,
                                        "src": "4360:16:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 501,
                                        "name": "requestedDecrease",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 481,
                                        "src": "4378:17:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 498,
                                      "name": "SafeERC20FailedDecreaseAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 336,
                                      "src": "4318:32:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                        "typeString": "function (address,uint256,uint256) pure returns (error)"
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4318:78:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 503,
                                  "nodeType": "RevertStatement",
                                  "src": "4311:85:5"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 507,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 477,
                                  "src": "4437:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$315",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 508,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 479,
                                  "src": "4444:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 511,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 509,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 485,
                                    "src": "4453:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 510,
                                    "name": "requestedDecrease",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 481,
                                    "src": "4472:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4453:36:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$315",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 506,
                                "name": "forceApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 563,
                                "src": "4424:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (contract IERC20,address,uint256)"
                                }
                              },
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4424:66:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 513,
                            "nodeType": "ExpressionStatement",
                            "src": "4424:66:5"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 474,
                    "nodeType": "StructuredDocumentation",
                    "src": "3377:657:5",
                    "text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 516,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nameLocation": "4048:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 477,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4077:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "4070:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 476,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 475,
                            "name": "IERC20",
                            "nameLocations": [
                              "4070:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "4070:6:5"
                          },
                          "referencedDeclaration": 315,
                          "src": "4070:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4092:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "4084:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "4109:17:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "4101:25:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4101:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4069:58:5"
                  },
                  "returnParameters": {
                    "id": 483,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4137:0:5"
                  },
                  "scope": 779,
                  "src": "4039:468:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 562,
                    "nodeType": "Block",
                    "src": "5161:303:5",
                    "statements": [
                      {
                        "assignments": [
                          528
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 528,
                            "mutability": "mutable",
                            "name": "approvalCall",
                            "nameLocation": "5184:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 562,
                            "src": "5171:25:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 527,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5171:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 537,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 531,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 520,
                                "src": "5214:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$315",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5220:7:5",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 302,
                              "src": "5214:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 533,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "5230:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 534,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 524,
                                  "src": "5239:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 535,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5229:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            ],
                            "expression": {
                              "id": 529,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5199:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5203:10:5",
                            "memberName": "encodeCall",
                            "nodeType": "MemberAccess",
                            "src": "5199:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5199:47:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5171:75:5"
                      },
                      {
                        "condition": {
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5261:45:5",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 539,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 520,
                                "src": "5286:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$315",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 540,
                                "name": "approvalCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 528,
                                "src": "5293:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$315",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 538,
                              "name": "_callOptionalReturnBool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "5262:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                              }
                            },
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5262:44:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 561,
                        "nodeType": "IfStatement",
                        "src": "5257:201:5",
                        "trueBody": {
                          "id": 560,
                          "nodeType": "Block",
                          "src": "5308:150:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 544,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 520,
                                    "src": "5342:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 547,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 520,
                                          "src": "5364:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$315",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 548,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5370:7:5",
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 302,
                                        "src": "5364:13:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 549,
                                            "name": "spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 522,
                                            "src": "5380:7:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "hexValue": "30",
                                            "id": 550,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5389:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "id": 551,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5379:12:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        },
                                        {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 545,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "5349:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 546,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5353:10:5",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "5349:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 552,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5349:43:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 543,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 737,
                                  "src": "5322:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5322:71:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 554,
                              "nodeType": "ExpressionStatement",
                              "src": "5322:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 556,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 520,
                                    "src": "5427:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 557,
                                    "name": "approvalCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 528,
                                    "src": "5434:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 555,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 737,
                                  "src": "5407:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5407:40:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 559,
                              "nodeType": "ExpressionStatement",
                              "src": "5407:40:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 517,
                    "nodeType": "StructuredDocumentation",
                    "src": "4513:566:5",
                    "text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
                  },
                  "id": 563,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forceApprove",
                  "nameLocation": "5093:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 520,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5113:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 563,
                        "src": "5106:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 519,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 518,
                            "name": "IERC20",
                            "nameLocations": [
                              "5106:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "5106:6:5"
                          },
                          "referencedDeclaration": 315,
                          "src": "5106:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 522,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5128:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 563,
                        "src": "5120:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5120:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 524,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5145:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 563,
                        "src": "5137:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5137:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5105:46:5"
                  },
                  "returnParameters": {
                    "id": 526,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5161:0:5"
                  },
                  "scope": 779,
                  "src": "5084:380:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 605,
                    "nodeType": "Block",
                    "src": "5911:219:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 576,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 569,
                                "src": "5925:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5928:4:5",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "5925:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5933:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5925:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5943:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5925:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6011:39:5",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 590,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 569,
                                  "src": "6034:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 591,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 571,
                                  "src": "6038:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 592,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 573,
                                  "src": "6045:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 588,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 567,
                                  "src": "6012:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6018:15:5",
                                "memberName": "transferAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 180,
                                "src": "6012:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6012:38:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 603,
                          "nodeType": "IfStatement",
                          "src": "6007:117:5",
                          "trueBody": {
                            "id": 602,
                            "nodeType": "Block",
                            "src": "6052:72:5",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 598,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 567,
                                          "src": "6106:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 597,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6098:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 596,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6098:7:5",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 599,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6098:14:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 595,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 327,
                                    "src": "6073:24:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6073:40:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 601,
                                "nodeType": "RevertStatement",
                                "src": "6066:47:5"
                              }
                            ]
                          }
                        },
                        "id": 604,
                        "nodeType": "IfStatement",
                        "src": "5921:203:5",
                        "trueBody": {
                          "id": 587,
                          "nodeType": "Block",
                          "src": "5946:55:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 582,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 567,
                                    "src": "5973:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 583,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 569,
                                    "src": "5980:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 584,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 571,
                                    "src": "5984:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 581,
                                  "name": "safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 360,
                                  "src": "5960:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5960:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 586,
                              "nodeType": "ExpressionStatement",
                              "src": "5960:30:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 564,
                    "nodeType": "StructuredDocumentation",
                    "src": "5470:333:5",
                    "text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCallRelaxed",
                  "nameLocation": "5817:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 574,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5849:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5840:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 566,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 565,
                            "name": "IERC1363",
                            "nameLocations": [
                              "5840:8:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "5840:8:5"
                          },
                          "referencedDeclaration": 229,
                          "src": "5840:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5864:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5856:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5856:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5876:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5868:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5868:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 573,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5896:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5883:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 572,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5883:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5839:62:5"
                  },
                  "returnParameters": {
                    "id": 575,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5911:0:5"
                  },
                  "scope": 779,
                  "src": "5808:322:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 652,
                    "nodeType": "Block",
                    "src": "6649:239:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 621,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 614,
                                "src": "6663:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6666:4:5",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "6663:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6671:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6663:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6681:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6663:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6759:49:5",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 636,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 612,
                                  "src": "6786:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 637,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 614,
                                  "src": "6792:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 638,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 616,
                                  "src": "6796:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 639,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 618,
                                  "src": "6803:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 634,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 610,
                                  "src": "6760:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6766:19:5",
                                "memberName": "transferFromAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 206,
                                "src": "6760:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6760:48:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 650,
                          "nodeType": "IfStatement",
                          "src": "6755:127:5",
                          "trueBody": {
                            "id": 649,
                            "nodeType": "Block",
                            "src": "6810:72:5",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 645,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 610,
                                          "src": "6864:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 644,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6856:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 643,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6856:7:5",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 646,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6856:14:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 642,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 327,
                                    "src": "6831:24:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6831:40:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 648,
                                "nodeType": "RevertStatement",
                                "src": "6824:47:5"
                              }
                            ]
                          }
                        },
                        "id": 651,
                        "nodeType": "IfStatement",
                        "src": "6659:223:5",
                        "trueBody": {
                          "id": 633,
                          "nodeType": "Block",
                          "src": "6684:65:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 627,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 610,
                                    "src": "6715:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 628,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 612,
                                    "src": "6722:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 629,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 614,
                                    "src": "6728:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 630,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 616,
                                    "src": "6732:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 626,
                                  "name": "safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 387,
                                  "src": "6698:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6698:40:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 632,
                              "nodeType": "ExpressionStatement",
                              "src": "6698:40:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 607,
                    "nodeType": "StructuredDocumentation",
                    "src": "6136:341:5",
                    "text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 653,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCallRelaxed",
                  "nameLocation": "6491:26:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 619,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 610,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6536:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 653,
                        "src": "6527:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 609,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 608,
                            "name": "IERC1363",
                            "nameLocations": [
                              "6527:8:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "6527:8:5"
                          },
                          "referencedDeclaration": 229,
                          "src": "6527:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 612,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6559:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 653,
                        "src": "6551:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 611,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6551:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 614,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6581:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 653,
                        "src": "6573:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 613,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6573:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 616,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6601:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 653,
                        "src": "6593:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 615,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6593:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 618,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6629:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 653,
                        "src": "6616:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 617,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6616:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6517:122:5"
                  },
                  "returnParameters": {
                    "id": 620,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6649:0:5"
                  },
                  "scope": 779,
                  "src": "6482:406:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 695,
                    "nodeType": "Block",
                    "src": "7655:218:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 666,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 659,
                                "src": "7669:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7672:4:5",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "7669:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7677:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7669:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7687:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7669:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7755:38:5",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 680,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 659,
                                  "src": "7777:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 681,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 661,
                                  "src": "7781:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 682,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 663,
                                  "src": "7788:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 678,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 657,
                                  "src": "7756:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7762:14:5",
                                "memberName": "approveAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 228,
                                "src": "7756:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7756:37:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 693,
                          "nodeType": "IfStatement",
                          "src": "7751:116:5",
                          "trueBody": {
                            "id": 692,
                            "nodeType": "Block",
                            "src": "7795:72:5",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 688,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 657,
                                          "src": "7849:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 687,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7841:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 686,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7841:7:5",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 689,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7841:14:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 685,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 327,
                                    "src": "7816:24:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7816:40:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 691,
                                "nodeType": "RevertStatement",
                                "src": "7809:47:5"
                              }
                            ]
                          }
                        },
                        "id": 694,
                        "nodeType": "IfStatement",
                        "src": "7665:202:5",
                        "trueBody": {
                          "id": 677,
                          "nodeType": "Block",
                          "src": "7690:55:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 672,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "7717:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 673,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 659,
                                    "src": "7724:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 674,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 661,
                                    "src": "7728:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 671,
                                  "name": "forceApprove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 563,
                                  "src": "7704:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7704:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 676,
                              "nodeType": "ExpressionStatement",
                              "src": "7704:30:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 654,
                    "nodeType": "StructuredDocumentation",
                    "src": "6894:654:5",
                    "text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 696,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCallRelaxed",
                  "nameLocation": "7562:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 664,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "7593:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "7584:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 656,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 655,
                            "name": "IERC1363",
                            "nameLocations": [
                              "7584:8:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "7584:8:5"
                          },
                          "referencedDeclaration": 229,
                          "src": "7584:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7608:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "7600:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7600:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7620:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "7612:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7612:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7640:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "7627:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7627:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7583:62:5"
                  },
                  "returnParameters": {
                    "id": 665,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7655:0:5"
                  },
                  "scope": 779,
                  "src": "7553:320:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 736,
                    "nodeType": "Block",
                    "src": "8440:650:5",
                    "statements": [
                      {
                        "assignments": [
                          706
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 706,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "8458:10:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 736,
                            "src": "8450:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 705,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8450:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 707,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8450:18:5"
                      },
                      {
                        "assignments": [
                          709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 709,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "8486:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 736,
                            "src": "8478:19:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 708,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8478:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 710,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8478:19:5"
                      },
                      {
                        "AST": {
                          "nativeSrc": "8532:396:5",
                          "nodeType": "YulBlock",
                          "src": "8532:396:5",
                          "statements": [
                            {
                              "nativeSrc": "8546:75:5",
                              "nodeType": "YulVariableDeclaration",
                              "src": "8546:75:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "8566:3:5",
                                      "nodeType": "YulIdentifier",
                                      "src": "8566:3:5"
                                    },
                                    "nativeSrc": "8566:5:5",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8566:5:5"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "8573:5:5",
                                    "nodeType": "YulIdentifier",
                                    "src": "8573:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8580:1:5",
                                    "nodeType": "YulLiteral",
                                    "src": "8580:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8587:4:5",
                                        "nodeType": "YulIdentifier",
                                        "src": "8587:4:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8593:4:5",
                                        "nodeType": "YulLiteral",
                                        "src": "8593:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8583:3:5",
                                      "nodeType": "YulIdentifier",
                                      "src": "8583:3:5"
                                    },
                                    "nativeSrc": "8583:15:5",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8583:15:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8606:4:5",
                                        "nodeType": "YulIdentifier",
                                        "src": "8606:4:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "8600:5:5",
                                      "nodeType": "YulIdentifier",
                                      "src": "8600:5:5"
                                    },
                                    "nativeSrc": "8600:11:5",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8600:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8613:1:5",
                                    "nodeType": "YulLiteral",
                                    "src": "8613:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8616:4:5",
                                    "nodeType": "YulLiteral",
                                    "src": "8616:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "8561:4:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "8561:4:5"
                                },
                                "nativeSrc": "8561:60:5",
                                "nodeType": "YulFunctionCall",
                                "src": "8561:60:5"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nativeSrc": "8550:7:5",
                                  "nodeType": "YulTypedName",
                                  "src": "8550:7:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "8682:157:5",
                                "nodeType": "YulBlock",
                                "src": "8682:157:5",
                                "statements": [
                                  {
                                    "nativeSrc": "8700:22:5",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8700:22:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8717:4:5",
                                          "nodeType": "YulLiteral",
                                          "src": "8717:4:5",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "8711:5:5",
                                        "nodeType": "YulIdentifier",
                                        "src": "8711:5:5"
                                      },
                                      "nativeSrc": "8711:11:5",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8711:11:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "ptr",
                                        "nativeSrc": "8704:3:5",
                                        "nodeType": "YulTypedName",
                                        "src": "8704:3:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8754:3:5",
                                          "nodeType": "YulIdentifier",
                                          "src": "8754:3:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8759:1:5",
                                          "nodeType": "YulLiteral",
                                          "src": "8759:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8762:14:5",
                                            "nodeType": "YulIdentifier",
                                            "src": "8762:14:5"
                                          },
                                          "nativeSrc": "8762:16:5",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8762:16:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nativeSrc": "8739:14:5",
                                        "nodeType": "YulIdentifier",
                                        "src": "8739:14:5"
                                      },
                                      "nativeSrc": "8739:40:5",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8739:40:5"
                                    },
                                    "nativeSrc": "8739:40:5",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8739:40:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8803:3:5",
                                          "nodeType": "YulIdentifier",
                                          "src": "8803:3:5"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8808:14:5",
                                            "nodeType": "YulIdentifier",
                                            "src": "8808:14:5"
                                          },
                                          "nativeSrc": "8808:16:5",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8808:16:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "8796:6:5",
                                        "nodeType": "YulIdentifier",
                                        "src": "8796:6:5"
                                      },
                                      "nativeSrc": "8796:29:5",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8796:29:5"
                                    },
                                    "nativeSrc": "8796:29:5",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8796:29:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nativeSrc": "8673:7:5",
                                    "nodeType": "YulIdentifier",
                                    "src": "8673:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "8666:6:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "8666:6:5"
                                },
                                "nativeSrc": "8666:15:5",
                                "nodeType": "YulFunctionCall",
                                "src": "8666:15:5"
                              },
                              "nativeSrc": "8663:176:5",
                              "nodeType": "YulIf",
                              "src": "8663:176:5"
                            },
                            {
                              "nativeSrc": "8852:30:5",
                              "nodeType": "YulAssignment",
                              "src": "8852:30:5",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "8866:14:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "8866:14:5"
                                },
                                "nativeSrc": "8866:16:5",
                                "nodeType": "YulFunctionCall",
                                "src": "8866:16:5"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "8852:10:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "8852:10:5"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "8895:23:5",
                              "nodeType": "YulAssignment",
                              "src": "8895:23:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8916:1:5",
                                    "nodeType": "YulLiteral",
                                    "src": "8916:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "8910:5:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "8910:5:5"
                                },
                                "nativeSrc": "8910:8:5",
                                "nodeType": "YulFunctionCall",
                                "src": "8910:8:5"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "8895:11:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "8895:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 702,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8587:4:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 702,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8606:4:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 706,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8852:10:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 709,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8895:11:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 700,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8573:5:5",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 711,
                        "nodeType": "InlineAssembly",
                        "src": "8507:421:5"
                      },
                      {
                        "condition": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 712,
                              "name": "returnSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 706,
                              "src": "8942:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8956:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8942:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 723,
                              "name": "returnValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "8994:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9009:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8994:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8942:68:5",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 717,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 700,
                                      "src": "8968:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$315",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$315",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8960:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 715,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8960:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 718,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8960:14:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8975:4:5",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "8960:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8980:6:5",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "8960:26:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8990:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8960:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 735,
                        "nodeType": "IfStatement",
                        "src": "8938:146:5",
                        "trueBody": {
                          "id": 734,
                          "nodeType": "Block",
                          "src": "9012:72:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 730,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 700,
                                        "src": "9066:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$315",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$315",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 729,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9058:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 728,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9058:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9058:14:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 727,
                                  "name": "SafeERC20FailedOperation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 327,
                                  "src": "9033:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9033:40:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 733,
                              "nodeType": "RevertStatement",
                              "src": "9026:47:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 697,
                    "nodeType": "StructuredDocumentation",
                    "src": "7879:486:5",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
                  },
                  "id": 737,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "8379:19:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 700,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8406:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 737,
                        "src": "8399:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 699,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 698,
                            "name": "IERC20",
                            "nameLocations": [
                              "8399:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "8399:6:5"
                          },
                          "referencedDeclaration": 315,
                          "src": "8399:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 702,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8426:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 737,
                        "src": "8413:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 701,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8413:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8398:33:5"
                  },
                  "returnParameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8440:0:5"
                  },
                  "scope": 779,
                  "src": "8370:720:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 777,
                    "nodeType": "Block",
                    "src": "9681:391:5",
                    "statements": [
                      {
                        "assignments": [
                          749
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 749,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9696:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 777,
                            "src": "9691:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 748,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9691:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 750,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9691:12:5"
                      },
                      {
                        "assignments": [
                          752
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 752,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "9721:10:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 777,
                            "src": "9713:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 751,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9713:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 753,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9713:18:5"
                      },
                      {
                        "assignments": [
                          755
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 755,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "9749:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 777,
                            "src": "9741:19:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 754,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9741:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 756,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9741:19:5"
                      },
                      {
                        "AST": {
                          "nativeSrc": "9795:174:5",
                          "nodeType": "YulBlock",
                          "src": "9795:174:5",
                          "statements": [
                            {
                              "nativeSrc": "9809:71:5",
                              "nodeType": "YulAssignment",
                              "src": "9809:71:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "9825:3:5",
                                      "nodeType": "YulIdentifier",
                                      "src": "9825:3:5"
                                    },
                                    "nativeSrc": "9825:5:5",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9825:5:5"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "9832:5:5",
                                    "nodeType": "YulIdentifier",
                                    "src": "9832:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9839:1:5",
                                    "nodeType": "YulLiteral",
                                    "src": "9839:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9846:4:5",
                                        "nodeType": "YulIdentifier",
                                        "src": "9846:4:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9852:4:5",
                                        "nodeType": "YulLiteral",
                                        "src": "9852:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9842:3:5",
                                      "nodeType": "YulIdentifier",
                                      "src": "9842:3:5"
                                    },
                                    "nativeSrc": "9842:15:5",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9842:15:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9865:4:5",
                                        "nodeType": "YulIdentifier",
                                        "src": "9865:4:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "9859:5:5",
                                      "nodeType": "YulIdentifier",
                                      "src": "9859:5:5"
                                    },
                                    "nativeSrc": "9859:11:5",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9859:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9872:1:5",
                                    "nodeType": "YulLiteral",
                                    "src": "9872:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9875:4:5",
                                    "nodeType": "YulLiteral",
                                    "src": "9875:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "9820:4:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "9820:4:5"
                                },
                                "nativeSrc": "9820:60:5",
                                "nodeType": "YulFunctionCall",
                                "src": "9820:60:5"
                              },
                              "variableNames": [
                                {
                                  "name": "success",
                                  "nativeSrc": "9809:7:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "9809:7:5"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9893:30:5",
                              "nodeType": "YulAssignment",
                              "src": "9893:30:5",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "9907:14:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "9907:14:5"
                                },
                                "nativeSrc": "9907:16:5",
                                "nodeType": "YulFunctionCall",
                                "src": "9907:16:5"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "9893:10:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "9893:10:5"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9936:23:5",
                              "nodeType": "YulAssignment",
                              "src": "9936:23:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9957:1:5",
                                    "nodeType": "YulLiteral",
                                    "src": "9957:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "9951:5:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "9951:5:5"
                                },
                                "nativeSrc": "9951:8:5",
                                "nodeType": "YulFunctionCall",
                                "src": "9951:8:5"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "9936:11:5",
                                  "nodeType": "YulIdentifier",
                                  "src": "9936:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 743,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9846:4:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 743,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9865:4:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 752,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9893:10:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 755,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9936:11:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 749,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9809:7:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 741,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9832:5:5",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 757,
                        "nodeType": "InlineAssembly",
                        "src": "9770:199:5"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 758,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "9985:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 759,
                                    "name": "returnSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 752,
                                    "src": "9997:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 760,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10011:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9997:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 772,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 770,
                                    "name": "returnValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 755,
                                    "src": "10048:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 771,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10063:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10048:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9997:67:5",
                                "trueExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 764,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 741,
                                            "src": "10023:5:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$315",
                                              "typeString": "contract IERC20"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IERC20_$315",
                                              "typeString": "contract IERC20"
                                            }
                                          ],
                                          "id": 763,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "10015:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 762,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "10015:7:5",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 765,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10015:14:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 766,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10030:4:5",
                                      "memberName": "code",
                                      "nodeType": "MemberAccess",
                                      "src": "10015:19:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 767,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10035:6:5",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "10015:26:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 768,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10044:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "10015:30:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 774,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9996:69:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9985:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 747,
                        "id": 776,
                        "nodeType": "Return",
                        "src": "9978:87:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 738,
                    "nodeType": "StructuredDocumentation",
                    "src": "9096:491:5",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
                  },
                  "id": 778,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturnBool",
                  "nameLocation": "9601:23:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 741,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "9632:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 778,
                        "src": "9625:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 740,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 739,
                            "name": "IERC20",
                            "nameLocations": [
                              "9625:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "9625:6:5"
                          },
                          "referencedDeclaration": 315,
                          "src": "9625:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 743,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "9652:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 778,
                        "src": "9639:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9639:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9624:33:5"
                  },
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 778,
                        "src": "9675:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9675:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9674:6:5"
                  },
                  "scope": 779,
                  "src": "9592:480:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 780,
              "src": "698:9376:5",
              "usedErrors": [
                327,
                336
              ],
              "usedEvents": []
            }
          ],
          "src": "115:9960:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              809
            ]
          },
          "id": 810,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 781,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:6"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 782,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:6",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 809,
              "linearizedBaseContracts": [
                809
              ],
              "name": "Context",
              "nameLocation": "642:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 790,
                    "nodeType": "Block",
                    "src": "718:34:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 787,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 786,
                        "id": 789,
                        "nodeType": "Return",
                        "src": "728:17:6"
                      }
                    ]
                  },
                  "id": 791,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 783,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:6"
                  },
                  "returnParameters": {
                    "id": 786,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 785,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "709:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 784,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:6"
                  },
                  "scope": 809,
                  "src": "656:96:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 799,
                    "nodeType": "Block",
                    "src": "825:32:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 796,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:6",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 795,
                        "id": 798,
                        "nodeType": "Return",
                        "src": "835:15:6"
                      }
                    ]
                  },
                  "id": 800,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 792,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:6"
                  },
                  "returnParameters": {
                    "id": 795,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 800,
                        "src": "809:14:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:6"
                  },
                  "scope": 809,
                  "src": "758:99:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 807,
                    "nodeType": "Block",
                    "src": "935:25:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 804,
                        "id": 806,
                        "nodeType": "Return",
                        "src": "945:8:6"
                      }
                    ]
                  },
                  "id": 808,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 801,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:6"
                  },
                  "returnParameters": {
                    "id": 804,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 803,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 808,
                        "src": "926:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 802,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:6"
                  },
                  "scope": 809,
                  "src": "863:97:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 810,
              "src": "624:338:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              809
            ],
            "Pausable": [
              917
            ]
          },
          "id": 918,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 811,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 813,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 918,
              "sourceUnit": 810,
              "src": "128:45:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 812,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 809,
                    "src": "136:7:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 815,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 809,
                    "src": "645:7:7"
                  },
                  "id": 816,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:7"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 814,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:7",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 917,
              "linearizedBaseContracts": [
                917,
                809
              ],
              "name": "Pausable",
              "nameLocation": "633:8:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "659:20:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 819,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:7",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 823,
                  "name": "Paused",
                  "nameLocation": "770:6:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 821,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 823,
                        "src": "777:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 820,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:7"
                  },
                  "src": "764:30:7"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 824,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:7",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 828,
                  "name": "Unpaused",
                  "nameLocation": "881:8:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 827,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 826,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "890:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 825,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:7"
                  },
                  "src": "875:32:7"
                },
                {
                  "documentation": {
                    "id": 829,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:7",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 831,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:7"
                  },
                  "src": "994:22:7"
                },
                {
                  "documentation": {
                    "id": 832,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:7",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 834,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:7"
                  },
                  "src": "1107:22:7"
                },
                {
                  "body": {
                    "id": 841,
                    "nodeType": "Block",
                    "src": "1340:47:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 837,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "1350:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 839,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:7"
                      },
                      {
                        "id": 840,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 835,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:7",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 842,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:7",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 836,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:7"
                  },
                  "src": "1315:72:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 849,
                    "nodeType": "Block",
                    "src": "1587:44:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 845,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "1597:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 847,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:7"
                      },
                      {
                        "id": 848,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 843,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:7",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 850,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:7",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:7"
                  },
                  "src": "1565:66:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 858,
                    "nodeType": "Block",
                    "src": "1779:31:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 856,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "1796:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 855,
                        "id": 857,
                        "nodeType": "Return",
                        "src": "1789:14:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 851,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:7",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 859,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 852,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:7"
                  },
                  "returnParameters": {
                    "id": 855,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 854,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 859,
                        "src": "1773:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 853,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:7"
                  },
                  "scope": 917,
                  "src": "1726:84:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 870,
                    "nodeType": "Block",
                    "src": "1929:77:7",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 863,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 859,
                            "src": "1943:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 869,
                        "nodeType": "IfStatement",
                        "src": "1939:61:7",
                        "trueBody": {
                          "id": 868,
                          "nodeType": "Block",
                          "src": "1953:47:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 865,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 831,
                                  "src": "1974:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 867,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 860,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:7",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 871,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 861,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:7"
                  },
                  "returnParameters": {
                    "id": 862,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:7"
                  },
                  "scope": 917,
                  "src": "1878:128:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 883,
                    "nodeType": "Block",
                    "src": "2126:78:7",
                    "statements": [
                      {
                        "condition": {
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:7",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 875,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 859,
                              "src": "2141:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 882,
                        "nodeType": "IfStatement",
                        "src": "2136:62:7",
                        "trueBody": {
                          "id": 881,
                          "nodeType": "Block",
                          "src": "2151:47:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 878,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 834,
                                  "src": "2172:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 880,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 872,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:7",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 884,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 873,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:7"
                  },
                  "returnParameters": {
                    "id": 874,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:7"
                  },
                  "scope": 917,
                  "src": "2078:126:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 899,
                    "nodeType": "Block",
                    "src": "2388:66:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 890,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 818,
                            "src": "2398:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 893,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 895,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 791,
                                "src": "2434:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 894,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 823,
                            "src": "2427:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 898,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 885,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:7",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 900,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 888,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 887,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 842,
                        "src": "2374:13:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:7"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:7"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:7"
                  },
                  "scope": 917,
                  "src": "2339:115:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 915,
                    "nodeType": "Block",
                    "src": "2634:69:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 906,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 818,
                            "src": "2644:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 909,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 911,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 791,
                                "src": "2683:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 910,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 828,
                            "src": "2674:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 914,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 901,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:7",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 916,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 904,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 903,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 850,
                        "src": "2623:10:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:7"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 902,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:7"
                  },
                  "returnParameters": {
                    "id": 905,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:7"
                  },
                  "scope": 917,
                  "src": "2586:117:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 918,
              "src": "615:2090:7",
              "usedErrors": [
                831,
                834
              ],
              "usedEvents": [
                823,
                828
              ]
            }
          ],
          "src": "102:2604:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              986
            ]
          },
          "id": 987,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 919,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:8"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 920,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:8",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 986,
              "linearizedBaseContracts": [
                986
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 923,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "1818:40:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 926,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "1864:36:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "1907:23:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 929,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:8",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 931,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 930,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:8"
                  },
                  "src": "1994:37:8"
                },
                {
                  "body": {
                    "id": 938,
                    "nodeType": "Block",
                    "src": "2051:38:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 934,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "2061:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 935,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "2071:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 937,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:8"
                      }
                    ]
                  },
                  "id": 939,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:8"
                  },
                  "returnParameters": {
                    "id": 933,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:8"
                  },
                  "scope": 986,
                  "src": "2037:52:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 949,
                    "nodeType": "Block",
                    "src": "2490:79:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 942,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "2500:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 944,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:8"
                      },
                      {
                        "id": 945,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:8"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 946,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "2542:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 948,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 940,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:8",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 950,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 941,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:8"
                  },
                  "src": "2466:103:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 965,
                    "nodeType": "Block",
                    "src": "2614:268:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 953,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "2702:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 954,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "2713:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 960,
                        "nodeType": "IfStatement",
                        "src": "2698:86:8",
                        "trueBody": {
                          "id": 959,
                          "nodeType": "Block",
                          "src": "2722:62:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 956,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 931,
                                  "src": "2743:28:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 958,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 961,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "2858:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 962,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "2868:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 964,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:8"
                      }
                    ]
                  },
                  "id": 966,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 951,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:8"
                  },
                  "returnParameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:8"
                  },
                  "scope": 986,
                  "src": "2575:307:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 973,
                    "nodeType": "Block",
                    "src": "2926:170:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 969,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "3068:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 970,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "3078:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 972,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:8"
                      }
                    ]
                  },
                  "id": 974,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 967,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:8"
                  },
                  "returnParameters": {
                    "id": 968,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:8"
                  },
                  "scope": 986,
                  "src": "2888:208:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 984,
                    "nodeType": "Block",
                    "src": "3339:42:8",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 980,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "3356:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 981,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "3367:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 979,
                        "id": 983,
                        "nodeType": "Return",
                        "src": "3349:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 975,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:8",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 985,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 976,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:8"
                  },
                  "returnParameters": {
                    "id": 979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 978,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "3333:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 977,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:8"
                  },
                  "scope": 986,
                  "src": "3275:106:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 987,
              "src": "1030:2353:8",
              "usedErrors": [
                931
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              998
            ]
          },
          "id": 999,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 988,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 989,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:9",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 998,
              "linearizedBaseContracts": [
                998
              ],
              "name": "IERC165",
              "nameLocation": "432:7:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 990,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:9",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 997,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 993,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 992,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 997,
                        "src": "818:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 991,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:9"
                  },
                  "returnParameters": {
                    "id": 996,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 995,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 997,
                        "src": "861:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:9"
                  },
                  "scope": 998,
                  "src": "791:76:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 999,
              "src": "422:447:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:9"
        },
        "id": 9
      },
      "contracts/ZaaNetAdmin.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetAdmin.sol",
          "exportedSymbols": {
            "Context": [
              809
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              917
            ],
            "ReentrancyGuard": [
              986
            ],
            "ZaaNetAdmin": [
              1947
            ],
            "ZaaNetStorage": [
              3526
            ]
          },
          "id": 1948,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1000,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1001,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1948,
              "sourceUnit": 148,
              "src": "58:52:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1002,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1948,
              "sourceUnit": 918,
              "src": "111:52:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1003,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1948,
              "sourceUnit": 987,
              "src": "164:59:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "./ZaaNetStorage.sol",
              "id": 1004,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1948,
              "sourceUnit": 3527,
              "src": "224:29:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1005,
                    "name": "Ownable",
                    "nameLocations": [
                      "279:7:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "279:7:10"
                  },
                  "id": 1006,
                  "nodeType": "InheritanceSpecifier",
                  "src": "279:7:10"
                },
                {
                  "baseName": {
                    "id": 1007,
                    "name": "Pausable",
                    "nameLocations": [
                      "288:8:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 917,
                    "src": "288:8:10"
                  },
                  "id": 1008,
                  "nodeType": "InheritanceSpecifier",
                  "src": "288:8:10"
                },
                {
                  "baseName": {
                    "id": 1009,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "298:15:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 986,
                    "src": "298:15:10"
                  },
                  "id": 1010,
                  "nodeType": "InheritanceSpecifier",
                  "src": "298:15:10"
                }
              ],
              "canonicalName": "ZaaNetAdmin",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1947,
              "linearizedBaseContracts": [
                1947,
                986,
                917,
                147,
                809
              ],
              "name": "ZaaNetAdmin",
              "nameLocation": "264:11:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "11ce0267",
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "storageContract",
                  "nameLocation": "341:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "320:36:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                    "typeString": "contract ZaaNetStorage"
                  },
                  "typeName": {
                    "id": 1012,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1011,
                      "name": "ZaaNetStorage",
                      "nameLocations": [
                        "320:13:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3526,
                      "src": "320:13:10"
                    },
                    "referencedDeclaration": 3526,
                    "src": "320:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                      "typeString": "contract ZaaNetStorage"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c5f956af",
                  "id": 1015,
                  "mutability": "mutable",
                  "name": "treasuryAddress",
                  "nameLocation": "377:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "362:30:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "633423be",
                  "id": 1017,
                  "mutability": "mutable",
                  "name": "paymentAddress",
                  "nameLocation": "449:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "434:29:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8c639a85",
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "platformFeePercent",
                  "nameLocation": "520:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "505:33:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ebe7fdaa",
                  "id": 1021,
                  "mutability": "mutable",
                  "name": "hostingFee",
                  "nameLocation": "594:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "579:25:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "3998a681",
                  "id": 1024,
                  "mutability": "constant",
                  "name": "MAX_PLATFORM_FEE",
                  "nameLocation": "703:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "679:45:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "722:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "6f04d994",
                  "id": 1027,
                  "mutability": "constant",
                  "name": "MIN_PLATFORM_FEE",
                  "nameLocation": "773:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "749:44:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "792:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "bb8f0b65",
                  "id": 1035,
                  "mutability": "constant",
                  "name": "MAX_HOSTING_FEE",
                  "nameLocation": "842:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "818:57:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "313030",
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "860:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "867:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 1031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "873:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "867:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        }
                      ],
                      "id": 1033,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "866:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "860:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "54d74941",
                  "id": 1038,
                  "mutability": "constant",
                  "name": "MIN_HOSTING_FEE",
                  "nameLocation": "937:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "913:43:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "955:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0905f560",
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "emergencyMode",
                  "nameLocation": "1045:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "1033:33:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1061:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "09705de8",
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "emergencyOperators",
                  "nameLocation": "1104:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "1072:50:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1044,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1042,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1080:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1072:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1043,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1091:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.FeeChange",
                  "id": 1054,
                  "members": [
                    {
                      "constant": false,
                      "id": 1047,
                      "mutability": "mutable",
                      "name": "oldFee",
                      "nameLocation": "1200:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1054,
                      "src": "1192:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1046,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1192:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1049,
                      "mutability": "mutable",
                      "name": "newFee",
                      "nameLocation": "1224:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1054,
                      "src": "1216:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1048,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1216:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1051,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1248:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1054,
                      "src": "1240:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1050,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1240:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1053,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "1275:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1054,
                      "src": "1267:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1052,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1267:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FeeChange",
                  "nameLocation": "1172:9:10",
                  "nodeType": "StructDefinition",
                  "scope": 1947,
                  "src": "1165:126:10",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0d35a167",
                  "id": 1058,
                  "mutability": "mutable",
                  "name": "feeHistory",
                  "nameLocation": "1320:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "1301:29:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.FeeChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1056,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1055,
                        "name": "FeeChange",
                        "nameLocations": [
                          "1301:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1054,
                        "src": "1301:9:10"
                      },
                      "referencedDeclaration": 1054,
                      "src": "1301:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FeeChange_$1054_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.FeeChange"
                      }
                    },
                    "id": 1057,
                    "nodeType": "ArrayTypeName",
                    "src": "1301:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.FeeChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.TreasuryChange",
                  "id": 1067,
                  "members": [
                    {
                      "constant": false,
                      "id": 1060,
                      "mutability": "mutable",
                      "name": "oldTreasury",
                      "nameLocation": "1412:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1067,
                      "src": "1404:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1059,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1404:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1062,
                      "mutability": "mutable",
                      "name": "newTreasury",
                      "nameLocation": "1441:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1067,
                      "src": "1433:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1061,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1433:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1064,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1470:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1067,
                      "src": "1462:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1063,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1462:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1066,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "1497:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1067,
                      "src": "1489:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1065,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1489:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "TreasuryChange",
                  "nameLocation": "1379:14:10",
                  "nodeType": "StructDefinition",
                  "scope": 1947,
                  "src": "1372:141:10",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a380b86b",
                  "id": 1071,
                  "mutability": "mutable",
                  "name": "treasuryHistory",
                  "nameLocation": "1547:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "1523:39:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1069,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1068,
                        "name": "TreasuryChange",
                        "nameLocations": [
                          "1523:14:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1067,
                        "src": "1523:14:10"
                      },
                      "referencedDeclaration": 1067,
                      "src": "1523:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TreasuryChange_$1067_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.TreasuryChange"
                      }
                    },
                    "id": 1070,
                    "nodeType": "ArrayTypeName",
                    "src": "1523:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.HostingFeeChange",
                  "id": 1080,
                  "members": [
                    {
                      "constant": false,
                      "id": 1073,
                      "mutability": "mutable",
                      "name": "oldFee",
                      "nameLocation": "1638:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1630:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1072,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1630:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1075,
                      "mutability": "mutable",
                      "name": "newFee",
                      "nameLocation": "1662:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1654:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1074,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1654:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1077,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1686:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1678:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1076,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1678:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1079,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "1713:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1705:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1078,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1705:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "HostingFeeChange",
                  "nameLocation": "1603:16:10",
                  "nodeType": "StructDefinition",
                  "scope": 1947,
                  "src": "1596:133:10",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e53377eb",
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "hostingFeeHistory",
                  "nameLocation": "1765:17:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "1739:43:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1082,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1081,
                        "name": "HostingFeeChange",
                        "nameLocations": [
                          "1739:16:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1080,
                        "src": "1739:16:10"
                      },
                      "referencedDeclaration": 1080,
                      "src": "1739:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HostingFeeChange_$1080_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                      }
                    },
                    "id": 1083,
                    "nodeType": "ArrayTypeName",
                    "src": "1739:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb99",
                  "id": 1092,
                  "name": "PlatformFeeUpdated",
                  "nameLocation": "1809:18:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1086,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldFee",
                        "nameLocation": "1844:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1092,
                        "src": "1828:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1828:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1088,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "1868:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1092,
                        "src": "1852:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1852:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "1892:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1092,
                        "src": "1876:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1876:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1827:75:10"
                  },
                  "src": "1803:100:10"
                },
                {
                  "anonymous": false,
                  "eventSelector": "23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa13",
                  "id": 1100,
                  "name": "TreasuryUpdated",
                  "nameLocation": "1914:15:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1094,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldTreasury",
                        "nameLocation": "1946:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1100,
                        "src": "1930:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1093,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1930:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1096,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newTreasury",
                        "nameLocation": "1975:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1100,
                        "src": "1959:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1095,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1959:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1098,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "2004:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1100,
                        "src": "1988:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1988:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1929:85:10"
                  },
                  "src": "1908:107:10"
                },
                {
                  "anonymous": false,
                  "eventSelector": "eb710718efc8ce303613ea1c9fb97a21bd1154a827cdb5ed5607eadd10e8cf96",
                  "id": 1108,
                  "name": "HostingFeeUpdated",
                  "nameLocation": "2026:17:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1102,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldFee",
                        "nameLocation": "2060:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "2044:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2044:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1104,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "2084:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "2068:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1103,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2068:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1106,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "2108:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "2092:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2092:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2043:75:10"
                  },
                  "src": "2020:99:10"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f0140290",
                  "id": 1112,
                  "name": "AdminPaused",
                  "nameLocation": "2130:11:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1110,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2158:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "2142:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2142:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2141:29:10"
                  },
                  "src": "2124:47:10"
                },
                {
                  "anonymous": false,
                  "eventSelector": "cc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c634",
                  "id": 1116,
                  "name": "AdminUnpaused",
                  "nameLocation": "2182:13:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1114,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2212:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1116,
                        "src": "2196:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2196:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2195:29:10"
                  },
                  "src": "2176:49:10"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa40",
                  "id": 1122,
                  "name": "EmergencyModeToggled",
                  "nameLocation": "2236:20:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1118,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "enabled",
                        "nameLocation": "2262:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1122,
                        "src": "2257:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2257:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1120,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2287:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1122,
                        "src": "2271:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1119,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2271:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2256:43:10"
                  },
                  "src": "2230:70:10"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce",
                  "id": 1130,
                  "name": "EmergencyOperatorUpdated",
                  "nameLocation": "2311:24:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1124,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2352:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "2336:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2336:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1126,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "2367:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "2362:11:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1125,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2362:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1128,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "updatedBy",
                        "nameLocation": "2391:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "2375:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2335:66:10"
                  },
                  "src": "2305:97:10"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7f7d6e7886dca58922d0593a44928fb5066cd0e04369c371d72eb96e61368fa8",
                  "id": 1136,
                  "name": "ContractsInitialized",
                  "nameLocation": "2413:20:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1132,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "storageContract",
                        "nameLocation": "2450:15:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "2434:31:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2434:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1134,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2475:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "2467:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1133,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2467:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2433:52:10"
                  },
                  "src": "2407:79:10"
                },
                {
                  "body": {
                    "id": 1153,
                    "nodeType": "Block",
                    "src": "2525:118:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1139,
                                  "name": "emergencyOperators",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "2543:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1142,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1140,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2562:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1141,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2566:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2562:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2543:30:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1143,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2577:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1144,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2581:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2577:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1145,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "2591:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2591:7:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2577:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2543:55:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656d657267656e6379206f70657261746f72",
                              "id": 1149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2600:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc1b39fc0b454b5fd3784c3a15d54fced45e89466614065aee240afeee0420b8",
                                "typeString": "literal_string \"Not emergency operator\""
                              },
                              "value": "Not emergency operator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc1b39fc0b454b5fd3784c3a15d54fced45e89466614065aee240afeee0420b8",
                                "typeString": "literal_string \"Not emergency operator\""
                              }
                            ],
                            "id": 1138,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2535:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2535:90:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1151,
                        "nodeType": "ExpressionStatement",
                        "src": "2535:90:10"
                      },
                      {
                        "id": 1152,
                        "nodeType": "PlaceholderStatement",
                        "src": "2635:1:10"
                      }
                    ]
                  },
                  "id": 1154,
                  "name": "onlyEmergencyOperator",
                  "nameLocation": "2501:21:10",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1137,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2522:2:10"
                  },
                  "src": "2492:151:10",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1163,
                    "nodeType": "Block",
                    "src": "2679:79:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2697:14:10",
                              "subExpression": {
                                "id": 1157,
                                "name": "emergencyMode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1041,
                                "src": "2698:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53797374656d20696e20656d657267656e6379206d6f6465",
                              "id": 1159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2713:26:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6aa06e0bb1c440eec40b9cb8c9374010ea534350e6e4653e6abbb382dc701e03",
                                "typeString": "literal_string \"System in emergency mode\""
                              },
                              "value": "System in emergency mode"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6aa06e0bb1c440eec40b9cb8c9374010ea534350e6e4653e6abbb382dc701e03",
                                "typeString": "literal_string \"System in emergency mode\""
                              }
                            ],
                            "id": 1156,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2689:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2689:51:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1161,
                        "nodeType": "ExpressionStatement",
                        "src": "2689:51:10"
                      },
                      {
                        "id": 1162,
                        "nodeType": "PlaceholderStatement",
                        "src": "2750:1:10"
                      }
                    ]
                  },
                  "id": 1164,
                  "name": "notInEmergencyMode",
                  "nameLocation": "2658:18:10",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2676:2:10"
                  },
                  "src": "2649:109:10",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1312,
                    "nodeType": "Block",
                    "src": "2969:1645:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1182,
                                "name": "_treasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1168,
                                "src": "2987:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3015:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3007:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1183,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3007:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3007:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2987:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726561737572792063616e6e6f74206265207a65726f2061646472657373",
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3019:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512",
                                "typeString": "literal_string \"Treasury cannot be zero address\""
                              },
                              "value": "Treasury cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512",
                                "typeString": "literal_string \"Treasury cannot be zero address\""
                              }
                            ],
                            "id": 1181,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2979:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2979:74:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1190,
                        "nodeType": "ExpressionStatement",
                        "src": "2979:74:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1192,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1172,
                                  "src": "3084:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1193,
                                  "name": "MIN_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1027,
                                  "src": "3107:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3084:39:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1195,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1172,
                                  "src": "3127:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1196,
                                  "name": "MAX_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1024,
                                  "src": "3150:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3127:39:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3084:82:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506c6174666f726d20666565206d757374206265206265747765656e20312520616e6420323025",
                              "id": 1199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3181:41:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d95ddb3474aa062c903f578770b7dbf7ce309df8d78de188b95eac5cdd20fc7f",
                                "typeString": "literal_string \"Platform fee must be between 1% and 20%\""
                              },
                              "value": "Platform fee must be between 1% and 20%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d95ddb3474aa062c903f578770b7dbf7ce309df8d78de188b95eac5cdd20fc7f",
                                "typeString": "literal_string \"Platform fee must be between 1% and 20%\""
                              }
                            ],
                            "id": 1191,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3063:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3063:169:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1201,
                        "nodeType": "ExpressionStatement",
                        "src": "3063:169:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1203,
                                "name": "_paymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1170,
                                "src": "3250:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3277:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3269:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1204,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3269:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3269:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3250:29:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061796d656e7420616464726573732063616e6e6f74206265207a65726f2061646472657373",
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3281:40:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0e07cf06ff6d2f5e708a84a558eed0fdb1fbd63261c7e66f60903a0dfc88550",
                                "typeString": "literal_string \"Payment address cannot be zero address\""
                              },
                              "value": "Payment address cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0e07cf06ff6d2f5e708a84a558eed0fdb1fbd63261c7e66f60903a0dfc88550",
                                "typeString": "literal_string \"Payment address cannot be zero address\""
                              }
                            ],
                            "id": 1202,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3242:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3242:80:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1211,
                        "nodeType": "ExpressionStatement",
                        "src": "3242:80:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1213,
                                  "name": "_hostingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1174,
                                  "src": "3353:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1214,
                                  "name": "MIN_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1038,
                                  "src": "3368:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3353:30:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1216,
                                  "name": "_hostingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1174,
                                  "src": "3387:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1217,
                                  "name": "MAX_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1035,
                                  "src": "3402:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3387:30:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3353:64:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "486f7374696e6720666565206d757374206265206265747765656e203020616e64203130302055534454",
                              "id": 1220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3431:44:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_558afdea4ba9d0c52c0eacab16b4bacaa8816b54f51337f4fde55b2f611332ed",
                                "typeString": "literal_string \"Hosting fee must be between 0 and 100 USDT\""
                              },
                              "value": "Hosting fee must be between 0 and 100 USDT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_558afdea4ba9d0c52c0eacab16b4bacaa8816b54f51337f4fde55b2f611332ed",
                                "typeString": "literal_string \"Hosting fee must be between 0 and 100 USDT\""
                              }
                            ],
                            "id": 1212,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3332:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3332:153:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1222,
                        "nodeType": "ExpressionStatement",
                        "src": "3332:153:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1223,
                            "name": "_storageContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1166,
                            "src": "3500:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3528:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3520:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1224,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3520:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:10:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3500:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1242,
                        "nodeType": "IfStatement",
                        "src": "3496:184:10",
                        "trueBody": {
                          "id": 1241,
                          "nodeType": "Block",
                          "src": "3532:148:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1229,
                                  "name": "storageContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1013,
                                  "src": "3546:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                    "typeString": "contract ZaaNetStorage"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1231,
                                      "name": "_storageContract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1166,
                                      "src": "3578:16:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1230,
                                    "name": "ZaaNetStorage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3526,
                                    "src": "3564:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3526_$",
                                      "typeString": "type(contract ZaaNetStorage)"
                                    }
                                  },
                                  "id": 1232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3564:31:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                    "typeString": "contract ZaaNetStorage"
                                  }
                                },
                                "src": "3546:49:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                  "typeString": "contract ZaaNetStorage"
                                }
                              },
                              "id": 1234,
                              "nodeType": "ExpressionStatement",
                              "src": "3546:49:10"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1236,
                                    "name": "_storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1166,
                                    "src": "3635:16:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1237,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "3653:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1238,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3659:9:10",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "3653:15:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1235,
                                  "name": "ContractsInitialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1136,
                                  "src": "3614:20:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3614:55:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1240,
                              "nodeType": "EmitStatement",
                              "src": "3609:60:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1243,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1015,
                            "src": "3698:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1244,
                            "name": "_treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "3716:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3698:34:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1246,
                        "nodeType": "ExpressionStatement",
                        "src": "3698:34:10"
                      },
                      {
                        "expression": {
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1247,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "3742:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1248,
                            "name": "_platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1172,
                            "src": "3763:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3742:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1250,
                        "nodeType": "ExpressionStatement",
                        "src": "3742:40:10"
                      },
                      {
                        "expression": {
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1251,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "3792:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1252,
                            "name": "_hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1174,
                            "src": "3805:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3792:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1254,
                        "nodeType": "ExpressionStatement",
                        "src": "3792:24:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3910:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 1260,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1172,
                                  "src": "3933:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1261,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3977:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1262,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3983:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3977:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1263,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4017:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1264,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4021:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4017:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1258,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1054,
                                "src": "3878:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$1054_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 1265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "3902:6:10",
                                "3925:6:10",
                                "3966:9:10",
                                "4006:9:10"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "3878:160:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$1054_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$1054_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1255,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1058,
                              "src": "3862:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3873:4:10",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3862:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$1054_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3862:177:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1267,
                        "nodeType": "ExpressionStatement",
                        "src": "3862:177:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1274,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4121:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1273,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4113:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1272,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4113:7:10",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4113:10:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1276,
                                  "name": "_treasuryAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1168,
                                  "src": "4150:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1277,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4191:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4197:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4191:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1279,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4231:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1280,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4235:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4231:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1271,
                                "name": "TreasuryChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1067,
                                "src": "4071:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_TreasuryChange_$1067_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.TreasuryChange storage pointer)"
                                }
                              },
                              "id": 1281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "4100:11:10",
                                "4137:11:10",
                                "4180:9:10",
                                "4220:9:10"
                              ],
                              "names": [
                                "oldTreasury",
                                "newTreasury",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4071:181:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1067_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1067_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1268,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1071,
                              "src": "4050:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4066:4:10",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4050:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage_ptr_$_t_struct$_TreasuryChange_$1067_storage_$returns$__$attached_to$_t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.TreasuryChange storage ref[] storage pointer,struct ZaaNetAdmin.TreasuryChange storage ref)"
                            }
                          },
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4050:203:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1283,
                        "nodeType": "ExpressionStatement",
                        "src": "4050:203:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4326:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 1289,
                                  "name": "_hostingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1174,
                                  "src": "4349:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1290,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4385:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1291,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4391:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4385:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1292,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4425:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1293,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4429:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4425:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1287,
                                "name": "HostingFeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1080,
                                "src": "4287:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_HostingFeeChange_$1080_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.HostingFeeChange storage pointer)"
                                }
                              },
                              "id": 1294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "4318:6:10",
                                "4341:6:10",
                                "4374:9:10",
                                "4414:9:10"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4287:159:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1284,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "4264:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4282:4:10",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4264:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage_ptr_$_t_struct$_HostingFeeChange_$1080_storage_$returns$__$attached_to$_t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.HostingFeeChange storage ref[] storage pointer,struct ZaaNetAdmin.HostingFeeChange storage ref)"
                            }
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4264:183:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1296,
                        "nodeType": "ExpressionStatement",
                        "src": "4264:183:10"
                      },
                      {
                        "expression": {
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1297,
                              "name": "emergencyOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "4501:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1300,
                            "indexExpression": {
                              "expression": {
                                "id": 1298,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4520:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4524:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4520:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4501:30:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4534:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4501:37:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1303,
                        "nodeType": "ExpressionStatement",
                        "src": "4501:37:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1305,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4578:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4582:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4578:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4590:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "expression": {
                                "id": 1308,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4596:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4600:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4596:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1304,
                            "name": "EmergencyOperatorUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "4553:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (address,bool,address)"
                            }
                          },
                          "id": 1310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4553:54:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1311,
                        "nodeType": "EmitStatement",
                        "src": "4548:59:10"
                      }
                    ]
                  },
                  "id": 1313,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1177,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2957:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2961:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2957:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1179,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1176,
                        "name": "Ownable",
                        "nameLocations": [
                          "2949:7:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2949:7:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2949:19:10"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1175,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "_storageContract",
                        "nameLocation": "2793:16:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1313,
                        "src": "2785:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2785:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1168,
                        "mutability": "mutable",
                        "name": "_treasuryAddress",
                        "nameLocation": "2827:16:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1313,
                        "src": "2819:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2819:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1170,
                        "mutability": "mutable",
                        "name": "_paymentAddress",
                        "nameLocation": "2861:15:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1313,
                        "src": "2853:23:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2853:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1172,
                        "mutability": "mutable",
                        "name": "_platformFeePercent",
                        "nameLocation": "2894:19:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1313,
                        "src": "2886:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2886:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1174,
                        "mutability": "mutable",
                        "name": "_hostingFee",
                        "nameLocation": "2931:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1313,
                        "src": "2923:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2923:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2775:173:10"
                  },
                  "returnParameters": {
                    "id": 1180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2969:0:10"
                  },
                  "scope": 1947,
                  "src": "2764:1850:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1368,
                    "nodeType": "Block",
                    "src": "4706:617:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1323,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1315,
                                  "src": "4737:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1324,
                                  "name": "MIN_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1027,
                                  "src": "4755:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4737:34:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1326,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1315,
                                  "src": "4775:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1327,
                                  "name": "MAX_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1024,
                                  "src": "4793:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4775:34:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4737:72:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466565206d757374206265206265747765656e20312520616e6420323025",
                              "id": 1330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4824:32:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d94d2ca419eaacb351b7948b7af739baad982e852e68b60589813741b6c863f",
                                "typeString": "literal_string \"Fee must be between 1% and 20%\""
                              },
                              "value": "Fee must be between 1% and 20%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d94d2ca419eaacb351b7948b7af739baad982e852e68b60589813741b6c863f",
                                "typeString": "literal_string \"Fee must be between 1% and 20%\""
                              }
                            ],
                            "id": 1322,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4716:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4716:150:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1332,
                        "nodeType": "ExpressionStatement",
                        "src": "4716:150:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1334,
                                "name": "_newFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1315,
                                "src": "4884:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1335,
                                "name": "platformFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1019,
                                "src": "4902:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4884:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46656520756e6368616e676564",
                              "id": 1337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4922:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              },
                              "value": "Fee unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              }
                            ],
                            "id": 1333,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4876:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4876:62:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1339,
                        "nodeType": "ExpressionStatement",
                        "src": "4876:62:10"
                      },
                      {
                        "assignments": [
                          1341
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1341,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "4957:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1368,
                            "src": "4949:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1340,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4949:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1343,
                        "initialValue": {
                          "id": 1342,
                          "name": "platformFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1019,
                          "src": "4966:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4949:35:10"
                      },
                      {
                        "expression": {
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1344,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "4994:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1345,
                            "name": "_newFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1315,
                            "src": "5015:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4994:35:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1347,
                        "nodeType": "ExpressionStatement",
                        "src": "4994:35:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1352,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1341,
                                  "src": "5117:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1353,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1315,
                                  "src": "5145:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1354,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5184:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5190:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5184:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1356,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5224:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5228:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5224:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1351,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1054,
                                "src": "5085:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$1054_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 1358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "5109:6:10",
                                "5137:6:10",
                                "5173:9:10",
                                "5213:9:10"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "5085:160:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$1054_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$1054_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1348,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1058,
                              "src": "5069:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5080:4:10",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5069:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$1054_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5069:177:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1360,
                        "nodeType": "ExpressionStatement",
                        "src": "5069:177:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1362,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "5281:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1363,
                              "name": "_newFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1315,
                              "src": "5289:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1364,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5305:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5309:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5305:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1361,
                            "name": "PlatformFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1092,
                            "src": "5262:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5262:54:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1367,
                        "nodeType": "EmitStatement",
                        "src": "5257:59:10"
                      }
                    ]
                  },
                  "functionSelector": "12e8e2c3",
                  "id": 1369,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1318,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1317,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4677:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4677:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4677:9:10"
                    },
                    {
                      "id": 1320,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1319,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "4687:18:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1164,
                        "src": "4687:18:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4687:18:10"
                    }
                  ],
                  "name": "setPlatformFee",
                  "nameLocation": "4629:14:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "_newFeePercent",
                        "nameLocation": "4652:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1369,
                        "src": "4644:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4644:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4643:24:10"
                  },
                  "returnParameters": {
                    "id": 1321,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4706:0:10"
                  },
                  "scope": 1947,
                  "src": "4620:703:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1424,
                    "nodeType": "Block",
                    "src": "5407:597:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1379,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1371,
                                  "src": "5438:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1380,
                                  "name": "MIN_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1038,
                                  "src": "5449:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5438:26:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1382,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1371,
                                  "src": "5468:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1383,
                                  "name": "MAX_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1035,
                                  "src": "5479:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5468:26:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5438:56:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466565206d757374206265206265747765656e203020616e64203130302055534454",
                              "id": 1386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5508:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_000cb682cd7c8affc418fc78874a994822feb696edce91a1f30a9f78108d0d83",
                                "typeString": "literal_string \"Fee must be between 0 and 100 USDT\""
                              },
                              "value": "Fee must be between 0 and 100 USDT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_000cb682cd7c8affc418fc78874a994822feb696edce91a1f30a9f78108d0d83",
                                "typeString": "literal_string \"Fee must be between 0 and 100 USDT\""
                              }
                            ],
                            "id": 1378,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5417:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5417:137:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1388,
                        "nodeType": "ExpressionStatement",
                        "src": "5417:137:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1390,
                                "name": "_newFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1371,
                                "src": "5572:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1391,
                                "name": "hostingFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1021,
                                "src": "5583:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5572:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46656520756e6368616e676564",
                              "id": 1393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5595:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              },
                              "value": "Fee unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              }
                            ],
                            "id": 1389,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5564:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5564:47:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1395,
                        "nodeType": "ExpressionStatement",
                        "src": "5564:47:10"
                      },
                      {
                        "assignments": [
                          1397
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1397,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "5638:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1424,
                            "src": "5630:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1396,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5630:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1399,
                        "initialValue": {
                          "id": 1398,
                          "name": "hostingFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1021,
                          "src": "5647:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5630:27:10"
                      },
                      {
                        "expression": {
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1400,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "5667:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1401,
                            "name": "_newFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1371,
                            "src": "5680:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5667:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1403,
                        "nodeType": "ExpressionStatement",
                        "src": "5667:20:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1408,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1397,
                                  "src": "5805:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1409,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1371,
                                  "src": "5833:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1410,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5865:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5871:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5865:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1412,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5905:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1413,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5909:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5905:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1407,
                                "name": "HostingFeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1080,
                                "src": "5766:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_HostingFeeChange_$1080_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.HostingFeeChange storage pointer)"
                                }
                              },
                              "id": 1414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "5797:6:10",
                                "5825:6:10",
                                "5854:9:10",
                                "5894:9:10"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "5766:160:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1404,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "5743:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5761:4:10",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5743:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage_ptr_$_t_struct$_HostingFeeChange_$1080_storage_$returns$__$attached_to$_t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.HostingFeeChange storage ref[] storage pointer,struct ZaaNetAdmin.HostingFeeChange storage ref)"
                            }
                          },
                          "id": 1415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5743:184:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1416,
                        "nodeType": "ExpressionStatement",
                        "src": "5743:184:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1418,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1397,
                              "src": "5969:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1419,
                              "name": "_newFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1371,
                              "src": "5977:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1420,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5986:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5990:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5986:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1417,
                            "name": "HostingFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "5951:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5951:46:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1423,
                        "nodeType": "EmitStatement",
                        "src": "5946:51:10"
                      }
                    ]
                  },
                  "functionSelector": "edfbf4f1",
                  "id": 1425,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1374,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1373,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5378:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5378:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5378:9:10"
                    },
                    {
                      "id": 1376,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1375,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "5388:18:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1164,
                        "src": "5388:18:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5388:18:10"
                    }
                  ],
                  "name": "setHostingFee",
                  "nameLocation": "5338:13:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1371,
                        "mutability": "mutable",
                        "name": "_newFee",
                        "nameLocation": "5360:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1425,
                        "src": "5352:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5352:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5351:17:10"
                  },
                  "returnParameters": {
                    "id": 1377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5407:0:10"
                  },
                  "scope": 1947,
                  "src": "5329:675:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1479,
                    "nodeType": "Block",
                    "src": "6105:590:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1435,
                                "name": "_newTreasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1427,
                                "src": "6123:19:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1438,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6154:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1437,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6146:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1436,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6146:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6146:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6123:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642074726561737572792061646472657373",
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6158:26:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
                                "typeString": "literal_string \"Invalid treasury address\""
                              },
                              "value": "Invalid treasury address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
                                "typeString": "literal_string \"Invalid treasury address\""
                              }
                            ],
                            "id": 1434,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6115:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6115:70:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1443,
                        "nodeType": "ExpressionStatement",
                        "src": "6115:70:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1445,
                                "name": "_newTreasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1427,
                                "src": "6203:19:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1446,
                                "name": "treasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1015,
                                "src": "6226:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6203:38:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "547265617375727920756e6368616e676564",
                              "id": 1448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6243:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8173890bbafbce9334fc44523b57c04aecc013fd57fc2b0c602bc5bf1e7d2665",
                                "typeString": "literal_string \"Treasury unchanged\""
                              },
                              "value": "Treasury unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8173890bbafbce9334fc44523b57c04aecc013fd57fc2b0c602bc5bf1e7d2665",
                                "typeString": "literal_string \"Treasury unchanged\""
                              }
                            ],
                            "id": 1444,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6195:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:69:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1450,
                        "nodeType": "ExpressionStatement",
                        "src": "6195:69:10"
                      },
                      {
                        "assignments": [
                          1452
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1452,
                            "mutability": "mutable",
                            "name": "oldTreasury",
                            "nameLocation": "6283:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1479,
                            "src": "6275:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1451,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6275:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1454,
                        "initialValue": {
                          "id": 1453,
                          "name": "treasuryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1015,
                          "src": "6297:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6275:37:10"
                      },
                      {
                        "expression": {
                          "id": 1457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1455,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1015,
                            "src": "6322:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1456,
                            "name": "_newTreasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "6340:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6322:37:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1458,
                        "nodeType": "ExpressionStatement",
                        "src": "6322:37:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1463,
                                  "name": "oldTreasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1452,
                                  "src": "6467:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1464,
                                  "name": "_newTreasuryAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1427,
                                  "src": "6505:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1465,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6549:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6555:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6549:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1467,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6589:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6593:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6589:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1462,
                                "name": "TreasuryChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1067,
                                "src": "6425:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_TreasuryChange_$1067_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.TreasuryChange storage pointer)"
                                }
                              },
                              "id": 1469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "6454:11:10",
                                "6492:11:10",
                                "6538:9:10",
                                "6578:9:10"
                              ],
                              "names": [
                                "oldTreasury",
                                "newTreasury",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "6425:185:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1067_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1067_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1459,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1071,
                              "src": "6404:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 1461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6420:4:10",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6404:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage_ptr_$_t_struct$_TreasuryChange_$1067_storage_$returns$__$attached_to$_t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.TreasuryChange storage ref[] storage pointer,struct ZaaNetAdmin.TreasuryChange storage ref)"
                            }
                          },
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6404:207:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1471,
                        "nodeType": "ExpressionStatement",
                        "src": "6404:207:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1473,
                              "name": "oldTreasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1452,
                              "src": "6643:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1474,
                              "name": "_newTreasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1427,
                              "src": "6656:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1475,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6677:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6681:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6677:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1472,
                            "name": "TreasuryUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "6627:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6627:61:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1478,
                        "nodeType": "EmitStatement",
                        "src": "6622:66:10"
                      }
                    ]
                  },
                  "functionSelector": "6605bfda",
                  "id": 1480,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1430,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1429,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6076:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6076:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6076:9:10"
                    },
                    {
                      "id": 1432,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1431,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "6086:18:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1164,
                        "src": "6086:18:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6086:18:10"
                    }
                  ],
                  "name": "setTreasuryAddress",
                  "nameLocation": "6019:18:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1427,
                        "mutability": "mutable",
                        "name": "_newTreasuryAddress",
                        "nameLocation": "6046:19:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "6038:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1426,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6038:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6037:29:10"
                  },
                  "returnParameters": {
                    "id": 1433,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6105:0:10"
                  },
                  "scope": 1947,
                  "src": "6010:685:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1510,
                    "nodeType": "Block",
                    "src": "6794:215:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1490,
                                "name": "_newPaymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1482,
                                "src": "6812:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1493,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6842:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6834:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1491,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6834:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6834:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6812:32:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207061796d656e742061646472657373",
                              "id": 1496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6846:25:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c30ffd4d4e62ad6cb5c99115837f313e332d04d4c16e9c74b308088b453c5761",
                                "typeString": "literal_string \"Invalid payment address\""
                              },
                              "value": "Invalid payment address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c30ffd4d4e62ad6cb5c99115837f313e332d04d4c16e9c74b308088b453c5761",
                                "typeString": "literal_string \"Invalid payment address\""
                              }
                            ],
                            "id": 1489,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6804:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6804:68:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1498,
                        "nodeType": "ExpressionStatement",
                        "src": "6804:68:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1500,
                                "name": "_newPaymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1482,
                                "src": "6890:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1501,
                                "name": "paymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1017,
                                "src": "6912:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6890:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061796d656e74206164647265737320756e6368616e676564",
                              "id": 1503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6928:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_322b7cdc9ee78c0715fd23ccbd9ba57a644d0ef9253322ddc5209104c897a221",
                                "typeString": "literal_string \"Payment address unchanged\""
                              },
                              "value": "Payment address unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_322b7cdc9ee78c0715fd23ccbd9ba57a644d0ef9253322ddc5209104c897a221",
                                "typeString": "literal_string \"Payment address unchanged\""
                              }
                            ],
                            "id": 1499,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6882:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6882:74:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1505,
                        "nodeType": "ExpressionStatement",
                        "src": "6882:74:10"
                      },
                      {
                        "expression": {
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1506,
                            "name": "paymentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1017,
                            "src": "6967:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1507,
                            "name": "_newPaymentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1482,
                            "src": "6984:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6967:35:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1509,
                        "nodeType": "ExpressionStatement",
                        "src": "6967:35:10"
                      }
                    ]
                  },
                  "functionSelector": "5e1e1004",
                  "id": 1511,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1485,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1484,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6765:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6765:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6765:9:10"
                    },
                    {
                      "id": 1487,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1486,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "6775:18:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1164,
                        "src": "6775:18:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6775:18:10"
                    }
                  ],
                  "name": "setPaymentAddress",
                  "nameLocation": "6710:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1483,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1482,
                        "mutability": "mutable",
                        "name": "_newPaymentAddress",
                        "nameLocation": "6736:18:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "6728:26:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1481,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6728:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6727:28:10"
                  },
                  "returnParameters": {
                    "id": 1488,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6794:0:10"
                  },
                  "scope": 1947,
                  "src": "6701:308:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1524,
                    "nodeType": "Block",
                    "src": "7051:63:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1516,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 900,
                            "src": "7061:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7061:8:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1518,
                        "nodeType": "ExpressionStatement",
                        "src": "7061:8:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1520,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7096:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7100:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7096:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1519,
                            "name": "AdminPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "7084:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7084:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1523,
                        "nodeType": "EmitStatement",
                        "src": "7079:28:10"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 1525,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1514,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1513,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7041:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7041:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7041:9:10"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "7024:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1512,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7029:2:10"
                  },
                  "returnParameters": {
                    "id": 1515,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7051:0:10"
                  },
                  "scope": 1947,
                  "src": "7015:99:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1538,
                    "nodeType": "Block",
                    "src": "7158:67:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1530,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 916,
                            "src": "7168:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7168:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1532,
                        "nodeType": "ExpressionStatement",
                        "src": "7168:10:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1534,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7207:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7211:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7207:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1533,
                            "name": "AdminUnpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1116,
                            "src": "7193:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7193:25:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1537,
                        "nodeType": "EmitStatement",
                        "src": "7188:30:10"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 1539,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1528,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1527,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7148:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7148:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7148:9:10"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "7129:7:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1526,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7136:2:10"
                  },
                  "returnParameters": {
                    "id": 1529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7158:0:10"
                  },
                  "scope": 1947,
                  "src": "7120:105:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1556,
                    "nodeType": "Block",
                    "src": "7355:109:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1545,
                            "name": "emergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "7365:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7381:14:10",
                            "subExpression": {
                              "id": 1546,
                              "name": "emergencyMode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1041,
                              "src": "7382:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7365:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1549,
                        "nodeType": "ExpressionStatement",
                        "src": "7365:30:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1551,
                              "name": "emergencyMode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1041,
                              "src": "7431:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1552,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7446:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7450:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7446:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1550,
                            "name": "EmergencyModeToggled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "7410:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (bool,address)"
                            }
                          },
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7410:47:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1555,
                        "nodeType": "EmitStatement",
                        "src": "7405:52:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1540,
                    "nodeType": "StructuredDocumentation",
                    "src": "7231:57:10",
                    "text": "@notice Toggle emergency mode (stops most operations)"
                  },
                  "functionSelector": "4c17b530",
                  "id": 1557,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1543,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1542,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "7333:21:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1154,
                        "src": "7333:21:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7333:21:10"
                    }
                  ],
                  "name": "toggleEmergencyMode",
                  "nameLocation": "7302:19:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1541,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7321:2:10"
                  },
                  "returnParameters": {
                    "id": 1544,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7355:0:10"
                  },
                  "scope": 1947,
                  "src": "7293:171:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1590,
                    "nodeType": "Block",
                    "src": "7600:192:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1568,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1560,
                                "src": "7618:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7638:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7630:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1569,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7630:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7630:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7618:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                              "id": 1574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7642:26:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                                "typeString": "literal_string \"Invalid operator address\""
                              },
                              "value": "Invalid operator address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                                "typeString": "literal_string \"Invalid operator address\""
                              }
                            ],
                            "id": 1567,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7610:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7610:59:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1576,
                        "nodeType": "ExpressionStatement",
                        "src": "7610:59:10"
                      },
                      {
                        "expression": {
                          "id": 1581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1577,
                              "name": "emergencyOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "7679:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1579,
                            "indexExpression": {
                              "id": 1578,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1560,
                              "src": "7698:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7679:28:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1580,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1562,
                            "src": "7710:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7679:37:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1582,
                        "nodeType": "ExpressionStatement",
                        "src": "7679:37:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1584,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1560,
                              "src": "7756:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1585,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1562,
                              "src": "7766:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1586,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7774:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7778:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7774:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1583,
                            "name": "EmergencyOperatorUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "7731:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (address,bool,address)"
                            }
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7731:54:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1589,
                        "nodeType": "EmitStatement",
                        "src": "7726:59:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1558,
                    "nodeType": "StructuredDocumentation",
                    "src": "7470:45:10",
                    "text": "@notice Add or remove emergency operators"
                  },
                  "functionSelector": "02e88899",
                  "id": 1591,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1565,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1564,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7590:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7590:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7590:9:10"
                    }
                  ],
                  "name": "setEmergencyOperator",
                  "nameLocation": "7529:20:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1563,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1560,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "7558:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1591,
                        "src": "7550:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7550:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1562,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "7573:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1591,
                        "src": "7568:11:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1561,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7568:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7549:31:10"
                  },
                  "returnParameters": {
                    "id": 1566,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7600:0:10"
                  },
                  "scope": 1947,
                  "src": "7520:272:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1618,
                    "nodeType": "Block",
                    "src": "7943:154:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1602,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1013,
                                    "src": "7969:15:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  ],
                                  "id": 1601,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7961:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1600,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7961:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7961:24:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1606,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7997:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1605,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7989:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1604,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7989:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7989:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7961:38:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53746f72616765206e6f7420696e697469616c697a6564",
                              "id": 1609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8001:25:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2023538f64727753263af97fb236e4ca5fd392e4beb26d70beb0b687afd58eae",
                                "typeString": "literal_string \"Storage not initialized\""
                              },
                              "value": "Storage not initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2023538f64727753263af97fb236e4ca5fd392e4beb26d70beb0b687afd58eae",
                                "typeString": "literal_string \"Storage not initialized\""
                              }
                            ],
                            "id": 1599,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7953:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7953:74:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1611,
                        "nodeType": "ExpressionStatement",
                        "src": "7953:74:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1615,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1594,
                              "src": "8080:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1612,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1013,
                              "src": "8037:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8053:26:10",
                            "memberName": "emergencyDeactivateNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3525,
                            "src": "8037:42:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8037:53:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1617,
                        "nodeType": "ExpressionStatement",
                        "src": "8037:53:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1592,
                    "nodeType": "StructuredDocumentation",
                    "src": "7798:54:10",
                    "text": "@notice Emergency function to deactivate a network"
                  },
                  "functionSelector": "5a2f406f",
                  "id": 1619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1597,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1596,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "7921:21:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1154,
                        "src": "7921:21:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7921:21:10"
                    }
                  ],
                  "name": "emergencyDeactivateNetwork",
                  "nameLocation": "7866:26:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1595,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1594,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "7901:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1619,
                        "src": "7893:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1593,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7893:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7892:19:10"
                  },
                  "returnParameters": {
                    "id": 1598,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7943:0:10"
                  },
                  "scope": 1947,
                  "src": "7857:240:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1662,
                    "nodeType": "Block",
                    "src": "8263:446:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1628,
                                "name": "_newFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1622,
                                "src": "8281:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1629,
                                "name": "MAX_PLATFORM_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1024,
                                "src": "8299:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8281:34:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4665652063616e6e6f7420657863656564206d6178696d756d",
                              "id": 1631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8317:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              },
                              "value": "Fee cannot exceed maximum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              }
                            ],
                            "id": 1627,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8273:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8273:72:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1633,
                        "nodeType": "ExpressionStatement",
                        "src": "8273:72:10"
                      },
                      {
                        "assignments": [
                          1635
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1635,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "8372:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1662,
                            "src": "8364:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1634,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8364:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1637,
                        "initialValue": {
                          "id": 1636,
                          "name": "platformFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1019,
                          "src": "8381:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8364:35:10"
                      },
                      {
                        "expression": {
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1638,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "8409:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1639,
                            "name": "_newFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1622,
                            "src": "8430:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8409:35:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1641,
                        "nodeType": "ExpressionStatement",
                        "src": "8409:35:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1646,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1635,
                                  "src": "8503:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1647,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1622,
                                  "src": "8531:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1648,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8570:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1649,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8576:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8570:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1650,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8610:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1651,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8614:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "8610:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1645,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1054,
                                "src": "8471:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$1054_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 1652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "8495:6:10",
                                "8523:6:10",
                                "8559:9:10",
                                "8599:9:10"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "8471:160:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$1054_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$1054_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1642,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1058,
                              "src": "8455:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8466:4:10",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8455:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$1054_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 1653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8455:177:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1654,
                        "nodeType": "ExpressionStatement",
                        "src": "8455:177:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1656,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1635,
                              "src": "8667:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1657,
                              "name": "_newFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1622,
                              "src": "8675:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1658,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8691:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8695:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8691:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1655,
                            "name": "PlatformFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1092,
                            "src": "8648:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8648:54:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1661,
                        "nodeType": "EmitStatement",
                        "src": "8643:59:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1620,
                    "nodeType": "StructuredDocumentation",
                    "src": "8103:67:10",
                    "text": "@notice Emergency fee adjustment (bypasses normal restrictions)"
                  },
                  "functionSelector": "18b4f23b",
                  "id": 1663,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1625,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1624,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "8241:21:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1154,
                        "src": "8241:21:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8241:21:10"
                    }
                  ],
                  "name": "emergencySetPlatformFee",
                  "nameLocation": "8184:23:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1623,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1622,
                        "mutability": "mutable",
                        "name": "_newFeePercent",
                        "nameLocation": "8216:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1663,
                        "src": "8208:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1621,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8208:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8207:24:10"
                  },
                  "returnParameters": {
                    "id": 1626,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8263:0:10"
                  },
                  "scope": 1947,
                  "src": "8175:534:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1706,
                    "nodeType": "Block",
                    "src": "8875:414:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1672,
                                "name": "_newFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1666,
                                "src": "8893:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1673,
                                "name": "MAX_HOSTING_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1035,
                                "src": "8904:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8893:26:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4665652063616e6e6f7420657863656564206d6178696d756d",
                              "id": 1675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8921:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              },
                              "value": "Fee cannot exceed maximum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              }
                            ],
                            "id": 1671,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8885:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8885:64:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1677,
                        "nodeType": "ExpressionStatement",
                        "src": "8885:64:10"
                      },
                      {
                        "assignments": [
                          1679
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1679,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "8976:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1706,
                            "src": "8968:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1678,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8968:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1681,
                        "initialValue": {
                          "id": 1680,
                          "name": "hostingFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1021,
                          "src": "8985:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8968:27:10"
                      },
                      {
                        "expression": {
                          "id": 1684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1682,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "9005:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1683,
                            "name": "_newFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1666,
                            "src": "9018:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9005:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1685,
                        "nodeType": "ExpressionStatement",
                        "src": "9005:20:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1690,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1679,
                                  "src": "9098:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1691,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1666,
                                  "src": "9126:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1692,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9158:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1693,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9164:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9158:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1694,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9198:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1695,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9202:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9198:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1689,
                                "name": "HostingFeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1080,
                                "src": "9059:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_HostingFeeChange_$1080_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.HostingFeeChange storage pointer)"
                                }
                              },
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "9090:6:10",
                                "9118:6:10",
                                "9147:9:10",
                                "9187:9:10"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "9059:160:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1686,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "9036:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9054:4:10",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "9036:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage_ptr_$_t_struct$_HostingFeeChange_$1080_storage_$returns$__$attached_to$_t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.HostingFeeChange storage ref[] storage pointer,struct ZaaNetAdmin.HostingFeeChange storage ref)"
                            }
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9036:184:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1698,
                        "nodeType": "ExpressionStatement",
                        "src": "9036:184:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1700,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1679,
                              "src": "9254:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1701,
                              "name": "_newFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1666,
                              "src": "9262:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1702,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9271:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9275:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9271:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1699,
                            "name": "HostingFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "9236:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9236:46:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1705,
                        "nodeType": "EmitStatement",
                        "src": "9231:51:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1664,
                    "nodeType": "StructuredDocumentation",
                    "src": "8715:75:10",
                    "text": "@notice Emergency hosting fee adjustment (bypasses normal restrictions)"
                  },
                  "functionSelector": "bbeecdf0",
                  "id": 1707,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1669,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1668,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "8853:21:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1154,
                        "src": "8853:21:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8853:21:10"
                    }
                  ],
                  "name": "emergencySetHostingFee",
                  "nameLocation": "8804:22:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1667,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1666,
                        "mutability": "mutable",
                        "name": "_newFee",
                        "nameLocation": "8835:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1707,
                        "src": "8827:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1665,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8827:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8826:17:10"
                  },
                  "returnParameters": {
                    "id": 1670,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8875:0:10"
                  },
                  "scope": 1947,
                  "src": "8795:494:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1716,
                    "nodeType": "Block",
                    "src": "9458:31:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1713,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "9475:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9475:7:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1712,
                        "id": 1715,
                        "nodeType": "Return",
                        "src": "9468:14:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1708,
                    "nodeType": "StructuredDocumentation",
                    "src": "9326:78:10",
                    "text": "@notice Expose admin address for other contracts (interface compatibility)"
                  },
                  "functionSelector": "f851a440",
                  "id": 1717,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "admin",
                  "nameLocation": "9418:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1709,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9423:2:10"
                  },
                  "returnParameters": {
                    "id": 1712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1711,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1717,
                        "src": "9449:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1710,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9449:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9448:9:10"
                  },
                  "scope": 1947,
                  "src": "9409:80:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1727,
                    "nodeType": "Block",
                    "src": "9602:34:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1725,
                          "name": "feeHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1058,
                          "src": "9619:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1724,
                        "id": 1726,
                        "nodeType": "Return",
                        "src": "9612:17:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1718,
                    "nodeType": "StructuredDocumentation",
                    "src": "9495:34:10",
                    "text": "@notice Get fee change history"
                  },
                  "functionSelector": "5707ed45",
                  "id": 1728,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFeeHistory",
                  "nameLocation": "9543:13:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1719,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9556:2:10"
                  },
                  "returnParameters": {
                    "id": 1724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1723,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1728,
                        "src": "9582:18:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.FeeChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1721,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1720,
                              "name": "FeeChange",
                              "nameLocations": [
                                "9582:9:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1054,
                              "src": "9582:9:10"
                            },
                            "referencedDeclaration": 1054,
                            "src": "9582:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FeeChange_$1054_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.FeeChange"
                            }
                          },
                          "id": 1722,
                          "nodeType": "ArrayTypeName",
                          "src": "9582:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.FeeChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9581:20:10"
                  },
                  "scope": 1947,
                  "src": "9534:102:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1738,
                    "nodeType": "Block",
                    "src": "9764:39:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1736,
                          "name": "treasuryHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1071,
                          "src": "9781:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1735,
                        "id": 1737,
                        "nodeType": "Return",
                        "src": "9774:22:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1729,
                    "nodeType": "StructuredDocumentation",
                    "src": "9642:39:10",
                    "text": "@notice Get treasury change history"
                  },
                  "functionSelector": "492adaa8",
                  "id": 1739,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTreasuryHistory",
                  "nameLocation": "9695:18:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1730,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9713:2:10"
                  },
                  "returnParameters": {
                    "id": 1735,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1734,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1739,
                        "src": "9739:23:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1732,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1731,
                              "name": "TreasuryChange",
                              "nameLocations": [
                                "9739:14:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1067,
                              "src": "9739:14:10"
                            },
                            "referencedDeclaration": 1067,
                            "src": "9739:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TreasuryChange_$1067_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.TreasuryChange"
                            }
                          },
                          "id": 1733,
                          "nodeType": "ArrayTypeName",
                          "src": "9739:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9738:25:10"
                  },
                  "scope": 1947,
                  "src": "9686:117:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1749,
                    "nodeType": "Block",
                    "src": "9938:41:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1747,
                          "name": "hostingFeeHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "9955:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1746,
                        "id": 1748,
                        "nodeType": "Return",
                        "src": "9948:24:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1740,
                    "nodeType": "StructuredDocumentation",
                    "src": "9809:42:10",
                    "text": "@notice Get hosting fee change history"
                  },
                  "functionSelector": "d4ab4b40",
                  "id": 1750,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostingFeeHistory",
                  "nameLocation": "9865:20:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1741,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9885:2:10"
                  },
                  "returnParameters": {
                    "id": 1746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1745,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1750,
                        "src": "9911:25:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1743,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1742,
                              "name": "HostingFeeChange",
                              "nameLocations": [
                                "9911:16:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1080,
                              "src": "9911:16:10"
                            },
                            "referencedDeclaration": 1080,
                            "src": "9911:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HostingFeeChange_$1080_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                            }
                          },
                          "id": 1744,
                          "nodeType": "ArrayTypeName",
                          "src": "9911:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9910:27:10"
                  },
                  "scope": 1947,
                  "src": "9856:123:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1760,
                    "nodeType": "Block",
                    "src": "10134:86:10",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1756,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "10151:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10172:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "10151:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1755,
                        "id": 1759,
                        "nodeType": "Return",
                        "src": "10144:31:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1751,
                    "nodeType": "StructuredDocumentation",
                    "src": "9985:75:10",
                    "text": "@notice Get current fee in basis points (for more precise calculations)"
                  },
                  "functionSelector": "7a9b93c6",
                  "id": 1761,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPlatformFeeBasisPoints",
                  "nameLocation": "10074:25:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1752,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10099:2:10"
                  },
                  "returnParameters": {
                    "id": 1755,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1754,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1761,
                        "src": "10125:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1753,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10125:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10124:9:10"
                  },
                  "scope": 1947,
                  "src": "10065:155:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1776,
                    "nodeType": "Block",
                    "src": "10365:59:10",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1769,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1764,
                                  "src": "10383:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1770,
                                  "name": "platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1019,
                                  "src": "10392:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10383:27:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1772,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10382:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10414:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "10382:35:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1768,
                        "id": 1775,
                        "nodeType": "Return",
                        "src": "10375:42:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1762,
                    "nodeType": "StructuredDocumentation",
                    "src": "10229:53:10",
                    "text": "@notice Calculate platform fee for a given amount"
                  },
                  "functionSelector": "0cbab4f7",
                  "id": 1777,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculatePlatformFee",
                  "nameLocation": "10296:20:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1765,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1764,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "10325:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1777,
                        "src": "10317:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1763,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10317:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10316:16:10"
                  },
                  "returnParameters": {
                    "id": 1768,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1767,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1777,
                        "src": "10356:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1766,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10356:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10355:9:10"
                  },
                  "scope": 1947,
                  "src": "10287:137:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1826,
                    "nodeType": "Block",
                    "src": "10780:339:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1795,
                            "name": "totalFeeChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1781,
                            "src": "10790:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1796,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1058,
                              "src": "10808:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10819:6:10",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10808:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10790:35:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1799,
                        "nodeType": "ExpressionStatement",
                        "src": "10790:35:10"
                      },
                      {
                        "expression": {
                          "id": 1803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1800,
                            "name": "totalTreasuryChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1783,
                            "src": "10835:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1801,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1071,
                              "src": "10858:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 1802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10874:6:10",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10858:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10835:45:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1804,
                        "nodeType": "ExpressionStatement",
                        "src": "10835:45:10"
                      },
                      {
                        "expression": {
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1805,
                            "name": "totalHostingFeeChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "10890:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1806,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "10915:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10933:6:10",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10915:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10890:49:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1809,
                        "nodeType": "ExpressionStatement",
                        "src": "10890:49:10"
                      },
                      {
                        "expression": {
                          "id": 1812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1810,
                            "name": "isEmergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1787,
                            "src": "10949:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1811,
                            "name": "emergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "10967:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10949:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1813,
                        "nodeType": "ExpressionStatement",
                        "src": "10949:31:10"
                      },
                      {
                        "expression": {
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1814,
                            "name": "currentPlatformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1789,
                            "src": "10990:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1815,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "11011:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10990:39:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1817,
                        "nodeType": "ExpressionStatement",
                        "src": "10990:39:10"
                      },
                      {
                        "expression": {
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1818,
                            "name": "currentHostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1791,
                            "src": "11039:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1819,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "11059:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11039:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1821,
                        "nodeType": "ExpressionStatement",
                        "src": "11039:30:10"
                      },
                      {
                        "expression": {
                          "id": 1824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1822,
                            "name": "currentTreasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1793,
                            "src": "11079:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1823,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1015,
                            "src": "11097:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11079:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1825,
                        "nodeType": "ExpressionStatement",
                        "src": "11079:33:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1778,
                    "nodeType": "StructuredDocumentation",
                    "src": "10430:46:10",
                    "text": "@notice Get comprehensive admin statistics"
                  },
                  "functionSelector": "c116d936",
                  "id": 1827,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAdminStats",
                  "nameLocation": "10490:13:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1779,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10503:2:10"
                  },
                  "returnParameters": {
                    "id": 1794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1781,
                        "mutability": "mutable",
                        "name": "totalFeeChanges",
                        "nameLocation": "10546:15:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "10538:23:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1780,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10538:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1783,
                        "mutability": "mutable",
                        "name": "totalTreasuryChanges",
                        "nameLocation": "10579:20:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "10571:28:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1782,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10571:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1785,
                        "mutability": "mutable",
                        "name": "totalHostingFeeChanges",
                        "nameLocation": "10617:22:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "10609:30:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1784,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10609:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1787,
                        "mutability": "mutable",
                        "name": "isEmergencyMode",
                        "nameLocation": "10654:15:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "10649:20:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1786,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10649:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1789,
                        "mutability": "mutable",
                        "name": "currentPlatformFee",
                        "nameLocation": "10687:18:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "10679:26:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1788,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10679:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1791,
                        "mutability": "mutable",
                        "name": "currentHostingFee",
                        "nameLocation": "10723:17:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "10715:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1790,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10715:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1793,
                        "mutability": "mutable",
                        "name": "currentTreasury",
                        "nameLocation": "10758:15:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "10750:23:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1792,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10750:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10528:251:10"
                  },
                  "scope": 1947,
                  "src": "10481:638:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1839,
                    "nodeType": "Block",
                    "src": "11256:52:10",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1835,
                            "name": "emergencyOperators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "11273:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1837,
                          "indexExpression": {
                            "id": 1836,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1830,
                            "src": "11292:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11273:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1834,
                        "id": 1838,
                        "nodeType": "Return",
                        "src": "11266:35:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1828,
                    "nodeType": "StructuredDocumentation",
                    "src": "11125:50:10",
                    "text": "@notice Check if address is emergency operator"
                  },
                  "functionSelector": "a10eb354",
                  "id": 1840,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isEmergencyOperator",
                  "nameLocation": "11189:19:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1830,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "11217:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1840,
                        "src": "11209:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1829,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11209:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11208:18:10"
                  },
                  "returnParameters": {
                    "id": 1834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1833,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1840,
                        "src": "11250:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1832,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11250:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11249:6:10"
                  },
                  "scope": 1947,
                  "src": "11180:128:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1862,
                    "nodeType": "Block",
                    "src": "11431:124:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1848,
                                  "name": "feeHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1058,
                                  "src": "11449:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11460:6:10",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11449:17:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11469:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11449:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20666565206368616e676573207265636f72646564",
                              "id": 1852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11472:25:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc8db7d8e1ea43532de30b244d617a8938afdef51027bcacf4eb88002a8b30fe",
                                "typeString": "literal_string \"No fee changes recorded\""
                              },
                              "value": "No fee changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc8db7d8e1ea43532de30b244d617a8938afdef51027bcacf4eb88002a8b30fe",
                                "typeString": "literal_string \"No fee changes recorded\""
                              }
                            ],
                            "id": 1847,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11441:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11441:57:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1854,
                        "nodeType": "ExpressionStatement",
                        "src": "11441:57:10"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1855,
                            "name": "feeHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1058,
                            "src": "11515:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                            }
                          },
                          "id": 1860,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1856,
                                "name": "feeHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1058,
                                "src": "11526:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_FeeChange_$1054_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                                }
                              },
                              "id": 1857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11537:6:10",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "11526:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11546:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11526:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11515:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeChange_$1054_storage",
                            "typeString": "struct ZaaNetAdmin.FeeChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1846,
                        "id": 1861,
                        "nodeType": "Return",
                        "src": "11508:40:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1841,
                    "nodeType": "StructuredDocumentation",
                    "src": "11314:41:10",
                    "text": "@notice Get latest fee change details"
                  },
                  "functionSelector": "5071f27b",
                  "id": 1863,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestFeeChange",
                  "nameLocation": "11369:18:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1842,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11387:2:10"
                  },
                  "returnParameters": {
                    "id": 1846,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1845,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1863,
                        "src": "11413:16:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeChange_$1054_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.FeeChange"
                        },
                        "typeName": {
                          "id": 1844,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1843,
                            "name": "FeeChange",
                            "nameLocations": [
                              "11413:9:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1054,
                            "src": "11413:9:10"
                          },
                          "referencedDeclaration": 1054,
                          "src": "11413:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeChange_$1054_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.FeeChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11412:18:10"
                  },
                  "scope": 1947,
                  "src": "11360:195:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1885,
                    "nodeType": "Block",
                    "src": "11693:144:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1871,
                                  "name": "treasuryHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1071,
                                  "src": "11711:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11727:6:10",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11711:22:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11736:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11711:26:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207472656173757279206368616e676573207265636f72646564",
                              "id": 1875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11739:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4e47ca2bca752e588b170d4c5b1a1d7e303331d2c70d184100b710867b7893e3",
                                "typeString": "literal_string \"No treasury changes recorded\""
                              },
                              "value": "No treasury changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4e47ca2bca752e588b170d4c5b1a1d7e303331d2c70d184100b710867b7893e3",
                                "typeString": "literal_string \"No treasury changes recorded\""
                              }
                            ],
                            "id": 1870,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11703:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11703:67:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1877,
                        "nodeType": "ExpressionStatement",
                        "src": "11703:67:10"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1878,
                            "name": "treasuryHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1071,
                            "src": "11787:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                            }
                          },
                          "id": 1883,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1879,
                                "name": "treasuryHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1071,
                                "src": "11803:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1067_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                                }
                              },
                              "id": 1880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11819:6:10",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "11803:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11828:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11803:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11787:43:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TreasuryChange_$1067_storage",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1869,
                        "id": 1884,
                        "nodeType": "Return",
                        "src": "11780:50:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1864,
                    "nodeType": "StructuredDocumentation",
                    "src": "11561:46:10",
                    "text": "@notice Get latest treasury change details"
                  },
                  "functionSelector": "4863687e",
                  "id": 1886,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestTreasuryChange",
                  "nameLocation": "11621:23:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1865,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11644:2:10"
                  },
                  "returnParameters": {
                    "id": 1869,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1868,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1886,
                        "src": "11670:21:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TreasuryChange_$1067_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.TreasuryChange"
                        },
                        "typeName": {
                          "id": 1867,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1866,
                            "name": "TreasuryChange",
                            "nameLocations": [
                              "11670:14:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1067,
                            "src": "11670:14:10"
                          },
                          "referencedDeclaration": 1067,
                          "src": "11670:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TreasuryChange_$1067_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11669:23:10"
                  },
                  "scope": 1947,
                  "src": "11612:225:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1908,
                    "nodeType": "Block",
                    "src": "11982:153:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1894,
                                  "name": "hostingFeeHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1084,
                                  "src": "12000:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12018:6:10",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "12000:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12027:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12000:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20686f7374696e6720666565206368616e676573207265636f72646564",
                              "id": 1898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12030:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9af9622cb5b2e7f4b710ca9ca133f0a5ff6daec5b81316fe6395f1ec6a3a5be0",
                                "typeString": "literal_string \"No hosting fee changes recorded\""
                              },
                              "value": "No hosting fee changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9af9622cb5b2e7f4b710ca9ca133f0a5ff6daec5b81316fe6395f1ec6a3a5be0",
                                "typeString": "literal_string \"No hosting fee changes recorded\""
                              }
                            ],
                            "id": 1893,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11992:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11992:72:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1900,
                        "nodeType": "ExpressionStatement",
                        "src": "11992:72:10"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1901,
                            "name": "hostingFeeHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1084,
                            "src": "12081:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                            }
                          },
                          "id": 1906,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1902,
                                "name": "hostingFeeHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1084,
                                "src": "12099:17:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1080_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                                }
                              },
                              "id": 1903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12117:6:10",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "12099:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12126:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12099:28:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12081:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HostingFeeChange_$1080_storage",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1892,
                        "id": 1907,
                        "nodeType": "Return",
                        "src": "12074:54:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1887,
                    "nodeType": "StructuredDocumentation",
                    "src": "11843:49:10",
                    "text": "@notice Get latest hosting fee change details"
                  },
                  "functionSelector": "d2643f1d",
                  "id": 1909,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestHostingFeeChange",
                  "nameLocation": "11906:25:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1888,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11931:2:10"
                  },
                  "returnParameters": {
                    "id": 1892,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1891,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1909,
                        "src": "11957:23:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HostingFeeChange_$1080_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                        },
                        "typeName": {
                          "id": 1890,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1889,
                            "name": "HostingFeeChange",
                            "nameLocations": [
                              "11957:16:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1080,
                            "src": "11957:16:10"
                          },
                          "referencedDeclaration": 1080,
                          "src": "11957:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HostingFeeChange_$1080_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11956:25:10"
                  },
                  "scope": 1947,
                  "src": "11897:238:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1924,
                    "nodeType": "Block",
                    "src": "12360:73:10",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1919,
                              "name": "platformFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "12378:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1920,
                              "name": "hostingFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "12398:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1921,
                              "name": "treasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1015,
                              "src": "12410:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "id": 1922,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12377:49:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$",
                            "typeString": "tuple(uint256,uint256,address)"
                          }
                        },
                        "functionReturnParameters": 1918,
                        "id": 1923,
                        "nodeType": "Return",
                        "src": "12370:56:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1910,
                    "nodeType": "StructuredDocumentation",
                    "src": "12141:60:10",
                    "text": "@notice Get all current fees in one call (gas efficient)"
                  },
                  "functionSelector": "71908a03",
                  "id": 1925,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentFees",
                  "nameLocation": "12215:14:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1911,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12229:2:10"
                  },
                  "returnParameters": {
                    "id": 1918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1913,
                        "mutability": "mutable",
                        "name": "platformFeePercentage",
                        "nameLocation": "12272:21:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1925,
                        "src": "12264:29:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1912,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12264:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1915,
                        "mutability": "mutable",
                        "name": "hostingFeeAmount",
                        "nameLocation": "12311:16:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1925,
                        "src": "12303:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1914,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12303:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1917,
                        "mutability": "mutable",
                        "name": "treasury",
                        "nameLocation": "12345:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1925,
                        "src": "12337:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1916,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12337:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12254:105:10"
                  },
                  "scope": 1947,
                  "src": "12206:227:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1933,
                    "nodeType": "Block",
                    "src": "12637:39:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1931,
                          "name": "treasuryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1015,
                          "src": "12654:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1930,
                        "id": 1932,
                        "nodeType": "Return",
                        "src": "12647:22:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1926,
                    "nodeType": "StructuredDocumentation",
                    "src": "12505:75:10",
                    "text": "@notice Alternative name for treasury address (interface compatibility)"
                  },
                  "functionSelector": "61d027b3",
                  "id": 1934,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "treasury",
                  "nameLocation": "12594:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1927,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12602:2:10"
                  },
                  "returnParameters": {
                    "id": 1930,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1929,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1934,
                        "src": "12628:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1928,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12628:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12627:9:10"
                  },
                  "scope": 1947,
                  "src": "12585:91:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    859
                  ],
                  "body": {
                    "id": 1945,
                    "nodeType": "Block",
                    "src": "12806:38:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1941,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "12823:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ZaaNetAdmin_$1947_$",
                                "typeString": "type(contract super ZaaNetAdmin)"
                              }
                            },
                            "id": 1942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12829:6:10",
                            "memberName": "paused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 859,
                            "src": "12823:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12823:14:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1940,
                        "id": 1944,
                        "nodeType": "Return",
                        "src": "12816:21:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1935,
                    "nodeType": "StructuredDocumentation",
                    "src": "12682:65:10",
                    "text": "@notice Check if contract is paused (interface compatibility)"
                  },
                  "functionSelector": "5c975abb",
                  "id": 1946,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "12761:6:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1937,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "12782:8:10"
                  },
                  "parameters": {
                    "id": 1936,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12767:2:10"
                  },
                  "returnParameters": {
                    "id": 1940,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1939,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1946,
                        "src": "12800:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1938,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12800:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12799:6:10"
                  },
                  "scope": 1947,
                  "src": "12752:92:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1948,
              "src": "255:12591:10",
              "usedErrors": [
                13,
                18,
                831,
                834,
                931
              ],
              "usedEvents": [
                24,
                823,
                828,
                1092,
                1100,
                1108,
                1112,
                1116,
                1122,
                1130,
                1136
              ]
            }
          ],
          "src": "32:12814:10"
        },
        "id": 10
      },
      "contracts/ZaaNetNetwork.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetNetwork.sol",
          "exportedSymbols": {
            "Context": [
              809
            ],
            "IERC1363": [
              229
            ],
            "IERC20": [
              315
            ],
            "IZaaNetAdmin": [
              1966
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              917
            ],
            "ReentrancyGuard": [
              986
            ],
            "SafeERC20": [
              779
            ],
            "ZaaNetNetwork": [
              2956
            ],
            "ZaaNetStorage": [
              3526
            ]
          },
          "id": 2957,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1949,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1950,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2957,
              "sourceUnit": 148,
              "src": "58:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1951,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2957,
              "sourceUnit": 918,
              "src": "111:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1952,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2957,
              "sourceUnit": 987,
              "src": "164:59:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 1953,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2957,
              "sourceUnit": 780,
              "src": "224:65:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1954,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2957,
              "sourceUnit": 316,
              "src": "290:56:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "./ZaaNetStorage.sol",
              "id": 1955,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2957,
              "sourceUnit": 3527,
              "src": "347:29:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IZaaNetAdmin",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1966,
              "linearizedBaseContracts": [
                1966
              ],
              "name": "IZaaNetAdmin",
              "nameLocation": "388:12:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "ebe7fdaa",
                  "id": 1960,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hostingFee",
                  "nameLocation": "416:10:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1956,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "426:2:11"
                  },
                  "returnParameters": {
                    "id": 1959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1958,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1960,
                        "src": "452:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "452:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "451:9:11"
                  },
                  "scope": 1966,
                  "src": "407:54:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c5f956af",
                  "id": 1965,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "treasuryAddress",
                  "nameLocation": "476:15:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1961,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "491:2:11"
                  },
                  "returnParameters": {
                    "id": 1964,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1963,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1965,
                        "src": "517:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1962,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "517:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "516:9:11"
                  },
                  "scope": 1966,
                  "src": "467:59:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2957,
              "src": "378:150:11",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1967,
                    "name": "Ownable",
                    "nameLocations": [
                      "556:7:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "556:7:11"
                  },
                  "id": 1968,
                  "nodeType": "InheritanceSpecifier",
                  "src": "556:7:11"
                },
                {
                  "baseName": {
                    "id": 1969,
                    "name": "Pausable",
                    "nameLocations": [
                      "565:8:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 917,
                    "src": "565:8:11"
                  },
                  "id": 1970,
                  "nodeType": "InheritanceSpecifier",
                  "src": "565:8:11"
                },
                {
                  "baseName": {
                    "id": 1971,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "575:15:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 986,
                    "src": "575:15:11"
                  },
                  "id": 1972,
                  "nodeType": "InheritanceSpecifier",
                  "src": "575:15:11"
                }
              ],
              "canonicalName": "ZaaNetNetwork",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2956,
              "linearizedBaseContracts": [
                2956,
                986,
                917,
                147,
                809
              ],
              "name": "ZaaNetNetwork",
              "nameLocation": "539:13:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 1976,
                  "libraryName": {
                    "id": 1973,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "603:9:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 779,
                    "src": "603:9:11"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "597:27:11",
                  "typeName": {
                    "id": 1975,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1974,
                      "name": "IERC20",
                      "nameLocations": [
                        "617:6:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 315,
                      "src": "617:6:11"
                    },
                    "referencedDeclaration": 315,
                    "src": "617:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$315",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "11ce0267",
                  "id": 1979,
                  "mutability": "mutable",
                  "name": "storageContract",
                  "nameLocation": "651:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "630:36:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                    "typeString": "contract ZaaNetStorage"
                  },
                  "typeName": {
                    "id": 1978,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1977,
                      "name": "ZaaNetStorage",
                      "nameLocations": [
                        "630:13:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3526,
                      "src": "630:13:11"
                    },
                    "referencedDeclaration": 3526,
                    "src": "630:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                      "typeString": "contract ZaaNetStorage"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c05c5e94",
                  "id": 1982,
                  "mutability": "mutable",
                  "name": "adminContract",
                  "nameLocation": "692:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "672:33:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                    "typeString": "contract IZaaNetAdmin"
                  },
                  "typeName": {
                    "id": 1981,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1980,
                      "name": "IZaaNetAdmin",
                      "nameLocations": [
                        "672:12:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1966,
                      "src": "672:12:11"
                    },
                    "referencedDeclaration": 1966,
                    "src": "672:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                      "typeString": "contract IZaaNetAdmin"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2f48ab7d",
                  "id": 1985,
                  "mutability": "mutable",
                  "name": "usdt",
                  "nameLocation": "725:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "711:18:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$315",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1984,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1983,
                      "name": "IERC20",
                      "nameLocations": [
                        "711:6:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 315,
                      "src": "711:6:11"
                    },
                    "referencedDeclaration": 315,
                    "src": "711:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$315",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "09115e97",
                  "id": 1988,
                  "mutability": "constant",
                  "name": "MIN_PRICE_PER_SESSION",
                  "nameLocation": "821:21:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "797:53:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130303030",
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "845:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d4f38d04",
                  "id": 1991,
                  "mutability": "constant",
                  "name": "MAX_PRICE_PER_SESSION",
                  "nameLocation": "906:21:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "882:56:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3530303030303030",
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "930:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000_by_1",
                      "typeString": "int_const 50000000"
                    },
                    "value": "50000000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "e67d86f1",
                  "id": 1994,
                  "mutability": "constant",
                  "name": "MAX_MONGO_DATA_LENGTH",
                  "nameLocation": "992:21:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "968:51:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323030",
                    "id": 1993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1016:3:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200_by_1",
                      "typeString": "int_const 200"
                    },
                    "value": "200"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "eb2931b7",
                  "id": 1998,
                  "mutability": "mutable",
                  "name": "isHost",
                  "nameLocation": "1090:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "1058:38:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1997,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1995,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1066:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1058:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1996,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1077:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2003,
                  "mutability": "mutable",
                  "name": "hostNetworks",
                  "nameLocation": "1140:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "1102:50:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 2002,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1999,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1110:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1102:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 2000,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1121:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2001,
                      "nodeType": "ArrayTypeName",
                      "src": "1121:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "43355214",
                  "id": 2007,
                  "mutability": "mutable",
                  "name": "networkToHost",
                  "nameLocation": "1193:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "1158:48:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "typeName": {
                    "id": 2006,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2004,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1166:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1158:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                      "typeString": "mapping(uint256 => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2005,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1177:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7f6e8cbf",
                  "id": 2011,
                  "mutability": "mutable",
                  "name": "lastRegistrationTime",
                  "nameLocation": "1290:20:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "1255:55:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 2010,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2008,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1263:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1255:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2009,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1274:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "b0ff6383",
                  "id": 2014,
                  "mutability": "constant",
                  "name": "REGISTRATION_COOLDOWN",
                  "nameLocation": "1340:21:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2956,
                  "src": "1316:57:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1364:9:11",
                    "subdenomination": "minutes",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d93f4aea01982a4687b0d757a8314f57b6a77742cf98d21bc9bdb24ef543a4dc",
                  "id": 2030,
                  "name": "NetworkRegistered",
                  "nameLocation": "1409:17:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2016,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "1452:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "1436:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2015,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1436:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2018,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1487:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "1471:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2017,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1471:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2020,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mongoDataId",
                        "nameLocation": "1515:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "1508:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2019,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1508:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2022,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pricePerSession",
                        "nameLocation": "1544:15:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "1536:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2021,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1536:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2024,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "1574:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "1569:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2023,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1569:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2026,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "hostingFeePaid",
                        "nameLocation": "1600:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "1592:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2025,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1592:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2028,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1632:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "1624:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2027,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1624:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1426:221:11"
                  },
                  "src": "1403:245:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ac5b35db873b0c878683cbeac0fc736acd48ea6480742bafd3ba483dd7158824",
                  "id": 2038,
                  "name": "HostingFeePaid",
                  "nameLocation": "1660:14:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2037,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2032,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "host",
                        "nameLocation": "1700:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2038,
                        "src": "1684:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2031,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2034,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1722:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2038,
                        "src": "1714:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2033,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1714:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2036,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1746:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2038,
                        "src": "1738:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2035,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1738:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1674:87:11"
                  },
                  "src": "1654:108:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d",
                  "id": 2050,
                  "name": "NetworkUpdated",
                  "nameLocation": "1774:14:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2040,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "1814:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2050,
                        "src": "1798:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1798:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2042,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1849:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2050,
                        "src": "1833:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2041,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1833:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2044,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pricePerSession",
                        "nameLocation": "1878:15:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2050,
                        "src": "1870:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2043,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1870:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2046,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mongoDataId",
                        "nameLocation": "1910:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2050,
                        "src": "1903:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2045,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1903:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2048,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "1936:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2050,
                        "src": "1931:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2047,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1931:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1788:162:11"
                  },
                  "src": "1768:183:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f01",
                  "id": 2058,
                  "name": "NetworkPriceUpdated",
                  "nameLocation": "1963:19:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2057,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2052,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "2008:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2058,
                        "src": "1992:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2051,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1992:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2054,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldPrice",
                        "nameLocation": "2035:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2058,
                        "src": "2027:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2053,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2056,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newPrice",
                        "nameLocation": "2061:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2058,
                        "src": "2053:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2055,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2053:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1982:93:11"
                  },
                  "src": "1957:119:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b",
                  "id": 2066,
                  "name": "NetworkStatusChanged",
                  "nameLocation": "2088:20:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2060,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "2134:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2066,
                        "src": "2118:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2059,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2118:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2062,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldStatus",
                        "nameLocation": "2158:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2066,
                        "src": "2153:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2061,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2064,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newStatus",
                        "nameLocation": "2182:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2066,
                        "src": "2177:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2063,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2177:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2108:89:11"
                  },
                  "src": "2082:116:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8ff9310abede1de3c5d3fdbb7cf09c40bc8258ca75c0f949ad92f964deac98b3",
                  "id": 2070,
                  "name": "HostAdded",
                  "nameLocation": "2210:9:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2069,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2068,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "host",
                        "nameLocation": "2236:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2070,
                        "src": "2220:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2220:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2219:22:11"
                  },
                  "src": "2204:38:11"
                },
                {
                  "body": {
                    "id": 2131,
                    "nodeType": "Block",
                    "src": "2375:422:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2084,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2072,
                                "src": "2406:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2087,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2434:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2086,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2426:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2085,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2426:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2426:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2406:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642073746f7261676520636f6e74726163742061646472657373",
                              "id": 2090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2450:34:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4a830ce972982ee3de82e9ad79878c0e45747d502806a2b710d19be6639ee91b",
                                "typeString": "literal_string \"Invalid storage contract address\""
                              },
                              "value": "Invalid storage contract address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4a830ce972982ee3de82e9ad79878c0e45747d502806a2b710d19be6639ee91b",
                                "typeString": "literal_string \"Invalid storage contract address\""
                              }
                            ],
                            "id": 2083,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2385:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2385:109:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2092,
                        "nodeType": "ExpressionStatement",
                        "src": "2385:109:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2094,
                                "name": "_adminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2074,
                                "src": "2512:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2097,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2538:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2096,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2530:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2095,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2530:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2530:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2512:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646d696e20636f6e74726163742061646472657373",
                              "id": 2100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2542:32:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a0386bf5c5703018ccc953d0e2cb376a4e3402fbe2218551a557b67ef808d30f",
                                "typeString": "literal_string \"Invalid admin contract address\""
                              },
                              "value": "Invalid admin contract address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a0386bf5c5703018ccc953d0e2cb376a4e3402fbe2218551a557b67ef808d30f",
                                "typeString": "literal_string \"Invalid admin contract address\""
                              }
                            ],
                            "id": 2093,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2504:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2504:71:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2102,
                        "nodeType": "ExpressionStatement",
                        "src": "2504:71:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2104,
                                "name": "_usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2076,
                                "src": "2593:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2107,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2610:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2602:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2105,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2602:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2602:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2593:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964205553445420636f6e74726163742061646472657373",
                              "id": 2110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2614:31:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af6b8306cf9f58de4b550620f08638d9074f4d8438206602a6df11b38a562da4",
                                "typeString": "literal_string \"Invalid USDT contract address\""
                              },
                              "value": "Invalid USDT contract address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af6b8306cf9f58de4b550620f08638d9074f4d8438206602a6df11b38a562da4",
                                "typeString": "literal_string \"Invalid USDT contract address\""
                              }
                            ],
                            "id": 2103,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2585:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2585:61:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2112,
                        "nodeType": "ExpressionStatement",
                        "src": "2585:61:11"
                      },
                      {
                        "expression": {
                          "id": 2117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2113,
                            "name": "storageContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "2657:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2115,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2072,
                                "src": "2689:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2114,
                              "name": "ZaaNetStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3526,
                              "src": "2675:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3526_$",
                                "typeString": "type(contract ZaaNetStorage)"
                              }
                            },
                            "id": 2116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2675:31:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "src": "2657:49:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                            "typeString": "contract ZaaNetStorage"
                          }
                        },
                        "id": 2118,
                        "nodeType": "ExpressionStatement",
                        "src": "2657:49:11"
                      },
                      {
                        "expression": {
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2119,
                            "name": "adminContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1982,
                            "src": "2716:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                              "typeString": "contract IZaaNetAdmin"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2121,
                                "name": "_adminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2074,
                                "src": "2745:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2120,
                              "name": "IZaaNetAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1966,
                              "src": "2732:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IZaaNetAdmin_$1966_$",
                                "typeString": "type(contract IZaaNetAdmin)"
                              }
                            },
                            "id": 2122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2732:28:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                              "typeString": "contract IZaaNetAdmin"
                            }
                          },
                          "src": "2716:44:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                            "typeString": "contract IZaaNetAdmin"
                          }
                        },
                        "id": 2124,
                        "nodeType": "ExpressionStatement",
                        "src": "2716:44:11"
                      },
                      {
                        "expression": {
                          "id": 2129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2125,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1985,
                            "src": "2770:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$315",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2127,
                                "name": "_usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2076,
                                "src": "2784:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2126,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "2777:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2777:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$315",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2770:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2130,
                        "nodeType": "ExpressionStatement",
                        "src": "2770:20:11"
                      }
                    ]
                  },
                  "id": 2132,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2079,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2363:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2367:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2363:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2081,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2078,
                        "name": "Ownable",
                        "nameLocations": [
                          "2355:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2355:7:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2355:19:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2072,
                        "mutability": "mutable",
                        "name": "_storageContract",
                        "nameLocation": "2277:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2132,
                        "src": "2269:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2269:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2074,
                        "mutability": "mutable",
                        "name": "_adminContract",
                        "nameLocation": "2311:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2132,
                        "src": "2303:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2073,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2303:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2076,
                        "mutability": "mutable",
                        "name": "_usdt",
                        "nameLocation": "2343:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2132,
                        "src": "2335:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2075,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2335:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2259:95:11"
                  },
                  "returnParameters": {
                    "id": 2082,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2375:0:11"
                  },
                  "scope": 2956,
                  "src": "2248:549:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2341,
                    "nodeType": "Block",
                    "src": "3040:2611:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2147,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3071:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3077:9:11",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3071:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2149,
                                    "name": "lastRegistrationTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2011,
                                    "src": "3106:20:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2152,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2150,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3127:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2151,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3131:6:11",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3127:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3106:32:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2153,
                                  "name": "REGISTRATION_COOLDOWN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2014,
                                  "src": "3141:21:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3106:56:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3071:91:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526567697374726174696f6e20636f6f6c646f776e20616374697665",
                              "id": 2156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3176:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b3928d3829a766243016fa669b9ece86bf23c83eaec126e54d328bddced3f2cb",
                                "typeString": "literal_string \"Registration cooldown active\""
                              },
                              "value": "Registration cooldown active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b3928d3829a766243016fa669b9ece86bf23c83eaec126e54d328bddced3f2cb",
                                "typeString": "literal_string \"Registration cooldown active\""
                              }
                            ],
                            "id": 2146,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3050:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3050:166:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2158,
                        "nodeType": "ExpressionStatement",
                        "src": "3050:166:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2160,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2135,
                                  "src": "3247:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 2161,
                                  "name": "MIN_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1988,
                                  "src": "3267:21:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3247:41:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2163,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2135,
                                  "src": "3308:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2164,
                                  "name": "MAX_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1991,
                                  "src": "3328:21:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3308:41:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3247:102:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206f7574206f6620616c6c6f7765642072616e6765",
                              "id": 2167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3363:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              },
                              "value": "Price out of allowed range"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              }
                            ],
                            "id": 2159,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3226:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3226:175:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2169,
                        "nodeType": "ExpressionStatement",
                        "src": "3226:175:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2173,
                                        "name": "_mongoDataId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2137,
                                        "src": "3438:12:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 2172,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3432:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 2171,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3432:5:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2174,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3432:19:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 2175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3452:6:11",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3432:26:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2176,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3461:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3432:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2180,
                                        "name": "_mongoDataId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2137,
                                        "src": "3488:12:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 2179,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3482:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 2178,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3482:5:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2181,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3482:19:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 2182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3502:6:11",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3482:26:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2183,
                                  "name": "MAX_MONGO_DATA_LENGTH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1994,
                                  "src": "3512:21:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3482:51:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3432:101:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964204d6f6e676f446174614944206c656e677468",
                              "id": 2186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3547:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_325aca93e8a7c7b2b7298dc6a52067a69714ff93e8ce01e9ad81313b11951b0c",
                                "typeString": "literal_string \"Invalid MongoDataID length\""
                              },
                              "value": "Invalid MongoDataID length"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_325aca93e8a7c7b2b7298dc6a52067a69714ff93e8ce01e9ad81313b11951b0c",
                                "typeString": "literal_string \"Invalid MongoDataID length\""
                              }
                            ],
                            "id": 2170,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3411:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3411:174:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2188,
                        "nodeType": "ExpressionStatement",
                        "src": "3411:174:11"
                      },
                      {
                        "assignments": [
                          2190
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2190,
                            "mutability": "mutable",
                            "name": "hostingFee",
                            "nameLocation": "3651:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2341,
                            "src": "3643:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2189,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3643:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2194,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2191,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "3664:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 2192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3678:10:11",
                            "memberName": "hostingFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1960,
                            "src": "3664:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3664:26:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3643:47:11"
                      },
                      {
                        "assignments": [
                          2196
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2196,
                            "mutability": "mutable",
                            "name": "treasuryAddress",
                            "nameLocation": "3708:15:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2341,
                            "src": "3700:23:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3700:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2200,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2197,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "3726:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 2198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3740:15:11",
                            "memberName": "treasuryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1965,
                            "src": "3726:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3726:31:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3700:57:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2201,
                              "name": "hostingFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2190,
                              "src": "3815:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3828:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3815:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2204,
                              "name": "treasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2196,
                              "src": "3833:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3860:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3852:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2205,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3852:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3852:10:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3833:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3815:47:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2261,
                        "nodeType": "IfStatement",
                        "src": "3811:705:11",
                        "trueBody": {
                          "id": 2260,
                          "nodeType": "Block",
                          "src": "3864:652:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2214,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "3918:3:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 2215,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3922:6:11",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "3918:10:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2212,
                                          "name": "usdt",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1985,
                                          "src": "3903:4:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$315",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2213,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3908:9:11",
                                        "memberName": "balanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 272,
                                        "src": "3903:14:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 2216,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3903:26:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 2217,
                                      "name": "hostingFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2190,
                                      "src": "3933:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3903:40:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e7420555344542062616c616e636520666f7220686f7374696e6720666565",
                                    "id": 2219,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3961:43:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_561eac9e47a76b348894b40d5fdc3f1e9c495cd63c8905ff58a29c3647dbb714",
                                      "typeString": "literal_string \"Insufficient USDT balance for hosting fee\""
                                    },
                                    "value": "Insufficient USDT balance for hosting fee"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_561eac9e47a76b348894b40d5fdc3f1e9c495cd63c8905ff58a29c3647dbb714",
                                      "typeString": "literal_string \"Insufficient USDT balance for hosting fee\""
                                    }
                                  ],
                                  "id": 2211,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3878:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3878:140:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2221,
                              "nodeType": "ExpressionStatement",
                              "src": "3878:140:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2225,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "4072:3:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 2226,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4076:6:11",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "4072:10:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 2229,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "4092:4:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ZaaNetNetwork_$2956",
                                                "typeString": "contract ZaaNetNetwork"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ZaaNetNetwork_$2956",
                                                "typeString": "contract ZaaNetNetwork"
                                              }
                                            ],
                                            "id": 2228,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4084:7:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 2227,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4084:7:11",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2230,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4084:13:11",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2223,
                                          "name": "usdt",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1985,
                                          "src": "4057:4:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$315",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2224,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4062:9:11",
                                        "memberName": "allowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 292,
                                        "src": "4057:14:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address,address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 2231,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4057:41:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 2232,
                                      "name": "hostingFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2190,
                                      "src": "4102:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4057:55:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e74205553445420616c6c6f77616e636520666f7220686f7374696e6720666565",
                                    "id": 2234,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4130:45:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a85400417151a9b436c88d846c45d73fb146e17d2058a73e51fe43ea9619122e",
                                      "typeString": "literal_string \"Insufficient USDT allowance for hosting fee\""
                                    },
                                    "value": "Insufficient USDT allowance for hosting fee"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a85400417151a9b436c88d846c45d73fb146e17d2058a73e51fe43ea9619122e",
                                      "typeString": "literal_string \"Insufficient USDT allowance for hosting fee\""
                                    }
                                  ],
                                  "id": 2222,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4032:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4032:157:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2236,
                              "nodeType": "ExpressionStatement",
                              "src": "4032:157:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2240,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4274:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4278:6:11",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4274:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2242,
                                    "name": "treasuryAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2196,
                                    "src": "4286:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2243,
                                    "name": "hostingFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2190,
                                    "src": "4303:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2237,
                                    "name": "usdt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1985,
                                    "src": "4252:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4257:16:11",
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 387,
                                  "src": "4252:21:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 2244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4252:62:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2245,
                              "nodeType": "ExpressionStatement",
                              "src": "4252:62:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2249,
                                    "name": "hostingFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2190,
                                    "src": "4419:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2246,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1979,
                                    "src": "4380:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4396:22:11",
                                  "memberName": "increaseZaaNetEarnings",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3479,
                                  "src": "4380:38:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 2250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4380:50:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2251,
                              "nodeType": "ExpressionStatement",
                              "src": "4380:50:11"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2253,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4465:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2254,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4469:6:11",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4465:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2255,
                                    "name": "hostingFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2190,
                                    "src": "4477:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2256,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "4489:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2257,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4495:9:11",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "4489:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2252,
                                  "name": "HostingFeePaid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2038,
                                  "src": "4450:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 2258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4450:55:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2259,
                              "nodeType": "EmitStatement",
                              "src": "4445:60:11"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2263
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2263,
                            "mutability": "mutable",
                            "name": "networkId",
                            "nameLocation": "4575:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2341,
                            "src": "4567:17:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2262,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4567:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2267,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2264,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "4587:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4603:18:11",
                            "memberName": "incrementNetworkId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3167,
                            "src": "4587:34:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 2266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4587:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4567:56:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2271,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2263,
                              "src": "4723:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2274,
                                  "name": "networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2263,
                                  "src": "4790:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2275,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4830:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4834:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4830:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2277,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2135,
                                  "src": "4875:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2278,
                                  "name": "_mongoDataId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2137,
                                  "src": "4922:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 2279,
                                  "name": "_isActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2139,
                                  "src": "4962:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2280,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5000:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5006:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5000:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2282,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5044:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5050:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5044:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2272,
                                  "name": "ZaaNetStorage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3526,
                                  "src": "4746:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3526_$",
                                    "typeString": "type(contract ZaaNetStorage)"
                                  }
                                },
                                "id": 2273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4760:7:11",
                                "memberName": "Network",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2979,
                                "src": "4746:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Network_$2979_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetStorage.Network storage pointer)"
                                }
                              },
                              "id": 2284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "4786:2:11",
                                "4817:11:11",
                                "4858:15:11",
                                "4909:11:11",
                                "4952:8:11",
                                "4989:9:11",
                                "5033:9:11"
                              ],
                              "names": [
                                "id",
                                "hostAddress",
                                "pricePerSession",
                                "mongoDataId",
                                "isActive",
                                "createdAt",
                                "updatedAt"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4746:328:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            ],
                            "expression": {
                              "id": 2268,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "4683:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4699:10:11",
                            "memberName": "setNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3282,
                            "src": "4683:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Network_$2979_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct ZaaNetStorage.Network memory) external"
                            }
                          },
                          "id": 2285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4683:401:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2286,
                        "nodeType": "ExpressionStatement",
                        "src": "4683:401:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2292,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2263,
                              "src": "5125:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2287,
                                "name": "hostNetworks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2003,
                                "src": "5095:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 2290,
                              "indexExpression": {
                                "expression": {
                                  "id": 2288,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5108:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5112:6:11",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5108:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5095:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5120:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5095:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 2293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5095:40:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2294,
                        "nodeType": "ExpressionStatement",
                        "src": "5095:40:11"
                      },
                      {
                        "expression": {
                          "id": 2300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2295,
                              "name": "networkToHost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2007,
                              "src": "5145:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 2297,
                            "indexExpression": {
                              "id": 2296,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2263,
                              "src": "5159:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5145:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2298,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5172:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5176:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5172:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5145:37:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2301,
                        "nodeType": "ExpressionStatement",
                        "src": "5145:37:11"
                      },
                      {
                        "expression": {
                          "id": 2308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2302,
                              "name": "lastRegistrationTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2011,
                              "src": "5192:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2305,
                            "indexExpression": {
                              "expression": {
                                "id": 2303,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5213:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5217:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5213:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5192:32:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2306,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5227:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5233:9:11",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5227:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5192:50:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2309,
                        "nodeType": "ExpressionStatement",
                        "src": "5192:50:11"
                      },
                      {
                        "condition": {
                          "id": 2314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5257:19:11",
                          "subExpression": {
                            "baseExpression": {
                              "id": 2310,
                              "name": "isHost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1998,
                              "src": "5258:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2313,
                            "indexExpression": {
                              "expression": {
                                "id": 2311,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5265:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5269:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5265:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5258:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2328,
                        "nodeType": "IfStatement",
                        "src": "5253:115:11",
                        "trueBody": {
                          "id": 2327,
                          "nodeType": "Block",
                          "src": "5278:90:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 2320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2315,
                                    "name": "isHost",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1998,
                                    "src": "5292:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 2318,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2316,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5299:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2317,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5303:6:11",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5299:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5292:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5313:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5292:25:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2321,
                              "nodeType": "ExpressionStatement",
                              "src": "5292:25:11"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2323,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5346:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5350:6:11",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5346:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2322,
                                  "name": "HostAdded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2070,
                                  "src": "5336:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 2325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5336:21:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2326,
                              "nodeType": "EmitStatement",
                              "src": "5331:26:11"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2330,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2263,
                              "src": "5469:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2331,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5492:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5496:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5492:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2333,
                              "name": "_mongoDataId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2137,
                              "src": "5516:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 2334,
                              "name": "_pricePerSession",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2135,
                              "src": "5542:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2335,
                              "name": "_isActive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2139,
                              "src": "5572:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 2336,
                              "name": "hostingFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2190,
                              "src": "5595:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2337,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5619:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5625:9:11",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5619:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2329,
                            "name": "NetworkRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2030,
                            "src": "5438:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,string memory,uint256,bool,uint256,uint256)"
                            }
                          },
                          "id": 2339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5438:206:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2340,
                        "nodeType": "EmitStatement",
                        "src": "5433:211:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2133,
                    "nodeType": "StructuredDocumentation",
                    "src": "2803:71:11",
                    "text": "@notice Register a new network with mongoDataID and pay hosting fee"
                  },
                  "functionSelector": "900e41b1",
                  "id": 2342,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2142,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2141,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "3013:13:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 842,
                        "src": "3013:13:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3013:13:11"
                    },
                    {
                      "id": 2144,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2143,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "3027:12:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 950,
                        "src": "3027:12:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3027:12:11"
                    }
                  ],
                  "name": "registerNetwork",
                  "nameLocation": "2888:15:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2135,
                        "mutability": "mutable",
                        "name": "_pricePerSession",
                        "nameLocation": "2921:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2342,
                        "src": "2913:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2134,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2913:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2137,
                        "mutability": "mutable",
                        "name": "_mongoDataId",
                        "nameLocation": "2961:12:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2342,
                        "src": "2947:26:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2136,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2947:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2139,
                        "mutability": "mutable",
                        "name": "_isActive",
                        "nameLocation": "2988:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2342,
                        "src": "2983:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2138,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2983:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2903:100:11"
                  },
                  "returnParameters": {
                    "id": 2145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3040:0:11"
                  },
                  "scope": 2956,
                  "src": "2879:2772:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2443,
                    "nodeType": "Block",
                    "src": "5866:1460:11",
                    "statements": [
                      {
                        "assignments": [
                          2358
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2358,
                            "mutability": "mutable",
                            "name": "network",
                            "nameLocation": "5905:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2443,
                            "src": "5876:36:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            },
                            "typeName": {
                              "id": 2357,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2356,
                                "name": "ZaaNetStorage.Network",
                                "nameLocations": [
                                  "5876:13:11",
                                  "5890:7:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2979,
                                "src": "5876:21:11"
                              },
                              "referencedDeclaration": 2979,
                              "src": "5876:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2363,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2361,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2345,
                              "src": "5955:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2359,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "5915:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5931:10:11",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3302,
                            "src": "5915:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$2979_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 2362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5915:60:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5876:99:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2365,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2358,
                                  "src": "5993:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2366,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6001:11:11",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2968,
                                "src": "5993:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2367,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2351,
                                "src": "6016:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5993:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920686f73742063616e20757064617465",
                              "id": 2369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6024:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc9bc8e6ce8339eecedb81ad5feb02e8994fb2c38504449806f1c2f5a392ba8c",
                                "typeString": "literal_string \"Only host can update\""
                              },
                              "value": "Only host can update"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc9bc8e6ce8339eecedb81ad5feb02e8994fb2c38504449806f1c2f5a392ba8c",
                                "typeString": "literal_string \"Only host can update\""
                              }
                            ],
                            "id": 2364,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5985:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5985:62:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2371,
                        "nodeType": "ExpressionStatement",
                        "src": "5985:62:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2373,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2347,
                                  "src": "6078:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 2374,
                                  "name": "MIN_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1988,
                                  "src": "6098:21:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6078:41:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2376,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2347,
                                  "src": "6139:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2377,
                                  "name": "MAX_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1991,
                                  "src": "6159:21:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6139:41:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6078:102:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206f7574206f6620616c6c6f7765642072616e6765",
                              "id": 2380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6194:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              },
                              "value": "Price out of allowed range"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              }
                            ],
                            "id": 2372,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6057:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6057:175:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2382,
                        "nodeType": "ExpressionStatement",
                        "src": "6057:175:11"
                      },
                      {
                        "assignments": [
                          2384
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2384,
                            "mutability": "mutable",
                            "name": "oldPrice",
                            "nameLocation": "6290:8:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2443,
                            "src": "6282:16:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2383,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6282:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2387,
                        "initialValue": {
                          "expression": {
                            "id": 2385,
                            "name": "network",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2358,
                            "src": "6301:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network memory"
                            }
                          },
                          "id": 2386,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6309:15:11",
                          "memberName": "pricePerSession",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2970,
                          "src": "6301:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6282:42:11"
                      },
                      {
                        "assignments": [
                          2389
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2389,
                            "mutability": "mutable",
                            "name": "oldStatus",
                            "nameLocation": "6339:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2443,
                            "src": "6334:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2388,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6334:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2392,
                        "initialValue": {
                          "expression": {
                            "id": 2390,
                            "name": "network",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2358,
                            "src": "6351:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network memory"
                            }
                          },
                          "id": 2391,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6359:8:11",
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2974,
                          "src": "6351:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6334:33:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2396,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2345,
                              "src": "6418:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2399,
                                  "name": "_networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2345,
                                  "src": "6486:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2400,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2351,
                                  "src": "6527:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2401,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2347,
                                  "src": "6568:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2402,
                                    "name": "network",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2358,
                                    "src": "6615:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory"
                                    }
                                  },
                                  "id": 2403,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6623:11:11",
                                  "memberName": "mongoDataId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2972,
                                  "src": "6615:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 2404,
                                  "name": "_isActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2349,
                                  "src": "6688:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2405,
                                    "name": "network",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2358,
                                    "src": "6726:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory"
                                    }
                                  },
                                  "id": 2406,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6734:9:11",
                                  "memberName": "createdAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2976,
                                  "src": "6726:17:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2407,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6803:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2408,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6809:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6803:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2397,
                                  "name": "ZaaNetStorage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3526,
                                  "src": "6442:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3526_$",
                                    "typeString": "type(contract ZaaNetStorage)"
                                  }
                                },
                                "id": 2398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6456:7:11",
                                "memberName": "Network",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2979,
                                "src": "6442:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Network_$2979_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetStorage.Network storage pointer)"
                                }
                              },
                              "id": 2409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "6482:2:11",
                                "6514:11:11",
                                "6551:15:11",
                                "6602:11:11",
                                "6678:8:11",
                                "6715:9:11",
                                "6792:9:11"
                              ],
                              "names": [
                                "id",
                                "hostAddress",
                                "pricePerSession",
                                "mongoDataId",
                                "isActive",
                                "createdAt",
                                "updatedAt"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "6442:391:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            ],
                            "expression": {
                              "id": 2393,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "6378:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6394:10:11",
                            "memberName": "setNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3282,
                            "src": "6378:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Network_$2979_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct ZaaNetStorage.Network memory) external"
                            }
                          },
                          "id": 2410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6378:465:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2411,
                        "nodeType": "ExpressionStatement",
                        "src": "6378:465:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2412,
                            "name": "oldPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2384,
                            "src": "6910:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2413,
                            "name": "_pricePerSession",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2347,
                            "src": "6922:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6910:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2422,
                        "nodeType": "IfStatement",
                        "src": "6906:123:11",
                        "trueBody": {
                          "id": 2421,
                          "nodeType": "Block",
                          "src": "6940:89:11",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2416,
                                    "name": "_networkId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2345,
                                    "src": "6979:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2417,
                                    "name": "oldPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2384,
                                    "src": "6991:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2418,
                                    "name": "_pricePerSession",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2347,
                                    "src": "7001:16:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2415,
                                  "name": "NetworkPriceUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2058,
                                  "src": "6959:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256)"
                                  }
                                },
                                "id": 2419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6959:59:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2420,
                              "nodeType": "EmitStatement",
                              "src": "6954:64:11"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2423,
                            "name": "oldStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2389,
                            "src": "7042:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2424,
                            "name": "_isActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2349,
                            "src": "7055:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7042:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2433,
                        "nodeType": "IfStatement",
                        "src": "7038:112:11",
                        "trueBody": {
                          "id": 2432,
                          "nodeType": "Block",
                          "src": "7066:84:11",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2427,
                                    "name": "_networkId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2345,
                                    "src": "7106:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2428,
                                    "name": "oldStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2389,
                                    "src": "7118:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "id": 2429,
                                    "name": "_isActive",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2349,
                                    "src": "7129:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 2426,
                                  "name": "NetworkStatusChanged",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2066,
                                  "src": "7085:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_bool_$returns$__$",
                                    "typeString": "function (uint256,bool,bool)"
                                  }
                                },
                                "id": 2430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7085:54:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2431,
                              "nodeType": "EmitStatement",
                              "src": "7080:59:11"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2435,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2345,
                              "src": "7193:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2436,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2351,
                              "src": "7217:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2437,
                              "name": "_pricePerSession",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2347,
                              "src": "7237:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2438,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2358,
                                "src": "7267:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2439,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7275:11:11",
                              "memberName": "mongoDataId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2972,
                              "src": "7267:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 2440,
                              "name": "_isActive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2349,
                              "src": "7300:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2434,
                            "name": "NetworkUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "7165:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,address,uint256,string memory,bool)"
                            }
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7165:154:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2442,
                        "nodeType": "EmitStatement",
                        "src": "7160:159:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2343,
                    "nodeType": "StructuredDocumentation",
                    "src": "5657:55:11",
                    "text": "@notice Internal function to update network details"
                  },
                  "id": 2444,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_updateNetwork",
                  "nameLocation": "5726:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2345,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "5758:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2444,
                        "src": "5750:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2344,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5750:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2347,
                        "mutability": "mutable",
                        "name": "_pricePerSession",
                        "nameLocation": "5786:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2444,
                        "src": "5778:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2346,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5778:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2349,
                        "mutability": "mutable",
                        "name": "_isActive",
                        "nameLocation": "5817:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2444,
                        "src": "5812:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2348,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5812:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2351,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5844:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2444,
                        "src": "5836:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2350,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5836:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5740:116:11"
                  },
                  "returnParameters": {
                    "id": 2353,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5866:0:11"
                  },
                  "scope": 2956,
                  "src": "5717:1609:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2466,
                    "nodeType": "Block",
                    "src": "7540:84:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2459,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2447,
                              "src": "7565:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2460,
                              "name": "_pricePerSession",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2449,
                              "src": "7577:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2461,
                              "name": "_isActive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2451,
                              "src": "7595:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2462,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7606:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7610:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7606:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2458,
                            "name": "_updateNetwork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2444,
                            "src": "7550:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,bool,address)"
                            }
                          },
                          "id": 2464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7550:67:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2465,
                        "nodeType": "ExpressionStatement",
                        "src": "7550:67:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2445,
                    "nodeType": "StructuredDocumentation",
                    "src": "7332:52:11",
                    "text": "@notice Update existing network with new details"
                  },
                  "functionSelector": "1b63fe67",
                  "id": 2467,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2454,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2453,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "7513:13:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 842,
                        "src": "7513:13:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7513:13:11"
                    },
                    {
                      "id": 2456,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2455,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "7527:12:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 950,
                        "src": "7527:12:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7527:12:11"
                    }
                  ],
                  "name": "updateNetwork",
                  "nameLocation": "7398:13:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2447,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "7429:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2467,
                        "src": "7421:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2446,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7421:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2449,
                        "mutability": "mutable",
                        "name": "_pricePerSession",
                        "nameLocation": "7457:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2467,
                        "src": "7449:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2448,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7449:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2451,
                        "mutability": "mutable",
                        "name": "_isActive",
                        "nameLocation": "7488:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2467,
                        "src": "7483:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2450,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7483:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7411:92:11"
                  },
                  "returnParameters": {
                    "id": 2457,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7540:0:11"
                  },
                  "scope": 2956,
                  "src": "7389:235:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2509,
                    "nodeType": "Block",
                    "src": "7751:340:11",
                    "statements": [
                      {
                        "assignments": [
                          2479
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2479,
                            "mutability": "mutable",
                            "name": "network",
                            "nameLocation": "7790:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2509,
                            "src": "7761:36:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            },
                            "typeName": {
                              "id": 2478,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2477,
                                "name": "ZaaNetStorage.Network",
                                "nameLocations": [
                                  "7761:13:11",
                                  "7775:7:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2979,
                                "src": "7761:21:11"
                              },
                              "referencedDeclaration": 2979,
                              "src": "7761:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2484,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2482,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2470,
                              "src": "7840:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2480,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "7800:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7816:10:11",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3302,
                            "src": "7800:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$2979_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 2483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7800:60:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7761:99:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2486,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2479,
                                  "src": "7878:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2487,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7886:11:11",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2968,
                                "src": "7878:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2488,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7901:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7905:6:11",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7901:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7878:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920686f73742063616e2064656163746976617465",
                              "id": 2491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7913:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2336c29a223fb08cb5cc0d43975e601887f454478cfb59ae5ff308746390bb36",
                                "typeString": "literal_string \"Only host can deactivate\""
                              },
                              "value": "Only host can deactivate"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2336c29a223fb08cb5cc0d43975e601887f454478cfb59ae5ff308746390bb36",
                                "typeString": "literal_string \"Only host can deactivate\""
                              }
                            ],
                            "id": 2485,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7870:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7870:70:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2493,
                        "nodeType": "ExpressionStatement",
                        "src": "7870:70:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2495,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2479,
                                "src": "7958:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2496,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7966:8:11",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2974,
                              "src": "7958:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20616c726561647920696e616374697665",
                              "id": 2497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7976:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3414eedb2ccbca8bce504953e4d1eced8c7392291620164aa9c8b9c994f60537",
                                "typeString": "literal_string \"Network already inactive\""
                              },
                              "value": "Network already inactive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3414eedb2ccbca8bce504953e4d1eced8c7392291620164aa9c8b9c994f60537",
                                "typeString": "literal_string \"Network already inactive\""
                              }
                            ],
                            "id": 2494,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7950:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7950:53:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2499,
                        "nodeType": "ExpressionStatement",
                        "src": "7950:53:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2501,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2470,
                              "src": "8029:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2502,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2479,
                                "src": "8041:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2503,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8049:15:11",
                              "memberName": "pricePerSession",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2970,
                              "src": "8041:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 2504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8066:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "expression": {
                                "id": 2505,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8073:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8077:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8073:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2500,
                            "name": "_updateNetwork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2444,
                            "src": "8014:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,bool,address)"
                            }
                          },
                          "id": 2507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8014:70:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2508,
                        "nodeType": "ExpressionStatement",
                        "src": "8014:70:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2468,
                    "nodeType": "StructuredDocumentation",
                    "src": "7630:46:11",
                    "text": "@notice Deactivate a network (soft delete)"
                  },
                  "functionSelector": "4b9791e8",
                  "id": 2510,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2473,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2472,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "7737:13:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 842,
                        "src": "7737:13:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7737:13:11"
                    }
                  ],
                  "name": "deactivateNetwork",
                  "nameLocation": "7690:17:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2470,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "7716:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2510,
                        "src": "7708:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2469,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7708:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7707:20:11"
                  },
                  "returnParameters": {
                    "id": 2474,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7751:0:11"
                  },
                  "scope": 2956,
                  "src": "7681:410:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2524,
                    "nodeType": "Block",
                    "src": "8268:62:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2521,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2513,
                              "src": "8312:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2519,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "8285:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8301:10:11",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3302,
                            "src": "8285:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$2979_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 2522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8285:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "functionReturnParameters": 2518,
                        "id": 2523,
                        "nodeType": "Return",
                        "src": "8278:45:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2511,
                    "nodeType": "StructuredDocumentation",
                    "src": "8097:49:11",
                    "text": "@notice Get full network details from storage"
                  },
                  "functionSelector": "cd83fb9a",
                  "id": 2525,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostedNetworkById",
                  "nameLocation": "8160:20:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2513,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "8198:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2525,
                        "src": "8190:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2512,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8190:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8180:34:11"
                  },
                  "returnParameters": {
                    "id": 2518,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2517,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2525,
                        "src": "8238:28:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 2516,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2515,
                            "name": "ZaaNetStorage.Network",
                            "nameLocations": [
                              "8238:13:11",
                              "8252:7:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2979,
                            "src": "8238:21:11"
                          },
                          "referencedDeclaration": 2979,
                          "src": "8238:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8237:30:11"
                  },
                  "scope": 2956,
                  "src": "8151:179:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2538,
                    "nodeType": "Block",
                    "src": "8494:49:11",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2534,
                            "name": "hostNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2003,
                            "src": "8511:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 2536,
                          "indexExpression": {
                            "id": 2535,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2528,
                            "src": "8524:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8511:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 2533,
                        "id": 2537,
                        "nodeType": "Return",
                        "src": "8504:32:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2526,
                    "nodeType": "StructuredDocumentation",
                    "src": "8336:52:11",
                    "text": "@notice Get all network IDs registered by a host"
                  },
                  "functionSelector": "79f0dc57",
                  "id": 2539,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostNetworks",
                  "nameLocation": "8402:15:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2529,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2528,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "8435:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2539,
                        "src": "8427:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2527,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8427:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8417:35:11"
                  },
                  "returnParameters": {
                    "id": 2533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2532,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2539,
                        "src": "8476:16:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2530,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8476:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2531,
                          "nodeType": "ArrayTypeName",
                          "src": "8476:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8475:18:11"
                  },
                  "scope": 2956,
                  "src": "8393:150:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2651,
                    "nodeType": "Block",
                    "src": "8717:959:11",
                    "statements": [
                      {
                        "assignments": [
                          2553
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2553,
                            "mutability": "mutable",
                            "name": "networkIds",
                            "nameLocation": "8744:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2651,
                            "src": "8727:27:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2551,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8727:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2552,
                              "nodeType": "ArrayTypeName",
                              "src": "8727:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2557,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2554,
                            "name": "hostNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2003,
                            "src": "8757:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 2556,
                          "indexExpression": {
                            "id": 2555,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2542,
                            "src": "8770:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8757:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8727:55:11"
                      },
                      {
                        "assignments": [
                          2559
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2559,
                            "mutability": "mutable",
                            "name": "activeCount",
                            "nameLocation": "8800:11:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2651,
                            "src": "8792:19:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2558,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8792:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2561,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8814:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8792:23:11"
                      },
                      {
                        "body": {
                          "id": 2592,
                          "nodeType": "Block",
                          "src": "8919:216:11",
                          "statements": [
                            {
                              "assignments": [
                                2577
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2577,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "8962:7:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2592,
                                  "src": "8933:36:11",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 2576,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2575,
                                      "name": "ZaaNetStorage.Network",
                                      "nameLocations": [
                                        "8933:13:11",
                                        "8947:7:11"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 2979,
                                      "src": "8933:21:11"
                                    },
                                    "referencedDeclaration": 2979,
                                    "src": "8933:21:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                      "typeString": "struct ZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2584,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2580,
                                      "name": "networkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2553,
                                      "src": "9016:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2582,
                                    "indexExpression": {
                                      "id": 2581,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2563,
                                      "src": "9027:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9016:13:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2578,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1979,
                                    "src": "8972:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8988:10:11",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3302,
                                  "src": "8972:26:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$2979_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 2583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8972:71:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8933:110:11"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "id": 2585,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2577,
                                  "src": "9061:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2586,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9069:8:11",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2974,
                                "src": "9061:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2591,
                              "nodeType": "IfStatement",
                              "src": "9057:68:11",
                              "trueBody": {
                                "id": 2590,
                                "nodeType": "Block",
                                "src": "9079:46:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2588,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "9097:13:11",
                                      "subExpression": {
                                        "id": 2587,
                                        "name": "activeCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2559,
                                        "src": "9097:11:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2589,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9097:13:11"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2566,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2563,
                            "src": "8891:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2567,
                              "name": "networkIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2553,
                              "src": "8895:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8906:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8895:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8891:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2593,
                        "initializationExpression": {
                          "assignments": [
                            2563
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2563,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8884:1:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2593,
                              "src": "8876:9:11",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2562,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8876:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2565,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8888:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8876:13:11"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8914:3:11",
                            "subExpression": {
                              "id": 2570,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2563,
                              "src": "8914:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2572,
                          "nodeType": "ExpressionStatement",
                          "src": "8914:3:11"
                        },
                        "nodeType": "ForStatement",
                        "src": "8871:264:11"
                      },
                      {
                        "assignments": [
                          2599
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2599,
                            "mutability": "mutable",
                            "name": "activeNetworks",
                            "nameLocation": "9237:14:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2651,
                            "src": "9194:57:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2597,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2596,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "9194:13:11",
                                    "9208:7:11"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2979,
                                  "src": "9194:21:11"
                                },
                                "referencedDeclaration": 2979,
                                "src": "9194:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2598,
                              "nodeType": "ArrayTypeName",
                              "src": "9194:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2606,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2604,
                              "name": "activeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2559,
                              "src": "9282:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9254:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2601,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2600,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "9258:13:11",
                                    "9272:7:11"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2979,
                                  "src": "9258:21:11"
                                },
                                "referencedDeclaration": 2979,
                                "src": "9258:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2602,
                              "nodeType": "ArrayTypeName",
                              "src": "9258:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            }
                          },
                          "id": 2605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9254:40:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9194:100:11"
                      },
                      {
                        "assignments": [
                          2608
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2608,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "9312:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2651,
                            "src": "9304:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2607,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9304:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2610,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9320:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9304:17:11"
                      },
                      {
                        "body": {
                          "id": 2647,
                          "nodeType": "Block",
                          "src": "9379:259:11",
                          "statements": [
                            {
                              "assignments": [
                                2626
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2626,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "9422:7:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2647,
                                  "src": "9393:36:11",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 2625,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2624,
                                      "name": "ZaaNetStorage.Network",
                                      "nameLocations": [
                                        "9393:13:11",
                                        "9407:7:11"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 2979,
                                      "src": "9393:21:11"
                                    },
                                    "referencedDeclaration": 2979,
                                    "src": "9393:21:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                      "typeString": "struct ZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2633,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2629,
                                      "name": "networkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2553,
                                      "src": "9476:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2631,
                                    "indexExpression": {
                                      "id": 2630,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2612,
                                      "src": "9487:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9476:13:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2627,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1979,
                                    "src": "9432:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9448:10:11",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3302,
                                  "src": "9432:26:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$2979_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 2632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9432:71:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9393:110:11"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "id": 2634,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2626,
                                  "src": "9521:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2635,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9529:8:11",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2974,
                                "src": "9521:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2646,
                              "nodeType": "IfStatement",
                              "src": "9517:111:11",
                              "trueBody": {
                                "id": 2645,
                                "nodeType": "Block",
                                "src": "9539:89:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2640,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2636,
                                          "name": "activeNetworks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2599,
                                          "src": "9557:14:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                          }
                                        },
                                        "id": 2638,
                                        "indexExpression": {
                                          "id": 2637,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2608,
                                          "src": "9572:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "9557:21:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2639,
                                        "name": "network",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2626,
                                        "src": "9581:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "src": "9557:31:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                        "typeString": "struct ZaaNetStorage.Network memory"
                                      }
                                    },
                                    "id": 2641,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9557:31:11"
                                  },
                                  {
                                    "expression": {
                                      "id": 2643,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "9606:7:11",
                                      "subExpression": {
                                        "id": 2642,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2608,
                                        "src": "9606:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2644,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9606:7:11"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2615,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2612,
                            "src": "9351:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2616,
                              "name": "networkIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2553,
                              "src": "9355:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9366:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9355:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9351:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2648,
                        "initializationExpression": {
                          "assignments": [
                            2612
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2612,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9344:1:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2648,
                              "src": "9336:9:11",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2611,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9336:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2614,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9348:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9336:13:11"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9374:3:11",
                            "subExpression": {
                              "id": 2619,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2612,
                              "src": "9374:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2621,
                          "nodeType": "ExpressionStatement",
                          "src": "9374:3:11"
                        },
                        "nodeType": "ForStatement",
                        "src": "9331:307:11"
                      },
                      {
                        "expression": {
                          "id": 2649,
                          "name": "activeNetworks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2599,
                          "src": "9655:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2548,
                        "id": 2650,
                        "nodeType": "Return",
                        "src": "9648:21:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2540,
                    "nodeType": "StructuredDocumentation",
                    "src": "8549:42:11",
                    "text": "@notice Get active networks for a host"
                  },
                  "functionSelector": "2b2a748c",
                  "id": 2652,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getActiveHostNetworks",
                  "nameLocation": "8605:21:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2542,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "8644:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2652,
                        "src": "8636:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2541,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8636:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8626:35:11"
                  },
                  "returnParameters": {
                    "id": 2548,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2547,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2652,
                        "src": "8685:30:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2545,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2544,
                              "name": "ZaaNetStorage.Network",
                              "nameLocations": [
                                "8685:13:11",
                                "8699:7:11"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2979,
                              "src": "8685:21:11"
                            },
                            "referencedDeclaration": 2979,
                            "src": "8685:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 2546,
                          "nodeType": "ArrayTypeName",
                          "src": "8685:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8684:32:11"
                  },
                  "scope": 2956,
                  "src": "8596:1080:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2664,
                    "nodeType": "Block",
                    "src": "9846:43:11",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2660,
                            "name": "isHost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1998,
                            "src": "9863:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2662,
                          "indexExpression": {
                            "id": 2661,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2655,
                            "src": "9870:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9863:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2659,
                        "id": 2663,
                        "nodeType": "Return",
                        "src": "9856:26:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2653,
                    "nodeType": "StructuredDocumentation",
                    "src": "9682:69:11",
                    "text": "@notice Public method to check if an address is a registered host"
                  },
                  "functionSelector": "867f1a09",
                  "id": 2665,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isRegisteredHost",
                  "nameLocation": "9765:16:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2656,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2655,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "9799:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2665,
                        "src": "9791:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2654,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9791:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9781:35:11"
                  },
                  "returnParameters": {
                    "id": 2659,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2658,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2665,
                        "src": "9840:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2657,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9840:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9839:6:11"
                  },
                  "scope": 2956,
                  "src": "9756:133:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2732,
                    "nodeType": "Block",
                    "src": "10155:510:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 2682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2677,
                            "name": "totalNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2671,
                            "src": "10165:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2678,
                                "name": "hostNetworks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2003,
                                "src": "10181:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 2680,
                              "indexExpression": {
                                "id": 2679,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2668,
                                "src": "10194:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10181:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10207:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10181:32:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10165:48:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2683,
                        "nodeType": "ExpressionStatement",
                        "src": "10165:48:11"
                      },
                      {
                        "expression": {
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2684,
                            "name": "totalEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2675,
                            "src": "10223:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2687,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2668,
                                "src": "10271:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 2685,
                                "name": "storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1979,
                                "src": "10239:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                  "typeString": "contract ZaaNetStorage"
                                }
                              },
                              "id": 2686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10255:15:11",
                              "memberName": "getHostEarnings",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3458,
                              "src": "10239:31:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 2688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10239:44:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10223:60:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2690,
                        "nodeType": "ExpressionStatement",
                        "src": "10223:60:11"
                      },
                      {
                        "assignments": [
                          2695
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2695,
                            "mutability": "mutable",
                            "name": "networkIds",
                            "nameLocation": "10344:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2732,
                            "src": "10327:27:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2693,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10327:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2694,
                              "nodeType": "ArrayTypeName",
                              "src": "10327:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2699,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2696,
                            "name": "hostNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2003,
                            "src": "10357:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 2698,
                          "indexExpression": {
                            "id": 2697,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2668,
                            "src": "10370:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10357:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10327:55:11"
                      },
                      {
                        "body": {
                          "id": 2730,
                          "nodeType": "Block",
                          "src": "10440:219:11",
                          "statements": [
                            {
                              "assignments": [
                                2715
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2715,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "10483:7:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2730,
                                  "src": "10454:36:11",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 2714,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2713,
                                      "name": "ZaaNetStorage.Network",
                                      "nameLocations": [
                                        "10454:13:11",
                                        "10468:7:11"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 2979,
                                      "src": "10454:21:11"
                                    },
                                    "referencedDeclaration": 2979,
                                    "src": "10454:21:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                      "typeString": "struct ZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2722,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2718,
                                      "name": "networkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2695,
                                      "src": "10537:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2720,
                                    "indexExpression": {
                                      "id": 2719,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2701,
                                      "src": "10548:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10537:13:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2716,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1979,
                                    "src": "10493:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10509:10:11",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3302,
                                  "src": "10493:26:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$2979_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 2721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10493:71:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10454:110:11"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "id": 2723,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2715,
                                  "src": "10582:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2724,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10590:8:11",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2974,
                                "src": "10582:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2729,
                              "nodeType": "IfStatement",
                              "src": "10578:71:11",
                              "trueBody": {
                                "id": 2728,
                                "nodeType": "Block",
                                "src": "10600:49:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "10618:16:11",
                                      "subExpression": {
                                        "id": 2725,
                                        "name": "activeNetworks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2673,
                                        "src": "10618:14:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2727,
                                    "nodeType": "ExpressionStatement",
                                    "src": "10618:16:11"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2704,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2701,
                            "src": "10412:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2705,
                              "name": "networkIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2695,
                              "src": "10416:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10427:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10416:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10412:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2731,
                        "initializationExpression": {
                          "assignments": [
                            2701
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2701,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "10405:1:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2731,
                              "src": "10397:9:11",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2700,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10397:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2703,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10409:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10397:13:11"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10435:3:11",
                            "subExpression": {
                              "id": 2708,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2701,
                              "src": "10435:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2710,
                          "nodeType": "ExpressionStatement",
                          "src": "10435:3:11"
                        },
                        "nodeType": "ForStatement",
                        "src": "10392:267:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2666,
                    "nodeType": "StructuredDocumentation",
                    "src": "9895:31:11",
                    "text": "@notice Get host statistics"
                  },
                  "functionSelector": "764ac734",
                  "id": 2733,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostStats",
                  "nameLocation": "9940:12:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2669,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2668,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "9970:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "9962:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9962:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9952:35:11"
                  },
                  "returnParameters": {
                    "id": 2676,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2671,
                        "mutability": "mutable",
                        "name": "totalNetworks",
                        "nameLocation": "10056:13:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "10048:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2670,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10048:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2673,
                        "mutability": "mutable",
                        "name": "activeNetworks",
                        "nameLocation": "10091:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "10083:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2672,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10083:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2675,
                        "mutability": "mutable",
                        "name": "totalEarnings",
                        "nameLocation": "10127:13:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "10119:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2674,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10119:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10034:116:11"
                  },
                  "scope": 2956,
                  "src": "9931:734:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2753,
                    "nodeType": "Block",
                    "src": "10932:75:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2749,
                              "name": "offset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2736,
                              "src": "10986:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2750,
                              "name": "limit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2738,
                              "src": "10994:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2747,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "10949:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10965:20:11",
                            "memberName": "getNetworksPaginated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3391,
                            "src": "10949:36:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view external returns (struct ZaaNetStorage.Network memory[] memory,uint256)"
                            }
                          },
                          "id": 2751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10949:51:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                          }
                        },
                        "functionReturnParameters": 2746,
                        "id": 2752,
                        "nodeType": "Return",
                        "src": "10942:58:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2734,
                    "nodeType": "StructuredDocumentation",
                    "src": "10671:61:11",
                    "text": "@notice Retrieve networks with pagination (gas-optimized)"
                  },
                  "functionSelector": "fa9c81a4",
                  "id": 2754,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetworksPaginated",
                  "nameLocation": "10746:20:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2739,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2736,
                        "mutability": "mutable",
                        "name": "offset",
                        "nameLocation": "10784:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2754,
                        "src": "10776:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2735,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10776:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2738,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "10808:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2754,
                        "src": "10800:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2737,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10800:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10766:53:11"
                  },
                  "returnParameters": {
                    "id": 2746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2743,
                        "mutability": "mutable",
                        "name": "networks",
                        "nameLocation": "10898:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2754,
                        "src": "10867:39:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2741,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2740,
                              "name": "ZaaNetStorage.Network",
                              "nameLocations": [
                                "10867:13:11",
                                "10881:7:11"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2979,
                              "src": "10867:21:11"
                            },
                            "referencedDeclaration": 2979,
                            "src": "10867:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 2742,
                          "nodeType": "ArrayTypeName",
                          "src": "10867:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2745,
                        "mutability": "mutable",
                        "name": "totalCount",
                        "nameLocation": "10916:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2754,
                        "src": "10908:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2744,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10908:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10866:61:11"
                  },
                  "scope": 2956,
                  "src": "10737:270:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2849,
                    "nodeType": "Block",
                    "src": "11200:803:11",
                    "statements": [
                      {
                        "assignments": [
                          2767,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2767,
                            "mutability": "mutable",
                            "name": "allNetworks",
                            "nameLocation": "11242:11:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2849,
                            "src": "11211:42:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2765,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2764,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "11211:13:11",
                                    "11225:7:11"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2979,
                                  "src": "11211:21:11"
                                },
                                "referencedDeclaration": 2979,
                                "src": "11211:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2766,
                              "nodeType": "ArrayTypeName",
                              "src": "11211:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2773,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11309:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "313030",
                              "id": 2771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11312:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "expression": {
                              "id": 2768,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "11259:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11288:20:11",
                            "memberName": "getNetworksPaginated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3391,
                            "src": "11259:49:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view external returns (struct ZaaNetStorage.Network memory[] memory,uint256)"
                            }
                          },
                          "id": 2772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11259:57:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11210:106:11"
                      },
                      {
                        "assignments": [
                          2775
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2775,
                            "mutability": "mutable",
                            "name": "activeCount",
                            "nameLocation": "11334:11:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2849,
                            "src": "11326:19:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2774,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11326:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2777,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11348:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11326:23:11"
                      },
                      {
                        "body": {
                          "id": 2798,
                          "nodeType": "Block",
                          "src": "11448:99:11",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2789,
                                    "name": "allNetworks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2767,
                                    "src": "11466:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  "id": 2791,
                                  "indexExpression": {
                                    "id": 2790,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2779,
                                    "src": "11478:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11466:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2792,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11481:8:11",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2974,
                                "src": "11466:23:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2797,
                              "nodeType": "IfStatement",
                              "src": "11462:75:11",
                              "trueBody": {
                                "id": 2796,
                                "nodeType": "Block",
                                "src": "11491:46:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "11509:13:11",
                                      "subExpression": {
                                        "id": 2793,
                                        "name": "activeCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2775,
                                        "src": "11509:11:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2795,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11509:13:11"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2782,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2779,
                            "src": "11419:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2783,
                              "name": "allNetworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2767,
                              "src": "11423:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory[] memory"
                              }
                            },
                            "id": 2784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11435:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11423:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11419:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2799,
                        "initializationExpression": {
                          "assignments": [
                            2779
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2779,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11412:1:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2799,
                              "src": "11404:9:11",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2778,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11404:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2781,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11416:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11404:13:11"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "11443:3:11",
                            "subExpression": {
                              "id": 2786,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "11443:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2788,
                          "nodeType": "ExpressionStatement",
                          "src": "11443:3:11"
                        },
                        "nodeType": "ForStatement",
                        "src": "11399:148:11"
                      },
                      {
                        "assignments": [
                          2805
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2805,
                            "mutability": "mutable",
                            "name": "activeNetworks",
                            "nameLocation": "11673:14:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2849,
                            "src": "11630:57:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2803,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2802,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "11630:13:11",
                                    "11644:7:11"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2979,
                                  "src": "11630:21:11"
                                },
                                "referencedDeclaration": 2979,
                                "src": "11630:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2804,
                              "nodeType": "ArrayTypeName",
                              "src": "11630:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2812,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2810,
                              "name": "activeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2775,
                              "src": "11718:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "11690:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2807,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2806,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "11694:13:11",
                                    "11708:7:11"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2979,
                                  "src": "11694:21:11"
                                },
                                "referencedDeclaration": 2979,
                                "src": "11694:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2808,
                              "nodeType": "ArrayTypeName",
                              "src": "11694:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            }
                          },
                          "id": 2811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11690:40:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11630:100:11"
                      },
                      {
                        "assignments": [
                          2814
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2814,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "11748:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2849,
                            "src": "11740:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2813,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11740:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2816,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11756:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11740:17:11"
                      },
                      {
                        "body": {
                          "id": 2845,
                          "nodeType": "Block",
                          "src": "11816:149:11",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2828,
                                    "name": "allNetworks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2767,
                                    "src": "11834:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  "id": 2830,
                                  "indexExpression": {
                                    "id": 2829,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2818,
                                    "src": "11846:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11834:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2831,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11849:8:11",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2974,
                                "src": "11834:23:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2844,
                              "nodeType": "IfStatement",
                              "src": "11830:125:11",
                              "trueBody": {
                                "id": 2843,
                                "nodeType": "Block",
                                "src": "11859:96:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2838,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2832,
                                          "name": "activeNetworks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2805,
                                          "src": "11877:14:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                          }
                                        },
                                        "id": 2834,
                                        "indexExpression": {
                                          "id": 2833,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2814,
                                          "src": "11892:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "11877:21:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 2835,
                                          "name": "allNetworks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2767,
                                          "src": "11901:11:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                          }
                                        },
                                        "id": 2837,
                                        "indexExpression": {
                                          "id": 2836,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2818,
                                          "src": "11913:1:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "11901:14:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "src": "11877:38:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                        "typeString": "struct ZaaNetStorage.Network memory"
                                      }
                                    },
                                    "id": 2839,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11877:38:11"
                                  },
                                  {
                                    "expression": {
                                      "id": 2841,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "11933:7:11",
                                      "subExpression": {
                                        "id": 2840,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2814,
                                        "src": "11933:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2842,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11933:7:11"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2821,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2818,
                            "src": "11787:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2822,
                              "name": "allNetworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2767,
                              "src": "11791:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory[] memory"
                              }
                            },
                            "id": 2823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11803:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11791:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11787:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2846,
                        "initializationExpression": {
                          "assignments": [
                            2818
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2818,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11780:1:11",
                              "nodeType": "VariableDeclaration",
                              "scope": 2846,
                              "src": "11772:9:11",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2817,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11772:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2820,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11784:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11772:13:11"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "11811:3:11",
                            "subExpression": {
                              "id": 2825,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2818,
                              "src": "11811:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2827,
                          "nodeType": "ExpressionStatement",
                          "src": "11811:3:11"
                        },
                        "nodeType": "ForStatement",
                        "src": "11767:198:11"
                      },
                      {
                        "expression": {
                          "id": 2847,
                          "name": "activeNetworks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "11982:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2761,
                        "id": 2848,
                        "nodeType": "Return",
                        "src": "11975:21:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2755,
                    "nodeType": "StructuredDocumentation",
                    "src": "11013:67:11",
                    "text": "@notice Get all active networks (limited to prevent gas issues)"
                  },
                  "functionSelector": "16cb6eff",
                  "id": 2850,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllActiveNetworks",
                  "nameLocation": "11094:20:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2756,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11114:2:11"
                  },
                  "returnParameters": {
                    "id": 2761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2760,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2850,
                        "src": "11164:30:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2758,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2757,
                              "name": "ZaaNetStorage.Network",
                              "nameLocations": [
                                "11164:13:11",
                                "11178:7:11"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2979,
                              "src": "11164:21:11"
                            },
                            "referencedDeclaration": 2979,
                            "src": "11164:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 2759,
                          "nodeType": "ArrayTypeName",
                          "src": "11164:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11163:32:11"
                  },
                  "scope": 2956,
                  "src": "11085:918:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2860,
                    "nodeType": "Block",
                    "src": "12113:50:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2856,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "12130:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 2857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12144:10:11",
                            "memberName": "hostingFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1960,
                            "src": "12130:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12130:26:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2855,
                        "id": 2859,
                        "nodeType": "Return",
                        "src": "12123:33:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2851,
                    "nodeType": "StructuredDocumentation",
                    "src": "12009:35:11",
                    "text": "@notice Get current hosting fee"
                  },
                  "functionSelector": "89ea28d9",
                  "id": 2861,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentHostingFee",
                  "nameLocation": "12058:20:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2852,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12078:2:11"
                  },
                  "returnParameters": {
                    "id": 2855,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2854,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2861,
                        "src": "12104:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2853,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12104:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12103:9:11"
                  },
                  "scope": 2956,
                  "src": "12049:114:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2871,
                    "nodeType": "Block",
                    "src": "12268:55:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2867,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "12285:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 2868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12299:15:11",
                            "memberName": "treasuryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1965,
                            "src": "12285:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12285:31:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2866,
                        "id": 2870,
                        "nodeType": "Return",
                        "src": "12278:38:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2862,
                    "nodeType": "StructuredDocumentation",
                    "src": "12169:32:11",
                    "text": "@notice Get treasury address"
                  },
                  "functionSelector": "e0024604",
                  "id": 2872,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTreasuryAddress",
                  "nameLocation": "12215:18:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2863,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12233:2:11"
                  },
                  "returnParameters": {
                    "id": 2866,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2865,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2872,
                        "src": "12259:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2864,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12259:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12258:9:11"
                  },
                  "scope": 2956,
                  "src": "12206:117:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2896,
                    "nodeType": "Block",
                    "src": "12492:140:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2881,
                                "name": "_newAdminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2875,
                                "src": "12510:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2884,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12539:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2883,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12531:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2882,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12531:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12531:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "12510:31:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646d696e20636f6e7472616374",
                              "id": 2887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12543:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d11132973dcd3e92a5086d2fabb209be9780a2534dd0d27f0920e3c0af86aa58",
                                "typeString": "literal_string \"Invalid admin contract\""
                              },
                              "value": "Invalid admin contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d11132973dcd3e92a5086d2fabb209be9780a2534dd0d27f0920e3c0af86aa58",
                                "typeString": "literal_string \"Invalid admin contract\""
                              }
                            ],
                            "id": 2880,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12502:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12502:66:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2889,
                        "nodeType": "ExpressionStatement",
                        "src": "12502:66:11"
                      },
                      {
                        "expression": {
                          "id": 2894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2890,
                            "name": "adminContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1982,
                            "src": "12578:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                              "typeString": "contract IZaaNetAdmin"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2892,
                                "name": "_newAdminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2875,
                                "src": "12607:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2891,
                              "name": "IZaaNetAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1966,
                              "src": "12594:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IZaaNetAdmin_$1966_$",
                                "typeString": "type(contract IZaaNetAdmin)"
                              }
                            },
                            "id": 2893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12594:31:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                              "typeString": "contract IZaaNetAdmin"
                            }
                          },
                          "src": "12578:47:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IZaaNetAdmin_$1966",
                            "typeString": "contract IZaaNetAdmin"
                          }
                        },
                        "id": 2895,
                        "nodeType": "ExpressionStatement",
                        "src": "12578:47:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2873,
                    "nodeType": "StructuredDocumentation",
                    "src": "12361:54:11",
                    "text": "@notice Update admin contract address (owner only)"
                  },
                  "functionSelector": "63a812f9",
                  "id": 2897,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2878,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2877,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "12482:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "12482:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12482:9:11"
                    }
                  ],
                  "name": "setAdminContract",
                  "nameLocation": "12429:16:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2875,
                        "mutability": "mutable",
                        "name": "_newAdminContract",
                        "nameLocation": "12454:17:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2897,
                        "src": "12446:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2874,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12446:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12445:27:11"
                  },
                  "returnParameters": {
                    "id": 2879,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12492:0:11"
                  },
                  "scope": 2956,
                  "src": "12420:212:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2921,
                    "nodeType": "Block",
                    "src": "12758:106:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2906,
                                "name": "_newUsdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2900,
                                "src": "12776:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2909,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12796:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2908,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12788:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2907,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12788:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12788:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "12776:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964205553445420636f6e7472616374",
                              "id": 2912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12800:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd562cff041cb65c9cc71cd1fe6a4e99162c66c6e1a294e61396c13e4153d7a4",
                                "typeString": "literal_string \"Invalid USDT contract\""
                              },
                              "value": "Invalid USDT contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd562cff041cb65c9cc71cd1fe6a4e99162c66c6e1a294e61396c13e4153d7a4",
                                "typeString": "literal_string \"Invalid USDT contract\""
                              }
                            ],
                            "id": 2905,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12768:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12768:56:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2914,
                        "nodeType": "ExpressionStatement",
                        "src": "12768:56:11"
                      },
                      {
                        "expression": {
                          "id": 2919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2915,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1985,
                            "src": "12834:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$315",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2917,
                                "name": "_newUsdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2900,
                                "src": "12848:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2916,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "12841:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12841:16:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$315",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "12834:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2920,
                        "nodeType": "ExpressionStatement",
                        "src": "12834:23:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2898,
                    "nodeType": "StructuredDocumentation",
                    "src": "12638:53:11",
                    "text": "@notice Update USDT contract address (owner only)"
                  },
                  "functionSelector": "576338a5",
                  "id": 2922,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2903,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2902,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "12748:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "12748:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12748:9:11"
                    }
                  ],
                  "name": "setUsdtContract",
                  "nameLocation": "12705:15:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2900,
                        "mutability": "mutable",
                        "name": "_newUsdt",
                        "nameLocation": "12729:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2922,
                        "src": "12721:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2899,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12721:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12720:18:11"
                  },
                  "returnParameters": {
                    "id": 2904,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12758:0:11"
                  },
                  "scope": 2956,
                  "src": "12696:168:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2931,
                    "nodeType": "Block",
                    "src": "12951:25:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2928,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 900,
                            "src": "12961:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12961:8:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2930,
                        "nodeType": "ExpressionStatement",
                        "src": "12961:8:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2923,
                    "nodeType": "StructuredDocumentation",
                    "src": "12870:40:11",
                    "text": "@notice Emergency pause (only owner)"
                  },
                  "functionSelector": "8456cb59",
                  "id": 2932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2926,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2925,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "12941:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "12941:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12941:9:11"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "12924:5:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2924,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12929:2:11"
                  },
                  "returnParameters": {
                    "id": 2927,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12951:0:11"
                  },
                  "scope": 2956,
                  "src": "12915:61:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2941,
                    "nodeType": "Block",
                    "src": "13057:27:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2938,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 916,
                            "src": "13067:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13067:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2940,
                        "nodeType": "ExpressionStatement",
                        "src": "13067:10:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2933,
                    "nodeType": "StructuredDocumentation",
                    "src": "12982:32:11",
                    "text": "@notice Unpause (only owner)"
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 2942,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2936,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2935,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13047:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13047:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13047:9:11"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "13028:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2934,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13035:2:11"
                  },
                  "returnParameters": {
                    "id": 2937,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13057:0:11"
                  },
                  "scope": 2956,
                  "src": "13019:65:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2954,
                    "nodeType": "Block",
                    "src": "13204:67:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 2952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2948,
                            "name": "totalNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2946,
                            "src": "13214:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2949,
                                "name": "storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1979,
                                "src": "13230:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZaaNetStorage_$3526",
                                  "typeString": "contract ZaaNetStorage"
                                }
                              },
                              "id": 2950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13246:16:11",
                              "memberName": "networkIdCounter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2985,
                              "src": "13230:32:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 2951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13230:34:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13214:50:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2953,
                        "nodeType": "ExpressionStatement",
                        "src": "13214:50:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2943,
                    "nodeType": "StructuredDocumentation",
                    "src": "13090:35:11",
                    "text": "@notice Get contract statistics"
                  },
                  "functionSelector": "dfe6b5d6",
                  "id": 2955,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getContractStats",
                  "nameLocation": "13139:16:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2944,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13155:2:11"
                  },
                  "returnParameters": {
                    "id": 2947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2946,
                        "mutability": "mutable",
                        "name": "totalNetworks",
                        "nameLocation": "13189:13:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2955,
                        "src": "13181:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2945,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13181:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13180:23:11"
                  },
                  "scope": 2956,
                  "src": "13130:141:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2957,
              "src": "530:12743:11",
              "usedErrors": [
                13,
                18,
                327,
                831,
                834,
                931
              ],
              "usedEvents": [
                24,
                823,
                828,
                2030,
                2038,
                2050,
                2058,
                2066,
                2070
              ]
            }
          ],
          "src": "32:13242:11"
        },
        "id": 11
      },
      "contracts/ZaaNetStorage.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetStorage.sol",
          "exportedSymbols": {
            "Context": [
              809
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              986
            ],
            "ZaaNetStorage": [
              3526
            ]
          },
          "id": 3527,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2958,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:12"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2959,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3527,
              "sourceUnit": 148,
              "src": "58:52:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 2960,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3527,
              "sourceUnit": 987,
              "src": "111:59:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2961,
                    "name": "Ownable",
                    "nameLocations": [
                      "198:7:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "198:7:12"
                  },
                  "id": 2962,
                  "nodeType": "InheritanceSpecifier",
                  "src": "198:7:12"
                },
                {
                  "baseName": {
                    "id": 2963,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "207:15:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 986,
                    "src": "207:15:12"
                  },
                  "id": 2964,
                  "nodeType": "InheritanceSpecifier",
                  "src": "207:15:12"
                }
              ],
              "canonicalName": "ZaaNetStorage",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3526,
              "linearizedBaseContracts": [
                3526,
                986,
                147,
                809
              ],
              "name": "ZaaNetStorage",
              "nameLocation": "181:13:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ZaaNetStorage.Network",
                  "id": 2979,
                  "members": [
                    {
                      "constant": false,
                      "id": 2966,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "262:2:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2979,
                      "src": "254:10:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2965,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "254:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2968,
                      "mutability": "mutable",
                      "name": "hostAddress",
                      "nameLocation": "282:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2979,
                      "src": "274:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2967,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "274:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2970,
                      "mutability": "mutable",
                      "name": "pricePerSession",
                      "nameLocation": "311:15:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2979,
                      "src": "303:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2969,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "303:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2972,
                      "mutability": "mutable",
                      "name": "mongoDataId",
                      "nameLocation": "343:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2979,
                      "src": "336:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2971,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "336:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2974,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "369:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2979,
                      "src": "364:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2973,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "364:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2976,
                      "mutability": "mutable",
                      "name": "createdAt",
                      "nameLocation": "395:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2979,
                      "src": "387:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2975,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "387:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2978,
                      "mutability": "mutable",
                      "name": "updatedAt",
                      "nameLocation": "422:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2979,
                      "src": "414:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2977,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "414:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Network",
                  "nameLocation": "236:7:12",
                  "nodeType": "StructDefinition",
                  "scope": 3526,
                  "src": "229:209:12",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7b334154",
                  "id": 2983,
                  "mutability": "mutable",
                  "name": "allowedCallers",
                  "nameLocation": "476:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "444:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 2982,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2980,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "452:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "444:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2981,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "463:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "217c682d",
                  "id": 2985,
                  "mutability": "mutable",
                  "name": "networkIdCounter",
                  "nameLocation": "558:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "543:31:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4ce083be",
                  "id": 2988,
                  "mutability": "mutable",
                  "name": "zaanetEarnings",
                  "nameLocation": "622:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "607:33:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 2987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "639:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8bb0a17c",
                  "id": 2993,
                  "mutability": "mutable",
                  "name": "networks",
                  "nameLocation": "719:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "684:43:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$2979_storage_$",
                    "typeString": "mapping(uint256 => struct ZaaNetStorage.Network)"
                  },
                  "typeName": {
                    "id": 2992,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2989,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "692:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "684:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$2979_storage_$",
                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Network)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2991,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2990,
                        "name": "Network",
                        "nameLocations": [
                          "703:7:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2979,
                        "src": "703:7:12"
                      },
                      "referencedDeclaration": 2979,
                      "src": "703:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                        "typeString": "struct ZaaNetStorage.Network"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "29c718b5",
                  "id": 2997,
                  "mutability": "mutable",
                  "name": "hostEarnings",
                  "nameLocation": "768:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "733:47:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 2996,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2994,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "741:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "733:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2995,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "752:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7bae8f5e",
                  "id": 3002,
                  "mutability": "mutable",
                  "name": "hostNetworkIds",
                  "nameLocation": "871:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "834:51:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 3001,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2998,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "842:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "834:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 2999,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "853:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3000,
                      "nodeType": "ArrayTypeName",
                      "src": "853:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ec13f2a1",
                  "id": 3006,
                  "mutability": "mutable",
                  "name": "networkExists",
                  "nameLocation": "923:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "891:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 3005,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3003,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "899:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "891:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3004,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "910:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "879ecf10",
                  "id": 3010,
                  "mutability": "mutable",
                  "name": "sessionExists",
                  "nameLocation": "974:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "942:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 3009,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3007,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "950:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "942:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3008,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "961:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3027,
                    "nodeType": "Block",
                    "src": "1017:140:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 3013,
                                  "name": "allowedCallers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2983,
                                  "src": "1048:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 3016,
                                "indexExpression": {
                                  "expression": {
                                    "id": 3014,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1063:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3015,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1067:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1063:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1048:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3017,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1078:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3018,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1082:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1078:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3019,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "1092:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 3020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1092:7:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1078:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1048:51:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a6564",
                              "id": 3023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1113:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              },
                              "value": "Not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              }
                            ],
                            "id": 3012,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1027:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1027:112:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3025,
                        "nodeType": "ExpressionStatement",
                        "src": "1027:112:12"
                      },
                      {
                        "id": 3026,
                        "nodeType": "PlaceholderStatement",
                        "src": "1149:1:12"
                      }
                    ]
                  },
                  "id": 3028,
                  "name": "onlyAllowed",
                  "nameLocation": "1003:11:12",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 3011,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1014:2:12"
                  },
                  "src": "994:163:12",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f",
                  "id": 3034,
                  "name": "AllowedCallerUpdated",
                  "nameLocation": "1169:20:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3033,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3030,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "1206:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3034,
                        "src": "1190:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3029,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1190:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3032,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "1219:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3034,
                        "src": "1214:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3031,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1214:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1189:37:12"
                  },
                  "src": "1163:64:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e",
                  "id": 3042,
                  "name": "NetworkStored",
                  "nameLocation": "1238:13:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3036,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1277:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3042,
                        "src": "1261:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3035,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1261:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3038,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1305:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3042,
                        "src": "1289:27:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3040,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pricePerSession",
                        "nameLocation": "1334:15:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3042,
                        "src": "1326:23:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1326:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1251:104:12"
                  },
                  "src": "1232:124:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c",
                  "id": 3048,
                  "name": "NetworkUpdated",
                  "nameLocation": "1367:14:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3047,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3044,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1398:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3048,
                        "src": "1382:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3043,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3046,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1418:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3048,
                        "src": "1402:27:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3045,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1402:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1381:49:12"
                  },
                  "src": "1361:70:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "6d8d8fde140edbf6c26881f091850cb55bae733f801e9e4f9b7d123b88b620c8",
                  "id": 3056,
                  "name": "SessionStored",
                  "nameLocation": "1442:13:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3055,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3050,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "1481:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3056,
                        "src": "1465:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3049,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1465:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3052,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "paymentAddress",
                        "nameLocation": "1516:14:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3056,
                        "src": "1500:30:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3051,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1500:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3054,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1548:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3056,
                        "src": "1540:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3053,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1540:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1455:105:12"
                  },
                  "src": "1436:125:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be0",
                  "id": 3062,
                  "name": "HostEarningsUpdated",
                  "nameLocation": "1572:19:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3058,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1608:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3062,
                        "src": "1592:27:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3057,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1592:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3060,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalEarned",
                        "nameLocation": "1629:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3062,
                        "src": "1621:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3059,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1591:50:12"
                  },
                  "src": "1566:76:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "fd8145cfa93546227f9e46c710867061751c942a1b2c1aca58c7cdcea165f847",
                  "id": 3066,
                  "name": "ZaaNetEarningsUpdated",
                  "nameLocation": "1653:21:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3064,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalEarned",
                        "nameLocation": "1683:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3066,
                        "src": "1675:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3063,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1675:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1674:21:12"
                  },
                  "src": "1647:49:12"
                },
                {
                  "body": {
                    "id": 3073,
                    "nodeType": "Block",
                    "src": "1763:2:12",
                    "statements": []
                  },
                  "id": 3074,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3069,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1751:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1755:6:12",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1751:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3071,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 3068,
                        "name": "Ownable",
                        "nameLocations": [
                          "1743:7:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1743:7:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1743:19:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3067,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1740:2:12"
                  },
                  "returnParameters": {
                    "id": 3072,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1763:0:12"
                  },
                  "scope": 3526,
                  "src": "1729:36:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3104,
                    "nodeType": "Block",
                    "src": "1879:167:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3084,
                                "name": "_caller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3076,
                                "src": "1897:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3087,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1916:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3086,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1908:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3085,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1908:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1908:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1897:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642063616c6c65722061646472657373",
                              "id": 3090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1920:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                "typeString": "literal_string \"Invalid caller address\""
                              },
                              "value": "Invalid caller address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                "typeString": "literal_string \"Invalid caller address\""
                              }
                            ],
                            "id": 3083,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1889:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1889:56:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3092,
                        "nodeType": "ExpressionStatement",
                        "src": "1889:56:12"
                      },
                      {
                        "expression": {
                          "id": 3097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3093,
                              "name": "allowedCallers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2983,
                              "src": "1955:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 3095,
                            "indexExpression": {
                              "id": 3094,
                              "name": "_caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3076,
                              "src": "1970:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1955:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3096,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3078,
                            "src": "1981:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1955:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3098,
                        "nodeType": "ExpressionStatement",
                        "src": "1955:32:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3100,
                              "name": "_caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3076,
                              "src": "2023:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3101,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3078,
                              "src": "2032:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3099,
                            "name": "AllowedCallerUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3034,
                            "src": "2002:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 3102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2002:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3103,
                        "nodeType": "EmitStatement",
                        "src": "1997:42:12"
                      }
                    ]
                  },
                  "functionSelector": "d8b0e716",
                  "id": 3105,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3081,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3080,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1869:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1869:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1869:9:12"
                    }
                  ],
                  "name": "setAllowedCaller",
                  "nameLocation": "1813:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3079,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3076,
                        "mutability": "mutable",
                        "name": "_caller",
                        "nameLocation": "1838:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3105,
                        "src": "1830:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3075,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1830:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3078,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "1852:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3105,
                        "src": "1847:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3077,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1847:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1829:30:12"
                  },
                  "returnParameters": {
                    "id": 3082,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1879:0:12"
                  },
                  "scope": 3526,
                  "src": "1804:242:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3155,
                    "nodeType": "Block",
                    "src": "2213:257:12",
                    "statements": [
                      {
                        "body": {
                          "id": 3153,
                          "nodeType": "Block",
                          "src": "2269:195:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3134,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 3127,
                                        "name": "_callers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3108,
                                        "src": "2291:8:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 3129,
                                      "indexExpression": {
                                        "id": 3128,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3116,
                                        "src": "2300:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2291:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 3132,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2314:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 3131,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2306:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3130,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2306:7:12",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3133,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2306:10:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "2291:25:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e76616c69642063616c6c65722061646472657373",
                                    "id": 3135,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2318:24:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                      "typeString": "literal_string \"Invalid caller address\""
                                    },
                                    "value": "Invalid caller address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                      "typeString": "literal_string \"Invalid caller address\""
                                    }
                                  ],
                                  "id": 3126,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2283:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2283:60:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3137,
                              "nodeType": "ExpressionStatement",
                              "src": "2283:60:12"
                            },
                            {
                              "expression": {
                                "id": 3144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3138,
                                    "name": "allowedCallers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2983,
                                    "src": "2357:14:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 3142,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 3139,
                                      "name": "_callers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3108,
                                      "src": "2372:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 3141,
                                    "indexExpression": {
                                      "id": 3140,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3116,
                                      "src": "2381:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2372:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2357:27:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3143,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3110,
                                  "src": "2387:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2357:36:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3145,
                              "nodeType": "ExpressionStatement",
                              "src": "2357:36:12"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3147,
                                      "name": "_callers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3108,
                                      "src": "2433:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 3149,
                                    "indexExpression": {
                                      "id": 3148,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3116,
                                      "src": "2442:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2433:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3150,
                                    "name": "status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3110,
                                    "src": "2446:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 3146,
                                  "name": "AllowedCallerUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3034,
                                  "src": "2412:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 3151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2412:41:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3152,
                              "nodeType": "EmitStatement",
                              "src": "2407:46:12"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3119,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3116,
                            "src": "2243:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3120,
                              "name": "_callers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3108,
                              "src": "2247:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 3121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2256:6:12",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2247:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2243:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3154,
                        "initializationExpression": {
                          "assignments": [
                            3116
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3116,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2236:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 3154,
                              "src": "2228:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3115,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2228:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3118,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2240:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2228:13:12"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2264:3:12",
                            "subExpression": {
                              "id": 3123,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3116,
                              "src": "2264:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3125,
                          "nodeType": "ExpressionStatement",
                          "src": "2264:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "2223:241:12"
                      }
                    ]
                  },
                  "functionSelector": "73f9a5d7",
                  "id": 3156,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3113,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3112,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2203:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2203:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2203:9:12"
                    }
                  ],
                  "name": "setAllowedCallers",
                  "nameLocation": "2112:17:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3108,
                        "mutability": "mutable",
                        "name": "_callers",
                        "nameLocation": "2158:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3156,
                        "src": "2139:27:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2139:7:12",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3107,
                          "nodeType": "ArrayTypeName",
                          "src": "2139:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3110,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "2181:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3156,
                        "src": "2176:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3109,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2176:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2129:64:12"
                  },
                  "returnParameters": {
                    "id": 3114,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2213:0:12"
                  },
                  "scope": 3526,
                  "src": "2103:367:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3166,
                    "nodeType": "Block",
                    "src": "2578:42:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 3164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "2595:18:12",
                          "subExpression": {
                            "id": 3163,
                            "name": "networkIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2985,
                            "src": "2597:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3162,
                        "id": 3165,
                        "nodeType": "Return",
                        "src": "2588:25:12"
                      }
                    ]
                  },
                  "functionSelector": "5290ffc6",
                  "id": 3167,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3159,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3158,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "2548:11:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3028,
                        "src": "2548:11:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2548:11:12"
                    }
                  ],
                  "name": "incrementNetworkId",
                  "nameLocation": "2518:18:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3157,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2536:2:12"
                  },
                  "returnParameters": {
                    "id": 3162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3161,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3167,
                        "src": "2569:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3160,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2569:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2568:9:12"
                  },
                  "scope": 3526,
                  "src": "2509:111:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3281,
                    "nodeType": "Block",
                    "src": "2701:960:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3178,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3169,
                                "src": "2719:2:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2724:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2719:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206e6574776f726b204944",
                              "id": 3181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2727:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1e0378fd91276cf2d1eb2c93fd43f1222cc240c032c3dc15352aeace0c1cd550",
                                "typeString": "literal_string \"Invalid network ID\""
                              },
                              "value": "Invalid network ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1e0378fd91276cf2d1eb2c93fd43f1222cc240c032c3dc15352aeace0c1cd550",
                                "typeString": "literal_string \"Invalid network ID\""
                              }
                            ],
                            "id": 3177,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2711:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2711:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3183,
                        "nodeType": "ExpressionStatement",
                        "src": "2711:37:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3185,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3172,
                                  "src": "2766:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2770:11:12",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2968,
                                "src": "2766:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3189,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2793:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2785:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3187,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2785:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2785:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2766:29:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420686f73742061646472657373",
                              "id": 3192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2797:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              },
                              "value": "Invalid host address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              }
                            ],
                            "id": 3184,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2758:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2758:62:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3194,
                        "nodeType": "ExpressionStatement",
                        "src": "2758:62:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3196,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3172,
                                  "src": "2838:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2842:15:12",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2970,
                                "src": "2838:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2860:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2838:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
                              "id": 3200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2863:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              },
                              "value": "Price must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              }
                            ],
                            "id": 3195,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2830:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2830:64:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3202,
                        "nodeType": "ExpressionStatement",
                        "src": "2830:64:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3206,
                                        "name": "net",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3172,
                                        "src": "2918:3:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                          "typeString": "struct ZaaNetStorage.Network calldata"
                                        }
                                      },
                                      "id": 3207,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2922:11:12",
                                      "memberName": "mongoDataId",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2972,
                                      "src": "2918:15:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 3205,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2912:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 3204,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2912:5:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3208,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2912:22:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 3209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2935:6:12",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2912:29:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2944:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2912:33:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d6f6e676f446174614944207265717569726564",
                              "id": 3212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2947:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_63e0a91235b82882ae36fd20b4e9aa5277bcaaee4744335f869888bfb6cf38a6",
                                "typeString": "literal_string \"MongoDataID required\""
                              },
                              "value": "MongoDataID required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_63e0a91235b82882ae36fd20b4e9aa5277bcaaee4744335f869888bfb6cf38a6",
                                "typeString": "literal_string \"MongoDataID required\""
                              }
                            ],
                            "id": 3203,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2904:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2904:66:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3214,
                        "nodeType": "ExpressionStatement",
                        "src": "2904:66:12"
                      },
                      {
                        "assignments": [
                          3216
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3216,
                            "mutability": "mutable",
                            "name": "isNewNetwork",
                            "nameLocation": "2986:12:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 3281,
                            "src": "2981:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3215,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2981:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3221,
                        "initialValue": {
                          "id": 3220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3001:18:12",
                          "subExpression": {
                            "baseExpression": {
                              "id": 3217,
                              "name": "networkExists",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3006,
                              "src": "3002:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 3219,
                            "indexExpression": {
                              "id": 3218,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3169,
                              "src": "3016:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3002:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2981:38:12"
                      },
                      {
                        "expression": {
                          "id": 3247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3222,
                              "name": "networks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2993,
                              "src": "3030:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$2979_storage_$",
                                "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                              }
                            },
                            "id": 3224,
                            "indexExpression": {
                              "id": 3223,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3169,
                              "src": "3039:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3030:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$2979_storage",
                              "typeString": "struct ZaaNetStorage.Network storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3226,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3172,
                                  "src": "3071:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3075:2:12",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2966,
                                "src": "3071:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3228,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3172,
                                  "src": "3104:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3108:11:12",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2968,
                                "src": "3104:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3230,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3172,
                                  "src": "3150:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3154:15:12",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2970,
                                "src": "3150:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3232,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3172,
                                  "src": "3196:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3200:11:12",
                                "memberName": "mongoDataId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2972,
                                "src": "3196:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3234,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3172,
                                  "src": "3235:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3239:8:12",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2974,
                                "src": "3235:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "condition": {
                                  "id": 3236,
                                  "name": "isNewNetwork",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3216,
                                  "src": "3272:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3239,
                                      "name": "networks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2993,
                                      "src": "3305:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$2979_storage_$",
                                        "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                      }
                                    },
                                    "id": 3241,
                                    "indexExpression": {
                                      "id": 3240,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3169,
                                      "src": "3314:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3305:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$2979_storage",
                                      "typeString": "struct ZaaNetStorage.Network storage ref"
                                    }
                                  },
                                  "id": 3242,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3318:9:12",
                                  "memberName": "createdAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2976,
                                  "src": "3305:22:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "3272:55:12",
                                "trueExpression": {
                                  "expression": {
                                    "id": 3237,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3287:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3293:9:12",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3287:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3244,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3352:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3358:9:12",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3352:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3225,
                              "name": "Network",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2979,
                              "src": "3045:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Network_$2979_storage_ptr_$",
                                "typeString": "type(struct ZaaNetStorage.Network storage pointer)"
                              }
                            },
                            "id": 3246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "3067:2:12",
                              "3091:11:12",
                              "3133:15:12",
                              "3183:11:12",
                              "3225:8:12",
                              "3261:9:12",
                              "3341:9:12"
                            ],
                            "names": [
                              "id",
                              "hostAddress",
                              "pricePerSession",
                              "mongoDataId",
                              "isActive",
                              "createdAt",
                              "updatedAt"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "3045:333:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network memory"
                            }
                          },
                          "src": "3030:348:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$2979_storage",
                            "typeString": "struct ZaaNetStorage.Network storage ref"
                          }
                        },
                        "id": 3248,
                        "nodeType": "ExpressionStatement",
                        "src": "3030:348:12"
                      },
                      {
                        "condition": {
                          "id": 3249,
                          "name": "isNewNetwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3216,
                          "src": "3393:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3279,
                          "nodeType": "Block",
                          "src": "3590:65:12",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 3274,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3169,
                                    "src": "3624:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3275,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3172,
                                      "src": "3628:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 3276,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3632:11:12",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2968,
                                    "src": "3628:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3273,
                                  "name": "NetworkUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3048,
                                  "src": "3609:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
                                "id": 3277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3609:35:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3278,
                              "nodeType": "EmitStatement",
                              "src": "3604:40:12"
                            }
                          ]
                        },
                        "id": 3280,
                        "nodeType": "IfStatement",
                        "src": "3389:266:12",
                        "trueBody": {
                          "id": 3272,
                          "nodeType": "Block",
                          "src": "3407:177:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 3254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3250,
                                    "name": "networkExists",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3006,
                                    "src": "3421:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                      "typeString": "mapping(uint256 => bool)"
                                    }
                                  },
                                  "id": 3252,
                                  "indexExpression": {
                                    "id": 3251,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3169,
                                    "src": "3435:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3421:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3441:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3421:24:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3255,
                              "nodeType": "ExpressionStatement",
                              "src": "3421:24:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3261,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3169,
                                    "src": "3496:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3256,
                                      "name": "hostNetworkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3002,
                                      "src": "3459:14:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                        "typeString": "mapping(address => uint256[] storage ref)"
                                      }
                                    },
                                    "id": 3259,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 3257,
                                        "name": "net",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3172,
                                        "src": "3474:3:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                          "typeString": "struct ZaaNetStorage.Network calldata"
                                        }
                                      },
                                      "id": 3258,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3478:11:12",
                                      "memberName": "hostAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2968,
                                      "src": "3474:15:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3459:31:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 3260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3491:4:12",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "3459:36:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer,uint256)"
                                  }
                                },
                                "id": 3262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3459:40:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3263,
                              "nodeType": "ExpressionStatement",
                              "src": "3459:40:12"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 3265,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3169,
                                    "src": "3532:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3266,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3172,
                                      "src": "3536:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 3267,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3540:11:12",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2968,
                                    "src": "3536:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3268,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3172,
                                      "src": "3553:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 3269,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3557:15:12",
                                    "memberName": "pricePerSession",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2970,
                                    "src": "3553:19:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3264,
                                  "name": "NetworkStored",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3042,
                                  "src": "3518:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,address,uint256)"
                                  }
                                },
                                "id": 3270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3518:55:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3271,
                              "nodeType": "EmitStatement",
                              "src": "3513:60:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "50c0d41c",
                  "id": 3282,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3175,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3174,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "2689:11:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3028,
                        "src": "2689:11:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2689:11:12"
                    }
                  ],
                  "name": "setNetwork",
                  "nameLocation": "2635:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3169,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "2654:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3282,
                        "src": "2646:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3168,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2646:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3172,
                        "mutability": "mutable",
                        "name": "net",
                        "nameLocation": "2675:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3282,
                        "src": "2658:20:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$2979_calldata_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 3171,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3170,
                            "name": "Network",
                            "nameLocations": [
                              "2658:7:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2979,
                            "src": "2658:7:12"
                          },
                          "referencedDeclaration": 2979,
                          "src": "2658:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2645:34:12"
                  },
                  "returnParameters": {
                    "id": 3176,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2701:0:12"
                  },
                  "scope": 3526,
                  "src": "2626:1035:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3301,
                    "nodeType": "Block",
                    "src": "3738:98:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3291,
                                "name": "networkExists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3006,
                                "src": "3756:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 3293,
                              "indexExpression": {
                                "id": 3292,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3284,
                                "src": "3770:2:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3756:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20646f6573206e6f74206578697374",
                              "id": 3294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3775:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              },
                              "value": "Network does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              }
                            ],
                            "id": 3290,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3748:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3748:52:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3296,
                        "nodeType": "ExpressionStatement",
                        "src": "3748:52:12"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 3297,
                            "name": "networks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2993,
                            "src": "3817:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$2979_storage_$",
                              "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                            }
                          },
                          "id": 3299,
                          "indexExpression": {
                            "id": 3298,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3284,
                            "src": "3826:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3817:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$2979_storage",
                            "typeString": "struct ZaaNetStorage.Network storage ref"
                          }
                        },
                        "functionReturnParameters": 3289,
                        "id": 3300,
                        "nodeType": "Return",
                        "src": "3810:19:12"
                      }
                    ]
                  },
                  "functionSelector": "95ea5717",
                  "id": 3302,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetwork",
                  "nameLocation": "3676:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3284,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3695:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3302,
                        "src": "3687:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3283,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3687:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3686:12:12"
                  },
                  "returnParameters": {
                    "id": 3289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3288,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3302,
                        "src": "3722:14:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 3287,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3286,
                            "name": "Network",
                            "nameLocations": [
                              "3722:7:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2979,
                            "src": "3722:7:12"
                          },
                          "referencedDeclaration": 2979,
                          "src": "3722:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3721:16:12"
                  },
                  "scope": 3526,
                  "src": "3667:169:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3390,
                    "nodeType": "Block",
                    "src": "3981:461:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 3317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3315,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3313,
                            "src": "3991:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3316,
                            "name": "networkIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2985,
                            "src": "3999:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3991:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3318,
                        "nodeType": "ExpressionStatement",
                        "src": "3991:24:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3319,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3304,
                            "src": "4029:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 3320,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3313,
                            "src": "4039:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4029:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3332,
                        "nodeType": "IfStatement",
                        "src": "4025:78:12",
                        "trueBody": {
                          "id": 3331,
                          "nodeType": "Block",
                          "src": "4046:57:12",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 3326,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4082:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 3325,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "4068:13:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                                      },
                                      "typeName": {
                                        "baseType": {
                                          "id": 3323,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 3322,
                                            "name": "Network",
                                            "nameLocations": [
                                              "4072:7:12"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2979,
                                            "src": "4072:7:12"
                                          },
                                          "referencedDeclaration": 2979,
                                          "src": "4072:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                            "typeString": "struct ZaaNetStorage.Network"
                                          }
                                        },
                                        "id": 3324,
                                        "nodeType": "ArrayTypeName",
                                        "src": "4072:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                                          "typeString": "struct ZaaNetStorage.Network[]"
                                        }
                                      }
                                    },
                                    "id": 3327,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4068:16:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  {
                                    "id": 3328,
                                    "name": "total",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3313,
                                    "src": "4086:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3329,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4067:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                                  "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                                }
                              },
                              "functionReturnParameters": 3314,
                              "id": 3330,
                              "nodeType": "Return",
                              "src": "4060:32:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3334
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3334,
                            "mutability": "mutable",
                            "name": "end",
                            "nameLocation": "4121:3:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 3390,
                            "src": "4113:11:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3333,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4113:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3338,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3335,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3304,
                            "src": "4127:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3336,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3306,
                            "src": "4136:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4127:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4113:28:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3339,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "4155:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3340,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3313,
                            "src": "4161:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4155:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3347,
                        "nodeType": "IfStatement",
                        "src": "4151:53:12",
                        "trueBody": {
                          "id": 3346,
                          "nodeType": "Block",
                          "src": "4168:36:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 3344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3342,
                                  "name": "end",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3334,
                                  "src": "4182:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3343,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3313,
                                  "src": "4188:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4182:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3345,
                              "nodeType": "ExpressionStatement",
                              "src": "4182:11:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3352
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3352,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "4231:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 3390,
                            "src": "4214:23:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3350,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 3349,
                                  "name": "Network",
                                  "nameLocations": [
                                    "4214:7:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2979,
                                  "src": "4214:7:12"
                                },
                                "referencedDeclaration": 2979,
                                "src": "4214:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 3351,
                              "nodeType": "ArrayTypeName",
                              "src": "4214:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3361,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3357,
                                "name": "end",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3334,
                                "src": "4254:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 3358,
                                "name": "offset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3304,
                                "src": "4260:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4254:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4240:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3354,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 3353,
                                  "name": "Network",
                                  "nameLocations": [
                                    "4244:7:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2979,
                                  "src": "4244:7:12"
                                },
                                "referencedDeclaration": 2979,
                                "src": "4244:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 3355,
                              "nodeType": "ArrayTypeName",
                              "src": "4244:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            }
                          },
                          "id": 3360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4240:27:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4214:53:12"
                      },
                      {
                        "body": {
                          "id": 3384,
                          "nodeType": "Block",
                          "src": "4316:87:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 3382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3372,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3352,
                                    "src": "4330:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  "id": 3376,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3375,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3373,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3363,
                                      "src": "4337:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 3374,
                                      "name": "offset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3304,
                                      "src": "4341:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4337:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4330:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 3377,
                                    "name": "networks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2993,
                                    "src": "4351:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$2979_storage_$",
                                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                    }
                                  },
                                  "id": 3381,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3378,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3363,
                                      "src": "4360:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 3379,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4364:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4360:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4351:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$2979_storage",
                                    "typeString": "struct ZaaNetStorage.Network storage ref"
                                  }
                                },
                                "src": "4330:36:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 3383,
                              "nodeType": "ExpressionStatement",
                              "src": "4330:36:12"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3366,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3363,
                            "src": "4302:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3367,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "4306:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4302:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3385,
                        "initializationExpression": {
                          "assignments": [
                            3363
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3363,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4290:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 3385,
                              "src": "4282:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3362,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4282:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3365,
                          "initialValue": {
                            "id": 3364,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3304,
                            "src": "4294:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4282:18:12"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4311:3:12",
                            "subExpression": {
                              "id": 3369,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3363,
                              "src": "4311:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3371,
                          "nodeType": "ExpressionStatement",
                          "src": "4311:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "4277:126:12"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 3386,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3352,
                              "src": "4421:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory[] memory"
                              }
                            },
                            {
                              "id": 3387,
                              "name": "total",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3313,
                              "src": "4429:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3388,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4420:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                          }
                        },
                        "functionReturnParameters": 3314,
                        "id": 3389,
                        "nodeType": "Return",
                        "src": "4413:22:12"
                      }
                    ]
                  },
                  "functionSelector": "fa9c81a4",
                  "id": 3391,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetworksPaginated",
                  "nameLocation": "3851:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3307,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3304,
                        "mutability": "mutable",
                        "name": "offset",
                        "nameLocation": "3889:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3391,
                        "src": "3881:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3881:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3306,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "3913:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3391,
                        "src": "3905:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3905:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3871:53:12"
                  },
                  "returnParameters": {
                    "id": 3314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3311,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3391,
                        "src": "3948:16:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$2979_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3309,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3308,
                              "name": "Network",
                              "nameLocations": [
                                "3948:7:12"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2979,
                              "src": "3948:7:12"
                            },
                            "referencedDeclaration": 2979,
                            "src": "3948:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$2979_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 3310,
                          "nodeType": "ArrayTypeName",
                          "src": "3948:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$2979_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3313,
                        "mutability": "mutable",
                        "name": "total",
                        "nameLocation": "3974:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3391,
                        "src": "3966:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3312,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3966:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3947:33:12"
                  },
                  "scope": 3526,
                  "src": "3842:600:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3403,
                    "nodeType": "Block",
                    "src": "4549:51:12",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 3399,
                            "name": "hostNetworkIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3002,
                            "src": "4566:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 3401,
                          "indexExpression": {
                            "id": 3400,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3393,
                            "src": "4581:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4566:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 3398,
                        "id": 3402,
                        "nodeType": "Return",
                        "src": "4559:34:12"
                      }
                    ]
                  },
                  "functionSelector": "79f0dc57",
                  "id": 3404,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostNetworks",
                  "nameLocation": "4457:15:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3393,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "4490:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3404,
                        "src": "4482:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4482:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4472:35:12"
                  },
                  "returnParameters": {
                    "id": 3398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3397,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3404,
                        "src": "4531:16:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3395,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4531:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3396,
                          "nodeType": "ArrayTypeName",
                          "src": "4531:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4530:18:12"
                  },
                  "scope": 3526,
                  "src": "4448:152:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3445,
                    "nodeType": "Block",
                    "src": "4753:257:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3416,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3406,
                                "src": "4771:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4794:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4786:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3417,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4786:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4786:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4771:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420686f73742061646472657373",
                              "id": 3422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4798:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              },
                              "value": "Invalid host address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              }
                            ],
                            "id": 3415,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4763:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4763:58:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3424,
                        "nodeType": "ExpressionStatement",
                        "src": "4763:58:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3426,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3408,
                                "src": "4839:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4848:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4839:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 3429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4851:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 3425,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4831:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4831:52:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3431,
                        "nodeType": "ExpressionStatement",
                        "src": "4831:52:12"
                      },
                      {
                        "expression": {
                          "id": 3436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3432,
                              "name": "hostEarnings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2997,
                              "src": "4894:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3434,
                            "indexExpression": {
                              "id": 3433,
                              "name": "hostAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3406,
                              "src": "4907:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4894:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3435,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3408,
                            "src": "4923:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4894:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3437,
                        "nodeType": "ExpressionStatement",
                        "src": "4894:35:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3439,
                              "name": "hostAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3406,
                              "src": "4964:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 3440,
                                "name": "hostEarnings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2997,
                                "src": "4977:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3442,
                              "indexExpression": {
                                "id": 3441,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3406,
                                "src": "4990:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4977:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3438,
                            "name": "HostEarningsUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3062,
                            "src": "4944:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4944:59:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3444,
                        "nodeType": "EmitStatement",
                        "src": "4939:64:12"
                      }
                    ]
                  },
                  "functionSelector": "e1c7a8aa",
                  "id": 3446,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3411,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3410,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "4728:11:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3028,
                        "src": "4728:11:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4728:11:12"
                    },
                    {
                      "id": 3413,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3412,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4740:12:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 950,
                        "src": "4740:12:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4740:12:12"
                    }
                  ],
                  "name": "increaseHostEarnings",
                  "nameLocation": "4639:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3406,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "4677:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3446,
                        "src": "4669:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4669:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3408,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4706:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3446,
                        "src": "4698:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3407,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4698:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4659:59:12"
                  },
                  "returnParameters": {
                    "id": 3414,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4753:0:12"
                  },
                  "scope": 3526,
                  "src": "4630:380:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3457,
                    "nodeType": "Block",
                    "src": "5108:49:12",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 3453,
                            "name": "hostEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2997,
                            "src": "5125:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3455,
                          "indexExpression": {
                            "id": 3454,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3448,
                            "src": "5138:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5125:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3452,
                        "id": 3456,
                        "nodeType": "Return",
                        "src": "5118:32:12"
                      }
                    ]
                  },
                  "functionSelector": "6d65573f",
                  "id": 3458,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostEarnings",
                  "nameLocation": "5025:15:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3448,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "5058:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3458,
                        "src": "5050:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5050:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5040:35:12"
                  },
                  "returnParameters": {
                    "id": 3452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3451,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3458,
                        "src": "5099:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3450,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5099:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5098:9:12"
                  },
                  "scope": 3526,
                  "src": "5016:141:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3478,
                    "nodeType": "Block",
                    "src": "5259:103:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3468,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3460,
                                "src": "5277:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5286:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5277:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 3471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5289:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 3467,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5269:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5269:52:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3473,
                        "nodeType": "ExpressionStatement",
                        "src": "5269:52:12"
                      },
                      {
                        "expression": {
                          "id": 3476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3474,
                            "name": "zaanetEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2988,
                            "src": "5331:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3475,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3460,
                            "src": "5349:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5331:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3477,
                        "nodeType": "ExpressionStatement",
                        "src": "5331:24:12"
                      }
                    ]
                  },
                  "functionSelector": "69009a13",
                  "id": 3479,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3463,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3462,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "5234:11:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3028,
                        "src": "5234:11:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5234:11:12"
                    },
                    {
                      "id": 3465,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3464,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "5246:12:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 950,
                        "src": "5246:12:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5246:12:12"
                    }
                  ],
                  "name": "increaseZaaNetEarnings",
                  "nameLocation": "5172:22:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3460,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5212:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3479,
                        "src": "5204:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3459,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5204:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5194:30:12"
                  },
                  "returnParameters": {
                    "id": 3466,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5259:0:12"
                  },
                  "scope": 3526,
                  "src": "5163:199:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3486,
                    "nodeType": "Block",
                    "src": "5429:38:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 3484,
                          "name": "zaanetEarnings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "5446:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3483,
                        "id": 3485,
                        "nodeType": "Return",
                        "src": "5439:21:12"
                      }
                    ]
                  },
                  "functionSelector": "22a4808b",
                  "id": 3487,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getZaaNetEarnings",
                  "nameLocation": "5377:17:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3480,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5394:2:12"
                  },
                  "returnParameters": {
                    "id": 3483,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3482,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3487,
                        "src": "5420:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3481,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5420:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5419:9:12"
                  },
                  "scope": 3526,
                  "src": "5368:99:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3524,
                    "nodeType": "Block",
                    "src": "5597:252:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3495,
                                "name": "networkExists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3006,
                                "src": "5615:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 3497,
                              "indexExpression": {
                                "id": 3496,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3489,
                                "src": "5629:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5615:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20646f6573206e6f74206578697374",
                              "id": 3498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5641:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              },
                              "value": "Network does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              }
                            ],
                            "id": 3494,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5607:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5607:59:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3500,
                        "nodeType": "ExpressionStatement",
                        "src": "5607:59:12"
                      },
                      {
                        "expression": {
                          "id": 3506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3501,
                                "name": "networks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2993,
                                "src": "5676:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$2979_storage_$",
                                  "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                }
                              },
                              "id": 3503,
                              "indexExpression": {
                                "id": 3502,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3489,
                                "src": "5685:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5676:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$2979_storage",
                                "typeString": "struct ZaaNetStorage.Network storage ref"
                              }
                            },
                            "id": 3504,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5696:8:12",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2974,
                            "src": "5676:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 3505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5707:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "5676:36:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3507,
                        "nodeType": "ExpressionStatement",
                        "src": "5676:36:12"
                      },
                      {
                        "expression": {
                          "id": 3514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3508,
                                "name": "networks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2993,
                                "src": "5722:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$2979_storage_$",
                                  "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                }
                              },
                              "id": 3510,
                              "indexExpression": {
                                "id": 3509,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3489,
                                "src": "5731:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5722:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$2979_storage",
                                "typeString": "struct ZaaNetStorage.Network storage ref"
                              }
                            },
                            "id": 3511,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5742:9:12",
                            "memberName": "updatedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2978,
                            "src": "5722:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3512,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5754:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5760:9:12",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5754:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5722:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3515,
                        "nodeType": "ExpressionStatement",
                        "src": "5722:47:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3517,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3489,
                              "src": "5799:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 3518,
                                  "name": "networks",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2993,
                                  "src": "5810:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$2979_storage_$",
                                    "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                  }
                                },
                                "id": 3520,
                                "indexExpression": {
                                  "id": 3519,
                                  "name": "networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3489,
                                  "src": "5819:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5810:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$2979_storage",
                                  "typeString": "struct ZaaNetStorage.Network storage ref"
                                }
                              },
                              "id": 3521,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5830:11:12",
                              "memberName": "hostAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2968,
                              "src": "5810:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3516,
                            "name": "NetworkUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3048,
                            "src": "5784:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 3522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5784:58:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3523,
                        "nodeType": "EmitStatement",
                        "src": "5779:63:12"
                      }
                    ]
                  },
                  "functionSelector": "5a2f406f",
                  "id": 3525,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3492,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3491,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5587:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5587:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5587:9:12"
                    }
                  ],
                  "name": "emergencyDeactivateNetwork",
                  "nameLocation": "5532:26:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3489,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "5567:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3525,
                        "src": "5559:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5559:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5558:19:12"
                  },
                  "returnParameters": {
                    "id": 3493,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5597:0:12"
                  },
                  "scope": 3526,
                  "src": "5523:326:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3527,
              "src": "172:5679:12",
              "usedErrors": [
                13,
                18,
                931
              ],
              "usedEvents": [
                24,
                3034,
                3042,
                3048,
                3056,
                3062,
                3066
              ]
            }
          ],
          "src": "32:5820:12"
        },
        "id": 12
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "IERC1363": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveAndCall(address,uint256)": "3177029f",
              "approveAndCall(address,uint256,bytes)": "cae9ca51",
              "balanceOf(address)": "70a08231",
              "supportsInterface(bytes4)": "01ffc9a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAndCall(address,uint256)": "1296ee62",
              "transferAndCall(address,uint256,bytes)": "4000aea0",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferFromAndCall(address,address,uint256)": "d8fbe994",
              "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "currentAllowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "requestedDecrease",
                  "type": "uint256"
                }
              ],
              "name": "SafeERC20FailedDecreaseAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202a38e2ba0e96d24fc9346d91fe6e3d5b705f0fe8568de88adb2c4ecd037057e164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A CODESIZE 0xE2 0xBA 0xE SWAP7 0xD2 0x4F 0xC9 CALLVALUE PUSH14 0x91FE6E3D5B705F0FE8568DE88ADB 0x2C 0x4E 0xCD SUB PUSH17 0x57E164736F6C634300081C003300000000 ",
              "sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea26469706673582212202a38e2ba0e96d24fc9346d91fe6e3d5b705f0fe8568de88adb2c4ecd037057e164736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A CODESIZE 0xE2 0xBA 0xE SWAP7 0xD2 0x4F 0xC9 CALLVALUE PUSH14 0x91FE6E3D5B705F0FE8568DE88ADB 0x2C 0x4E 0xCD SUB PUSH17 0x57E164736F6C634300081C003300000000 ",
              "sourceMap": "698:9376:5:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetAdmin.sol": {
        "ZaaNetAdmin": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_storageContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_treasuryAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_paymentAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_platformFeePercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_hostingFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "AdminPaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "AdminUnpaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "storageContract",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "ContractsInitialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "EmergencyModeToggled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "updatedBy",
                  "type": "address"
                }
              ],
              "name": "EmergencyOperatorUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "HostingFeeUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "PlatformFeeUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldTreasury",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newTreasury",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "TreasuryUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_HOSTING_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_PLATFORM_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_HOSTING_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_PLATFORM_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "calculatePlatformFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "emergencyDeactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyMode",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "emergencyOperators",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFee",
                  "type": "uint256"
                }
              ],
              "name": "emergencySetHostingFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFeePercent",
                  "type": "uint256"
                }
              ],
              "name": "emergencySetPlatformFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "feeHistory",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAdminStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalFeeChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalTreasuryChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalHostingFeeChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isEmergencyMode",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "currentPlatformFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentHostingFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currentTreasury",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentFees",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "platformFeePercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "hostingFeeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "treasury",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFeeHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.FeeChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHostingFeeHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.HostingFeeChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestFeeChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.FeeChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestHostingFeeChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.HostingFeeChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestTreasuryChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "oldTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "newTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.TreasuryChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPlatformFeeBasisPoints",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTreasuryHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "oldTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "newTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.TreasuryChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "hostingFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "hostingFeeHistory",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isEmergencyOperator",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paymentAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "platformFeePercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setEmergencyOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFee",
                  "type": "uint256"
                }
              ],
              "name": "setHostingFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newPaymentAddress",
                  "type": "address"
                }
              ],
              "name": "setPaymentAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFeePercent",
                  "type": "uint256"
                }
              ],
              "name": "setPlatformFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newTreasuryAddress",
                  "type": "address"
                }
              ],
              "name": "setTreasuryAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storageContract",
              "outputs": [
                {
                  "internalType": "contract ZaaNetStorage",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "toggleEmergencyMode",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasury",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "treasuryHistory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "oldTreasury",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newTreasury",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 1510,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 1479,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "update_storage_value_struct_FeeChange_to_struct_FeeChange": {
                  "entryPoint": 1530,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346105c2576040516000611edf3881900390601f8201601f191684016001600160401b038111858210176105ae579180859260a0946040528339810103126105ab5761004f826105e6565b9061005c602084016105e6565b92610069604082016105e6565b9260806060830151920151933315610597578354336001600160a01b031982168117865560405197916001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3600180556007805460ff191690556001600160a01b0316958615610555575060018310158061054a575b156104f5576001600160a01b0316156104a1576305f5e1008411610449576001600160a01b031680610405575b50600380546001600160a01b031916851790556005819055600683905561013b6105c7565b908282526020820152426040820152336060820152600954680100000000000000008110156103f1576001810160095560095481101561039f57600983526101aa9190839060021b7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af016105fa565b6101b26105c7565b9281845260208401908152604084014281526060850191338352600a5495680100000000000000008710156103dd5760018701600a55600a548710156103c957600a909452925160029590951b7fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8810180546001600160a01b03199081166001600160a01b039889161790915593517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a982018054861691881691909117905590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa82015590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ab90910180549092169316929092179091556102d36105c7565b90600082526020820152426040820152336060820152600b5490680100000000000000008210156103b35760018201600b55600091600b5481101561039f57600b9092526103489160009060021b7f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9016105fa565b3360005260086020526040600020600160ff198254161790556040516001815233907f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce60203392a360405161188690816106598239f35b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b83526041600452602483fd5b600280546001600160a01b031916821790556040514281527f7f7d6e7886dca58922d0593a44928fb5066cd0e04369c371d72eb96e61368fa890602090a238610116565b60405162461bcd60e51b815260206004820152602a60248201527f486f7374696e6720666565206d757374206265206265747765656e203020616e60448201526919080c4c0c081554d11560b21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f5061796d656e7420616464726573732063616e6e6f74206265207a65726f206160448201526564647265737360d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f506c6174666f726d20666565206d757374206265206265747765656e20312520604482015266616e642032302560c81b6064820152608490fd5b5060148311156100e9565b62461bcd60e51b815260206004820152601f60248201527f54726561737572792063616e6e6f74206265207a65726f2061646472657373006044820152606490fd5b631e4fbdf760e01b84526004849052602484fd5b80fd5b634e487b7160e01b84526041600452602484fd5b600080fd5b60405190608082016001600160401b038111838210176103b357604052565b51906001600160a01b03821682036105c257565b9190610642578051825560208101516001830155604081015160028301556060015160039190910180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052600060045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c806302e88899146113d65780630905f560146113b357806309705de8146107525780630cbab4f71461137c5780630d35a1671461135457806311ce02671461132b57806312e8e2c31461127c57806318b4f23b146111cd5780633998a681146111b15780633f4ba83a1461111e5780634863687e14611059578063492adaa814610f635780634c17b53014610eda5780635071f27b14610e5757806354d7494114610e3b5780635707ed4514610d465780635a2f406f14610c565780635c975abb14610c315780635e1e100414610b4357806361d027b3146105d7578063633423be14610b1a5780636605bfda1461094e5780636f04d99414610932578063715018a6146108d857806371908a03146108a15780637a9b93c61461086e5780638456cb59146107d65780638c639a85146107b85780638da5cb5b14610791578063a10eb35414610752578063a380b86b146106ec578063bb8f0b65146106cd578063bbeecdf01461065e578063c116d93614610600578063c5f956af146105d7578063d2643f1d14610504578063d4ab4b401461040f578063e53377eb146103a5578063ebe7fdaa14610387578063edfbf4f11461029a578063f2fde38b146102145763f851a440146101eb57600080fd5b34610211578060031936011261021157546040516001600160a01b039091168152602090f35b80fd5b50346102115760203660031901126102115761022e6114a6565b610236611827565b6001600160a01b031680156102865781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5034610211576020366003190112610211576004356102b7611827565b6102c660ff6007541615611550565b6305f5e100811161033757600654906102e18282141561159c565b8060065561030e6040516102f4816115d8565b838152826020820152426040820152336060820152611802565b33917feb710718efc8ce303613ea1c9fb97a21bd1154a827cdb5ed5607eadd10e8cf968480a480f35b60405162461bcd60e51b815260206004820152602260248201527f466565206d757374206265206265747765656e203020616e6420313030205553604482015261111560f21b6064820152608490fd5b50346102115780600319360112610211576020600654604051908152f35b503461021157602036600319011261021157600435600b5481101561040b576103cd90611515565b50805460018201546002830154600390930154604080519384526020840192909252908201929092526001600160a01b039091166060820152608090f35b5080fd5b5034610211578060031936011261021157600b5461042c816117af565b610439604051918261160a565b818152600b83526020810191837f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9845b8383106104e657868587604051928392602084019060208552518091526040840192915b81811061049b575050500390f35b9193509160206080826104d860019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b01940191019184939261048d565b600460206001926104f6856117c7565b815201920192019190610469565b503461021157806003193601126102115761051d611748565b50600b5490811561059257600019820191821161057e57608061054861054284611515565b506117c7565b61057c60405180926060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565bf35b634e487b7160e01b81526011600452602490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4e6f20686f7374696e6720666565206368616e676573207265636f72646564006044820152606490fd5b50346102115780600319360112610211576003546040516001600160a01b039091168152602090f35b503461021157806003193601126102115760e0600954600a54600b5460ff60075416600554906006549260018060a01b0360035416946040519687526020870152604086015215156060850152608084015260a083015260c0820152f35b503461021157602036600319011261021157600435338252600860205260ff60408320541680156106ba575b610693906116b7565b6106a36305f5e1008211156116fc565b600654908060065561030e6040516102f4816115d8565b5081546001600160a01b0316331461068a565b503461021157806003193601126102115760206040516305f5e1008152f35b50346102115760203660031901126102115760043590600a54821015610211576080610717836114f6565b50805460018201546002830154600390930154604080516001600160a01b039485168152928416602084015282019390935291166060820152f35b50346102115760203660031901126102115760209060ff906040906001600160a01b0361077d6114a6565b168152600884522054166040519015158152f35b5034610211578060031936011261021157546040516001600160a01b039091168152602090f35b50346102115780600319360112610211576020600554604051908152f35b50346102115780600319360112610211576107ef611827565b805460ff8160a01c1661085f5760ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1337ff9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f01402908280a280f35b63d93c066560e01b8252600482fd5b50346102115780600319360112610211576005549060648202918083046064149015171561057e57602082604051908152f35b5034610211578060031936011261021157606060055460065460018060a01b03600354169060405192835260208301526040820152f35b50346102115780600319360112610211576108f1611827565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610211578060031936011261021157602060405160018152f35b5034610211576020366003190112610211576109686114a6565b610970611827565b61097f60ff6007541615611550565b6001600160a01b03168015610ad5576003546001600160a01b0381169190828214610a9b576001600160a01b03191681176003556040516109bf816115d8565b82815260208101828152604082014281526060830191338352600a54600160401b811015610a87578060016109f79201600a556114f6565b949094610a73575184546001600160a01b03199081166001600160a01b03928316178655915160018601805484169183169190911790559151600285015591516003939093018054909216921691909117905533917f23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa138480a480f35b634e487b7160e01b88526004889052602488fd5b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b8152602060048201526012602482015271151c99585cdd5c9e481d5b98da185b99d95960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b50346102115780600319360112610211576004546040516001600160a01b039091168152602090f35b503461021157602036600319011261021157610b5d6114a6565b610b65611827565b610b7460ff6007541615611550565b6001600160a01b03168015610bec576004546001600160a01b0381168214610ba7576001600160a01b0319161760045580f35b60405162461bcd60e51b815260206004820152601960248201527f5061796d656e74206164647265737320756e6368616e676564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796d656e7420616464726573730000000000000000006044820152606490fd5b503461021157806003193601126102115760ff6020915460a01c166040519015158152f35b503461021157602036600319011261021157338152600860205260ff6040822054168015610d33575b610c88906116b7565b6002546001600160a01b03168015610cee578082913b15610ceb57818091602460405180958193635a2f406f60e01b835260043560048401525af18015610cde57610cd05780f35b610cd99161160a565b388180f35b50604051903d90823e3d90fd5b50fd5b60405162461bcd60e51b815260206004820152601760248201527f53746f72616765206e6f7420696e697469616c697a65640000000000000000006044820152606490fd5b5080546001600160a01b03163314610c7f565b5034610211578060031936011261021157600954610d63816117af565b610d70604051918261160a565b818152600983526020810191837f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af845b838310610e1d57868587604051928392602084019060208552518091526040840192915b818110610dd2575050500390f35b919350916020608082610e0f60019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b019401910191849392610dc4565b60046020600192610e2d856117c7565b815201920192019190610da0565b5034610211578060031936011261021157602090604051908152f35b5034610211578060031936011261021157610e70611748565b50600954908115610e9557600019820191821161057e576080610548610542846114c1565b60405162461bcd60e51b815260206004820152601760248201527f4e6f20666565206368616e676573207265636f726465640000000000000000006044820152606490fd5b5034610211578060031936011261021157338152600860205260ff6040822054168015610f50575b610f0b906116b7565b60075460ff8082161516809160ff19161760075560405190151581527fc35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa4060203392a280f35b5080546001600160a01b03163314610f02565b5034610211578060031936011261021157600a54610f80816117af565b610f8d604051918261160a565b818152600a83526020810191837fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8845b83831061103b57868587604051928392602084019060208552518091526040840192915b818110610fef575050500390f35b825180516001600160a01b039081168652602080830151821681880152604080840151908801526060928301519091169186019190915286955060809094019390920191600101610fe1565b6004602060019261104b8561176d565b815201920192019190610fbd565b5034610211578060031936011261021157611072611748565b50600a549081156110d957600019820191821161057e57608061109d611097846114f6565b5061176d565b6040805182516001600160a01b039081168252602080850151821690830152838301519282019290925260609283015190911691810191909152f35b60405162461bcd60e51b815260206004820152601c60248201527f4e6f207472656173757279206368616e676573207265636f72646564000000006044820152606490fd5b5034610211578060031936011261021157611137611827565b805460ff8160a01c16156111a25760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1337fcc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c6348280a280f35b638dfc202b60e01b8252600482fd5b5034610211578060031936011261021157602060405160148152f35b503461021157602036600319011261021157600435338252600860205260ff6040832054168015611269575b611202906116b7565b61120f60148211156116fc565b6005549080600555611240604051611226816115d8565b83815282602082015242604082015233606082015261168a565b33917f9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb998480a480f35b5081546001600160a01b031633146111f9565b503461021157602036600319011261021157600435611299611827565b6112a860ff6007541615611550565b600181101580611320575b156112db57600554906112c88282141561159c565b80600555611240604051611226816115d8565b60405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265206265747765656e20312520616e642032302500006044820152606490fd5b5060148111156112b3565b50346102115780600319360112610211576002546040516001600160a01b039091168152602090f35b50346102115760203660031901126102115760043560095481101561040b576103cd906114c1565b5034610211576020366003190112610211576005546004358181029291811591840414171561057e57602082606460405191048152f35b5034610211578060031936011261021157602060ff600754166040519015158152f35b5034610211576040366003190112610211576113f06114a6565b602435908115158092036114a257611406611827565b6001600160a01b0316801561145d5780835260086020526040832060ff1981541660ff84161790556040519182527f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce60203393a380f35b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206f70657261746f72206164647265737300000000000000006044820152606490fd5b8280fd5b600435906001600160a01b03821682036114bc57565b600080fd5b6009548110156114e057600960005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b600a548110156114e057600a60005260206000209060021b0190600090565b600b548110156114e057600b60005260206000209060021b0190600090565b80548210156114e05760005260206000209060021b0190600090565b1561155757565b60405162461bcd60e51b815260206004820152601860248201527f53797374656d20696e20656d657267656e6379206d6f646500000000000000006044820152606490fd5b156115a357565b60405162461bcd60e51b815260206004820152600d60248201526c119959481d5b98da185b99d959609a1b6044820152606490fd5b6080810190811067ffffffffffffffff8211176115f457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176115f457604052565b9190611674578051825560208101516001830155604081015160028301556060015160039190910180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052600060045260246000fd5b60095490600160401b8210156115f4576116af8260016116b594016009556009611534565b9061162c565b565b156116be57565b60405162461bcd60e51b81526020600482015260166024820152752737ba1032b6b2b933b2b731bc9037b832b930ba37b960511b6044820152606490fd5b1561170357565b60405162461bcd60e51b815260206004820152601960248201527f4665652063616e6e6f7420657863656564206d6178696d756d000000000000006044820152606490fd5b60405190611755826115d8565b60006060838281528260208201528260408201520152565b9060405161177a816115d8565b82546001600160a01b039081168252600184015481166020830152600284015460408301526003909301549092166060830152565b67ffffffffffffffff81116115f45760051b60200190565b906040516117d4816115d8565b8254815260018301546020820152600283015460408201526003909201546001600160a01b03166060830152565b600b5490600160401b8210156115f4576116af8260016116b59401600b55600b611534565b6000546001600160a01b0316330361183b57565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212208fa8775abc5d7f286df6b0231a858c56c774a552b824892e212b0020f2e969c264736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1EDF CODESIZE DUP2 SWAP1 SUB SWAP1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP5 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP6 DUP3 LT OR PUSH2 0x5AE JUMPI SWAP2 DUP1 DUP6 SWAP3 PUSH1 0xA0 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5AB JUMPI PUSH2 0x4F DUP3 PUSH2 0x5E6 JUMP JUMPDEST SWAP1 PUSH2 0x5C PUSH1 0x20 DUP5 ADD PUSH2 0x5E6 JUMP JUMPDEST SWAP3 PUSH2 0x69 PUSH1 0x40 DUP3 ADD PUSH2 0x5E6 JUMP JUMPDEST SWAP3 PUSH1 0x80 PUSH1 0x60 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP4 CALLER ISZERO PUSH2 0x597 JUMPI DUP4 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP7 SSTORE PUSH1 0x40 MLOAD SWAP8 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP8 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP7 ISZERO PUSH2 0x555 JUMPI POP PUSH1 0x1 DUP4 LT ISZERO DUP1 PUSH2 0x54A JUMPI JUMPDEST ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4A1 JUMPI PUSH4 0x5F5E100 DUP5 GT PUSH2 0x449 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x405 JUMPI JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE PUSH2 0x13B PUSH2 0x5C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x9 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x1 DUP2 ADD PUSH1 0x9 SSTORE PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x39F JUMPI PUSH1 0x9 DUP4 MSTORE PUSH2 0x1AA SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x2 SHL PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0xA SLOAD SWAP6 PUSH9 0x10000000000000000 DUP8 LT ISZERO PUSH2 0x3DD JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0xA SSTORE PUSH1 0xA SLOAD DUP8 LT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0xA SWAP1 SWAP5 MSTORE SWAP3 MLOAD PUSH1 0x2 SWAP6 SWAP1 SWAP6 SHL PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND OR SWAP1 SWAP2 SSTORE SWAP4 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9 DUP3 ADD DUP1 SLOAD DUP7 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AB SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x2D3 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x1 DUP3 ADD PUSH1 0xB SSTORE PUSH1 0x0 SWAP2 PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x39F JUMPI PUSH1 0xB SWAP1 SWAP3 MSTORE PUSH2 0x348 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x2 SHL PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH2 0x5FA JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x40 MLOAD PUSH2 0x1886 SWAP1 DUP2 PUSH2 0x659 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x7F7D6E7886DCA58922D0593A44928FB5066CD0E04369C371D72EB96E61368FA8 SWAP1 PUSH1 0x20 SWAP1 LOG2 CODESIZE PUSH2 0x116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F7374696E6720666565206D757374206265206265747765656E203020616E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x19080C4C0C081554D115 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420616464726573732063616E6E6F74206265207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6174666F726D20666565206D757374206265206265747765656E20312520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616E6420323025 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP4 GT ISZERO PUSH2 0xE9 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792063616E6E6F74206265207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x3B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5C2 JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x642 JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E88899 EQ PUSH2 0x13D6 JUMPI DUP1 PUSH4 0x905F560 EQ PUSH2 0x13B3 JUMPI DUP1 PUSH4 0x9705DE8 EQ PUSH2 0x752 JUMPI DUP1 PUSH4 0xCBAB4F7 EQ PUSH2 0x137C JUMPI DUP1 PUSH4 0xD35A167 EQ PUSH2 0x1354 JUMPI DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x132B JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0x127C JUMPI DUP1 PUSH4 0x18B4F23B EQ PUSH2 0x11CD JUMPI DUP1 PUSH4 0x3998A681 EQ PUSH2 0x11B1 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x111E JUMPI DUP1 PUSH4 0x4863687E EQ PUSH2 0x1059 JUMPI DUP1 PUSH4 0x492ADAA8 EQ PUSH2 0xF63 JUMPI DUP1 PUSH4 0x4C17B530 EQ PUSH2 0xEDA JUMPI DUP1 PUSH4 0x5071F27B EQ PUSH2 0xE57 JUMPI DUP1 PUSH4 0x54D74941 EQ PUSH2 0xE3B JUMPI DUP1 PUSH4 0x5707ED45 EQ PUSH2 0xD46 JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0xC56 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC31 JUMPI DUP1 PUSH4 0x5E1E1004 EQ PUSH2 0xB43 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0x633423BE EQ PUSH2 0xB1A JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x94E JUMPI DUP1 PUSH4 0x6F04D994 EQ PUSH2 0x932 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8D8 JUMPI DUP1 PUSH4 0x71908A03 EQ PUSH2 0x8A1 JUMPI DUP1 PUSH4 0x7A9B93C6 EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0x8C639A85 EQ PUSH2 0x7B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xA10EB354 EQ PUSH2 0x752 JUMPI DUP1 PUSH4 0xA380B86B EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xBB8F0B65 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xBBEECDF0 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xC116D936 EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xD2643F1D EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xD4AB4B40 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xE53377EB EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xEBE7FDAA EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xEDFBF4F1 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x214 JUMPI PUSH4 0xF851A440 EQ PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x22E PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x286 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2B7 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x2C6 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1550 JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 GT PUSH2 0x337 JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH2 0x2E1 DUP3 DUP3 EQ ISZERO PUSH2 0x159C JUMP JUMPDEST DUP1 PUSH1 0x6 SSTORE PUSH2 0x30E PUSH1 0x40 MLOAD PUSH2 0x2F4 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1802 JUMP JUMPDEST CALLER SWAP2 PUSH32 0xEB710718EFC8CE303613EA1C9FB97A21BD1154A827CDB5ED5607EADD10E8CF96 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E203020616E6420313030205553 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1115 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x40B JUMPI PUSH2 0x3CD SWAP1 PUSH2 0x1515 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xB SLOAD PUSH2 0x42C DUP2 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x439 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x160A JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xB DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x4E6 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x49B JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0x4D8 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x4F6 DUP6 PUSH2 0x17C7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x51D PUSH2 0x1748 JUMP JUMPDEST POP PUSH1 0xB SLOAD SWAP1 DUP2 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x57E JUMPI PUSH1 0x80 PUSH2 0x548 PUSH2 0x542 DUP5 PUSH2 0x1515 JUMP JUMPDEST POP PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x57C PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20686F7374696E6720666565206368616E676573207265636F7264656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xE0 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x5 SLOAD SWAP1 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x6BA JUMPI JUMPDEST PUSH2 0x693 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x6A3 PUSH4 0x5F5E100 DUP3 GT ISZERO PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 DUP1 PUSH1 0x6 SSTORE PUSH2 0x30E PUSH1 0x40 MLOAD PUSH2 0x2F4 DUP2 PUSH2 0x15D8 JUMP JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68A JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xA SLOAD DUP3 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x80 PUSH2 0x717 DUP4 PUSH2 0x14F6 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x77D PUSH2 0x14A6 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x7EF PUSH2 0x1827 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH2 0x85F JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xF9C91E483CE8BC4CC31645E7CC0F01A3371813E76469A71104841507F0140290 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x57E JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x60 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x8F1 PUSH2 0x1827 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x968 PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0x970 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x97F PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 DUP3 EQ PUSH2 0xA9B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x9BF DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x40 DUP3 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xA87 JUMPI DUP1 PUSH1 0x1 PUSH2 0x9F7 SWAP3 ADD PUSH1 0xA SSTORE PUSH2 0x14F6 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0xA73 JUMPI MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x23C12D5579081C5F1077C04A6B1C114D0F3DE239E81A436836D30ECB099FFA13 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 SWAP1 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C99585CDD5C9E481D5B98DA185B99D959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0xB5D PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0xB65 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0xB74 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xBEC JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 EQ PUSH2 0xBA7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74206164647265737320756E6368616E67656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xD33 JUMPI JUMPDEST PUSH2 0xC88 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xCEE JUMPI DUP1 DUP3 SWAP2 EXTCODESIZE ISZERO PUSH2 0xCEB JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0x5A2F406F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xCDE JUMPI PUSH2 0xCD0 JUMPI DUP1 RETURN JUMPDEST PUSH2 0xCD9 SWAP2 PUSH2 0x160A JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F72616765206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC7F JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x9 SLOAD PUSH2 0xD63 DUP2 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0xD70 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x160A JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0xE1D JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xDD2 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0xE0F PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0xE2D DUP6 PUSH2 0x17C7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0xE70 PUSH2 0x1748 JUMP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x57E JUMPI PUSH1 0x80 PUSH2 0x548 PUSH2 0x542 DUP5 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20666565206368616E676573207265636F72646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xF50 JUMPI JUMPDEST PUSH2 0xF0B SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 SWAP2 PUSH1 0xFF NOT AND OR PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0xC35ED978E97C366B3A5F9375508BCFBCA850FCA66BF334B9477118918E6EAA40 PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF02 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xA SLOAD PUSH2 0xF80 DUP2 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0xF8D PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x160A JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x103B JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xFEF JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 SWAP6 POP PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x104B DUP6 PUSH2 0x176D JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x1072 PUSH2 0x1748 JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 DUP2 ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x57E JUMPI PUSH1 0x80 PUSH2 0x109D PUSH2 0x1097 DUP5 PUSH2 0x14F6 JUMP JUMPDEST POP PUSH2 0x176D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE DUP4 DUP4 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207472656173757279206368616E676573207265636F7264656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x1137 PUSH2 0x1827 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x11A2 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xCC2B689B01792CCC45F7D02099E9EF3FFD7058E45803395690C61EFDD0F0C634 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1269 JUMPI JUMPDEST PUSH2 0x1202 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x120F PUSH1 0x14 DUP3 GT ISZERO PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 DUP1 PUSH1 0x5 SSTORE PUSH2 0x1240 PUSH1 0x40 MLOAD PUSH2 0x1226 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x168A JUMP JUMPDEST CALLER SWAP2 PUSH32 0x9E74D2175D1604CA094D3C60971771FB54AA1A0ADBADCEDCB69C48CFBD4FEB99 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1299 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x12A8 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 PUSH2 0x1320 JUMPI JUMPDEST ISZERO PUSH2 0x12DB JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH2 0x12C8 DUP3 DUP3 EQ ISZERO PUSH2 0x159C JUMP JUMPDEST DUP1 PUSH1 0x5 SSTORE PUSH2 0x1240 PUSH1 0x40 MLOAD PUSH2 0x1226 DUP2 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20312520616E64203230250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x12B3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x40B JUMPI PUSH2 0x3CD SWAP1 PUSH2 0x14C1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 CALLDATALOAD DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x57E JUMPI PUSH1 0x20 DUP3 PUSH1 0x64 PUSH1 0x40 MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x13F0 PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x14A2 JUMPI PUSH2 0x1406 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x145D JUMPI DUP1 DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x14BC JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1557 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53797374656D20696E20656D657267656E6379206D6F64650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x15A3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x119959481D5B98DA185B99D959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15F4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15F4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1674 JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x16AF DUP3 PUSH1 0x1 PUSH2 0x16B5 SWAP5 ADD PUSH1 0x9 SSTORE PUSH1 0x9 PUSH2 0x1534 JUMP JUMPDEST SWAP1 PUSH2 0x162C JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x16BE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1032B6B2B933B2B731BC9037B832B930BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1703 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616E6E6F7420657863656564206D6178696D756D00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1755 DUP3 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x177A DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15F4 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x17D4 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x16AF DUP3 PUSH1 0x1 PUSH2 0x16B5 SWAP5 ADD PUSH1 0xB SSTORE PUSH1 0xB PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x183B JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xA8 PUSH24 0x5ABC5D7F286DF6B0231A858C56C774A552B824892E212B00 KECCAK256 CALLCODE 0xE9 PUSH10 0xC264736F6C634300081C STOP CALLER ",
              "sourceMap": "255:12591:10:-:0;;;;;;;;-1:-1:-1;255:12591:10;;;;;;;;;-1:-1:-1;;255:12591:10;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;2957:10;;1273:26:0;1269:95;;255:12591:10;;2957:10;-1:-1:-1;;;;;;860:15:10;;;;;;255:12591;;;;-1:-1:-1;;;;;255:12591:10;3052:40:0;255:12591:10;;3052:40:0;255:12591:10;860:15;;1061:5;255:12591;;-1:-1:-1;;255:12591:10;;;-1:-1:-1;;;;;255:12591:10;;2987:30;;255:12591;;3084:39;255:12591;3084:39;;;:82;;;-1:-1:-1;722:2:10;;;-1:-1:-1;;;;;255:12591:10;3250:29;722:2;;860:15;3387:30;;860:15;;-1:-1:-1;;;;;255:12591:10;;3496:184;;-1:-1:-1;;3698:34:10;860:15;;-1:-1:-1;;;;;;860:15:10;;;;;3742:40;860:15;;;3792:24;860:15;;;;;:::i;:::-;;;;;255:12591;3878:160;;860:15;3977;255:12591;3878:160;;860:15;2957:10;255:12591;3878:160;;860:15;3862:10;860:15;;;;;;;255:12591;860:15;;3862:10;860:15;3862:10;860:15;;;;;;3862:10;860:15;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;255:12591;4071:181;;860:15;;;255:12591;4071:181;;3977:15;860;;255:12591;4071:181;;2957:10;;860:15;;4050;860;;;;;;;;255:12591;860:15;;4050;860;4050;860;;;;;;4050;860;;;;;;;;;;;;;;;-1:-1:-1;;;;;;860:15:10;;;-1:-1:-1;;;;;255:12591:10;;;860:15;;;;;;;;;;;;;255:12591;;;860:15;;;;;;;;;;;;;;;;;;;;;;;255:12591;;860:15;;;;;;;;;:::i;:::-;;-1:-1:-1;860:15:10;;255:12591;4287:159;;860:15;3977;255:12591;4287:159;;860:15;2957:10;255:12591;4287:159;;860:15;4264:17;860:15;;;;;;;;255:12591;860:15;;4264:17;860:15;-1:-1:-1;860:15:10;4264:17;860:15;;;;;;4264:17;860:15;;;;;-1:-1:-1;;860:15:10;;;;;:::i;:::-;2957:10;-1:-1:-1;860:15:10;4501:18;255:12591;860:15;255:12591;-1:-1:-1;860:15:10;255:12591;;;;;;;;;;;;860:15;;2957:10;;4553:54;255:12591;2957:10;4553:54;;255:12591;;;;;;;;;860:15;-1:-1:-1;;;860:15:10;;;;;;255:12591;860:15;;255:12591;;;-1:-1:-1;255:12591:10;;;;;-1:-1:-1;255:12591:10;860:15;-1:-1:-1;;;860:15:10;;;;;;255:12591;860:15;;-1:-1:-1;;;255:12591:10;;;;;;;;860:15;-1:-1:-1;;;255:12591:10;;;;;;;;3496:184;3546:49;860:15;;-1:-1:-1;;;;;;860:15:10;;;;;255:12591;;3653:15;860;;3614:55;;255:12591;;3614:55;3496:184;;;860:15;255:12591;;-1:-1:-1;;;860:15:10;;255:12591;860:15;;;;;;;;255:12591;860:15;255:12591;;;860:15;-1:-1:-1;;;860:15:10;;;;;;;722:2;255:12591;;-1:-1:-1;;;722:2:10;;255:12591;722:2;;;;;;;;255:12591;722:2;255:12591;;;722:2;-1:-1:-1;;;722:2:10;;;;;;;;255:12591;;-1:-1:-1;;;722:2:10;;255:12591;722:2;;;;;;;;255:12591;722:2;255:12591;;;722:2;-1:-1:-1;;;722:2:10;;;;;;;3084:82;3127:39;722:2;3127:39;;;3084:82;;255:12591;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;1269:95:0;-1:-1:-1;;;1322:31:0;;;255:12591:10;;;;1322:31:0;;255:12591:10;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;255:12591:10;;;;;;:::o;860:15::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;860:15:10;-1:-1:-1;;;;;255:12591:10;;;;860:15;;;;;;:::o;:::-;255:12591;;;860:15;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 5286,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_struct_FeeChange": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_struct_TreasuryChange": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256_uint256_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_struct_struct_TreasuryChange": {
                  "entryPoint": 5960,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_TreasuryChange_dyn": {
                  "entryPoint": 6063,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_push_from_struct_FeeChange_to_array_struct_FeeChange_storage_dyn_ptr": {
                  "entryPoint": 5770,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "array_push_from_struct_HostingFeeChange_to_array_struct_HostingFeeChange_storage_dyn_ptr": {
                  "entryPoint": 6146,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 5642,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_18446": {
                  "entryPoint": 5592,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 6183,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_reference_type_struct_FeeChange": {
                  "entryPoint": 6087,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_reference_type_struct_TreasuryChange": {
                  "entryPoint": 5997,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_6aa0": {
                  "entryPoint": 5456,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_6d20": {
                  "entryPoint": 5884,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c5b9": {
                  "entryPoint": 5532,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_dc1b": {
                  "entryPoint": 5815,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_struct_FeeChange__dyn": {
                  "entryPoint": 5428,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_FeeChange__dyn_18445": {
                  "entryPoint": 5313,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_FeeChange__dyn_18450": {
                  "entryPoint": 5366,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_FeeChange__dyn_18461": {
                  "entryPoint": 5397,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_struct_FeeChange_to_struct_FeeChange": {
                  "entryPoint": 5676,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b6000803560e01c806302e88899146113d65780630905f560146113b357806309705de8146107525780630cbab4f71461137c5780630d35a1671461135457806311ce02671461132b57806312e8e2c31461127c57806318b4f23b146111cd5780633998a681146111b15780633f4ba83a1461111e5780634863687e14611059578063492adaa814610f635780634c17b53014610eda5780635071f27b14610e5757806354d7494114610e3b5780635707ed4514610d465780635a2f406f14610c565780635c975abb14610c315780635e1e100414610b4357806361d027b3146105d7578063633423be14610b1a5780636605bfda1461094e5780636f04d99414610932578063715018a6146108d857806371908a03146108a15780637a9b93c61461086e5780638456cb59146107d65780638c639a85146107b85780638da5cb5b14610791578063a10eb35414610752578063a380b86b146106ec578063bb8f0b65146106cd578063bbeecdf01461065e578063c116d93614610600578063c5f956af146105d7578063d2643f1d14610504578063d4ab4b401461040f578063e53377eb146103a5578063ebe7fdaa14610387578063edfbf4f11461029a578063f2fde38b146102145763f851a440146101eb57600080fd5b34610211578060031936011261021157546040516001600160a01b039091168152602090f35b80fd5b50346102115760203660031901126102115761022e6114a6565b610236611827565b6001600160a01b031680156102865781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5034610211576020366003190112610211576004356102b7611827565b6102c660ff6007541615611550565b6305f5e100811161033757600654906102e18282141561159c565b8060065561030e6040516102f4816115d8565b838152826020820152426040820152336060820152611802565b33917feb710718efc8ce303613ea1c9fb97a21bd1154a827cdb5ed5607eadd10e8cf968480a480f35b60405162461bcd60e51b815260206004820152602260248201527f466565206d757374206265206265747765656e203020616e6420313030205553604482015261111560f21b6064820152608490fd5b50346102115780600319360112610211576020600654604051908152f35b503461021157602036600319011261021157600435600b5481101561040b576103cd90611515565b50805460018201546002830154600390930154604080519384526020840192909252908201929092526001600160a01b039091166060820152608090f35b5080fd5b5034610211578060031936011261021157600b5461042c816117af565b610439604051918261160a565b818152600b83526020810191837f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9845b8383106104e657868587604051928392602084019060208552518091526040840192915b81811061049b575050500390f35b9193509160206080826104d860019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b01940191019184939261048d565b600460206001926104f6856117c7565b815201920192019190610469565b503461021157806003193601126102115761051d611748565b50600b5490811561059257600019820191821161057e57608061054861054284611515565b506117c7565b61057c60405180926060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565bf35b634e487b7160e01b81526011600452602490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4e6f20686f7374696e6720666565206368616e676573207265636f72646564006044820152606490fd5b50346102115780600319360112610211576003546040516001600160a01b039091168152602090f35b503461021157806003193601126102115760e0600954600a54600b5460ff60075416600554906006549260018060a01b0360035416946040519687526020870152604086015215156060850152608084015260a083015260c0820152f35b503461021157602036600319011261021157600435338252600860205260ff60408320541680156106ba575b610693906116b7565b6106a36305f5e1008211156116fc565b600654908060065561030e6040516102f4816115d8565b5081546001600160a01b0316331461068a565b503461021157806003193601126102115760206040516305f5e1008152f35b50346102115760203660031901126102115760043590600a54821015610211576080610717836114f6565b50805460018201546002830154600390930154604080516001600160a01b039485168152928416602084015282019390935291166060820152f35b50346102115760203660031901126102115760209060ff906040906001600160a01b0361077d6114a6565b168152600884522054166040519015158152f35b5034610211578060031936011261021157546040516001600160a01b039091168152602090f35b50346102115780600319360112610211576020600554604051908152f35b50346102115780600319360112610211576107ef611827565b805460ff8160a01c1661085f5760ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1337ff9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f01402908280a280f35b63d93c066560e01b8252600482fd5b50346102115780600319360112610211576005549060648202918083046064149015171561057e57602082604051908152f35b5034610211578060031936011261021157606060055460065460018060a01b03600354169060405192835260208301526040820152f35b50346102115780600319360112610211576108f1611827565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610211578060031936011261021157602060405160018152f35b5034610211576020366003190112610211576109686114a6565b610970611827565b61097f60ff6007541615611550565b6001600160a01b03168015610ad5576003546001600160a01b0381169190828214610a9b576001600160a01b03191681176003556040516109bf816115d8565b82815260208101828152604082014281526060830191338352600a54600160401b811015610a87578060016109f79201600a556114f6565b949094610a73575184546001600160a01b03199081166001600160a01b03928316178655915160018601805484169183169190911790559151600285015591516003939093018054909216921691909117905533917f23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa138480a480f35b634e487b7160e01b88526004889052602488fd5b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b8152602060048201526012602482015271151c99585cdd5c9e481d5b98da185b99d95960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b50346102115780600319360112610211576004546040516001600160a01b039091168152602090f35b503461021157602036600319011261021157610b5d6114a6565b610b65611827565b610b7460ff6007541615611550565b6001600160a01b03168015610bec576004546001600160a01b0381168214610ba7576001600160a01b0319161760045580f35b60405162461bcd60e51b815260206004820152601960248201527f5061796d656e74206164647265737320756e6368616e676564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796d656e7420616464726573730000000000000000006044820152606490fd5b503461021157806003193601126102115760ff6020915460a01c166040519015158152f35b503461021157602036600319011261021157338152600860205260ff6040822054168015610d33575b610c88906116b7565b6002546001600160a01b03168015610cee578082913b15610ceb57818091602460405180958193635a2f406f60e01b835260043560048401525af18015610cde57610cd05780f35b610cd99161160a565b388180f35b50604051903d90823e3d90fd5b50fd5b60405162461bcd60e51b815260206004820152601760248201527f53746f72616765206e6f7420696e697469616c697a65640000000000000000006044820152606490fd5b5080546001600160a01b03163314610c7f565b5034610211578060031936011261021157600954610d63816117af565b610d70604051918261160a565b818152600983526020810191837f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af845b838310610e1d57868587604051928392602084019060208552518091526040840192915b818110610dd2575050500390f35b919350916020608082610e0f60019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b019401910191849392610dc4565b60046020600192610e2d856117c7565b815201920192019190610da0565b5034610211578060031936011261021157602090604051908152f35b5034610211578060031936011261021157610e70611748565b50600954908115610e9557600019820191821161057e576080610548610542846114c1565b60405162461bcd60e51b815260206004820152601760248201527f4e6f20666565206368616e676573207265636f726465640000000000000000006044820152606490fd5b5034610211578060031936011261021157338152600860205260ff6040822054168015610f50575b610f0b906116b7565b60075460ff8082161516809160ff19161760075560405190151581527fc35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa4060203392a280f35b5080546001600160a01b03163314610f02565b5034610211578060031936011261021157600a54610f80816117af565b610f8d604051918261160a565b818152600a83526020810191837fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8845b83831061103b57868587604051928392602084019060208552518091526040840192915b818110610fef575050500390f35b825180516001600160a01b039081168652602080830151821681880152604080840151908801526060928301519091169186019190915286955060809094019390920191600101610fe1565b6004602060019261104b8561176d565b815201920192019190610fbd565b5034610211578060031936011261021157611072611748565b50600a549081156110d957600019820191821161057e57608061109d611097846114f6565b5061176d565b6040805182516001600160a01b039081168252602080850151821690830152838301519282019290925260609283015190911691810191909152f35b60405162461bcd60e51b815260206004820152601c60248201527f4e6f207472656173757279206368616e676573207265636f72646564000000006044820152606490fd5b5034610211578060031936011261021157611137611827565b805460ff8160a01c16156111a25760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1337fcc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c6348280a280f35b638dfc202b60e01b8252600482fd5b5034610211578060031936011261021157602060405160148152f35b503461021157602036600319011261021157600435338252600860205260ff6040832054168015611269575b611202906116b7565b61120f60148211156116fc565b6005549080600555611240604051611226816115d8565b83815282602082015242604082015233606082015261168a565b33917f9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb998480a480f35b5081546001600160a01b031633146111f9565b503461021157602036600319011261021157600435611299611827565b6112a860ff6007541615611550565b600181101580611320575b156112db57600554906112c88282141561159c565b80600555611240604051611226816115d8565b60405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265206265747765656e20312520616e642032302500006044820152606490fd5b5060148111156112b3565b50346102115780600319360112610211576002546040516001600160a01b039091168152602090f35b50346102115760203660031901126102115760043560095481101561040b576103cd906114c1565b5034610211576020366003190112610211576005546004358181029291811591840414171561057e57602082606460405191048152f35b5034610211578060031936011261021157602060ff600754166040519015158152f35b5034610211576040366003190112610211576113f06114a6565b602435908115158092036114a257611406611827565b6001600160a01b0316801561145d5780835260086020526040832060ff1981541660ff84161790556040519182527f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce60203393a380f35b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206f70657261746f72206164647265737300000000000000006044820152606490fd5b8280fd5b600435906001600160a01b03821682036114bc57565b600080fd5b6009548110156114e057600960005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b600a548110156114e057600a60005260206000209060021b0190600090565b600b548110156114e057600b60005260206000209060021b0190600090565b80548210156114e05760005260206000209060021b0190600090565b1561155757565b60405162461bcd60e51b815260206004820152601860248201527f53797374656d20696e20656d657267656e6379206d6f646500000000000000006044820152606490fd5b156115a357565b60405162461bcd60e51b815260206004820152600d60248201526c119959481d5b98da185b99d959609a1b6044820152606490fd5b6080810190811067ffffffffffffffff8211176115f457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176115f457604052565b9190611674578051825560208101516001830155604081015160028301556060015160039190910180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052600060045260246000fd5b60095490600160401b8210156115f4576116af8260016116b594016009556009611534565b9061162c565b565b156116be57565b60405162461bcd60e51b81526020600482015260166024820152752737ba1032b6b2b933b2b731bc9037b832b930ba37b960511b6044820152606490fd5b1561170357565b60405162461bcd60e51b815260206004820152601960248201527f4665652063616e6e6f7420657863656564206d6178696d756d000000000000006044820152606490fd5b60405190611755826115d8565b60006060838281528260208201528260408201520152565b9060405161177a816115d8565b82546001600160a01b039081168252600184015481166020830152600284015460408301526003909301549092166060830152565b67ffffffffffffffff81116115f45760051b60200190565b906040516117d4816115d8565b8254815260018301546020820152600283015460408201526003909201546001600160a01b03166060830152565b600b5490600160401b8210156115f4576116af8260016116b59401600b55600b611534565b6000546001600160a01b0316330361183b57565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212208fa8775abc5d7f286df6b0231a858c56c774a552b824892e212b0020f2e969c264736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E88899 EQ PUSH2 0x13D6 JUMPI DUP1 PUSH4 0x905F560 EQ PUSH2 0x13B3 JUMPI DUP1 PUSH4 0x9705DE8 EQ PUSH2 0x752 JUMPI DUP1 PUSH4 0xCBAB4F7 EQ PUSH2 0x137C JUMPI DUP1 PUSH4 0xD35A167 EQ PUSH2 0x1354 JUMPI DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x132B JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0x127C JUMPI DUP1 PUSH4 0x18B4F23B EQ PUSH2 0x11CD JUMPI DUP1 PUSH4 0x3998A681 EQ PUSH2 0x11B1 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x111E JUMPI DUP1 PUSH4 0x4863687E EQ PUSH2 0x1059 JUMPI DUP1 PUSH4 0x492ADAA8 EQ PUSH2 0xF63 JUMPI DUP1 PUSH4 0x4C17B530 EQ PUSH2 0xEDA JUMPI DUP1 PUSH4 0x5071F27B EQ PUSH2 0xE57 JUMPI DUP1 PUSH4 0x54D74941 EQ PUSH2 0xE3B JUMPI DUP1 PUSH4 0x5707ED45 EQ PUSH2 0xD46 JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0xC56 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC31 JUMPI DUP1 PUSH4 0x5E1E1004 EQ PUSH2 0xB43 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0x633423BE EQ PUSH2 0xB1A JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x94E JUMPI DUP1 PUSH4 0x6F04D994 EQ PUSH2 0x932 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8D8 JUMPI DUP1 PUSH4 0x71908A03 EQ PUSH2 0x8A1 JUMPI DUP1 PUSH4 0x7A9B93C6 EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0x8C639A85 EQ PUSH2 0x7B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xA10EB354 EQ PUSH2 0x752 JUMPI DUP1 PUSH4 0xA380B86B EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xBB8F0B65 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xBBEECDF0 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xC116D936 EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xD2643F1D EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xD4AB4B40 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xE53377EB EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xEBE7FDAA EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xEDFBF4F1 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x214 JUMPI PUSH4 0xF851A440 EQ PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x22E PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x286 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2B7 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x2C6 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1550 JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 GT PUSH2 0x337 JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH2 0x2E1 DUP3 DUP3 EQ ISZERO PUSH2 0x159C JUMP JUMPDEST DUP1 PUSH1 0x6 SSTORE PUSH2 0x30E PUSH1 0x40 MLOAD PUSH2 0x2F4 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1802 JUMP JUMPDEST CALLER SWAP2 PUSH32 0xEB710718EFC8CE303613EA1C9FB97A21BD1154A827CDB5ED5607EADD10E8CF96 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E203020616E6420313030205553 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1115 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x40B JUMPI PUSH2 0x3CD SWAP1 PUSH2 0x1515 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xB SLOAD PUSH2 0x42C DUP2 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x439 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x160A JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xB DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x4E6 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x49B JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0x4D8 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x4F6 DUP6 PUSH2 0x17C7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x51D PUSH2 0x1748 JUMP JUMPDEST POP PUSH1 0xB SLOAD SWAP1 DUP2 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x57E JUMPI PUSH1 0x80 PUSH2 0x548 PUSH2 0x542 DUP5 PUSH2 0x1515 JUMP JUMPDEST POP PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x57C PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20686F7374696E6720666565206368616E676573207265636F7264656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xE0 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x5 SLOAD SWAP1 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x6BA JUMPI JUMPDEST PUSH2 0x693 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x6A3 PUSH4 0x5F5E100 DUP3 GT ISZERO PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 DUP1 PUSH1 0x6 SSTORE PUSH2 0x30E PUSH1 0x40 MLOAD PUSH2 0x2F4 DUP2 PUSH2 0x15D8 JUMP JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68A JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xA SLOAD DUP3 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x80 PUSH2 0x717 DUP4 PUSH2 0x14F6 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x77D PUSH2 0x14A6 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x7EF PUSH2 0x1827 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH2 0x85F JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xF9C91E483CE8BC4CC31645E7CC0F01A3371813E76469A71104841507F0140290 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x57E JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x60 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x8F1 PUSH2 0x1827 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x968 PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0x970 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x97F PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 DUP3 EQ PUSH2 0xA9B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x9BF DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x40 DUP3 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xA87 JUMPI DUP1 PUSH1 0x1 PUSH2 0x9F7 SWAP3 ADD PUSH1 0xA SSTORE PUSH2 0x14F6 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0xA73 JUMPI MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x23C12D5579081C5F1077C04A6B1C114D0F3DE239E81A436836D30ECB099FFA13 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 SWAP1 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C99585CDD5C9E481D5B98DA185B99D959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0xB5D PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0xB65 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0xB74 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xBEC JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 EQ PUSH2 0xBA7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74206164647265737320756E6368616E67656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xD33 JUMPI JUMPDEST PUSH2 0xC88 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xCEE JUMPI DUP1 DUP3 SWAP2 EXTCODESIZE ISZERO PUSH2 0xCEB JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0x5A2F406F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xCDE JUMPI PUSH2 0xCD0 JUMPI DUP1 RETURN JUMPDEST PUSH2 0xCD9 SWAP2 PUSH2 0x160A JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F72616765206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC7F JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x9 SLOAD PUSH2 0xD63 DUP2 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0xD70 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x160A JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0xE1D JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xDD2 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0xE0F PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0xE2D DUP6 PUSH2 0x17C7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0xE70 PUSH2 0x1748 JUMP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x57E JUMPI PUSH1 0x80 PUSH2 0x548 PUSH2 0x542 DUP5 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20666565206368616E676573207265636F72646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xF50 JUMPI JUMPDEST PUSH2 0xF0B SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 SWAP2 PUSH1 0xFF NOT AND OR PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0xC35ED978E97C366B3A5F9375508BCFBCA850FCA66BF334B9477118918E6EAA40 PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF02 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xA SLOAD PUSH2 0xF80 DUP2 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0xF8D PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x160A JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x103B JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xFEF JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 SWAP6 POP PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x104B DUP6 PUSH2 0x176D JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x1072 PUSH2 0x1748 JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 DUP2 ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x57E JUMPI PUSH1 0x80 PUSH2 0x109D PUSH2 0x1097 DUP5 PUSH2 0x14F6 JUMP JUMPDEST POP PUSH2 0x176D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE DUP4 DUP4 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207472656173757279206368616E676573207265636F7264656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x1137 PUSH2 0x1827 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x11A2 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xCC2B689B01792CCC45F7D02099E9EF3FFD7058E45803395690C61EFDD0F0C634 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1269 JUMPI JUMPDEST PUSH2 0x1202 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x120F PUSH1 0x14 DUP3 GT ISZERO PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 DUP1 PUSH1 0x5 SSTORE PUSH2 0x1240 PUSH1 0x40 MLOAD PUSH2 0x1226 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x168A JUMP JUMPDEST CALLER SWAP2 PUSH32 0x9E74D2175D1604CA094D3C60971771FB54AA1A0ADBADCEDCB69C48CFBD4FEB99 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1299 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x12A8 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 PUSH2 0x1320 JUMPI JUMPDEST ISZERO PUSH2 0x12DB JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH2 0x12C8 DUP3 DUP3 EQ ISZERO PUSH2 0x159C JUMP JUMPDEST DUP1 PUSH1 0x5 SSTORE PUSH2 0x1240 PUSH1 0x40 MLOAD PUSH2 0x1226 DUP2 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20312520616E64203230250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x12B3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x40B JUMPI PUSH2 0x3CD SWAP1 PUSH2 0x14C1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 CALLDATALOAD DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x57E JUMPI PUSH1 0x20 DUP3 PUSH1 0x64 PUSH1 0x40 MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x13F0 PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x14A2 JUMPI PUSH2 0x1406 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x145D JUMPI DUP1 DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x14BC JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1557 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53797374656D20696E20656D657267656E6379206D6F64650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x15A3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x119959481D5B98DA185B99D959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15F4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15F4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1674 JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x16AF DUP3 PUSH1 0x1 PUSH2 0x16B5 SWAP5 ADD PUSH1 0x9 SSTORE PUSH1 0x9 PUSH2 0x1534 JUMP JUMPDEST SWAP1 PUSH2 0x162C JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x16BE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1032B6B2B933B2B731BC9037B832B930BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1703 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616E6E6F7420657863656564206D6178696D756D00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1755 DUP3 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x177A DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15F4 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x17D4 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x16AF DUP3 PUSH1 0x1 PUSH2 0x16B5 SWAP5 ADD PUSH1 0xB SSTORE PUSH1 0xB PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x183B JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xA8 PUSH24 0x5ABC5D7F286DF6B0231A858C56C774A552B824892E212B00 KECCAK256 CALLCODE 0xE9 PUSH10 0xC264736F6C634300081C STOP CALLER ",
              "sourceMap": "255:12591:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;255:12591:10;2627:22:0;;2623:91;;255:12591:10;;-1:-1:-1;;;;;;255:12591:10;;;;;;-1:-1:-1;;;;;255:12591:10;3052:40:0;255:12591:10;;3052:40:0;255:12591:10;;2623:91:0;-1:-1:-1;;;2672:31:0;;255:12591:10;;;;;2672:31:0;;255:12591:10;;;;;;;-1:-1:-1;;255:12591:10;;;;;;1500:62:0;;:::i;:::-;2689:51:10;255:12591;2698:13;255:12591;;2697:14;2689:51;:::i;:::-;860:15;5468:26;;255:12591;;5583:10;255:12591;5572:21;5564:47;5572:21;;;;5564:47;:::i;:::-;255:12591;5583:10;255:12591;5743:184;255:12591;;;;;:::i;:::-;;;;5766:160;255:12591;5766:160;;255:12591;5865:15;255:12591;5766:160;;255:12591;5905:10;5766:160;;;255:12591;5743:184;:::i;:::-;5905:10;5951:46;;;;;255:12591;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;579:25;255:12591;;;;;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;;;1739:43;255:12591;1739:43;;;;;;;;:::i;:::-;-1:-1:-1;255:12591:10;;;1739:43;;255:12591;1739:43;;;255:12591;1739:43;;;;255:12591;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;1739:43;;255:12591;;;;;;;;;;;;;;;9955:17;255:12591;;;;:::i;:::-;;;;;;;:::i;:::-;;;;9955:17;255:12591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12000:17;255:12591;12000:28;;;255:12591;;-1:-1:-1;;255:12591:10;;;;;;;;;12081:47;;;:::i;:::-;255:12591;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;362:30;255:12591;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;10808:10;255:12591;10858:15;255:12591;10915:17;255:12591;;10967:13;255:12591;;11011:18;255:12591;;11059:10;255:12591;;;;;;;11097:15;255:12591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;;;2562:10;255:12591;;2543:18;255:12591;;;;;;;;2543:55;;;;255:12591;2535:90;;;:::i;:::-;8885:64;860:15;8893:26;;;8885:64;:::i;:::-;8985:10;255:12591;;;8985:10;255:12591;9036:184;255:12591;;;;;:::i;2543:55::-;-1:-1:-1;255:12591:10;;-1:-1:-1;;;;;255:12591:10;2562:10;2577:21;2543:55;;255:12591;;;;;;;;;;;;;;;;860:15;255:12591;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;;;;1523:39;255:12591;1523:39;;;;;255:12591;1523:39;;;:::i;:::-;-1:-1:-1;255:12591:10;;;1523:39;;255:12591;1523:39;;;255:12591;1523:39;;;;255:12591;;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;;;;;;;-1:-1:-1;;;;;255:12591:10;;:::i;:::-;;;;11273:18;255:12591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;505:33;255:12591;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:12591:10;;;;;;;1939:61:7;;-1:-1:-1;;;;255:12591:10;-1:-1:-1;;;255:12591:10;;;;;735:10:6;255:12591:10;;2427:20:7;;255:12591:10;;2427:20:7;735:10:6;7084:23:10;;;;255:12591;;1939:61:7;-1:-1:-1;;;1974:15:7;;255:12591:10;1974:15:7;;255:12591:10;;;;;;;;;;;;;10151:18;255:12591;;10172:3;255:12591;;;;;;10172:3;255:12591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12378:18;255:12591;12398:10;255:12591;;;;;;12410:15;255:12591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:12591:10;;-1:-1:-1;;;;;;255:12591:10;;;;;;-1:-1:-1;;;;;255:12591:10;3052:40:0;255:12591:10;;3052:40:0;255:12591:10;;;;;;;;;;;;;;;;;;792:1;255:12591;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;2689:51:10;255:12591;2698:13;255:12591;;2697:14;2689:51;:::i;:::-;-1:-1:-1;;;;;255:12591:10;6123:33;;255:12591;;6226:15;255:12591;-1:-1:-1;;;;;255:12591:10;;;;6203:38;;;255:12591;;-1:-1:-1;;;;;;255:12591:10;;;6226:15;255:12591;;;;;;:::i;:::-;;;;;6425:185;;255:12591;;;;6425:185;;6549:15;255:12591;;6425:185;;;6589:10;;255:12591;;6404:15;255:12591;-1:-1:-1;;;255:12591:10;;;;;;;;;;6404:15;255:12591;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;255:12591:10;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6226:15;255:12591;;;;;;;;;;;;;;;;;6589:10;;6627:61;;;;255:12591;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;2689:51:10;255:12591;2698:13;255:12591;;2697:14;2689:51;:::i;:::-;-1:-1:-1;;;;;255:12591:10;6812:32;;255:12591;;;;-1:-1:-1;;;;;255:12591:10;;6890:36;;255:12591;;-1:-1:-1;;;;;;255:12591:10;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;2562:10;255:12591;;2543:18;255:12591;;;;;;;;2543:55;;;;255:12591;2535:90;;;:::i;:::-;7969:15;255:12591;-1:-1:-1;;;;;255:12591:10;7961:38;;255:12591;;8037:53;;;;;;;255:12591;;;8037:53;255:12591;;;;;;;;;8037:53;;255:12591;;;8037:53;;255:12591;8037:53;;;;;;;;255:12591;;8037:53;;;;:::i;:::-;;;255:12591;;8037:53;255:12591;;;;;;;;;;;8037:53;255:12591;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;2543:55;-1:-1:-1;255:12591:10;;-1:-1:-1;;;;;255:12591:10;2562:10;2577:21;2543:55;;255:12591;;;;;;;;;;;;;9619:10;255:12591;;;;:::i;:::-;;;;;;;:::i;:::-;;;;9619:10;255:12591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11449:10;255:12591;11449:21;;;255:12591;;-1:-1:-1;;255:12591:10;;;;;;;;;11515:33;;;:::i;255:12591::-;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2562:10;255:12591;;2543:18;255:12591;;;;;;;;2543:55;;;;255:12591;2535:90;;;:::i;:::-;7382:13;255:12591;;;;;7381:14;255:12591;;;;;;;7382:13;255:12591;;;;;;;;7410:47;255:12591;2562:10;7410:47;;255:12591;;2543:55;-1:-1:-1;255:12591:10;;-1:-1:-1;;;;;255:12591:10;2562:10;2577:21;2543:55;;255:12591;;;;;;;;;;;;;9781:15;255:12591;;;;:::i;:::-;;;;;;;:::i;:::-;;;;9781:15;255:12591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;255:12591:10;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11711:15;255:12591;11711:26;;;255:12591;;-1:-1:-1;;255:12591:10;;;;;;;;;11787:43;;;:::i;:::-;255:12591;;:::i;:::-;;;;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:12591:10;;;;;;;2140:9:7;2136:62;;-1:-1:-1;;;;255:12591:10;;;;;735:10:6;255:12591:10;;2674:22:7;;255:12591:10;;2674:22:7;735:10:6;7193:25:10;;;;255:12591;;2136:62:7;-1:-1:-1;;;2172:15:7;;255:12591:10;2172:15:7;;255:12591:10;;;;;;;;;;;;;;;;722:2;255:12591;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;;;2562:10;255:12591;;2543:18;255:12591;;;;;;;;2543:55;;;;255:12591;2535:90;;;:::i;:::-;8273:72;722:2;8281:34;;;8273:72;:::i;:::-;8381:18;255:12591;;;8381:18;255:12591;8455:177;255:12591;;;;;:::i;:::-;;;;8471:160;255:12591;8471:160;;255:12591;8570:15;255:12591;8471:160;;255:12591;2562:10;8471:160;;;255:12591;8455:177;:::i;:::-;2562:10;8648:54;;;;;255:12591;;2543:55;-1:-1:-1;255:12591:10;;-1:-1:-1;;;;;255:12591:10;2562:10;2577:21;2543:55;;255:12591;;;;;;;-1:-1:-1;;255:12591:10;;;;;;1500:62:0;;:::i;:::-;2689:51:10;255:12591;2698:13;255:12591;;2697:14;2689:51;:::i;:::-;255:12591;4737:34;;;:72;;;255:12591;;;;4902:18;255:12591;4884:36;4876:62;4884:36;;;;4876:62;:::i;:::-;255:12591;4902:18;255:12591;5069:177;255:12591;;;;;:::i;:::-;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;4737:72;4775:34;722:2;4775:34;;;4737:72;;255:12591;;;;;;;;;;;;;320:36;255:12591;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;;;1301:29;255:12591;1301:29;;;;;;;;:::i;255:12591::-;;;;;;;-1:-1:-1;;255:12591:10;;;;10392:18;255:12591;;;;;;;;;;;;;;;;;;;;10414:3;255:12591;;;;;;;;;;;;;;;;;;;;;;1033:33;255:12591;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12591:10;;;;;;:::i;:::-;;;;;;;;;;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;255:12591:10;7618:22;;255:12591;;;;;7679:18;255:12591;;;;;;;;;;;;;;;;;;;;;7731:54;255:12591;7774:10;7731:54;;255:12591;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12591:10;;;;;;:::o;:::-;;;;;1301:29;255:12591;;;;;;1301:29;-1:-1:-1;255:12591:10;;-1:-1:-1;255:12591:10;;;;;;-1:-1:-1;255:12591:10;:::o;:::-;;;;;;;;;;;;;11711:15;255:12591;;;;;;11711:15;-1:-1:-1;255:12591:10;;-1:-1:-1;255:12591:10;;;;;;-1:-1:-1;255:12591:10;:::o;:::-;12000:17;255:12591;;;;;;12000:17;-1:-1:-1;255:12591:10;;-1:-1:-1;255:12591:10;;;;;;-1:-1:-1;255:12591:10;:::o;:::-;;;;;;;;-1:-1:-1;255:12591:10;;-1:-1:-1;255:12591:10;;;;;;-1:-1:-1;255:12591:10;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;255:12591:10;;;;;-1:-1:-1;255:12591:10;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;255:12591:10;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;5069:10;255:12591;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;5069:10;255:12591;5069:10;255:12591;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;255:12591:10;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;255:12591:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12591:10;;;;;:::o;:::-;9036:17;255:12591;;-1:-1:-1;;;255:12591:10;;;;;;;;;;;9036:17;255:12591;9036:17;255:12591;:::i;1796:162:0:-;1710:6;255:12591:10;-1:-1:-1;;;;;255:12591:10;735:10:6;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:6;1901:40:0;255:12591:10;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "MAX_HOSTING_FEE()": "bb8f0b65",
              "MAX_PLATFORM_FEE()": "3998a681",
              "MIN_HOSTING_FEE()": "54d74941",
              "MIN_PLATFORM_FEE()": "6f04d994",
              "admin()": "f851a440",
              "calculatePlatformFee(uint256)": "0cbab4f7",
              "emergencyDeactivateNetwork(uint256)": "5a2f406f",
              "emergencyMode()": "0905f560",
              "emergencyOperators(address)": "09705de8",
              "emergencySetHostingFee(uint256)": "bbeecdf0",
              "emergencySetPlatformFee(uint256)": "18b4f23b",
              "feeHistory(uint256)": "0d35a167",
              "getAdminStats()": "c116d936",
              "getCurrentFees()": "71908a03",
              "getFeeHistory()": "5707ed45",
              "getHostingFeeHistory()": "d4ab4b40",
              "getLatestFeeChange()": "5071f27b",
              "getLatestHostingFeeChange()": "d2643f1d",
              "getLatestTreasuryChange()": "4863687e",
              "getPlatformFeeBasisPoints()": "7a9b93c6",
              "getTreasuryHistory()": "492adaa8",
              "hostingFee()": "ebe7fdaa",
              "hostingFeeHistory(uint256)": "e53377eb",
              "isEmergencyOperator(address)": "a10eb354",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "paymentAddress()": "633423be",
              "platformFeePercent()": "8c639a85",
              "renounceOwnership()": "715018a6",
              "setEmergencyOperator(address,bool)": "02e88899",
              "setHostingFee(uint256)": "edfbf4f1",
              "setPaymentAddress(address)": "5e1e1004",
              "setPlatformFee(uint256)": "12e8e2c3",
              "setTreasuryAddress(address)": "6605bfda",
              "storageContract()": "11ce0267",
              "toggleEmergencyMode()": "4c17b530",
              "transferOwnership(address)": "f2fde38b",
              "treasury()": "61d027b3",
              "treasuryAddress()": "c5f956af",
              "treasuryHistory(uint256)": "a380b86b",
              "unpause()": "3f4ba83a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storageContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hostingFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"AdminPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"AdminUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"storageContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ContractsInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"EmergencyModeToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"}],\"name\":\"EmergencyOperatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"HostingFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_HOSTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PLATFORM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_HOSTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PLATFORM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculatePlatformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"emergencyOperators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"emergencySetHostingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"emergencySetPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalFeeChanges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTreasuryChanges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalHostingFeeChanges\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isEmergencyMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"currentPlatformFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentHostingFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currentTreasury\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"platformFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hostingFeeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.FeeChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHostingFeeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.HostingFeeChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestFeeChange\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.FeeChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestHostingFeeChange\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.HostingFeeChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTreasuryChange\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.TreasuryChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasuryHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.TreasuryChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hostingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hostingFeeHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isEmergencyOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setEmergencyOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setHostingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPaymentAddress\",\"type\":\"address\"}],\"name\":\"setPaymentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasuryAddress\",\"type\":\"address\"}],\"name\":\"setTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"contract ZaaNetStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleEmergencyMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"treasuryHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"Expose admin address for other contracts (interface compatibility)\"},\"calculatePlatformFee(uint256)\":{\"notice\":\"Calculate platform fee for a given amount\"},\"emergencyDeactivateNetwork(uint256)\":{\"notice\":\"Emergency function to deactivate a network\"},\"emergencySetHostingFee(uint256)\":{\"notice\":\"Emergency hosting fee adjustment (bypasses normal restrictions)\"},\"emergencySetPlatformFee(uint256)\":{\"notice\":\"Emergency fee adjustment (bypasses normal restrictions)\"},\"getAdminStats()\":{\"notice\":\"Get comprehensive admin statistics\"},\"getCurrentFees()\":{\"notice\":\"Get all current fees in one call (gas efficient)\"},\"getFeeHistory()\":{\"notice\":\"Get fee change history\"},\"getHostingFeeHistory()\":{\"notice\":\"Get hosting fee change history\"},\"getLatestFeeChange()\":{\"notice\":\"Get latest fee change details\"},\"getLatestHostingFeeChange()\":{\"notice\":\"Get latest hosting fee change details\"},\"getLatestTreasuryChange()\":{\"notice\":\"Get latest treasury change details\"},\"getPlatformFeeBasisPoints()\":{\"notice\":\"Get current fee in basis points (for more precise calculations)\"},\"getTreasuryHistory()\":{\"notice\":\"Get treasury change history\"},\"isEmergencyOperator(address)\":{\"notice\":\"Check if address is emergency operator\"},\"paused()\":{\"notice\":\"Check if contract is paused (interface compatibility)\"},\"setEmergencyOperator(address,bool)\":{\"notice\":\"Add or remove emergency operators\"},\"toggleEmergencyMode()\":{\"notice\":\"Toggle emergency mode (stops most operations)\"},\"treasury()\":{\"notice\":\"Alternative name for treasury address (interface compatibility)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetAdmin.sol\":\"ZaaNetAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetAdmin.sol\":{\"keccak256\":\"0x5a1ec9d0da29a841779b36dca1a2bafccc357c8ef6e8b431ba5dbe178ca3f170\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://865d528f43b6f7c36f0efb58fbf02e3b656646251707b497e1f0ccb98dabc520\",\"dweb:/ipfs/QmWiXiAZTFjTS4U9vUVxzMra15pAV4gF2Yvi4aaaEPfsQi\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x2d84ff4b1782d1249c2189338a7d42b8159309ed614634f99c9be89d32199f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c68e8b2790b20da4a12c69088bce500a269e0f9b3ac80e3cd58c9ef11001ec\",\"dweb:/ipfs/QmdDitFPsfDEEfpbWgkqYCgpdSHq7j7Dm8ic4JecMwcfzj\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetNetwork.sol": {
        "IZaaNetAdmin": {
          "abi": [
            {
              "inputs": [],
              "name": "hostingFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "hostingFee()": "ebe7fdaa",
              "treasuryAddress()": "c5f956af"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hostingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetNetwork.sol\":\"IZaaNetAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ZaaNetNetwork.sol\":{\"keccak256\":\"0x34a26b666f47e6ca36053f6ed86d7bdf47863a2f4607c72e83bfaff4d32533a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a4a9866d3117561d49c4ee9888423b0a438dad11e311a1a7380f71624155d1f\",\"dweb:/ipfs/QmRgQbUyPT5xkdemar9ahjq3TnX3Md198rokiW2TAfHz31\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x2d84ff4b1782d1249c2189338a7d42b8159309ed614634f99c9be89d32199f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c68e8b2790b20da4a12c69088bce500a269e0f9b3ac80e3cd58c9ef11001ec\",\"dweb:/ipfs/QmdDitFPsfDEEfpbWgkqYCgpdSHq7j7Dm8ic4JecMwcfzj\"]}},\"version\":1}"
        },
        "ZaaNetNetwork": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_storageContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_adminContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_usdt",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                }
              ],
              "name": "HostAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "HostingFeePaid",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldPrice",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newPrice",
                  "type": "uint256"
                }
              ],
              "name": "NetworkPriceUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "hostingFeePaid",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "NetworkRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "oldStatus",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "newStatus",
                  "type": "bool"
                }
              ],
              "name": "NetworkStatusChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "name": "NetworkUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_MONGO_DATA_LENGTH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_PRICE_PER_SESSION",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_PRICE_PER_SESSION",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "REGISTRATION_COOLDOWN",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "adminContract",
              "outputs": [
                {
                  "internalType": "contract IZaaNetAdmin",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                }
              ],
              "name": "deactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getActiveHostNetworks",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllActiveNetworks",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getContractStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalNetworks",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentHostingFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostNetworks",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalNetworks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeNetworks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalEarnings",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                }
              ],
              "name": "getHostedNetworkById",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "offset",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                }
              ],
              "name": "getNetworksPaginated",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "networks",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "totalCount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTreasuryAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isHost",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "isRegisteredHost",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "lastRegistrationTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networkToHost",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_pricePerSession",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_mongoDataId",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "_isActive",
                  "type": "bool"
                }
              ],
              "name": "registerNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newAdminContract",
                  "type": "address"
                }
              ],
              "name": "setAdminContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newUsdt",
                  "type": "address"
                }
              ],
              "name": "setUsdtContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storageContract",
              "outputs": [
                {
                  "internalType": "contract ZaaNetStorage",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_pricePerSession",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_isActive",
                  "type": "bool"
                }
              ],
              "name": "updateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "usdt",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 545,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803461020657601f6122bb38819003918201601f19168301916001600160401b0383118484101761020b578084926060946040528339810103126102065761004781610221565b90610060604061005960208401610221565b9201610221565b9033156101f05760008054336001600160a01b0319821681178355604051959290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556001600160a01b03169283156101ae57506001600160a01b0316908115610169576001600160a01b03169182156101245760018060a01b0319600254161760025560018060a01b0319600354161760035560018060a01b0319600454161760045560405161208590816102368239f35b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964205553445420636f6e747261637420616464726573730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642061646d696e20636f6e7472616374206164647265737300006044820152606490fd5b62461bcd60e51b815260206004820181905260248201527f496e76616c69642073746f7261676520636f6e747261637420616464726573736044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036102065756fe608080604052600436101561001357600080fd5b600090813560e01c90816309115e9714611b595750806311ce026714611b3057806316cb6eff14611a2e5780631b63fe67146117cd5780632b2a748c1461160b5780632f48ab7d146115e25780633f4ba83a1461157457806343355214146115415780634b9791e8146111d1578063576338a5146111495780635c975abb1461112457806363a812f91461109b578063715018a614611041578063764ac73414610eac57806379f0dc5714610df35780637f6e8cbf14610db65780638456cb5914610d55578063867f1a09146102b357806389ea28d914610d065780638da5cb5b14610cdf578063900e41b114610542578063b0ff638314610526578063c05c5e94146104fd578063cd83fb9a1461045b578063d4f38d041461043c578063dfe6b5d6146103b4578063e002460414610311578063e67d86f1146102f5578063eb2931b7146102b3578063f2fde38b146102255763fa9c81a41461017657600080fd5b3461022257604036600319011261022257600254604051633ea7206960e21b81526004803590820152602480359082015291908190839060449082906001600160a01b03165afa8015610215576101e5928280926101ef575b5050604051928392604084526040840190611c19565b9060208301520390f35b90915061020e92503d8091833e6102068183611cb3565b810190611dde565b38806101cf565b50604051903d90823e3d90fd5b80fd5b5034610222576020366003190112610222576004356001600160a01b038116908190036102af57610254612026565b801561029b5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b5034610222576020366003190112610222576004356001600160a01b038116908190036102af5760408260ff9260209452600584522054166040519015158152f35b5034610222578060031936011261022257602060405160c88152f35b503461022257806003193601126102225760035460405163c5f956af60e01b81529190602090839060049082906001600160a01b03165afa9081156103a857809161036b575b6040516001600160a01b0383168152602090f35b90506020823d6020116103a0575b8161038660209383611cb3565b81010312610222575061039a602091611d09565b38610357565b3d9150610379565b604051903d90823e3d90fd5b503461022257806003193601126102225760025460405163217c682d60e01b81529190602090839060049082906001600160a01b03165afa9081156103a85790610404575b602090604051908152f35b506020813d602011610434575b8161041e60209383611cb3565b8101031261042f57602090516103f9565b600080fd5b3d9150610411565b503461022257806003193601126102225760206040516302faf0808152f35b503461022257602036600319011261022257610475611ed1565b506002546040516395ea571760e01b81526004803590820152908290829060249082906001600160a01b03165afa9081156104f257826104cb93926104cf575b5050604051918291602083526020830190611bbd565b0390f35b6104eb92503d8091833e6104e38183611cb3565b810190611f58565b38806104b5565b6040513d84823e3d90fd5b50346102225780600319360112610222576003546040516001600160a01b039091168152602090f35b50346102225780600319360112610222576020604051603c8152f35b5034610222576060366003190112610222576024359060043567ffffffffffffffff83116102af57366023840112156102af57826004013561058381611cd5565b936105916040519586611cb3565b8185523660248383010111610a425781849260246020930183880137850101526105b9611c72565b926105c2611fe4565b6105ca612004565b33835260086020526040832054603c8101809111610ccb574210610c865761271082101580610c78575b6105fd90611f81565b80518015159081610c6c575b5015610c27576003546040516375f3fed560e11b81526001600160a01b0390911694602082600481895afa918215610a46578592610bf0575b5060206004966040519788809263c5f956af60e01b82525afa958615610a46578596610bb4575b5081151580610ba2575b6108d2575b6002546040516329487fe360e11b8152959650939493602090859060049082908a906001600160a01b03165af19384156108c7578694610893575b508560018060a01b036002541691604051906106ce82611c81565b8682523360208301528760408301528560608301521515928360808301524260a08301524260c0830152803b1561088f57604051631430350760e21b81529183918391829084908290610725908d60048401611fcd565b03925af180156104f257610876575b505033865260066020526040862080549068010000000000000000821015610862576001820180825582101561084e577fd93f4aea01982a4687b0d757a8314f57b6a77742cf98d21bc9bdb24ef543a4dc9493929186918952602089200155848752600760205260408720336001600160601b0360a01b8254161790553387526008602052426040882055338752600560205260ff6040882054161561080d575b6107ea6040519360a0855260a0850190611b98565b956020840152604083015260608201524260808201528033940390a36001805580f35b33808852600560205260408820805460ff191660011790557f8ff9310abede1de3c5d3fdbb7cf09c40bc8258ca75c0f949ad92f964deac98b38880a26107d5565b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b88526041600452602488fd5b8161088091611cb3565b61088b578538610734565b8580fd5b8280fd5b9093506020813d6020116108bf575b816108af60209383611cb3565b8101031261042f575192386106b3565b3d91506108a2565b6040513d88823e3d90fd5b600480546040516370a0823160e01b815233928101929092526001600160a01b031696906020816024818b5afa908115610b0b579084918891610b6d575b5010610b1657604051636eb1769f60e11b81523360048201523060248201526020816044818b5afa908115610b0b579084918891610ad6575b5010610a7d576040516323b872dd60e01b60208281019182523360248401526001600160a01b03909316604483015260648083018690528252879161098f608482611cb3565b5190828a5af115610a725784513d610a695750853b155b610a555760025494955092938593906001600160a01b0316803b15610a51578480916024604051809481936369009a1360e01b83528860048401525af1908115610a46578591610a2d575b50506040518281524260208201527fac5b35db873b0c878683cbeac0fc736acd48ea6480742bafd3ba483dd715882460403392a2939293610678565b81610a3791611cb3565b610a425783386109f1565b8380fd5b6040513d87823e3d90fd5b8480fd5b635274afe760e01b85526004869052602485fd5b600114156109a6565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152602b60248201527f496e73756666696369656e74205553445420616c6c6f77616e636520666f722060448201526a686f7374696e672066656560a81b6064820152608490fd5b9150506020813d602011610b03575b81610af260209383611cb3565b8101031261042f5783905138610949565b3d9150610ae5565b6040513d89823e3d90fd5b60405162461bcd60e51b815260206004820152602960248201527f496e73756666696369656e7420555344542062616c616e636520666f7220686f6044820152687374696e672066656560b81b6064820152608490fd5b9150506020813d602011610b9a575b81610b8960209383611cb3565b8101031261042f5783905138610910565b3d9150610b7c565b506001600160a01b0386161515610673565b9095506020813d602011610be8575b81610bd060209383611cb3565b81010312610a5157610be190611d09565b9438610669565b3d9150610bc3565b9591506020863d602011610c1f575b81610c0c60209383611cb3565b8101031261042f57945190946020610642565b3d9150610bff565b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964204d6f6e676f446174614944206c656e6774680000000000006044820152606490fd5b60c89150111538610609565b506302faf0808211156105f4565b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e20636f6f6c646f776e20616374697665000000006044820152606490fd5b634e487b7160e01b84526011600452602484fd5b5034610222578060031936011261022257546040516001600160a01b039091168152602090f35b50346102225780600319360112610222576003546040516375f3fed560e11b81529190602090839060049082906001600160a01b03165afa9081156103a8579061040457602090604051908152f35b5034610222578060031936011261022257610d6e612026565b610d76611fe4565b805460ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af578160409160209352600883522054604051908152f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af578152600660205260408120604051908160208254918281520190819285526020852090855b818110610e965750505082610e55910383611cb3565b604051928392602084019060208552518091526040840192915b818110610e7d575050500390f35b8251845285945060209384019390920191600101610e6f565b8254845260209093019260019283019201610e3f565b5034610222576020366003190112610222576004356001600160a01b038116908190036102af57818183526006602052604083205460018060a01b03600254169060405193636d65573f60e01b8552806004860152602085602481865afa9485156108c757869561100d575b508552600660205260408520906040518083602082955493848152019089526020892092895b818110610ff4575050610f5392500383611cb3565b855b8251811015610fdd57610f688184611e82565b51604051906395ea571760e01b825260048201528781602481885afa8015610fd2576080918991610fb8575b500151610fa4575b600101610f55565b93610fb0600191611eac565b949050610f9c565b610fcc91503d808b833e6104e38183611cb3565b38610f94565b6040513d8a823e3d90fd5b606082878760405192835260208301526040820152f35b8454835260019485019487945060209093019201610f3e565b9094506020813d602011611039575b8161102960209383611cb3565b8101031261042f57519338610f18565b3d915061101c565b503461022257806003193601126102225761105a612026565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af576110ca612026565b80156110e6576001600160601b0360a01b600354161760035580f35b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a590818591b5a5b8818dbdb9d1c9858dd60521b6044820152606490fd5b503461022257806003193601126102225760ff6020915460a01c166040519015158152f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af57611178612026565b8015611194576001600160601b0360a01b600454161760045580f35b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081554d1150818dbdb9d1c9858dd605a1b6044820152606490fd5b5034610222576020366003190112610222576004356111ee611fe4565b6002546040516395ea571760e01b815260048101839052908390829060249082906001600160a01b03165afa90811561153657839161151c575b5060208101516001600160a01b031633036114d7576080810151156114925760409081015160025491516395ea571760e01b8152600481018490529092916001600160a01b03168482602481845afa918215610a46578592611476575b506020820151336001600160a01b039091160361143a576127108410158061142c575b6112b190611f81565b846040830151926080810151151590606081019360a08551920151604051926112d984611c81565b888452336020850152896040850152606084015284608084015260a08301524260c0830152803b15610a425761132a8492918392604051968780948193631430350760e21b83528d60048401611fcd565b03925af192831561021557869361140f575b5050908161139193928286897f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d98036113d8575b50506113a1575b505051604051948552606060208601526060850190611b98565b928460408201528033940390a380f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a28338611377565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f019181519081528b6020820152a28238611370565b81929493509061141e91611cb3565b61088b57908390863861133c565b506302faf0808411156112a8565b60405162461bcd60e51b81526020600482015260146024820152734f6e6c7920686f73742063616e2075706461746560601b6044820152606490fd5b61148b9192503d8087833e6104e38183611cb3565b9038611285565b60405162461bcd60e51b815260206004820152601860248201527f4e6574776f726b20616c726561647920696e61637469766500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920686f73742063616e206465616374697661746500000000000000006044820152606490fd5b61153091503d8085833e6104e38183611cb3565b38611228565b6040513d85823e3d90fd5b503461022257602036600319011261022257602090600435815260078252604060018060a01b0391205416604051908152f35b503461022257806003193601126102225761158d612026565b805460ff8160a01c16156115d35760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b50346102225780600319360112610222576004546040516001600160a01b039091168152602090f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af5781526006602052604081206040518082602082945493848152019085526020852092855b8181106117b457505061166b92500382611cb3565b60025482906001600160a01b031681805b84518110156116f95761168f8186611e82565b51604051906395ea571760e01b825260048201528281602481875afa80156115365760809184916116df575b5001516116cb575b60010161167c565b926116d7600191611eac565b9390506116c3565b6116f391503d8086833e6104e38183611cb3565b386116bb565b50509061170590611f08565b8390845b845181101561179e5761171c8186611e82565b51604051906395ea571760e01b825260048201528681602481885afa908115610b0b578791611784575b50608081015161175a575b50600101611709565b8361177d9161176c6001949686611e82565b526117778185611e82565b50611eac565b9290611751565b61179891503d8089833e6104e38183611cb3565b38611746565b604051602080825281906104cb90820185611c19565b8454835260019485019486945060209093019201611656565b5034610222576060366003190112610222576024356004356117ed611c72565b916117f6611fe4565b6117fe612004565b6002546040516395ea571760e01b815260048101849052906001600160a01b03168582602481845afa9182156108c7578692611a12575b506020820151336001600160a01b039091160361143a5761271083101580611a04575b61186190611f81565b6040820151866080840151151592606085019460a08651910151986040519161188983611c81565b898352336020840152886040840152606083015215159889608083015260a08201524260c0820152813b1561088f5782916118db91604051948580948193631430350760e21b83528d60048401611fcd565b03925af18015610fd2576119c2575b509184611941928185877f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d98970361198b575b5050878103611954575b505051604051928352606060208401526060830190611b98565b9360408201528033940390a36001805580f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a28438611927565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f01918151908152886020820152a2813861191d565b6119419286896119f77f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d9897959b8395611cb3565b99939596505092506118ea565b506302faf080831115611858565b611a279192503d8088833e6104e38183611cb3565b9038611835565b5034610222578060031936011261022257600254604051633ea7206960e21b8152600481018390526064602482015291908190839060449082906001600160a01b03165afa918215610215578192611b13575b5080815b8351811015611abe576080611a9a8286611e82565b510151611aaa575b600101611a85565b90611ab6600191611eac565b919050611aa2565b50611ac890611f08565b815b835181101561179e576080611adf8286611e82565b510151611aef575b600101611aca565b91611b0b600191611b008587611e82565b5161176c8286611e82565b929050611ae7565b611b289192503d8084833e6102068183611cb3565b509038611a81565b50346102225780600319360112610222576002546040516001600160a01b039091168152602090f35b9050346102af57816003193601126102af578061271060209252f35b60005b838110611b885750506000910152565b8181015183820152602001611b78565b90602091611bb181518092818552858086019101611b75565b601f01601f1916010190565b908151815260018060a01b0360208301511660208201526040820151604082015260c080611bfa606085015160e0606086015260e0850190611b98565b9360808101511515608085015260a081015160a0850152015191015290565b9080602083519182815201916020808360051b8301019401926000915b838310611c4557505050505090565b9091929394602080611c63600193601f198682030187528951611bbd565b97019301930191939290611c36565b60443590811515820361042f57565b60e0810190811067ffffffffffffffff821117611c9d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611c9d57604052565b67ffffffffffffffff8111611c9d57601f01601f191660200190565b67ffffffffffffffff8111611c9d5760051b60200190565b51906001600160a01b038216820361042f57565b91909160e08184031261042f5760405190611d3782611c81565b819381518352611d4960208301611d09565b602084015260408201516040840152606082015167ffffffffffffffff811161042f57820181601f8201121561042f578051611d8481611cd5565b92611d926040519485611cb3565b8184526020828401011161042f57611db09160208085019101611b75565b60608301526080810151801515810361042f5760c0918291608085015260a081015160a08501520151910152565b919060408382031261042f57825167ffffffffffffffff811161042f5783019080601f8301121561042f578151611e1481611cf1565b92611e226040519485611cb3565b81845260208085019260051b8201019183831161042f5760208201905b838210611e5457505050505060209092015190565b815167ffffffffffffffff811161042f57602091611e7787848094880101611d1d565b815201910190611e3f565b8051821015611e965760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b6000198114611ebb5760010190565b634e487b7160e01b600052601160045260246000fd5b60405190611ede82611c81565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b90611f1282611cf1565b611f1f6040519182611cb3565b8281528092611f30601f1991611cf1565b019060005b828110611f4157505050565b602090611f4c611ed1565b82828501015201611f35565b9060208282031261042f57815167ffffffffffffffff811161042f57611f7e9201611d1d565b90565b15611f8857565b60405162461bcd60e51b815260206004820152601a60248201527f5072696365206f7574206f6620616c6c6f7765642072616e67650000000000006044820152606490fd5b604090611f7e939281528160208201520190611bbd565b60ff60005460a01c16611ff357565b63d93c066560e01b60005260046000fd5b600260015414612015576002600155565b633ee5aeb560e01b60005260046000fd5b6000546001600160a01b0316330361203a57565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212200ef369e340644e88beb1ec708092be77e13b6388a3b9087dd4a2a7fc8415d96f64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x1F PUSH2 0x22BB CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x20B JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x206 JUMPI PUSH2 0x47 DUP2 PUSH2 0x221 JUMP JUMPDEST SWAP1 PUSH2 0x60 PUSH1 0x40 PUSH2 0x59 PUSH1 0x20 DUP5 ADD PUSH2 0x221 JUMP JUMPDEST SWAP3 ADD PUSH2 0x221 JUMP JUMPDEST SWAP1 CALLER ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP6 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x1AE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x169 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x124 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD PUSH2 0x2085 SWAP1 DUP2 PUSH2 0x236 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205553445420636F6E74726163742061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642061646D696E20636F6E747261637420616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073746F7261676520636F6E74726163742061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x206 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x9115E97 EQ PUSH2 0x1B59 JUMPI POP DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x1B30 JUMPI DUP1 PUSH4 0x16CB6EFF EQ PUSH2 0x1A2E JUMPI DUP1 PUSH4 0x1B63FE67 EQ PUSH2 0x17CD JUMPI DUP1 PUSH4 0x2B2A748C EQ PUSH2 0x160B JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x15E2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1574 JUMPI DUP1 PUSH4 0x43355214 EQ PUSH2 0x1541 JUMPI DUP1 PUSH4 0x4B9791E8 EQ PUSH2 0x11D1 JUMPI DUP1 PUSH4 0x576338A5 EQ PUSH2 0x1149 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1124 JUMPI DUP1 PUSH4 0x63A812F9 EQ PUSH2 0x109B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1041 JUMPI DUP1 PUSH4 0x764AC734 EQ PUSH2 0xEAC JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0xDF3 JUMPI DUP1 PUSH4 0x7F6E8CBF EQ PUSH2 0xDB6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xD55 JUMPI DUP1 PUSH4 0x867F1A09 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x89EA28D9 EQ PUSH2 0xD06 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCDF JUMPI DUP1 PUSH4 0x900E41B1 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xB0FF6383 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xC05C5E94 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xCD83FB9A EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xD4F38D04 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xE0024604 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xE67D86F1 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xEB2931B7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x225 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x215 JUMPI PUSH2 0x1E5 SWAP3 DUP3 DUP1 SWAP3 PUSH2 0x1EF JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1C19 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 POP PUSH2 0x20E SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x206 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DDE JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1CF JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x254 PUSH2 0x2026 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29B JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xC8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI DUP1 SWAP2 PUSH2 0x36B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3A0 JUMPI JUMPDEST DUP2 PUSH2 0x386 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x222 JUMPI POP PUSH2 0x39A PUSH1 0x20 SWAP2 PUSH2 0x1D09 JUMP JUMPDEST CODESIZE PUSH2 0x357 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x217C682D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI SWAP1 PUSH2 0x404 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x434 JUMPI JUMPDEST DUP2 PUSH2 0x41E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x411 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2FAF080 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH2 0x475 PUSH2 0x1ED1 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x4CB SWAP4 SWAP3 PUSH2 0x4CF JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1BBD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EB SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F58 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x2AF JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x2AF JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x583 DUP2 PUSH2 0x1CD5 JUMP JUMPDEST SWAP4 PUSH2 0x591 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xA42 JUMPI DUP2 DUP5 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH2 0x5B9 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 PUSH2 0x5C2 PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x2004 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0x3C DUP2 ADD DUP1 SWAP2 GT PUSH2 0xCCB JUMPI TIMESTAMP LT PUSH2 0xC86 JUMPI PUSH2 0x2710 DUP3 LT ISZERO DUP1 PUSH2 0xC78 JUMPI JUMPDEST PUSH2 0x5FD SWAP1 PUSH2 0x1F81 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xC6C JUMPI JUMPDEST POP ISZERO PUSH2 0xC27 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x75F3FED5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP5 PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA46 JUMPI DUP6 SWAP3 PUSH2 0xBF0 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xA46 JUMPI DUP6 SWAP7 PUSH2 0xBB4 JUMPI JUMPDEST POP DUP2 ISZERO ISZERO DUP1 PUSH2 0xBA2 JUMPI JUMPDEST PUSH2 0x8D2 JUMPI JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x29487FE3 PUSH1 0xE1 SHL DUP2 MSTORE SWAP6 SWAP7 POP SWAP4 SWAP5 SWAP4 PUSH1 0x20 SWAP1 DUP6 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP11 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP5 PUSH2 0x893 JUMPI JUMPDEST POP DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x6CE DUP3 PUSH2 0x1C81 JUMP JUMPDEST DUP7 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE DUP8 PUSH1 0x40 DUP4 ADD MSTORE DUP6 PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO SWAP3 DUP4 PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH4 0x14303507 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH2 0x725 SWAP1 DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x1FCD JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x876 JUMPI JUMPDEST POP POP CALLER DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x862 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x84E JUMPI PUSH32 0xD93F4AEA01982A4687B0D757A8314F57B6A77742CF98D21BC9BDB24EF543A4DC SWAP5 SWAP4 SWAP3 SWAP2 DUP7 SWAP2 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 ADD SSTORE DUP5 DUP8 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP8 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP9 KECCAK256 SSTORE CALLER DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x80D JUMPI JUMPDEST PUSH2 0x7EA PUSH1 0x40 MLOAD SWAP4 PUSH1 0xA0 DUP6 MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1B98 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST CALLER DUP1 DUP9 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x8FF9310ABEDE1DE3C5D3FDBB7CF09C40BC8258CA75C0F949AD92F964DEAC98B3 DUP9 DUP1 LOG2 PUSH2 0x7D5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP2 PUSH2 0x880 SWAP2 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x88B JUMPI DUP6 CODESIZE PUSH2 0x734 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x8BF JUMPI JUMPDEST DUP2 PUSH2 0x8AF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD SWAP3 CODESIZE PUSH2 0x6B3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB0B JUMPI SWAP1 DUP5 SWAP2 DUP9 SWAP2 PUSH2 0xB6D JUMPI JUMPDEST POP LT PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB0B JUMPI SWAP1 DUP5 SWAP2 DUP9 SWAP2 PUSH2 0xAD6 JUMPI JUMPDEST POP LT PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 DUP2 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MSTORE DUP8 SWAP2 PUSH2 0x98F PUSH1 0x84 DUP3 PUSH2 0x1CB3 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP11 GAS CALL ISZERO PUSH2 0xA72 JUMPI DUP5 MLOAD RETURNDATASIZE PUSH2 0xA69 JUMPI POP DUP6 EXTCODESIZE ISZERO JUMPDEST PUSH2 0xA55 JUMPI PUSH1 0x2 SLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 DUP6 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA51 JUMPI DUP5 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x69009A13 PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA46 JUMPI DUP6 SWAP2 PUSH2 0xA2D JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xAC5B35DB873B0C878683CBEAC0FC736ACD48EA6480742BAFD3BA483DD7158824 PUSH1 0x40 CALLER SWAP3 LOG2 SWAP4 SWAP3 SWAP4 PUSH2 0x678 JUMP JUMPDEST DUP2 PUSH2 0xA37 SWAP2 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xA42 JUMPI DUP4 CODESIZE PUSH2 0x9F1 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP7 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205553445420616C6C6F77616E636520666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x686F7374696E6720666565 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB03 JUMPI JUMPDEST DUP2 PUSH2 0xAF2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x949 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420555344542062616C616E636520666F7220686F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7374696E6720666565 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB9A JUMPI JUMPDEST DUP2 PUSH2 0xB89 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x910 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB7C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO ISZERO PUSH2 0x673 JUMP JUMPDEST SWAP1 SWAP6 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBE8 JUMPI JUMPDEST DUP2 PUSH2 0xBD0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA51 JUMPI PUSH2 0xBE1 SWAP1 PUSH2 0x1D09 JUMP JUMPDEST SWAP5 CODESIZE PUSH2 0x669 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBC3 JUMP JUMPDEST SWAP6 SWAP2 POP PUSH1 0x20 DUP7 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC1F JUMPI JUMPDEST DUP2 PUSH2 0xC0C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI SWAP5 MLOAD SWAP1 SWAP5 PUSH1 0x20 PUSH2 0x642 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204D6F6E676F446174614944206C656E677468000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC8 SWAP2 POP GT ISZERO CODESIZE PUSH2 0x609 JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP3 GT ISZERO PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20636F6F6C646F776E2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x75F3FED5 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI SWAP1 PUSH2 0x404 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0xD6E PUSH2 0x2026 JUMP JUMPDEST PUSH2 0xD76 PUSH2 0x1FE4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x8 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0xE96 JUMPI POP POP POP DUP3 PUSH2 0xE55 SWAP2 SUB DUP4 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xE7D JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xE6F JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xE3F JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 DUP2 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x6D65573F PUSH1 0xE0 SHL DUP6 MSTORE DUP1 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x20 DUP6 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP6 PUSH2 0x100D JUMPI JUMPDEST POP DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x20 DUP3 SWAP6 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0xFF4 JUMPI POP POP PUSH2 0xF53 SWAP3 POP SUB DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xF68 DUP2 DUP5 PUSH2 0x1E82 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0xFD2 JUMPI PUSH1 0x80 SWAP2 DUP10 SWAP2 PUSH2 0xFB8 JUMPI JUMPDEST POP ADD MLOAD PUSH2 0xFA4 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xF55 JUMP JUMPDEST SWAP4 PUSH2 0xFB0 PUSH1 0x1 SWAP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0xF9C JUMP JUMPDEST PUSH2 0xFCC SWAP2 POP RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST CODESIZE PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 DUP8 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xF3E JUMP JUMPDEST SWAP1 SWAP5 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1039 JUMPI JUMPDEST DUP2 PUSH2 0x1029 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD SWAP4 CODESIZE PUSH2 0xF18 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x101C JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0x105A PUSH2 0x2026 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x10CA PUSH2 0x2026 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A590818591B5A5B8818DBDB9D1C9858DD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x1178 PUSH2 0x2026 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1194 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081554D1150818DBDB9D1C9858DD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x11EE PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1536 JUMPI DUP4 SWAP2 PUSH2 0x151C JUMPI JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x14D7 JUMPI PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0x1492 JUMPI PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA46 JUMPI DUP6 SWAP3 PUSH2 0x1476 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x143A JUMPI PUSH2 0x2710 DUP5 LT ISZERO DUP1 PUSH2 0x142C JUMPI JUMPDEST PUSH2 0x12B1 SWAP1 PUSH2 0x1F81 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH1 0x60 DUP2 ADD SWAP4 PUSH1 0xA0 DUP6 MLOAD SWAP3 ADD MLOAD PUSH1 0x40 MLOAD SWAP3 PUSH2 0x12D9 DUP5 PUSH2 0x1C81 JUMP JUMPDEST DUP9 DUP5 MSTORE CALLER PUSH1 0x20 DUP6 ADD MSTORE DUP10 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xA42 JUMPI PUSH2 0x132A DUP5 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x1FCD JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x215 JUMPI DUP7 SWAP4 PUSH2 0x140F JUMPI JUMPDEST POP POP SWAP1 DUP2 PUSH2 0x1391 SWAP4 SWAP3 DUP3 DUP7 DUP10 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SUB PUSH2 0x13D8 JUMPI JUMPDEST POP POP PUSH2 0x13A1 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x60 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1B98 JUMP JUMPDEST SWAP3 DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP4 CODESIZE PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP12 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP3 CODESIZE PUSH2 0x1370 JUMP JUMPDEST DUP2 SWAP3 SWAP5 SWAP4 POP SWAP1 PUSH2 0x141E SWAP2 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x88B JUMPI SWAP1 DUP4 SWAP1 DUP7 CODESIZE PUSH2 0x133C JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP5 GT ISZERO PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4F6E6C7920686F73742063616E20757064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x148B SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6574776F726B20616C726561647920696E6163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920686F73742063616E20646561637469766174650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1530 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST CODESIZE PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0x158D PUSH2 0x2026 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x15D3 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP3 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x17B4 JUMPI POP POP PUSH2 0x166B SWAP3 POP SUB DUP3 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x16F9 JUMPI PUSH2 0x168F DUP2 DUP7 PUSH2 0x1E82 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x1536 JUMPI PUSH1 0x80 SWAP2 DUP5 SWAP2 PUSH2 0x16DF JUMPI JUMPDEST POP ADD MLOAD PUSH2 0x16CB JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x167C JUMP JUMPDEST SWAP3 PUSH2 0x16D7 PUSH1 0x1 SWAP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x16F3 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST CODESIZE PUSH2 0x16BB JUMP JUMPDEST POP POP SWAP1 PUSH2 0x1705 SWAP1 PUSH2 0x1F08 JUMP JUMPDEST DUP4 SWAP1 DUP5 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x179E JUMPI PUSH2 0x171C DUP2 DUP7 PUSH2 0x1E82 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB0B JUMPI DUP8 SWAP2 PUSH2 0x1784 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x175A JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1709 JUMP JUMPDEST DUP4 PUSH2 0x177D SWAP2 PUSH2 0x176C PUSH1 0x1 SWAP5 SWAP7 DUP7 PUSH2 0x1E82 JUMP JUMPDEST MSTORE PUSH2 0x1777 DUP2 DUP6 PUSH2 0x1E82 JUMP JUMPDEST POP PUSH2 0x1EAC JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1798 SWAP2 POP RETURNDATASIZE DUP1 DUP10 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST CODESIZE PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4CB SWAP1 DUP3 ADD DUP6 PUSH2 0x1C19 JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1656 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x17ED PUSH2 0x1C72 JUMP JUMPDEST SWAP2 PUSH2 0x17F6 PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x17FE PUSH2 0x2004 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP3 PUSH2 0x1A12 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x143A JUMPI PUSH2 0x2710 DUP4 LT ISZERO DUP1 PUSH2 0x1A04 JUMPI JUMPDEST PUSH2 0x1861 SWAP1 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD DUP7 PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO SWAP3 PUSH1 0x60 DUP6 ADD SWAP5 PUSH1 0xA0 DUP7 MLOAD SWAP2 ADD MLOAD SWAP9 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1889 DUP4 PUSH2 0x1C81 JUMP JUMPDEST DUP10 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE DUP9 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO SWAP9 DUP10 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x88F JUMPI DUP3 SWAP2 PUSH2 0x18DB SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x1FCD JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xFD2 JUMPI PUSH2 0x19C2 JUMPI JUMPDEST POP SWAP2 DUP5 PUSH2 0x1941 SWAP3 DUP2 DUP6 DUP8 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SUB PUSH2 0x198B JUMPI JUMPDEST POP POP DUP8 DUP2 SUB PUSH2 0x1954 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x1B98 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP5 CODESIZE PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP9 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP2 CODESIZE PUSH2 0x191D JUMP JUMPDEST PUSH2 0x1941 SWAP3 DUP7 DUP10 PUSH2 0x19F7 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SWAP6 SWAP12 DUP4 SWAP6 PUSH2 0x1CB3 JUMP JUMPDEST SWAP10 SWAP4 SWAP6 SWAP7 POP POP SWAP3 POP PUSH2 0x18EA JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP4 GT ISZERO PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x1A27 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1835 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x215 JUMPI DUP2 SWAP3 PUSH2 0x1B13 JUMPI JUMPDEST POP DUP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1ABE JUMPI PUSH1 0x80 PUSH2 0x1A9A DUP3 DUP7 PUSH2 0x1E82 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x1AAA JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1A85 JUMP JUMPDEST SWAP1 PUSH2 0x1AB6 PUSH1 0x1 SWAP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x1AA2 JUMP JUMPDEST POP PUSH2 0x1AC8 SWAP1 PUSH2 0x1F08 JUMP JUMPDEST DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x179E JUMPI PUSH1 0x80 PUSH2 0x1ADF DUP3 DUP7 PUSH2 0x1E82 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x1AEF JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP2 PUSH2 0x1B0B PUSH1 0x1 SWAP2 PUSH2 0x1B00 DUP6 DUP8 PUSH2 0x1E82 JUMP JUMPDEST MLOAD PUSH2 0x176C DUP3 DUP7 PUSH2 0x1E82 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0x1B28 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x206 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST POP SWAP1 CODESIZE PUSH2 0x1A81 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2AF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AF JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1B88 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B78 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1BB1 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x1BFA PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1B98 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C45 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x1C63 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x1BBD JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x1C36 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1C9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1C9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C9D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C9D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1D37 DUP3 PUSH2 0x1C81 JUMP JUMPDEST DUP2 SWAP4 DUP2 MLOAD DUP4 MSTORE PUSH2 0x1D49 PUSH1 0x20 DUP4 ADD PUSH2 0x1D09 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI DUP3 ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP1 MLOAD PUSH2 0x1D84 DUP2 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 PUSH2 0x1D92 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x42F JUMPI PUSH2 0x1DB0 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x42F JUMPI PUSH1 0xC0 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x42F JUMPI DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI DUP4 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP2 MLOAD PUSH2 0x1E14 DUP2 PUSH2 0x1CF1 JUMP JUMPDEST SWAP3 PUSH2 0x1E22 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x42F JUMPI PUSH1 0x20 DUP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x1E54 JUMPI POP POP POP POP POP PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1E77 DUP8 DUP5 DUP1 SWAP5 DUP9 ADD ADD PUSH2 0x1D1D JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1E3F JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1E96 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1EBB JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1EDE DUP3 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1F12 DUP3 PUSH2 0x1CF1 JUMP JUMPDEST PUSH2 0x1F1F PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1CB3 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1F30 PUSH1 0x1F NOT SWAP2 PUSH2 0x1CF1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F41 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1F4C PUSH2 0x1ED1 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x1F35 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x42F JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH2 0x1F7E SWAP3 ADD PUSH2 0x1D1D JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1F88 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206F7574206F6620616C6C6F7765642072616E6765000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1F7E SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1FF3 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x2015 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x203A JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE RETURN PUSH10 0xE340644E88BEB1EC7080 SWAP3 0xBE PUSH24 0xE13B6388A3B9087DD4A2A7FC8415D96F64736F6C63430008 SHR STOP CALLER ",
              "sourceMap": "530:12743:11:-:0;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;2363:10;;1273:26:0;1269:95;;-1:-1:-1;530:12743:11;;2363:10;-1:-1:-1;;;;;;530:12743:11;;;;;;;;;;2363:10;;-1:-1:-1;;;;;530:12743:11;;3052:40:0;;-1:-1:-1;3052:40:0;1857:1:8;;;-1:-1:-1;;;;;530:12743:11;;2406:30;;530:12743;;-1:-1:-1;;;;;;530:12743:11;;2512:28;;530:12743;;-1:-1:-1;;;;;530:12743:11;;2593:19;;530:12743;;;;;;;;2657:49;530:12743;;;2657:49;530:12743;;;;;;;2716:44;530:12743;;;2716:44;530:12743;;;;;;;2770:20;530:12743;;;2770:20;530:12743;;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;530:12743:11;;-1:-1:-1;1322:31:0;530:12743:11;-1:-1:-1;530:12743:11;;;;;;-1:-1:-1;530:12743:11;;;;;-1:-1:-1;530:12743:11;;;;-1:-1:-1;;;;;530:12743:11;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 7433,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_array_struct_Network_dynt_uint256_fromMemory": {
                  "entryPoint": 7646,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bool": {
                  "entryPoint": 7282,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_struct_Network_fromMemory": {
                  "entryPoint": 7453,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_Network_memory_ptr_fromMemory": {
                  "entryPoint": 8024,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_struct_Network_dyn": {
                  "entryPoint": 7193,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 7064,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_Network": {
                  "entryPoint": 7101,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_struct_Network": {
                  "entryPoint": 8141,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_array_array_struct_Network_dyn": {
                  "entryPoint": 7944,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_struct_struct_Network": {
                  "entryPoint": 7889,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_Network_dyn": {
                  "entryPoint": 7409,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 7381,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 7029,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 7347,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_21437": {
                  "entryPoint": 7297,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 8230,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 8196,
                  "id": 966,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 8164,
                  "id": 871,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 7852,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_struct_Network_dyn": {
                  "entryPoint": 7810,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_bfd3": {
                  "entryPoint": 8065,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b600090813560e01c90816309115e9714611b595750806311ce026714611b3057806316cb6eff14611a2e5780631b63fe67146117cd5780632b2a748c1461160b5780632f48ab7d146115e25780633f4ba83a1461157457806343355214146115415780634b9791e8146111d1578063576338a5146111495780635c975abb1461112457806363a812f91461109b578063715018a614611041578063764ac73414610eac57806379f0dc5714610df35780637f6e8cbf14610db65780638456cb5914610d55578063867f1a09146102b357806389ea28d914610d065780638da5cb5b14610cdf578063900e41b114610542578063b0ff638314610526578063c05c5e94146104fd578063cd83fb9a1461045b578063d4f38d041461043c578063dfe6b5d6146103b4578063e002460414610311578063e67d86f1146102f5578063eb2931b7146102b3578063f2fde38b146102255763fa9c81a41461017657600080fd5b3461022257604036600319011261022257600254604051633ea7206960e21b81526004803590820152602480359082015291908190839060449082906001600160a01b03165afa8015610215576101e5928280926101ef575b5050604051928392604084526040840190611c19565b9060208301520390f35b90915061020e92503d8091833e6102068183611cb3565b810190611dde565b38806101cf565b50604051903d90823e3d90fd5b80fd5b5034610222576020366003190112610222576004356001600160a01b038116908190036102af57610254612026565b801561029b5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b5034610222576020366003190112610222576004356001600160a01b038116908190036102af5760408260ff9260209452600584522054166040519015158152f35b5034610222578060031936011261022257602060405160c88152f35b503461022257806003193601126102225760035460405163c5f956af60e01b81529190602090839060049082906001600160a01b03165afa9081156103a857809161036b575b6040516001600160a01b0383168152602090f35b90506020823d6020116103a0575b8161038660209383611cb3565b81010312610222575061039a602091611d09565b38610357565b3d9150610379565b604051903d90823e3d90fd5b503461022257806003193601126102225760025460405163217c682d60e01b81529190602090839060049082906001600160a01b03165afa9081156103a85790610404575b602090604051908152f35b506020813d602011610434575b8161041e60209383611cb3565b8101031261042f57602090516103f9565b600080fd5b3d9150610411565b503461022257806003193601126102225760206040516302faf0808152f35b503461022257602036600319011261022257610475611ed1565b506002546040516395ea571760e01b81526004803590820152908290829060249082906001600160a01b03165afa9081156104f257826104cb93926104cf575b5050604051918291602083526020830190611bbd565b0390f35b6104eb92503d8091833e6104e38183611cb3565b810190611f58565b38806104b5565b6040513d84823e3d90fd5b50346102225780600319360112610222576003546040516001600160a01b039091168152602090f35b50346102225780600319360112610222576020604051603c8152f35b5034610222576060366003190112610222576024359060043567ffffffffffffffff83116102af57366023840112156102af57826004013561058381611cd5565b936105916040519586611cb3565b8185523660248383010111610a425781849260246020930183880137850101526105b9611c72565b926105c2611fe4565b6105ca612004565b33835260086020526040832054603c8101809111610ccb574210610c865761271082101580610c78575b6105fd90611f81565b80518015159081610c6c575b5015610c27576003546040516375f3fed560e11b81526001600160a01b0390911694602082600481895afa918215610a46578592610bf0575b5060206004966040519788809263c5f956af60e01b82525afa958615610a46578596610bb4575b5081151580610ba2575b6108d2575b6002546040516329487fe360e11b8152959650939493602090859060049082908a906001600160a01b03165af19384156108c7578694610893575b508560018060a01b036002541691604051906106ce82611c81565b8682523360208301528760408301528560608301521515928360808301524260a08301524260c0830152803b1561088f57604051631430350760e21b81529183918391829084908290610725908d60048401611fcd565b03925af180156104f257610876575b505033865260066020526040862080549068010000000000000000821015610862576001820180825582101561084e577fd93f4aea01982a4687b0d757a8314f57b6a77742cf98d21bc9bdb24ef543a4dc9493929186918952602089200155848752600760205260408720336001600160601b0360a01b8254161790553387526008602052426040882055338752600560205260ff6040882054161561080d575b6107ea6040519360a0855260a0850190611b98565b956020840152604083015260608201524260808201528033940390a36001805580f35b33808852600560205260408820805460ff191660011790557f8ff9310abede1de3c5d3fdbb7cf09c40bc8258ca75c0f949ad92f964deac98b38880a26107d5565b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b88526041600452602488fd5b8161088091611cb3565b61088b578538610734565b8580fd5b8280fd5b9093506020813d6020116108bf575b816108af60209383611cb3565b8101031261042f575192386106b3565b3d91506108a2565b6040513d88823e3d90fd5b600480546040516370a0823160e01b815233928101929092526001600160a01b031696906020816024818b5afa908115610b0b579084918891610b6d575b5010610b1657604051636eb1769f60e11b81523360048201523060248201526020816044818b5afa908115610b0b579084918891610ad6575b5010610a7d576040516323b872dd60e01b60208281019182523360248401526001600160a01b03909316604483015260648083018690528252879161098f608482611cb3565b5190828a5af115610a725784513d610a695750853b155b610a555760025494955092938593906001600160a01b0316803b15610a51578480916024604051809481936369009a1360e01b83528860048401525af1908115610a46578591610a2d575b50506040518281524260208201527fac5b35db873b0c878683cbeac0fc736acd48ea6480742bafd3ba483dd715882460403392a2939293610678565b81610a3791611cb3565b610a425783386109f1565b8380fd5b6040513d87823e3d90fd5b8480fd5b635274afe760e01b85526004869052602485fd5b600114156109a6565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152602b60248201527f496e73756666696369656e74205553445420616c6c6f77616e636520666f722060448201526a686f7374696e672066656560a81b6064820152608490fd5b9150506020813d602011610b03575b81610af260209383611cb3565b8101031261042f5783905138610949565b3d9150610ae5565b6040513d89823e3d90fd5b60405162461bcd60e51b815260206004820152602960248201527f496e73756666696369656e7420555344542062616c616e636520666f7220686f6044820152687374696e672066656560b81b6064820152608490fd5b9150506020813d602011610b9a575b81610b8960209383611cb3565b8101031261042f5783905138610910565b3d9150610b7c565b506001600160a01b0386161515610673565b9095506020813d602011610be8575b81610bd060209383611cb3565b81010312610a5157610be190611d09565b9438610669565b3d9150610bc3565b9591506020863d602011610c1f575b81610c0c60209383611cb3565b8101031261042f57945190946020610642565b3d9150610bff565b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964204d6f6e676f446174614944206c656e6774680000000000006044820152606490fd5b60c89150111538610609565b506302faf0808211156105f4565b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e20636f6f6c646f776e20616374697665000000006044820152606490fd5b634e487b7160e01b84526011600452602484fd5b5034610222578060031936011261022257546040516001600160a01b039091168152602090f35b50346102225780600319360112610222576003546040516375f3fed560e11b81529190602090839060049082906001600160a01b03165afa9081156103a8579061040457602090604051908152f35b5034610222578060031936011261022257610d6e612026565b610d76611fe4565b805460ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af578160409160209352600883522054604051908152f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af578152600660205260408120604051908160208254918281520190819285526020852090855b818110610e965750505082610e55910383611cb3565b604051928392602084019060208552518091526040840192915b818110610e7d575050500390f35b8251845285945060209384019390920191600101610e6f565b8254845260209093019260019283019201610e3f565b5034610222576020366003190112610222576004356001600160a01b038116908190036102af57818183526006602052604083205460018060a01b03600254169060405193636d65573f60e01b8552806004860152602085602481865afa9485156108c757869561100d575b508552600660205260408520906040518083602082955493848152019089526020892092895b818110610ff4575050610f5392500383611cb3565b855b8251811015610fdd57610f688184611e82565b51604051906395ea571760e01b825260048201528781602481885afa8015610fd2576080918991610fb8575b500151610fa4575b600101610f55565b93610fb0600191611eac565b949050610f9c565b610fcc91503d808b833e6104e38183611cb3565b38610f94565b6040513d8a823e3d90fd5b606082878760405192835260208301526040820152f35b8454835260019485019487945060209093019201610f3e565b9094506020813d602011611039575b8161102960209383611cb3565b8101031261042f57519338610f18565b3d915061101c565b503461022257806003193601126102225761105a612026565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af576110ca612026565b80156110e6576001600160601b0360a01b600354161760035580f35b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a590818591b5a5b8818dbdb9d1c9858dd60521b6044820152606490fd5b503461022257806003193601126102225760ff6020915460a01c166040519015158152f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af57611178612026565b8015611194576001600160601b0360a01b600454161760045580f35b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081554d1150818dbdb9d1c9858dd605a1b6044820152606490fd5b5034610222576020366003190112610222576004356111ee611fe4565b6002546040516395ea571760e01b815260048101839052908390829060249082906001600160a01b03165afa90811561153657839161151c575b5060208101516001600160a01b031633036114d7576080810151156114925760409081015160025491516395ea571760e01b8152600481018490529092916001600160a01b03168482602481845afa918215610a46578592611476575b506020820151336001600160a01b039091160361143a576127108410158061142c575b6112b190611f81565b846040830151926080810151151590606081019360a08551920151604051926112d984611c81565b888452336020850152896040850152606084015284608084015260a08301524260c0830152803b15610a425761132a8492918392604051968780948193631430350760e21b83528d60048401611fcd565b03925af192831561021557869361140f575b5050908161139193928286897f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d98036113d8575b50506113a1575b505051604051948552606060208601526060850190611b98565b928460408201528033940390a380f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a28338611377565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f019181519081528b6020820152a28238611370565b81929493509061141e91611cb3565b61088b57908390863861133c565b506302faf0808411156112a8565b60405162461bcd60e51b81526020600482015260146024820152734f6e6c7920686f73742063616e2075706461746560601b6044820152606490fd5b61148b9192503d8087833e6104e38183611cb3565b9038611285565b60405162461bcd60e51b815260206004820152601860248201527f4e6574776f726b20616c726561647920696e61637469766500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920686f73742063616e206465616374697661746500000000000000006044820152606490fd5b61153091503d8085833e6104e38183611cb3565b38611228565b6040513d85823e3d90fd5b503461022257602036600319011261022257602090600435815260078252604060018060a01b0391205416604051908152f35b503461022257806003193601126102225761158d612026565b805460ff8160a01c16156115d35760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b50346102225780600319360112610222576004546040516001600160a01b039091168152602090f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af5781526006602052604081206040518082602082945493848152019085526020852092855b8181106117b457505061166b92500382611cb3565b60025482906001600160a01b031681805b84518110156116f95761168f8186611e82565b51604051906395ea571760e01b825260048201528281602481875afa80156115365760809184916116df575b5001516116cb575b60010161167c565b926116d7600191611eac565b9390506116c3565b6116f391503d8086833e6104e38183611cb3565b386116bb565b50509061170590611f08565b8390845b845181101561179e5761171c8186611e82565b51604051906395ea571760e01b825260048201528681602481885afa908115610b0b578791611784575b50608081015161175a575b50600101611709565b8361177d9161176c6001949686611e82565b526117778185611e82565b50611eac565b9290611751565b61179891503d8089833e6104e38183611cb3565b38611746565b604051602080825281906104cb90820185611c19565b8454835260019485019486945060209093019201611656565b5034610222576060366003190112610222576024356004356117ed611c72565b916117f6611fe4565b6117fe612004565b6002546040516395ea571760e01b815260048101849052906001600160a01b03168582602481845afa9182156108c7578692611a12575b506020820151336001600160a01b039091160361143a5761271083101580611a04575b61186190611f81565b6040820151866080840151151592606085019460a08651910151986040519161188983611c81565b898352336020840152886040840152606083015215159889608083015260a08201524260c0820152813b1561088f5782916118db91604051948580948193631430350760e21b83528d60048401611fcd565b03925af18015610fd2576119c2575b509184611941928185877f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d98970361198b575b5050878103611954575b505051604051928352606060208401526060830190611b98565b9360408201528033940390a36001805580f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a28438611927565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f01918151908152886020820152a2813861191d565b6119419286896119f77f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d9897959b8395611cb3565b99939596505092506118ea565b506302faf080831115611858565b611a279192503d8088833e6104e38183611cb3565b9038611835565b5034610222578060031936011261022257600254604051633ea7206960e21b8152600481018390526064602482015291908190839060449082906001600160a01b03165afa918215610215578192611b13575b5080815b8351811015611abe576080611a9a8286611e82565b510151611aaa575b600101611a85565b90611ab6600191611eac565b919050611aa2565b50611ac890611f08565b815b835181101561179e576080611adf8286611e82565b510151611aef575b600101611aca565b91611b0b600191611b008587611e82565b5161176c8286611e82565b929050611ae7565b611b289192503d8084833e6102068183611cb3565b509038611a81565b50346102225780600319360112610222576002546040516001600160a01b039091168152602090f35b9050346102af57816003193601126102af578061271060209252f35b60005b838110611b885750506000910152565b8181015183820152602001611b78565b90602091611bb181518092818552858086019101611b75565b601f01601f1916010190565b908151815260018060a01b0360208301511660208201526040820151604082015260c080611bfa606085015160e0606086015260e0850190611b98565b9360808101511515608085015260a081015160a0850152015191015290565b9080602083519182815201916020808360051b8301019401926000915b838310611c4557505050505090565b9091929394602080611c63600193601f198682030187528951611bbd565b97019301930191939290611c36565b60443590811515820361042f57565b60e0810190811067ffffffffffffffff821117611c9d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611c9d57604052565b67ffffffffffffffff8111611c9d57601f01601f191660200190565b67ffffffffffffffff8111611c9d5760051b60200190565b51906001600160a01b038216820361042f57565b91909160e08184031261042f5760405190611d3782611c81565b819381518352611d4960208301611d09565b602084015260408201516040840152606082015167ffffffffffffffff811161042f57820181601f8201121561042f578051611d8481611cd5565b92611d926040519485611cb3565b8184526020828401011161042f57611db09160208085019101611b75565b60608301526080810151801515810361042f5760c0918291608085015260a081015160a08501520151910152565b919060408382031261042f57825167ffffffffffffffff811161042f5783019080601f8301121561042f578151611e1481611cf1565b92611e226040519485611cb3565b81845260208085019260051b8201019183831161042f5760208201905b838210611e5457505050505060209092015190565b815167ffffffffffffffff811161042f57602091611e7787848094880101611d1d565b815201910190611e3f565b8051821015611e965760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b6000198114611ebb5760010190565b634e487b7160e01b600052601160045260246000fd5b60405190611ede82611c81565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b90611f1282611cf1565b611f1f6040519182611cb3565b8281528092611f30601f1991611cf1565b019060005b828110611f4157505050565b602090611f4c611ed1565b82828501015201611f35565b9060208282031261042f57815167ffffffffffffffff811161042f57611f7e9201611d1d565b90565b15611f8857565b60405162461bcd60e51b815260206004820152601a60248201527f5072696365206f7574206f6620616c6c6f7765642072616e67650000000000006044820152606490fd5b604090611f7e939281528160208201520190611bbd565b60ff60005460a01c16611ff357565b63d93c066560e01b60005260046000fd5b600260015414612015576002600155565b633ee5aeb560e01b60005260046000fd5b6000546001600160a01b0316330361203a57565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212200ef369e340644e88beb1ec708092be77e13b6388a3b9087dd4a2a7fc8415d96f64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x9115E97 EQ PUSH2 0x1B59 JUMPI POP DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x1B30 JUMPI DUP1 PUSH4 0x16CB6EFF EQ PUSH2 0x1A2E JUMPI DUP1 PUSH4 0x1B63FE67 EQ PUSH2 0x17CD JUMPI DUP1 PUSH4 0x2B2A748C EQ PUSH2 0x160B JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x15E2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1574 JUMPI DUP1 PUSH4 0x43355214 EQ PUSH2 0x1541 JUMPI DUP1 PUSH4 0x4B9791E8 EQ PUSH2 0x11D1 JUMPI DUP1 PUSH4 0x576338A5 EQ PUSH2 0x1149 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1124 JUMPI DUP1 PUSH4 0x63A812F9 EQ PUSH2 0x109B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1041 JUMPI DUP1 PUSH4 0x764AC734 EQ PUSH2 0xEAC JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0xDF3 JUMPI DUP1 PUSH4 0x7F6E8CBF EQ PUSH2 0xDB6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xD55 JUMPI DUP1 PUSH4 0x867F1A09 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x89EA28D9 EQ PUSH2 0xD06 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCDF JUMPI DUP1 PUSH4 0x900E41B1 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xB0FF6383 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xC05C5E94 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xCD83FB9A EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xD4F38D04 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xE0024604 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xE67D86F1 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xEB2931B7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x225 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x215 JUMPI PUSH2 0x1E5 SWAP3 DUP3 DUP1 SWAP3 PUSH2 0x1EF JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1C19 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 POP PUSH2 0x20E SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x206 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DDE JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1CF JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x254 PUSH2 0x2026 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29B JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xC8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI DUP1 SWAP2 PUSH2 0x36B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3A0 JUMPI JUMPDEST DUP2 PUSH2 0x386 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x222 JUMPI POP PUSH2 0x39A PUSH1 0x20 SWAP2 PUSH2 0x1D09 JUMP JUMPDEST CODESIZE PUSH2 0x357 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x217C682D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI SWAP1 PUSH2 0x404 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x434 JUMPI JUMPDEST DUP2 PUSH2 0x41E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x411 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2FAF080 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH2 0x475 PUSH2 0x1ED1 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x4CB SWAP4 SWAP3 PUSH2 0x4CF JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1BBD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EB SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F58 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x2AF JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x2AF JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x583 DUP2 PUSH2 0x1CD5 JUMP JUMPDEST SWAP4 PUSH2 0x591 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xA42 JUMPI DUP2 DUP5 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH2 0x5B9 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 PUSH2 0x5C2 PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x2004 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0x3C DUP2 ADD DUP1 SWAP2 GT PUSH2 0xCCB JUMPI TIMESTAMP LT PUSH2 0xC86 JUMPI PUSH2 0x2710 DUP3 LT ISZERO DUP1 PUSH2 0xC78 JUMPI JUMPDEST PUSH2 0x5FD SWAP1 PUSH2 0x1F81 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xC6C JUMPI JUMPDEST POP ISZERO PUSH2 0xC27 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x75F3FED5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP5 PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA46 JUMPI DUP6 SWAP3 PUSH2 0xBF0 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xA46 JUMPI DUP6 SWAP7 PUSH2 0xBB4 JUMPI JUMPDEST POP DUP2 ISZERO ISZERO DUP1 PUSH2 0xBA2 JUMPI JUMPDEST PUSH2 0x8D2 JUMPI JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x29487FE3 PUSH1 0xE1 SHL DUP2 MSTORE SWAP6 SWAP7 POP SWAP4 SWAP5 SWAP4 PUSH1 0x20 SWAP1 DUP6 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP11 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP5 PUSH2 0x893 JUMPI JUMPDEST POP DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x6CE DUP3 PUSH2 0x1C81 JUMP JUMPDEST DUP7 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE DUP8 PUSH1 0x40 DUP4 ADD MSTORE DUP6 PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO SWAP3 DUP4 PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH4 0x14303507 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH2 0x725 SWAP1 DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x1FCD JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x876 JUMPI JUMPDEST POP POP CALLER DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x862 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x84E JUMPI PUSH32 0xD93F4AEA01982A4687B0D757A8314F57B6A77742CF98D21BC9BDB24EF543A4DC SWAP5 SWAP4 SWAP3 SWAP2 DUP7 SWAP2 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 ADD SSTORE DUP5 DUP8 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP8 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP9 KECCAK256 SSTORE CALLER DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x80D JUMPI JUMPDEST PUSH2 0x7EA PUSH1 0x40 MLOAD SWAP4 PUSH1 0xA0 DUP6 MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1B98 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST CALLER DUP1 DUP9 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x8FF9310ABEDE1DE3C5D3FDBB7CF09C40BC8258CA75C0F949AD92F964DEAC98B3 DUP9 DUP1 LOG2 PUSH2 0x7D5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP2 PUSH2 0x880 SWAP2 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x88B JUMPI DUP6 CODESIZE PUSH2 0x734 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x8BF JUMPI JUMPDEST DUP2 PUSH2 0x8AF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD SWAP3 CODESIZE PUSH2 0x6B3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB0B JUMPI SWAP1 DUP5 SWAP2 DUP9 SWAP2 PUSH2 0xB6D JUMPI JUMPDEST POP LT PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB0B JUMPI SWAP1 DUP5 SWAP2 DUP9 SWAP2 PUSH2 0xAD6 JUMPI JUMPDEST POP LT PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 DUP2 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MSTORE DUP8 SWAP2 PUSH2 0x98F PUSH1 0x84 DUP3 PUSH2 0x1CB3 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP11 GAS CALL ISZERO PUSH2 0xA72 JUMPI DUP5 MLOAD RETURNDATASIZE PUSH2 0xA69 JUMPI POP DUP6 EXTCODESIZE ISZERO JUMPDEST PUSH2 0xA55 JUMPI PUSH1 0x2 SLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 DUP6 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA51 JUMPI DUP5 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x69009A13 PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA46 JUMPI DUP6 SWAP2 PUSH2 0xA2D JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xAC5B35DB873B0C878683CBEAC0FC736ACD48EA6480742BAFD3BA483DD7158824 PUSH1 0x40 CALLER SWAP3 LOG2 SWAP4 SWAP3 SWAP4 PUSH2 0x678 JUMP JUMPDEST DUP2 PUSH2 0xA37 SWAP2 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xA42 JUMPI DUP4 CODESIZE PUSH2 0x9F1 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP7 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205553445420616C6C6F77616E636520666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x686F7374696E6720666565 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB03 JUMPI JUMPDEST DUP2 PUSH2 0xAF2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x949 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420555344542062616C616E636520666F7220686F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7374696E6720666565 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB9A JUMPI JUMPDEST DUP2 PUSH2 0xB89 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x910 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB7C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO ISZERO PUSH2 0x673 JUMP JUMPDEST SWAP1 SWAP6 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBE8 JUMPI JUMPDEST DUP2 PUSH2 0xBD0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA51 JUMPI PUSH2 0xBE1 SWAP1 PUSH2 0x1D09 JUMP JUMPDEST SWAP5 CODESIZE PUSH2 0x669 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBC3 JUMP JUMPDEST SWAP6 SWAP2 POP PUSH1 0x20 DUP7 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC1F JUMPI JUMPDEST DUP2 PUSH2 0xC0C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI SWAP5 MLOAD SWAP1 SWAP5 PUSH1 0x20 PUSH2 0x642 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204D6F6E676F446174614944206C656E677468000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC8 SWAP2 POP GT ISZERO CODESIZE PUSH2 0x609 JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP3 GT ISZERO PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20636F6F6C646F776E2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x75F3FED5 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI SWAP1 PUSH2 0x404 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0xD6E PUSH2 0x2026 JUMP JUMPDEST PUSH2 0xD76 PUSH2 0x1FE4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x8 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0xE96 JUMPI POP POP POP DUP3 PUSH2 0xE55 SWAP2 SUB DUP4 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xE7D JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xE6F JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xE3F JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 DUP2 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x6D65573F PUSH1 0xE0 SHL DUP6 MSTORE DUP1 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x20 DUP6 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP6 PUSH2 0x100D JUMPI JUMPDEST POP DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x20 DUP3 SWAP6 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0xFF4 JUMPI POP POP PUSH2 0xF53 SWAP3 POP SUB DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xF68 DUP2 DUP5 PUSH2 0x1E82 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0xFD2 JUMPI PUSH1 0x80 SWAP2 DUP10 SWAP2 PUSH2 0xFB8 JUMPI JUMPDEST POP ADD MLOAD PUSH2 0xFA4 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xF55 JUMP JUMPDEST SWAP4 PUSH2 0xFB0 PUSH1 0x1 SWAP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0xF9C JUMP JUMPDEST PUSH2 0xFCC SWAP2 POP RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST CODESIZE PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 DUP8 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xF3E JUMP JUMPDEST SWAP1 SWAP5 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1039 JUMPI JUMPDEST DUP2 PUSH2 0x1029 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD SWAP4 CODESIZE PUSH2 0xF18 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x101C JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0x105A PUSH2 0x2026 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x10CA PUSH2 0x2026 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A590818591B5A5B8818DBDB9D1C9858DD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x1178 PUSH2 0x2026 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1194 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081554D1150818DBDB9D1C9858DD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x11EE PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1536 JUMPI DUP4 SWAP2 PUSH2 0x151C JUMPI JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x14D7 JUMPI PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0x1492 JUMPI PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA46 JUMPI DUP6 SWAP3 PUSH2 0x1476 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x143A JUMPI PUSH2 0x2710 DUP5 LT ISZERO DUP1 PUSH2 0x142C JUMPI JUMPDEST PUSH2 0x12B1 SWAP1 PUSH2 0x1F81 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH1 0x60 DUP2 ADD SWAP4 PUSH1 0xA0 DUP6 MLOAD SWAP3 ADD MLOAD PUSH1 0x40 MLOAD SWAP3 PUSH2 0x12D9 DUP5 PUSH2 0x1C81 JUMP JUMPDEST DUP9 DUP5 MSTORE CALLER PUSH1 0x20 DUP6 ADD MSTORE DUP10 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xA42 JUMPI PUSH2 0x132A DUP5 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x1FCD JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x215 JUMPI DUP7 SWAP4 PUSH2 0x140F JUMPI JUMPDEST POP POP SWAP1 DUP2 PUSH2 0x1391 SWAP4 SWAP3 DUP3 DUP7 DUP10 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SUB PUSH2 0x13D8 JUMPI JUMPDEST POP POP PUSH2 0x13A1 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x60 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1B98 JUMP JUMPDEST SWAP3 DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP4 CODESIZE PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP12 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP3 CODESIZE PUSH2 0x1370 JUMP JUMPDEST DUP2 SWAP3 SWAP5 SWAP4 POP SWAP1 PUSH2 0x141E SWAP2 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x88B JUMPI SWAP1 DUP4 SWAP1 DUP7 CODESIZE PUSH2 0x133C JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP5 GT ISZERO PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4F6E6C7920686F73742063616E20757064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x148B SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6574776F726B20616C726561647920696E6163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920686F73742063616E20646561637469766174650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1530 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST CODESIZE PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0x158D PUSH2 0x2026 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x15D3 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP3 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x17B4 JUMPI POP POP PUSH2 0x166B SWAP3 POP SUB DUP3 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x16F9 JUMPI PUSH2 0x168F DUP2 DUP7 PUSH2 0x1E82 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x1536 JUMPI PUSH1 0x80 SWAP2 DUP5 SWAP2 PUSH2 0x16DF JUMPI JUMPDEST POP ADD MLOAD PUSH2 0x16CB JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x167C JUMP JUMPDEST SWAP3 PUSH2 0x16D7 PUSH1 0x1 SWAP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x16F3 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST CODESIZE PUSH2 0x16BB JUMP JUMPDEST POP POP SWAP1 PUSH2 0x1705 SWAP1 PUSH2 0x1F08 JUMP JUMPDEST DUP4 SWAP1 DUP5 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x179E JUMPI PUSH2 0x171C DUP2 DUP7 PUSH2 0x1E82 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB0B JUMPI DUP8 SWAP2 PUSH2 0x1784 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x175A JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1709 JUMP JUMPDEST DUP4 PUSH2 0x177D SWAP2 PUSH2 0x176C PUSH1 0x1 SWAP5 SWAP7 DUP7 PUSH2 0x1E82 JUMP JUMPDEST MSTORE PUSH2 0x1777 DUP2 DUP6 PUSH2 0x1E82 JUMP JUMPDEST POP PUSH2 0x1EAC JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1798 SWAP2 POP RETURNDATASIZE DUP1 DUP10 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST CODESIZE PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4CB SWAP1 DUP3 ADD DUP6 PUSH2 0x1C19 JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1656 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x17ED PUSH2 0x1C72 JUMP JUMPDEST SWAP2 PUSH2 0x17F6 PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x17FE PUSH2 0x2004 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP3 PUSH2 0x1A12 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x143A JUMPI PUSH2 0x2710 DUP4 LT ISZERO DUP1 PUSH2 0x1A04 JUMPI JUMPDEST PUSH2 0x1861 SWAP1 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD DUP7 PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO SWAP3 PUSH1 0x60 DUP6 ADD SWAP5 PUSH1 0xA0 DUP7 MLOAD SWAP2 ADD MLOAD SWAP9 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1889 DUP4 PUSH2 0x1C81 JUMP JUMPDEST DUP10 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE DUP9 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO SWAP9 DUP10 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x88F JUMPI DUP3 SWAP2 PUSH2 0x18DB SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x1FCD JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xFD2 JUMPI PUSH2 0x19C2 JUMPI JUMPDEST POP SWAP2 DUP5 PUSH2 0x1941 SWAP3 DUP2 DUP6 DUP8 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SUB PUSH2 0x198B JUMPI JUMPDEST POP POP DUP8 DUP2 SUB PUSH2 0x1954 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x1B98 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP5 CODESIZE PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP9 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP2 CODESIZE PUSH2 0x191D JUMP JUMPDEST PUSH2 0x1941 SWAP3 DUP7 DUP10 PUSH2 0x19F7 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SWAP6 SWAP12 DUP4 SWAP6 PUSH2 0x1CB3 JUMP JUMPDEST SWAP10 SWAP4 SWAP6 SWAP7 POP POP SWAP3 POP PUSH2 0x18EA JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP4 GT ISZERO PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x1A27 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1835 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x215 JUMPI DUP2 SWAP3 PUSH2 0x1B13 JUMPI JUMPDEST POP DUP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1ABE JUMPI PUSH1 0x80 PUSH2 0x1A9A DUP3 DUP7 PUSH2 0x1E82 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x1AAA JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1A85 JUMP JUMPDEST SWAP1 PUSH2 0x1AB6 PUSH1 0x1 SWAP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x1AA2 JUMP JUMPDEST POP PUSH2 0x1AC8 SWAP1 PUSH2 0x1F08 JUMP JUMPDEST DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x179E JUMPI PUSH1 0x80 PUSH2 0x1ADF DUP3 DUP7 PUSH2 0x1E82 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x1AEF JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP2 PUSH2 0x1B0B PUSH1 0x1 SWAP2 PUSH2 0x1B00 DUP6 DUP8 PUSH2 0x1E82 JUMP JUMPDEST MLOAD PUSH2 0x176C DUP3 DUP7 PUSH2 0x1E82 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0x1B28 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x206 DUP2 DUP4 PUSH2 0x1CB3 JUMP JUMPDEST POP SWAP1 CODESIZE PUSH2 0x1A81 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2AF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AF JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1B88 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B78 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1BB1 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x1BFA PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1B98 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C45 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x1C63 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x1BBD JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x1C36 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1C9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1C9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C9D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C9D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1D37 DUP3 PUSH2 0x1C81 JUMP JUMPDEST DUP2 SWAP4 DUP2 MLOAD DUP4 MSTORE PUSH2 0x1D49 PUSH1 0x20 DUP4 ADD PUSH2 0x1D09 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI DUP3 ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP1 MLOAD PUSH2 0x1D84 DUP2 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 PUSH2 0x1D92 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x42F JUMPI PUSH2 0x1DB0 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x42F JUMPI PUSH1 0xC0 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x42F JUMPI DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI DUP4 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP2 MLOAD PUSH2 0x1E14 DUP2 PUSH2 0x1CF1 JUMP JUMPDEST SWAP3 PUSH2 0x1E22 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CB3 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x42F JUMPI PUSH1 0x20 DUP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x1E54 JUMPI POP POP POP POP POP PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1E77 DUP8 DUP5 DUP1 SWAP5 DUP9 ADD ADD PUSH2 0x1D1D JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1E3F JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1E96 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1EBB JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1EDE DUP3 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1F12 DUP3 PUSH2 0x1CF1 JUMP JUMPDEST PUSH2 0x1F1F PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1CB3 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1F30 PUSH1 0x1F NOT SWAP2 PUSH2 0x1CF1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F41 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1F4C PUSH2 0x1ED1 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x1F35 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x42F JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH2 0x1F7E SWAP3 ADD PUSH2 0x1D1D JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1F88 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206F7574206F6620616C6C6F7765642072616E6765000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1F7E SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1FF3 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x2015 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x203A JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE RETURN PUSH10 0xE340644E88BEB1EC7080 SWAP3 0xBE PUSH24 0xE13B6388A3B9087DD4A2A7FC8415D96F64736F6C63430008 SHR STOP CALLER ",
              "sourceMap": "530:12743:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12130:26;530:12743;12130:26;;;530:12743;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13230:34;530:12743;13230:34;;;12285:31;530:12743;12285:31;;;530:12743;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;10949:15;530:12743;;;-1:-1:-1;;;10949:51:11;;530:12743;;;10949:51;;;530:12743;;;;;;;;;;;;;;10949:51;;530:12743;;-1:-1:-1;;;;;530:12743:11;10949:51;;;;;;530:12743;10949:51;;530:12743;10949:51;;;530:12743;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;10949:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;530:12743;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;530:12743:11;;-1:-1:-1;;;;;;530:12743:11;;;;;;-1:-1:-1;;;;;530:12743:11;3052:40:0;530:12743:11;;3052:40:0;530:12743:11;;2623:91:0;-1:-1:-1;;;2672:31:0;;530:12743:11;;;;;2672:31:0;;530:12743:11;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;;;;;;1058:38;530:12743;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:3;530:12743;;;;;;;;;;;;;;;;12285:13;530:12743;;;-1:-1:-1;;;12285:31:11;;530:12743;;12285:31;;530:12743;;;;;;-1:-1:-1;;;;;530:12743:11;12285:31;;;;;;;;;;;530:12743;;;-1:-1:-1;;;;;530:12743:11;;;;12285:31;;530:12743;12285:31;;;;;;;;;;;;;;;;;:::i;:::-;;;530:12743;;;;;;12285:31;530:12743;;:::i;:::-;12285:31;;;;;;-1:-1:-1;12285:31:11;;;530:12743;;;;;;;;;;;;;;;;;;;;;;;13230:15;530:12743;;;-1:-1:-1;;;13230:34:11;;530:12743;;13230:34;;530:12743;;;;;;-1:-1:-1;;;;;530:12743:11;13230:34;;;;;;;;;;530:12743;13230:34;530:12743;;;;;;;13230:34;;;;;;;;;;;;530:12743;13230:34;;;:::i;:::-;;;530:12743;;;;13230:34;530:12743;;13230:34;;530:12743;-1:-1:-1;530:12743:11;;13230:34;;;-1:-1:-1;13230:34:11;;530:12743;;;;;;;;;;;;;;;;930:8;530:12743;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;:::i;:::-;-1:-1:-1;8285:15:11;530:12743;;;-1:-1:-1;;;8285:38:11;;530:12743;;;8285:38;;;530:12743;;;;;;8285:38;;530:12743;;-1:-1:-1;;;;;530:12743:11;8285:38;;;;;;;;530:12743;8285:38;;;;530:12743;;;;;;;;;;;;;;;;:::i;:::-;;;;8285:38;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;530:12743;;;;;;;;;;;;;;;;;;;;;;672:33;530:12743;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;;;;1364:9;530:12743;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1315:72:7;;;:::i;:::-;2466:103:8;;:::i;:::-;3127:10:11;530:12743;;3106:20;530:12743;;;;;;1364:9;530:12743;;;;;;;3071:15;:91;530:12743;;845:5;3247:41;;;:102;;;530:12743;3226:175;;;:::i;:::-;530:12743;;3432:30;;;:101;;;;530:12743;;;;;3664:13;530:12743;;;-1:-1:-1;;;3664:26:11;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;3664:26;;;;;;;;;;;530:12743;;;;;;;;;;;;;;3726:31;;;;;;;;;;;;;530:12743;3815:14;;;;:47;;;530:12743;3811:705;;530:12743;4587:15;530:12743;;;-1:-1:-1;;;4587:36:11;;530:12743;;-1:-1:-1;530:12743:11;;;;;;;;;;;;;-1:-1:-1;;;;;530:12743:11;4587:36;;;;;;;;;;;530:12743;;;;;;;;4587:15;530:12743;;;;;;;;;:::i;:::-;;;;3127:10;530:12743;4746:328;;530:12743;4746:328;530:12743;4746:328;;530:12743;4746:328;530:12743;4746:328;;530:12743;;;4746:328;;;;;530:12743;3071:15;4746:328;;;530:12743;3071:15;4746:328;;;530:12743;4683:401;;;;;530:12743;;-1:-1:-1;;;4683:401:11;;530:12743;;;;;;;;;;;4683:401;;;530:12743;4683:401;;;:::i;:::-;;;;;;;;;;;530:12743;3127:10;;;530:12743;;5095:12;530:12743;;;;;;;;;;;;;;;;;;;;;;;;;5438:206;530:12743;;;;;;;;;;;;;;;;5145:13;530:12743;;;;;3127:10;-1:-1:-1;;;;;530:12743:11;;;;;;;;3127:10;530:12743;;3106:20;530:12743;;3071:15;530:12743;;;;3127:10;530:12743;;5258:6;530:12743;;;;;;;;5257:19;5253:115;;530:12743;;;;;4746:328;530:12743;;4746:328;530:12743;;;;:::i;:::-;;;;;;;;;;;;;;3071:15;4746:328;530:12743;;;3127:10;;5438:206;;;;530:12743;;;;;5253:115;3127:10;530:12743;;;5258:6;530:12743;;;;;;;-1:-1:-1;;530:12743:11;;;;;5336:21;530:12743;;5336:21;5253:115;;530:12743;-1:-1:-1;;;530:12743:11;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;4683:401;;;;;:::i;:::-;530:12743;;4683:401;;;;530:12743;;;;4683:401;530:12743;;;4587:36;;;;530:12743;4587:36;;530:12743;4587:36;;;;;;530:12743;4587:36;;;:::i;:::-;;;530:12743;;;;;4587:36;;;;;;;-1:-1:-1;4587:36:11;;;530:12743;;;;;;;;;3811:705;530:12743;;;;;-1:-1:-1;;;3903:26:11;;3127:10;3903:26;;;530:12743;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;3903:26;;;;;;;;;;;;;;3811:705;3903:40;;530:12743;;;;-1:-1:-1;;;4057:41:11;;3127:10;530:12743;4057:41;;530:12743;4092:4;530:12743;;;;;;;;4057:41;;;;;;;;;;;;;;;3811:705;4057:55;;530:12743;;;;-1:-1:-1;;;530:12743:11;1745:53:5;;;;;;3127:10:11;530:12743;1745:53:5;;530:12743:11;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;;;;;1745:53:5;;530:12743:11;;1745:53:5;;530:12743:11;1745:53:5;:::i;:::-;8507:421;;;;;;;;;;;;8942:15;;8960:26;;;:31;8942:68;8938:146;;4380:15:11;530:12743;;;-1:-1:-1;530:12743:11;;;;-1:-1:-1;;;;;;530:12743:11;4380:50;;;;;530:12743;;;;;;;;;;;;;4380:50;;;530:12743;4380:50;;530:12743;4380:50;;;;;;;;;;;8942:68:5;530:12743:11;;;;;;;3071:15;530:12743;;;;4450:55;530:12743;3127:10;4450:55;;3811:705;;;;;4380:50;;;;;:::i;:::-;530:12743;;4380:50;;;;530:12743;;;;4380:50;530:12743;;;;;;;;;4380:50;530:12743;;;8938:146:5;-1:-1:-1;;;9033:40:5;;530:12743:11;;;;;9033:40:5;;8942:68;530:12743:11;8994:16:5;;8942:68;;8507:421;530:12743:11;8507:421:5;;;;;;;;530:12743:11;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;4057:41;;;;530:12743;4057:41;;530:12743;4057:41;;;;;;530:12743;4057:41;;;:::i;:::-;;;530:12743;;;;;;;4057:41;;;;;;-1:-1:-1;4057:41:11;;;530:12743;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;3903:26;;;;530:12743;3903:26;;530:12743;3903:26;;;;;;530:12743;3903:26;;;:::i;:::-;;;530:12743;;;;;;;3903:26;;;;;;-1:-1:-1;3903:26:11;;3815:47;-1:-1:-1;;;;;;530:12743:11;;3833:29;;3815:47;;3726:31;;;;530:12743;3726:31;;530:12743;3726:31;;;;;;530:12743;3726:31;;;:::i;:::-;;;530:12743;;;;;;;:::i;:::-;3726:31;;;;;;;-1:-1:-1;3726:31:11;;3664:26;;;;530:12743;3664:26;;530:12743;3664:26;;;;;;530:12743;3664:26;;;:::i;:::-;;;530:12743;;;;;;3664:26;;530:12743;3664:26;;;;;-1:-1:-1;3664:26:11;;530:12743;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;;;;;;;3432:101;1016:3;3482:51;;;;3432:101;;;3247:102;-1:-1:-1;930:8:11;3308:41;;;3247:102;;530:12743;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;12130:13;530:12743;;;-1:-1:-1;;;12130:26:11;;530:12743;;12130:26;;530:12743;;;;;;-1:-1:-1;;;;;530:12743:11;12130:26;;;;;;;;;;;530:12743;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1315:72:7;;:::i;:::-;530:12743:11;;-1:-1:-1;;;;530:12743:11;-1:-1:-1;;;530:12743:11;;;;;735:10:6;530:12743:11;;2427:20:7;;530:12743:11;;2427:20:7;530:12743:11;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;;;;;1255:55;530:12743;;;;;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;8511:12;530:12743;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;530:12743:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;10083:22;530:12743;;;10181:12;530:12743;;;;;;;;;;;10239:15;530:12743;;;;;;;;;10239:44;;;530:12743;10239:44;;530:12743;;10239:44;;;;;;;;;;;;;;;530:12743;;;;10181:12;530:12743;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10397:13;10435:3;530:12743;;10412:21;;;;;10537:13;;;;:::i;:::-;530:12743;;;;;;;10493:71;;530:12743;10493:71;;530:12743;10493:71;;10239:44;10493:71;;;;;;;;10582:16;10493:71;;;;;10435:3;10582:16;;530:12743;10578:71;;10435:3;530:12743;;10397:13;;10578:71;10618:16;;530:12743;10618:16;;:::i;:::-;10578:71;;;;;10493;;;;;;;;;;;;;:::i;:::-;;;;;530:12743;;;;;;;;;10412:21;530:12743;10412:21;;;530:12743;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;530:12743:11;;;;;;;;10239:44;;;;530:12743;10239:44;;530:12743;10239:44;;;;;;530:12743;10239:44;;;:::i;:::-;;;530:12743;;;;;10239:44;;;;;;;-1:-1:-1;10239:44:11;;530:12743;;;;;;;;;;;;;1500:62:0;;:::i;:::-;530:12743:11;;-1:-1:-1;;;;;;530:12743:11;;;;;;-1:-1:-1;;;;;530:12743:11;3052:40:0;530:12743:11;;3052:40:0;530:12743:11;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;1500:62:0;;:::i;:::-;12510:31:11;;530:12743;;-1:-1:-1;;;;;530:12743:11;;12578:47;530:12743;;;12578:47;530:12743;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;1500:62:0;;:::i;:::-;12776:22:11;;530:12743;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;1315:72:7;;:::i;:::-;7800:15:11;530:12743;;;-1:-1:-1;;;7800:60:11;;530:12743;7800:60;;530:12743;;;;;;;;7800:60;;530:12743;;-1:-1:-1;;;;;530:12743:11;7800:60;;;;;;;;;;;530:12743;-1:-1:-1;530:12743:11;7878:19;;530:12743;-1:-1:-1;;;;;530:12743:11;7901:10;7878:33;530:12743;;7958:16;;;530:12743;;;;;8041:23;;;530:12743;7800:15;530:12743;;;-1:-1:-1;;;5915:60:11;;530:12743;5915:60;;530:12743;;;;;;-1:-1:-1;;;;;530:12743:11;5915:60;530:12743;7800:60;530:12743;;5915:60;;;;;;;;;;;530:12743;-1:-1:-1;530:12743:11;5993:19;;530:12743;7901:10;-1:-1:-1;;;;;530:12743:11;;;5993:29;530:12743;;845:5;6078:41;;;:102;;;530:12743;6057:175;;;:::i;:::-;6301:23;530:12743;6301:23;;530:12743;6351:16;7958;6351;;530:12743;;;6615:19;;;;;6726:17;6615:19;;6726:17;;530:12743;;;;;;;:::i;:::-;;;;7901:10;530:12743;6442:391;;530:12743;6442:391;530:12743;6442:391;;530:12743;6615:19;6442:391;;530:12743;6442:391;7958:16;6442:391;;530:12743;6726:17;6442:391;;530:12743;6803:15;6442:391;;;530:12743;6378:465;;;;;;530:12743;;;;;;;;;;;;;;;;6378:465;;;530:12743;6378:465;;;:::i;:::-;;;;;;;;;;;;;;530:12743;6910:28;;;;530:12743;6910:28;;;;;7165:154;6910:28;;6906:123;;530:12743;7038:112;;;;530:12743;7267:19;;;530:12743;;;;;6615:19;530:12743;;;;6615:19;530:12743;;;;:::i;:::-;;;;;;;7901:10;;7165:154;;;;530:12743;;7038:112;530:12743;7085:54;530:12743;;;;;;;;;;;7085:54;7038:112;;;;6906:123;530:12743;6959:59;530:12743;;;;;;;;;;;6959:59;6906:123;;;;6378:465;;;;;;;;;;:::i;:::-;530:12743;;6378:465;;;;;;;6078:102;-1:-1:-1;930:8:11;6139:41;;;6078:102;;530:12743;;;-1:-1:-1;;;530:12743:11;;;;;;;;7800:60;530:12743;;;-1:-1:-1;;;530:12743:11;;;;;;;5915:60;;;;;;;;;;;;;;:::i;:::-;;;;;530:12743;;;-1:-1:-1;;;530:12743:11;;;;;;;;7800:60;530:12743;;;;;;;;;;;;;;-1:-1:-1;;;530:12743:11;;;;;;;;7800:60;530:12743;;;;;;;;;;;7800:60;;;;;;;;;;;;;:::i;:::-;;;;;530:12743;;;;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;;;;;1158:48;530:12743;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;530:12743:11;;;;;;;2140:9:7;2136:62;;-1:-1:-1;;;;530:12743:11;;;;;735:10:6;530:12743:11;;2674:22:7;;530:12743:11;;2674:22:7;530:12743:11;;2136:62:7;-1:-1:-1;;;2172:15:7;;530:12743:11;2172:15:7;;530:12743:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;8757:12;530:12743;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8972:15;530:12743;8792:23;;-1:-1:-1;;;;;530:12743:11;8792:23;;8914:3;530:12743;;8891:21;;;;;9016:13;;;;:::i;:::-;530:12743;;;;;;;8972:71;;530:12743;8972:71;;530:12743;8972:71;;;;;;;;;;;9061:16;8972:71;;;;;8914:3;9061:16;;530:12743;9057:68;;8914:3;530:12743;;8876:13;;9057:68;9097:13;;530:12743;9097:13;;:::i;:::-;9057:68;;;;;8972:71;;;;;;;;;;;;;:::i;:::-;;;;8891:21;;;;9254:40;8891:21;9254:40;:::i;:::-;9304:17;9336:13;;9374:3;530:12743;;9351:21;;;;;9476:13;;;;:::i;:::-;530:12743;;;;;;;9432:71;;530:12743;9432:71;;530:12743;9432:71;;8972;9432;;;;;;;;;;;;;9374:3;9521:16;9061;9521;;530:12743;9517:111;;9374:3;;530:12743;;9336:13;;9517:111;9557:31;9606:7;9557:31;;530:12743;9557:31;;;;:::i;:::-;;;;;;:::i;:::-;;9606:7;:::i;:::-;9517:111;;;;9432:71;;;;;;;;;;;;;:::i;:::-;;;;9351:21;530:12743;;;;;;;;;;;;9351:21;530:12743;:::i;:::-;;;;;;;;;;;;-1:-1:-1;530:12743:11;;;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;;;;;:::i;:::-;1315:72:7;;;:::i;:::-;2466:103:8;;:::i;:::-;5915:15:11;530:12743;;;-1:-1:-1;;;5915:60:11;;530:12743;5915:60;;530:12743;;;;-1:-1:-1;;;;;530:12743:11;5915:60;530:12743;;;;5915:60;;;;;;;;;;;530:12743;-1:-1:-1;530:12743:11;5993:19;;530:12743;7606:10;-1:-1:-1;;;;;530:12743:11;;;5993:29;530:12743;;845:5;6078:41;;;:102;;;530:12743;6057:175;;;:::i;:::-;530:12743;6301:23;;530:12743;6351:16;;;;530:12743;;;6615:19;530:12743;6615:19;;;6726:17;6615:19;;6726:17;;530:12743;;;;;;;;:::i;:::-;;;;7606:10;530:12743;6442:391;;530:12743;6442:391;530:12743;6442:391;;530:12743;;6442:391;;530:12743;;;6442:391;;6351:16;6442:391;;530:12743;6726:17;6442:391;;530:12743;6803:15;6442:391;;;530:12743;6378:465;;;;;530:12743;;6378:465;530:12743;;;;;;;;;;;;6378:465;;;530:12743;6378:465;;;:::i;:::-;;;;;;;;;;;530:12743;6910:28;;;530:12743;6910:28;;;;7165:154;6910:28;;;6906:123;;530:12743;7042:22;;;;;7038:112;;530:12743;7267:19;;;530:12743;;;;;;;;;;;;;;;:::i;:::-;;;;;;7606:10;;7165:154;;;;530:12743;;;;;7038:112;530:12743;7085:54;530:12743;;;;;;;;;;;7085:54;7038:112;;;;6906:123;530:12743;6959:59;530:12743;;;;;;;;;;;6959:59;6906:123;;;;6378:465;530:12743;6378:465;;;;7165:154;6378:465;;;;;;;:::i;:::-;;;;;;;;;;;6078:102;-1:-1:-1;930:8:11;6139:41;;;6078:102;;5915:60;;;;;;;;;;;;;;:::i;:::-;;;;;530:12743;;;;;;;;;;;;;11259:15;530:12743;;;-1:-1:-1;;;11259:57:11;;530:12743;11259:57;;530:12743;;;11312:3;530:12743;;;;;;;;;;11259:57;;530:12743;;-1:-1:-1;;;;;530:12743:11;11259:57;;;;;;;;;;;530:12743;11326:23;;11404:13;11443:3;530:12743;;11419:22;;;;;11466:23;:14;;;;:::i;:::-;;:23;530:12743;11462:75;;11443:3;530:12743;;11404:13;;11462:75;11509:13;;530:12743;11509:13;;:::i;:::-;11462:75;;;;;11419:22;;11690:40;11419:22;11690:40;:::i;:::-;11740:17;11811:3;530:12743;;11787:22;;;;;11466:23;11834:14;;;;:::i;:::-;;:23;530:12743;11830:125;;11811:3;530:12743;;11772:13;;11830:125;11901:14;11933:7;530:12743;11901:14;;;;;:::i;:::-;;11877:38;;;;:::i;11933:7::-;11830:125;;;;;11259:57;;;;;;;;;;;;;;:::i;:::-;;;;;;530:12743;;;;;;;;;;;;;630:36;530:12743;;;-1:-1:-1;;;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;;;845:5;530:12743;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;530:12743:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;530:12743:11;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;530:12743:11;;;;;-1:-1:-1;530:12743:11;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;530:12743:11;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;530:12743:11;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;530:12743:11;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;530:12743:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;530:12743:11;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;530:12743:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1878:128:7:-;530:12743:11;1796:7:7;530:12743:11;;;;1939:61:7;;1878:128::o;1939:61::-;1974:15;;;1796:7;1974:15;;1796:7;1974:15;2575:307:8;1899:1;2702:7;530:12743:11;2702:18:8;2698:86;;1899:1;2702:7;530:12743:11;2575:307:8:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:8;;-1:-1:-1;2743:30:8;1796:162:0;1710:6;530:12743:11;-1:-1:-1;;;;;530:12743:11;735:10:6;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:6;1901:40:0;530:12743:11;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "MAX_MONGO_DATA_LENGTH()": "e67d86f1",
              "MAX_PRICE_PER_SESSION()": "d4f38d04",
              "MIN_PRICE_PER_SESSION()": "09115e97",
              "REGISTRATION_COOLDOWN()": "b0ff6383",
              "adminContract()": "c05c5e94",
              "deactivateNetwork(uint256)": "4b9791e8",
              "getActiveHostNetworks(address)": "2b2a748c",
              "getAllActiveNetworks()": "16cb6eff",
              "getContractStats()": "dfe6b5d6",
              "getCurrentHostingFee()": "89ea28d9",
              "getHostNetworks(address)": "79f0dc57",
              "getHostStats(address)": "764ac734",
              "getHostedNetworkById(uint256)": "cd83fb9a",
              "getNetworksPaginated(uint256,uint256)": "fa9c81a4",
              "getTreasuryAddress()": "e0024604",
              "isHost(address)": "eb2931b7",
              "isRegisteredHost(address)": "867f1a09",
              "lastRegistrationTime(address)": "7f6e8cbf",
              "networkToHost(uint256)": "43355214",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "registerNetwork(uint256,string,bool)": "900e41b1",
              "renounceOwnership()": "715018a6",
              "setAdminContract(address)": "63a812f9",
              "setUsdtContract(address)": "576338a5",
              "storageContract()": "11ce0267",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a",
              "updateNetwork(uint256,uint256,bool)": "1b63fe67",
              "usdt()": "2f48ab7d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storageContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adminContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"HostAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"HostingFeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"NetworkPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"hostingFeePaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NetworkRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldStatus\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newStatus\",\"type\":\"bool\"}],\"name\":\"NetworkStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"NetworkUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_MONGO_DATA_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PRICE_PER_SESSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PRICE_PER_SESSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTRATION_COOLDOWN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminContract\",\"outputs\":[{\"internalType\":\"contract IZaaNetAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"}],\"name\":\"deactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getActiveHostNetworks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllActiveNetworks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalNetworks\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentHostingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostNetworks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalNetworks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeNetworks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEarnings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"}],\"name\":\"getHostedNetworkById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getNetworksPaginated\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"networks\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"totalCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isHost\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"isRegisteredHost\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastRegistrationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkToHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"registerNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdminContract\",\"type\":\"address\"}],\"name\":\"setAdminContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newUsdt\",\"type\":\"address\"}],\"name\":\"setUsdtContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"contract ZaaNetStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"updateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deactivateNetwork(uint256)\":{\"notice\":\"Deactivate a network (soft delete)\"},\"getActiveHostNetworks(address)\":{\"notice\":\"Get active networks for a host\"},\"getAllActiveNetworks()\":{\"notice\":\"Get all active networks (limited to prevent gas issues)\"},\"getContractStats()\":{\"notice\":\"Get contract statistics\"},\"getCurrentHostingFee()\":{\"notice\":\"Get current hosting fee\"},\"getHostNetworks(address)\":{\"notice\":\"Get all network IDs registered by a host\"},\"getHostStats(address)\":{\"notice\":\"Get host statistics\"},\"getHostedNetworkById(uint256)\":{\"notice\":\"Get full network details from storage\"},\"getNetworksPaginated(uint256,uint256)\":{\"notice\":\"Retrieve networks with pagination (gas-optimized)\"},\"getTreasuryAddress()\":{\"notice\":\"Get treasury address\"},\"isRegisteredHost(address)\":{\"notice\":\"Public method to check if an address is a registered host\"},\"pause()\":{\"notice\":\"Emergency pause (only owner)\"},\"registerNetwork(uint256,string,bool)\":{\"notice\":\"Register a new network with mongoDataID and pay hosting fee\"},\"setAdminContract(address)\":{\"notice\":\"Update admin contract address (owner only)\"},\"setUsdtContract(address)\":{\"notice\":\"Update USDT contract address (owner only)\"},\"unpause()\":{\"notice\":\"Unpause (only owner)\"},\"updateNetwork(uint256,uint256,bool)\":{\"notice\":\"Update existing network with new details\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetNetwork.sol\":\"ZaaNetNetwork\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ZaaNetNetwork.sol\":{\"keccak256\":\"0x34a26b666f47e6ca36053f6ed86d7bdf47863a2f4607c72e83bfaff4d32533a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a4a9866d3117561d49c4ee9888423b0a438dad11e311a1a7380f71624155d1f\",\"dweb:/ipfs/QmRgQbUyPT5xkdemar9ahjq3TnX3Md198rokiW2TAfHz31\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x2d84ff4b1782d1249c2189338a7d42b8159309ed614634f99c9be89d32199f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c68e8b2790b20da4a12c69088bce500a269e0f9b3ac80e3cd58c9ef11001ec\",\"dweb:/ipfs/QmdDitFPsfDEEfpbWgkqYCgpdSHq7j7Dm8ic4JecMwcfzj\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetStorage.sol": {
        "ZaaNetStorage": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "AllowedCallerUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalEarned",
                  "type": "uint256"
                }
              ],
              "name": "HostEarningsUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                }
              ],
              "name": "NetworkStored",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "NetworkUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "paymentAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "SessionStored",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalEarned",
                  "type": "uint256"
                }
              ],
              "name": "ZaaNetEarningsUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowedCallers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "emergencyDeactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostNetworks",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "getNetwork",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "offset",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                }
              ],
              "name": "getNetworksPaginated",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "total",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getZaaNetEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "hostEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "hostNetworkIds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseHostEarnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseZaaNetEarnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "incrementNetworkId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networkExists",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "networkIdCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networks",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "sessionExists",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_caller",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setAllowedCaller",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_callers",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setAllowedCallers",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "net",
                  "type": "tuple"
                }
              ],
              "name": "setNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "zaanetEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234607e57331560685760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805560006004556114e190816100848239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c908163217c682d14610e965750806322a4808b14610e7857806329c718b5146107e05780634ce083be14610e7857806350c0d41c146109915780635290ffc6146109165780635a2f406f1461088b57806369009a131461081a5780636d65573f146107e0578063715018a61461078757806373f9a5d71461066c57806379f0dc57146105b25780637b334154146105735780637bae8f5e1461051a578063879ecf10146104e95780638bb0a17c146104565780638da5cb5b1461042d57806395ea5717146103c6578063d8b0e71614610337578063e1c7a8aa14610262578063ec13f2a114610231578063f2fde38b146101a85763fa9c81a41461011c57600080fd5b346101a35760403660031901126101a35761013b60243560043561134f565b9060405190604082016040835281518091526060830190602060608260051b8601019301916000905b828210610178578580868960208301520390f35b90919293602080610195600193605f198a82030186528851611061565b960192019201909291610164565b600080fd5b346101a35760203660031901126101a3576101c1610eb1565b6101c9611460565b6001600160a01b0316801561021b57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101a35760203660031901126101a3576004356000526008602052602060ff604060002054166040519015158152f35b346101a35760403660031901126101a35761027b610eb1565b6024359033600052600260205260ff604060002054168015610323575b6102a1906110bd565b6102a9611489565b6001600160a01b0316906102be82151561110e565b6102c98115156111c9565b8160005260066020526102e26040600020918254611215565b90558060005260066020527f61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be06020604060002054604051908152a260018055005b506000546001600160a01b03163314610298565b346101a35760403660031901126101a357610350610eb1565b7fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f602061037b610ec7565b92610384611460565b6001600160a01b031692610399841515611232565b83600052600282526103bb8160406000209060ff801983541691151516179055565b6040519015158152a2005b346101a35760203660031901126101a3576004356103e2611277565b508060005260086020526103fd60ff60406000205416611184565b600052600560205261042961041560406000206112ae565b604051918291602083526020830190611061565b0390f35b346101a35760003660031901126101a3576000546040516001600160a01b039091168152602090f35b346101a35760203660031901126101a35760043560005260056020526040600020805460018060a01b0360018301541691600281015461049860038301610f7c565b916104d360ff60048301541693600660058401549301549360405197889788526020880152604087015260e0606087015260e0860190611020565b921515608085015260a084015260c08301520390f35b346101a35760203660031901126101a3576004356000526009602052602060ff604060002054166040519015158152f35b346101a35760403660031901126101a357610533610eb1565b6001600160a01b03166000908152600760205260409020805460243591908210156101a35760209161056491610ed6565b90549060031b1c604051908152f35b346101a35760203660031901126101a3576001600160a01b03610594610eb1565b166000526002602052602060ff604060002054166040519015158152f35b346101a35760203660031901126101a3576001600160a01b036105d3610eb1565b16600052600760205260406000206040518060208354918281520190819360005260206000209060005b8181106106565750505081610613910382610f5a565b6040519182916020830190602084525180915260408301919060005b81811061063d575050500390f35b825184528594506020938401939092019160010161062f565b82548452602090930192600192830192016105fd565b346101a35760403660031901126101a35760043567ffffffffffffffff81116101a357366023820112156101a357806004013567ffffffffffffffff81116101a3576024820191602436918360051b0101116101a3576106ca610ec7565b6106d2611460565b8015159060005b8381106106e257005b60019061070b6001600160a01b036107036106fe84898b611222565b6110fa565b161515611232565b818060a01b0361071f6106fe83888a611222565b1660005260026020526107428360406000209060ff801983541691151516179055565b818060a01b036107566106fe83888a611222565b167fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f6020604051878152a2016106d9565b346101a35760003660031901126101a3576107a0611460565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101a35760203660031901126101a3576001600160a01b03610801610eb1565b1660005260066020526020604060002054604051908152f35b346101a35760203660031901126101a35761086e60043533600052600260205260ff604060002054168015610877575b610853906110bd565b61085b611489565b6108668115156111c9565b600454611215565b60045560018055005b506000546001600160a01b0316331461084a565b346101a35760203660031901126101a3576004356108a7611460565b8060005260086020526108c160ff60406000205416611184565b600081815260056020526040812060048101805460ff19169055426006820155600101546001600160a01b031691907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c9080a3005b346101a35760003660031901126101a35733600052600260205260ff60406000205416801561097d575b610949906110bd565b60035460001981146109675760016020910180600355604051908152f35b634e487b7160e01b600052601160045260246000fd5b506000546001600160a01b03163314610940565b346101a35760403660031901126101a35760243560043567ffffffffffffffff82116101a357816004019160e060031982360301126101a35733600052600260205260ff604060002054168015610e64575b6109ec906110bd565b8115610e2a576024810190610a136001600160a01b03610a0b846110fa565b16151561110e565b6044810135938415610de55760648201610a2d8183611151565b905015610da957846000526008602052608460ff604060002054161593610a5d610a56876110fa565b9385611151565b9290910135908115158092036101a3578515610d915742925b60405195610a8387610f3e565b3586526001600160a01b0390941660208601908152604086018a8152909467ffffffffffffffff8111610c7a5760405192610ac8601f8301601f191660200185610f5a565b81845236828201116101a357816000926020928387013784010152606086019182526080860192835260a086019384524260c0870190815260008a81526005602052604090209651875594516001870180546001600160a01b0319166001600160a01b0392909216919091179055516002860155518051600386019167ffffffffffffffff8211610c7a57610b5d8354610f04565b601f8111610d49575b50602090601f8311600114610cd9579180610bb79492600698979694600092610cce575b50508160011b916000199060031b1c19161790555b511515600486019060ff801983541691151516179055565b5160058401555191015515610c90576000828152600860205260409020805460ff191660011790556001600160a01b03610bf0826110fa565b16600052600760205260406000209081549068010000000000000000821015610c7a57610c46827f3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e946001602095018155610ed6565b815460001960039290921b91821b19169086901b1790556001600160a01b0390610c6f906110fa565b1693604051908152a3005b634e487b7160e01b600052604160045260246000fd5b9091506001600160a01b0390610ca5906110fa565b16907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c600080a3005b015190508d80610b8a565b90601f1983169184600052816000209260005b818110610d31575092600192859260069a999896610bb7989610610d18575b505050811b019055610b9f565b015160001960f88460031b161c191690558d8080610d0b565b92936020600181928786015181550195019301610cec565b836000526020600020601f840160051c81019160208510610d87575b601f0160051c01905b818110610d7b5750610b66565b60008155600101610d6e565b9091508190610d65565b87600052600560205260056040600020015492610a76565b60405162461bcd60e51b8152602060048201526014602482015273135bdb99dbd1185d185251081c995c5d5a5c995960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b995d1ddbdc9ac8125160721b6044820152606490fd5b506000546001600160a01b031633146109e3565b346101a35760003660031901126101a3576020600454604051908152f35b346101a35760003660031901126101a3576020906003548152f35b600435906001600160a01b03821682036101a357565b6024359081151582036101a357565b8054821015610eee5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610f34575b6020831014610f1e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f13565b60e0810190811067ffffffffffffffff821117610c7a57604052565b90601f8019910116810190811067ffffffffffffffff821117610c7a57604052565b9060405191826000825492610f9084610f04565b8084529360018116908115610ffe5750600114610fb7575b50610fb592500383610f5a565b565b90506000929192526020600020906000915b818310610fe2575050906020610fb59282010138610fa8565b6020919350806001915483858901015201910190918492610fc9565b905060209250610fb594915060ff191682840152151560051b82010138610fa8565b919082519283825260005b84811061104c575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161102b565b908151815260018060a01b0360208301511660208201526040820151604082015260c08061109e606085015160e0606086015260e0850190611020565b9360808101511515608085015260a081015160a0850152015191015290565b156110c457565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b356001600160a01b03811681036101a35790565b1561111557565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420686f7374206164647265737360601b6044820152606490fd5b903590601e19813603018212156101a3570180359067ffffffffffffffff82116101a3576020019181360383136101a357565b1561118b57565b60405162461bcd60e51b815260206004820152601660248201527513995d1ddbdc9ac8191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b156111d057565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b9190820180921161096757565b9190811015610eee5760051b0190565b1561123957565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642063616c6c6572206164647265737360501b6044820152606490fd5b6040519061128482610f3e565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b906040516112bb81610f3e565b8254815260018301546001600160a01b031660208201526002830154604082015291829060c0906006906112f160038201610f7c565b606085015260ff60048201541615156080850152600581015460a08501520154910152565b67ffffffffffffffff8111610c7a5760051b60200190565b9190820391821161096757565b8051821015610eee5760209160051b010190565b600354929183821015611424576113669082611215565b83811161141d575b611378828261132e565b9161138283611316565b926113906040519485610f5a565b80845261139f601f1991611316565b0160005b818110611406575050805b8281106113bc575050509190565b60018101908181116109675760019160005260056020526113ff60406000206113ee6113e8868561132e565b916112ae565b6113f8828961133b565b528661133b565b50016113ae565b602090611411611277565b828288010152016113a3565b508261136e565b50506040516000611436602083610f5a565b81526000805b8181106114495750509190565b602090611454611277565b8282860101520161143c565b6000546001600160a01b0316330361147457565b63118cdaa760e01b6000523360045260246000fd5b60026001541461149a576002600155565b633ee5aeb560e01b60005260046000fdfea2646970667358221220e0dccc0601c187e252de40a7942ded4529a09ba4e9e9b1ec97efa3889f8b374e64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x7E JUMPI CALLER ISZERO PUSH1 0x68 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH2 0x14E1 SWAP1 DUP2 PUSH2 0x84 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x217C682D EQ PUSH2 0xE96 JUMPI POP DUP1 PUSH4 0x22A4808B EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x29C718B5 EQ PUSH2 0x7E0 JUMPI DUP1 PUSH4 0x4CE083BE EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x50C0D41C EQ PUSH2 0x991 JUMPI DUP1 PUSH4 0x5290FFC6 EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0x88B JUMPI DUP1 PUSH4 0x69009A13 EQ PUSH2 0x81A JUMPI DUP1 PUSH4 0x6D65573F EQ PUSH2 0x7E0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0x73F9A5D7 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x7B334154 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x7BAE8F5E EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x879ECF10 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x8BB0A17C EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x95EA5717 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xD8B0E716 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xE1C7A8AA EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xEC13F2A1 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A8 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x13B PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x134F JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x178 JUMPI DUP6 DUP1 DUP7 DUP10 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x195 PUSH1 0x1 SWAP4 PUSH1 0x5F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1061 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x1C1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x27B PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x323 JUMPI JUMPDEST PUSH2 0x2A1 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2BE DUP3 ISZERO ISZERO PUSH2 0x110E JUMP JUMPDEST PUSH2 0x2C9 DUP2 ISZERO ISZERO PUSH2 0x11C9 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x2E2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1215 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH32 0x61A8B1A557E4D03803DB90D13FF76DB2C25FBA3ED24882CECDA8C8423B9B2BE0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x298 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x350 PUSH2 0xEB1 JUMP JUMPDEST PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH2 0x37B PUSH2 0xEC7 JUMP JUMPDEST SWAP3 PUSH2 0x384 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0x399 DUP5 ISZERO ISZERO PUSH2 0x1232 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x3BB DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3E2 PUSH2 0x1277 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x3FD PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x429 PUSH2 0x415 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1061 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x498 PUSH1 0x3 DUP4 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 PUSH2 0x4D3 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x6 PUSH1 0x5 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x1020 JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x533 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x564 SWAP2 PUSH2 0xED6 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x594 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5D3 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x656 JUMPI POP POP POP DUP2 PUSH2 0x613 SWAP2 SUB DUP3 PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x63D JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x62F JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5FD JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A3 JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1A3 JUMPI PUSH2 0x6CA PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0x1460 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6E2 JUMPI STOP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x70B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x703 PUSH2 0x6FE DUP5 DUP10 DUP12 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x10FA JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1232 JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x71F PUSH2 0x6FE DUP4 DUP9 DUP11 PUSH2 0x1222 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x742 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x756 PUSH2 0x6FE DUP4 DUP9 DUP11 PUSH2 0x1222 JUMP JUMPDEST AND PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE LOG2 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x7A0 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x801 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x86E PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x877 JUMPI JUMPDEST PUSH2 0x853 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x85B PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x866 DUP2 ISZERO ISZERO PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84A JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8A7 PUSH2 0x1460 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x8C1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C SWAP1 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x97D JUMPI JUMPDEST PUSH2 0x949 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x967 JUMPI PUSH1 0x1 PUSH1 0x20 SWAP2 ADD DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x940 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A3 JUMPI DUP2 PUSH1 0x4 ADD SWAP2 PUSH1 0xE0 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1A3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xE64 JUMPI JUMPDEST PUSH2 0x9EC SWAP1 PUSH2 0x10BD JUMP JUMPDEST DUP2 ISZERO PUSH2 0xE2A JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH2 0xA13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA0B DUP5 PUSH2 0x10FA JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x110E JUMP JUMPDEST PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP4 DUP5 ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x64 DUP3 ADD PUSH2 0xA2D DUP2 DUP4 PUSH2 0x1151 JUMP JUMPDEST SWAP1 POP ISZERO PUSH2 0xDA9 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x84 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP4 PUSH2 0xA5D PUSH2 0xA56 DUP8 PUSH2 0x10FA JUMP JUMPDEST SWAP4 DUP6 PUSH2 0x1151 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1A3 JUMPI DUP6 ISZERO PUSH2 0xD91 JUMPI TIMESTAMP SWAP3 JUMPDEST PUSH1 0x40 MLOAD SWAP6 PUSH2 0xA83 DUP8 PUSH2 0xF3E JUMP JUMPDEST CALLDATALOAD DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD DUP11 DUP2 MSTORE SWAP1 SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xAC8 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xF5A JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE DUP3 DUP3 ADD GT PUSH2 0x1A3 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 DUP5 MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP7 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x3 DUP7 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xC7A JUMPI PUSH2 0xB5D DUP4 SLOAD PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD49 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCD9 JUMPI SWAP2 DUP1 PUSH2 0xBB7 SWAP5 SWAP3 PUSH1 0x6 SWAP9 SWAP8 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xCCE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ISZERO PUSH2 0xC90 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF0 DUP3 PUSH2 0x10FA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xC7A JUMPI PUSH2 0xC46 DUP3 PUSH32 0x3A3EE326DD9451112D67D1BABDAF697562D06E41E2571DDD356B4E9BE0DE478E SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD DUP2 SSTORE PUSH2 0xED6 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP7 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xC6F SWAP1 PUSH2 0x10FA JUMP JUMPDEST AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xCA5 SWAP1 PUSH2 0x10FA JUMP JUMPDEST AND SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xB8A JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD31 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x6 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0xBB7 SWAP9 SWAP7 LT PUSH2 0xD18 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xB9F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0xD0B JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xCEC JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xD87 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xD7B JUMPI POP PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD6E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135BDB99DBD1185D185251081C995C5D5A5C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081B995D1DDBDC9AC81251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E3 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1A3 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xF34 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xF1E JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC7A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC7A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xF90 DUP5 PUSH2 0xF04 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xFFE JUMPI POP PUSH1 0x1 EQ PUSH2 0xFB7 JUMPI JUMPDEST POP PUSH2 0xFB5 SWAP3 POP SUB DUP4 PUSH2 0xF5A JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xFE2 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0xFB5 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0xFA8 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0xFB5 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0xFA8 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x104C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x102B JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x109E PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1020 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x10C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1A3 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1115 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420686F73742061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A3 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A3 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1A3 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x118B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13995D1DDBDC9AC8191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11D0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x967 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1239 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642063616C6C65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1284 DUP3 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x12BB DUP2 PUSH2 0xF3E JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0xC0 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x12F1 PUSH1 0x3 DUP3 ADD PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC7A JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x967 JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP3 SWAP2 DUP4 DUP3 LT ISZERO PUSH2 0x1424 JUMPI PUSH2 0x1366 SWAP1 DUP3 PUSH2 0x1215 JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x141D JUMPI JUMPDEST PUSH2 0x1378 DUP3 DUP3 PUSH2 0x132E JUMP JUMPDEST SWAP2 PUSH2 0x1382 DUP4 PUSH2 0x1316 JUMP JUMPDEST SWAP3 PUSH2 0x1390 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xF5A JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x139F PUSH1 0x1F NOT SWAP2 PUSH2 0x1316 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1406 JUMPI POP POP DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x13BC JUMPI POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x967 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x13FF PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x13EE PUSH2 0x13E8 DUP7 DUP6 PUSH2 0x132E JUMP JUMPDEST SWAP2 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x13F8 DUP3 DUP10 PUSH2 0x133B JUMP JUMPDEST MSTORE DUP7 PUSH2 0x133B JUMP JUMPDEST POP ADD PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1411 PUSH2 0x1277 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x13A3 JUMP JUMPDEST POP DUP3 PUSH2 0x136E JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1436 PUSH1 0x20 DUP4 PUSH2 0xF5A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1449 JUMPI POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1454 PUSH2 0x1277 JUMP JUMPDEST DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x143C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1474 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x149A JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xDC 0xCC MOD ADD 0xC1 DUP8 0xE2 MSTORE 0xDE BLOCKHASH 0xA7 SWAP5 0x2D 0xED GASLIMIT 0x29 LOG0 SWAP12 LOG4 0xE9 0xE9 0xB1 0xEC SWAP8 0xEF LOG3 DUP9 SWAP16 DUP12 CALLDATACOPY 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "172:5679:12:-:0;;;;;;;1751:10;1273:26:0;1269:95;;1297:1;172:5679:12;;1751:10;-1:-1:-1;;;;;;172:5679:12;;;;;;1751:10;-1:-1:-1;;;;;172:5679:12;;;;3052:40:0;;1297:1;3052:40;1857:1:8;172:5679:12;;1297:1:0;639::12;172:5679;;;;;;;;1269:95:0;1322:31;;;1297:1;1322:31;1297:1;1322:31;172:5679:12;;1297:1:0;1322:31;172:5679:12;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 3761,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool": {
                  "entryPoint": 3783,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 4128,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_Network": {
                  "entryPoint": 4193,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "access_calldata_tail_string_calldata": {
                  "entryPoint": 4433,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "allocate_and_zero_memory_struct_struct_Network": {
                  "entryPoint": 4727,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_Network_dyn": {
                  "entryPoint": 4886,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "calldata_array_index_access_address_dyn_calldata": {
                  "entryPoint": 4642,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 4629,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 4910,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 3964,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 3844,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 3930,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_15427": {
                  "entryPoint": 3902,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 5216,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getNetworksPaginated": {
                  "entryPoint": 4943,
                  "id": 3391,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 5257,
                  "id": 966,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "memory_array_index_access_struct_Network_dyn": {
                  "entryPoint": 4923,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_calldatat_address": {
                  "entryPoint": 4346,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_reference_type_struct_Network": {
                  "entryPoint": 4782,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_3e76": {
                  "entryPoint": 4553,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_6ca8": {
                  "entryPoint": 4658,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_b1b0": {
                  "entryPoint": 4484,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ecf3": {
                  "entryPoint": 4366,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_fac3": {
                  "entryPoint": 4285,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_uint256_dyn": {
                  "entryPoint": 3798,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c908163217c682d14610e965750806322a4808b14610e7857806329c718b5146107e05780634ce083be14610e7857806350c0d41c146109915780635290ffc6146109165780635a2f406f1461088b57806369009a131461081a5780636d65573f146107e0578063715018a61461078757806373f9a5d71461066c57806379f0dc57146105b25780637b334154146105735780637bae8f5e1461051a578063879ecf10146104e95780638bb0a17c146104565780638da5cb5b1461042d57806395ea5717146103c6578063d8b0e71614610337578063e1c7a8aa14610262578063ec13f2a114610231578063f2fde38b146101a85763fa9c81a41461011c57600080fd5b346101a35760403660031901126101a35761013b60243560043561134f565b9060405190604082016040835281518091526060830190602060608260051b8601019301916000905b828210610178578580868960208301520390f35b90919293602080610195600193605f198a82030186528851611061565b960192019201909291610164565b600080fd5b346101a35760203660031901126101a3576101c1610eb1565b6101c9611460565b6001600160a01b0316801561021b57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101a35760203660031901126101a3576004356000526008602052602060ff604060002054166040519015158152f35b346101a35760403660031901126101a35761027b610eb1565b6024359033600052600260205260ff604060002054168015610323575b6102a1906110bd565b6102a9611489565b6001600160a01b0316906102be82151561110e565b6102c98115156111c9565b8160005260066020526102e26040600020918254611215565b90558060005260066020527f61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be06020604060002054604051908152a260018055005b506000546001600160a01b03163314610298565b346101a35760403660031901126101a357610350610eb1565b7fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f602061037b610ec7565b92610384611460565b6001600160a01b031692610399841515611232565b83600052600282526103bb8160406000209060ff801983541691151516179055565b6040519015158152a2005b346101a35760203660031901126101a3576004356103e2611277565b508060005260086020526103fd60ff60406000205416611184565b600052600560205261042961041560406000206112ae565b604051918291602083526020830190611061565b0390f35b346101a35760003660031901126101a3576000546040516001600160a01b039091168152602090f35b346101a35760203660031901126101a35760043560005260056020526040600020805460018060a01b0360018301541691600281015461049860038301610f7c565b916104d360ff60048301541693600660058401549301549360405197889788526020880152604087015260e0606087015260e0860190611020565b921515608085015260a084015260c08301520390f35b346101a35760203660031901126101a3576004356000526009602052602060ff604060002054166040519015158152f35b346101a35760403660031901126101a357610533610eb1565b6001600160a01b03166000908152600760205260409020805460243591908210156101a35760209161056491610ed6565b90549060031b1c604051908152f35b346101a35760203660031901126101a3576001600160a01b03610594610eb1565b166000526002602052602060ff604060002054166040519015158152f35b346101a35760203660031901126101a3576001600160a01b036105d3610eb1565b16600052600760205260406000206040518060208354918281520190819360005260206000209060005b8181106106565750505081610613910382610f5a565b6040519182916020830190602084525180915260408301919060005b81811061063d575050500390f35b825184528594506020938401939092019160010161062f565b82548452602090930192600192830192016105fd565b346101a35760403660031901126101a35760043567ffffffffffffffff81116101a357366023820112156101a357806004013567ffffffffffffffff81116101a3576024820191602436918360051b0101116101a3576106ca610ec7565b6106d2611460565b8015159060005b8381106106e257005b60019061070b6001600160a01b036107036106fe84898b611222565b6110fa565b161515611232565b818060a01b0361071f6106fe83888a611222565b1660005260026020526107428360406000209060ff801983541691151516179055565b818060a01b036107566106fe83888a611222565b167fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f6020604051878152a2016106d9565b346101a35760003660031901126101a3576107a0611460565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101a35760203660031901126101a3576001600160a01b03610801610eb1565b1660005260066020526020604060002054604051908152f35b346101a35760203660031901126101a35761086e60043533600052600260205260ff604060002054168015610877575b610853906110bd565b61085b611489565b6108668115156111c9565b600454611215565b60045560018055005b506000546001600160a01b0316331461084a565b346101a35760203660031901126101a3576004356108a7611460565b8060005260086020526108c160ff60406000205416611184565b600081815260056020526040812060048101805460ff19169055426006820155600101546001600160a01b031691907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c9080a3005b346101a35760003660031901126101a35733600052600260205260ff60406000205416801561097d575b610949906110bd565b60035460001981146109675760016020910180600355604051908152f35b634e487b7160e01b600052601160045260246000fd5b506000546001600160a01b03163314610940565b346101a35760403660031901126101a35760243560043567ffffffffffffffff82116101a357816004019160e060031982360301126101a35733600052600260205260ff604060002054168015610e64575b6109ec906110bd565b8115610e2a576024810190610a136001600160a01b03610a0b846110fa565b16151561110e565b6044810135938415610de55760648201610a2d8183611151565b905015610da957846000526008602052608460ff604060002054161593610a5d610a56876110fa565b9385611151565b9290910135908115158092036101a3578515610d915742925b60405195610a8387610f3e565b3586526001600160a01b0390941660208601908152604086018a8152909467ffffffffffffffff8111610c7a5760405192610ac8601f8301601f191660200185610f5a565b81845236828201116101a357816000926020928387013784010152606086019182526080860192835260a086019384524260c0870190815260008a81526005602052604090209651875594516001870180546001600160a01b0319166001600160a01b0392909216919091179055516002860155518051600386019167ffffffffffffffff8211610c7a57610b5d8354610f04565b601f8111610d49575b50602090601f8311600114610cd9579180610bb79492600698979694600092610cce575b50508160011b916000199060031b1c19161790555b511515600486019060ff801983541691151516179055565b5160058401555191015515610c90576000828152600860205260409020805460ff191660011790556001600160a01b03610bf0826110fa565b16600052600760205260406000209081549068010000000000000000821015610c7a57610c46827f3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e946001602095018155610ed6565b815460001960039290921b91821b19169086901b1790556001600160a01b0390610c6f906110fa565b1693604051908152a3005b634e487b7160e01b600052604160045260246000fd5b9091506001600160a01b0390610ca5906110fa565b16907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c600080a3005b015190508d80610b8a565b90601f1983169184600052816000209260005b818110610d31575092600192859260069a999896610bb7989610610d18575b505050811b019055610b9f565b015160001960f88460031b161c191690558d8080610d0b565b92936020600181928786015181550195019301610cec565b836000526020600020601f840160051c81019160208510610d87575b601f0160051c01905b818110610d7b5750610b66565b60008155600101610d6e565b9091508190610d65565b87600052600560205260056040600020015492610a76565b60405162461bcd60e51b8152602060048201526014602482015273135bdb99dbd1185d185251081c995c5d5a5c995960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b995d1ddbdc9ac8125160721b6044820152606490fd5b506000546001600160a01b031633146109e3565b346101a35760003660031901126101a3576020600454604051908152f35b346101a35760003660031901126101a3576020906003548152f35b600435906001600160a01b03821682036101a357565b6024359081151582036101a357565b8054821015610eee5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610f34575b6020831014610f1e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f13565b60e0810190811067ffffffffffffffff821117610c7a57604052565b90601f8019910116810190811067ffffffffffffffff821117610c7a57604052565b9060405191826000825492610f9084610f04565b8084529360018116908115610ffe5750600114610fb7575b50610fb592500383610f5a565b565b90506000929192526020600020906000915b818310610fe2575050906020610fb59282010138610fa8565b6020919350806001915483858901015201910190918492610fc9565b905060209250610fb594915060ff191682840152151560051b82010138610fa8565b919082519283825260005b84811061104c575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161102b565b908151815260018060a01b0360208301511660208201526040820151604082015260c08061109e606085015160e0606086015260e0850190611020565b9360808101511515608085015260a081015160a0850152015191015290565b156110c457565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b356001600160a01b03811681036101a35790565b1561111557565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420686f7374206164647265737360601b6044820152606490fd5b903590601e19813603018212156101a3570180359067ffffffffffffffff82116101a3576020019181360383136101a357565b1561118b57565b60405162461bcd60e51b815260206004820152601660248201527513995d1ddbdc9ac8191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b156111d057565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b9190820180921161096757565b9190811015610eee5760051b0190565b1561123957565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642063616c6c6572206164647265737360501b6044820152606490fd5b6040519061128482610f3e565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b906040516112bb81610f3e565b8254815260018301546001600160a01b031660208201526002830154604082015291829060c0906006906112f160038201610f7c565b606085015260ff60048201541615156080850152600581015460a08501520154910152565b67ffffffffffffffff8111610c7a5760051b60200190565b9190820391821161096757565b8051821015610eee5760209160051b010190565b600354929183821015611424576113669082611215565b83811161141d575b611378828261132e565b9161138283611316565b926113906040519485610f5a565b80845261139f601f1991611316565b0160005b818110611406575050805b8281106113bc575050509190565b60018101908181116109675760019160005260056020526113ff60406000206113ee6113e8868561132e565b916112ae565b6113f8828961133b565b528661133b565b50016113ae565b602090611411611277565b828288010152016113a3565b508261136e565b50506040516000611436602083610f5a565b81526000805b8181106114495750509190565b602090611454611277565b8282860101520161143c565b6000546001600160a01b0316330361147457565b63118cdaa760e01b6000523360045260246000fd5b60026001541461149a576002600155565b633ee5aeb560e01b60005260046000fdfea2646970667358221220e0dccc0601c187e252de40a7942ded4529a09ba4e9e9b1ec97efa3889f8b374e64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x217C682D EQ PUSH2 0xE96 JUMPI POP DUP1 PUSH4 0x22A4808B EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x29C718B5 EQ PUSH2 0x7E0 JUMPI DUP1 PUSH4 0x4CE083BE EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x50C0D41C EQ PUSH2 0x991 JUMPI DUP1 PUSH4 0x5290FFC6 EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0x88B JUMPI DUP1 PUSH4 0x69009A13 EQ PUSH2 0x81A JUMPI DUP1 PUSH4 0x6D65573F EQ PUSH2 0x7E0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0x73F9A5D7 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x7B334154 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x7BAE8F5E EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x879ECF10 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x8BB0A17C EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x95EA5717 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xD8B0E716 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xE1C7A8AA EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xEC13F2A1 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A8 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x13B PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x134F JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x178 JUMPI DUP6 DUP1 DUP7 DUP10 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x195 PUSH1 0x1 SWAP4 PUSH1 0x5F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1061 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x1C1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x27B PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x323 JUMPI JUMPDEST PUSH2 0x2A1 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2BE DUP3 ISZERO ISZERO PUSH2 0x110E JUMP JUMPDEST PUSH2 0x2C9 DUP2 ISZERO ISZERO PUSH2 0x11C9 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x2E2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1215 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH32 0x61A8B1A557E4D03803DB90D13FF76DB2C25FBA3ED24882CECDA8C8423B9B2BE0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x298 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x350 PUSH2 0xEB1 JUMP JUMPDEST PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH2 0x37B PUSH2 0xEC7 JUMP JUMPDEST SWAP3 PUSH2 0x384 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0x399 DUP5 ISZERO ISZERO PUSH2 0x1232 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x3BB DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3E2 PUSH2 0x1277 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x3FD PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x429 PUSH2 0x415 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1061 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x498 PUSH1 0x3 DUP4 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 PUSH2 0x4D3 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x6 PUSH1 0x5 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x1020 JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x533 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x564 SWAP2 PUSH2 0xED6 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x594 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5D3 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x656 JUMPI POP POP POP DUP2 PUSH2 0x613 SWAP2 SUB DUP3 PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x63D JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x62F JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5FD JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A3 JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1A3 JUMPI PUSH2 0x6CA PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0x1460 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6E2 JUMPI STOP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x70B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x703 PUSH2 0x6FE DUP5 DUP10 DUP12 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x10FA JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1232 JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x71F PUSH2 0x6FE DUP4 DUP9 DUP11 PUSH2 0x1222 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x742 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x756 PUSH2 0x6FE DUP4 DUP9 DUP11 PUSH2 0x1222 JUMP JUMPDEST AND PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE LOG2 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x7A0 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x801 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x86E PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x877 JUMPI JUMPDEST PUSH2 0x853 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x85B PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x866 DUP2 ISZERO ISZERO PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84A JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8A7 PUSH2 0x1460 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x8C1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C SWAP1 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x97D JUMPI JUMPDEST PUSH2 0x949 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x967 JUMPI PUSH1 0x1 PUSH1 0x20 SWAP2 ADD DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x940 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A3 JUMPI DUP2 PUSH1 0x4 ADD SWAP2 PUSH1 0xE0 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1A3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xE64 JUMPI JUMPDEST PUSH2 0x9EC SWAP1 PUSH2 0x10BD JUMP JUMPDEST DUP2 ISZERO PUSH2 0xE2A JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH2 0xA13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA0B DUP5 PUSH2 0x10FA JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x110E JUMP JUMPDEST PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP4 DUP5 ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x64 DUP3 ADD PUSH2 0xA2D DUP2 DUP4 PUSH2 0x1151 JUMP JUMPDEST SWAP1 POP ISZERO PUSH2 0xDA9 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x84 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP4 PUSH2 0xA5D PUSH2 0xA56 DUP8 PUSH2 0x10FA JUMP JUMPDEST SWAP4 DUP6 PUSH2 0x1151 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1A3 JUMPI DUP6 ISZERO PUSH2 0xD91 JUMPI TIMESTAMP SWAP3 JUMPDEST PUSH1 0x40 MLOAD SWAP6 PUSH2 0xA83 DUP8 PUSH2 0xF3E JUMP JUMPDEST CALLDATALOAD DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD DUP11 DUP2 MSTORE SWAP1 SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xAC8 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xF5A JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE DUP3 DUP3 ADD GT PUSH2 0x1A3 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 DUP5 MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP7 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x3 DUP7 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xC7A JUMPI PUSH2 0xB5D DUP4 SLOAD PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD49 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCD9 JUMPI SWAP2 DUP1 PUSH2 0xBB7 SWAP5 SWAP3 PUSH1 0x6 SWAP9 SWAP8 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xCCE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ISZERO PUSH2 0xC90 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF0 DUP3 PUSH2 0x10FA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xC7A JUMPI PUSH2 0xC46 DUP3 PUSH32 0x3A3EE326DD9451112D67D1BABDAF697562D06E41E2571DDD356B4E9BE0DE478E SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD DUP2 SSTORE PUSH2 0xED6 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP7 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xC6F SWAP1 PUSH2 0x10FA JUMP JUMPDEST AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xCA5 SWAP1 PUSH2 0x10FA JUMP JUMPDEST AND SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xB8A JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD31 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x6 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0xBB7 SWAP9 SWAP7 LT PUSH2 0xD18 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xB9F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0xD0B JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xCEC JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xD87 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xD7B JUMPI POP PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD6E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135BDB99DBD1185D185251081C995C5D5A5C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081B995D1DDBDC9AC81251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E3 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1A3 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xF34 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xF1E JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC7A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC7A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xF90 DUP5 PUSH2 0xF04 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xFFE JUMPI POP PUSH1 0x1 EQ PUSH2 0xFB7 JUMPI JUMPDEST POP PUSH2 0xFB5 SWAP3 POP SUB DUP4 PUSH2 0xF5A JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xFE2 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0xFB5 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0xFA8 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0xFB5 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0xFA8 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x104C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x102B JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x109E PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1020 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x10C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1A3 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1115 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420686F73742061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A3 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A3 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1A3 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x118B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13995D1DDBDC9AC8191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11D0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x967 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1239 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642063616C6C65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1284 DUP3 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x12BB DUP2 PUSH2 0xF3E JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0xC0 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x12F1 PUSH1 0x3 DUP3 ADD PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC7A JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x967 JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP3 SWAP2 DUP4 DUP3 LT ISZERO PUSH2 0x1424 JUMPI PUSH2 0x1366 SWAP1 DUP3 PUSH2 0x1215 JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x141D JUMPI JUMPDEST PUSH2 0x1378 DUP3 DUP3 PUSH2 0x132E JUMP JUMPDEST SWAP2 PUSH2 0x1382 DUP4 PUSH2 0x1316 JUMP JUMPDEST SWAP3 PUSH2 0x1390 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xF5A JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x139F PUSH1 0x1F NOT SWAP2 PUSH2 0x1316 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1406 JUMPI POP POP DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x13BC JUMPI POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x967 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x13FF PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x13EE PUSH2 0x13E8 DUP7 DUP6 PUSH2 0x132E JUMP JUMPDEST SWAP2 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x13F8 DUP3 DUP10 PUSH2 0x133B JUMP JUMPDEST MSTORE DUP7 PUSH2 0x133B JUMP JUMPDEST POP ADD PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1411 PUSH2 0x1277 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x13A3 JUMP JUMPDEST POP DUP3 PUSH2 0x136E JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1436 PUSH1 0x20 DUP4 PUSH2 0xF5A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1449 JUMPI POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1454 PUSH2 0x1277 JUMP JUMPDEST DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x143C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1474 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x149A JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xDC 0xCC MOD ADD 0xC1 DUP8 0xE2 MSTORE 0xDE BLOCKHASH 0xA7 SWAP5 0x2D 0xED GASLIMIT 0x29 LOG0 SWAP12 LOG4 0xE9 0xE9 0xB1 0xEC SWAP8 0xEF LOG3 DUP9 SWAP16 DUP12 CALLDATACOPY 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "172:5679:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;172:5679:12;2627:22:0;;2623:91;;172:5679:12;;;-1:-1:-1;;;;;;172:5679:12;;;;;;-1:-1:-1;;;;;172:5679:12;;3052:40:0;;172:5679:12;3052:40:0;172:5679:12;2623:91:0;2672:31;;;172:5679:12;2672:31:0;172:5679:12;;;;;2672:31:0;172:5679:12;;;;;;-1:-1:-1;;172:5679:12;;;;;;;;891:45;172:5679;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;;;:::i;:::-;;;1063:10;;172:5679;;1048:14;172:5679;;;;;;;;1048:51;;;;172:5679;1027:112;;;:::i;:::-;2466:103:8;;:::i;:::-;-1:-1:-1;;;;;172:5679:12;;4763:58;4771:25;;;4763:58;:::i;:::-;4831:52;4839:10;;;4831:52;:::i;:::-;172:5679;;;4894:12;172:5679;;4894:35;172:5679;;;;;;4894:35;:::i;:::-;172:5679;;;;;4894:12;172:5679;;4944:59;172:5679;;;;;;;;;;4944:59;172:5679;;;;1048:51;-1:-1:-1;172:5679:12;;-1:-1:-1;;;;;172:5679:12;1063:10;1078:21;1048:51;;172:5679;;;;;;-1:-1:-1;;172:5679:12;;;;;;:::i;:::-;2002:37;172:5679;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;172:5679:12;;1889:56;1897:21;;;1889:56;:::i;:::-;172:5679;;;1955:14;172:5679;;1955:32;172:5679;;;;;;;;;;;;;;;;;;;1955:32;172:5679;;;;;;;2002:37;172:5679;;;;;;;-1:-1:-1;;172:5679:12;;;;;;;;:::i;:::-;;;;;3756:13;172:5679;;3748:52;172:5679;;;;;;3748:52;:::i;:::-;172:5679;;3817:8;172:5679;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;;;;;-1:-1:-1;;;;;172:5679:12;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;;;;;684:43;172:5679;;;;;;;;;;;;;684:43;;172:5679;;684:43;;;;172:5679;684:43;;;;;:::i;:::-;;172:5679;;;684:43;;172:5679;;684:43;;;;;172:5679;684:43;;172:5679;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;;;;;942:45;172:5679;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;;;:::i;:::-;-1:-1:-1;;;;;172:5679:12;;;;;834:51;172:5679;;;;;;;;;;;834:51;;;;;172:5679;834:51;;;;:::i;:::-;172:5679;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;-1:-1:-1;;;;;172:5679:12;;:::i;:::-;;;;444:46;172:5679;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;-1:-1:-1;;;;;172:5679:12;;:::i;:::-;;;;4566:14;172:5679;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5679:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;172:5679:12;;;;;2243:19;;;;;;172:5679;2264:3;172:5679;;2283:60;-1:-1:-1;;;;;2291:11:12;;172:5679;2291:11;;;:::i;:::-;;:::i;:::-;172:5679;2291:25;;2283:60;:::i;:::-;172:5679;;;;;2372:11;;;;;;:::i;:::-;172:5679;;;2357:14;172:5679;;2357:36;172:5679;;;;;;;;;;;;;;;;;;;2357:36;172:5679;;;;;2433:11;;;;;;:::i;:::-;172:5679;2412:41;172:5679;;;;;;2412:41;172:5679;2228:13;;172:5679;;;;;;-1:-1:-1;;172:5679:12;;;;1500:62:0;;:::i;:::-;172:5679:12;;;-1:-1:-1;;;;;;172:5679:12;;;;-1:-1:-1;;;;;172:5679:12;3052:40:0;172:5679:12;;3052:40:0;172:5679:12;;;;;;;-1:-1:-1;;172:5679:12;;;;-1:-1:-1;;;;;172:5679:12;;:::i;:::-;;;;5125:12;172:5679;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;5331:24;172:5679;;1063:10;172:5679;;1048:14;172:5679;;;;;;;;1048:51;;;;172:5679;1027:112;;;:::i;:::-;2466:103:8;;:::i;:::-;5269:52:12;5277:10;;;5269:52;:::i;:::-;172:5679;;5331:24;:::i;:::-;172:5679;;;;;;1048:51;-1:-1:-1;172:5679:12;;-1:-1:-1;;;;;172:5679:12;1063:10;1078:21;1048:51;;172:5679;;;;;;-1:-1:-1;;172:5679:12;;;;;;1500:62:0;;:::i;:::-;172:5679:12;;;5615:13;172:5679;;5607:59;172:5679;;;;;;5607:59;:::i;:::-;172:5679;;;;5676:8;172:5679;;;;;;5676:28;;172:5679;;-1:-1:-1;;172:5679:12;;;5754:15;5722:29;;;172:5679;-1:-1:-1;5810:31:12;172:5679;-1:-1:-1;;;;;172:5679:12;;;5784:58;;172:5679;5784:58;172:5679;;;;;;;-1:-1:-1;;172:5679:12;;;;1063:10;172:5679;;1048:14;172:5679;;;;;;;;1048:51;;;;172:5679;1027:112;;;:::i;:::-;2595:18;172:5679;-1:-1:-1;;172:5679:12;;;;;;;;;2595:18;172:5679;;;;;;;;;;;;;;;;;;;1048:51;-1:-1:-1;172:5679:12;;-1:-1:-1;;;;;172:5679:12;1063:10;1078:21;1048:51;;172:5679;;;;;;-1:-1:-1;;172:5679:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:10;172:5679;;1048:14;172:5679;;;;;;;;1048:51;;;;172:5679;1027:112;;;:::i;:::-;2719:6;;172:5679;;;2766:15;;;2758:62;-1:-1:-1;;;;;2766:15:12;;;:::i;:::-;172:5679;2766:29;;2758:62;:::i;:::-;2838:19;;;172:5679;2838:23;;;172:5679;;2918:15;;;;;;;:::i;:::-;2912:33;;;172:5679;;;;;3002:13;172:5679;;3235:12;172:5679;;;;;;3001:18;3104:15;3196;3104;;;:::i;:::-;3196;;;:::i;:::-;3235:12;;;;172:5679;;;;;;;;;;3272:55;;;;3287:15;3272:55;;172:5679;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;172:5679:12;;;;3045:333;;172:5679;;;;3045:333;;172:5679;;;3045:333;;172:5679;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2918:15;3045:333;;172:5679;;;3235:12;3045:333;;172:5679;;;3045:333;;;172:5679;;;3352:15;3045:333;;;172:5679;;;-1:-1:-1;172:5679:12;;;3030:8;172:5679;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;172:5679:12;-1:-1:-1;;;;;172:5679:12;;;;;;;;;;;1048:14;172:5679;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;3272:55;172:5679;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3030:8;172:5679;;;;;;;3389:266;;;172:5679;;;;3002:13;172:5679;;;;;;;-1:-1:-1;;172:5679:12;;;;;-1:-1:-1;;;;;3474:15:12;;;:::i;:::-;172:5679;;;3459:14;172:5679;;;;;;;;;;;;;;;;;3518:55;172:5679;;;;;;;;:::i;:::-;;;-1:-1:-1;;172:5679:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:5679:12;3536:15;;;:::i;:::-;172:5679;;;;;;;3518:55;172:5679;;;;;;;;;;;;;3389:266;172:5679;;-1:-1:-1;;;;;;172:5679:12;3628:15;;;:::i;:::-;172:5679;3609:35;;172:5679;3609:35;;172:5679;;;;;-1:-1:-1;172:5679:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3030:8;172:5679;;;;;;;;;;;;3030:8;172:5679;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5679:12;;;;3272:55;172:5679;;;3305:8;172:5679;;3305:8;172:5679;;;3305:22;172:5679;3272:55;;;172:5679;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;;-1:-1:-1;;;2838:19:12;172:5679;;;2918:15;;172:5679;;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;;;2838:19;172:5679;;;;;;;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;;-1:-1:-1;;;172:5679:12;;;;;;;1048:51;-1:-1:-1;172:5679:12;;-1:-1:-1;;;;;172:5679:12;1063:10;1078:21;1048:51;;172:5679;;;;;;-1:-1:-1;;172:5679:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:12;;;;;;543:31;172:5679;;;;;;;;-1:-1:-1;;;;;172:5679:12;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;172:5679:12;;-1:-1:-1;172:5679:12;;;-1:-1:-1;172:5679:12;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;172:5679:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;172:5679:12;;;;;-1:-1:-1;172:5679:12;;-1:-1:-1;172:5679:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;;-1:-1:-1;;;172:5679:12;;;;;;;;;-1:-1:-1;;;;;172:5679:12;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;;-1:-1:-1;;;172:5679:12;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;172:5679:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;172:5679:12;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;3842:600::-;3999:16;172:5679;;3842:600;4029:15;;;;4025:78;;4127:14;;;;:::i;:::-;4155:11;;;4151:53;;3842:600;4254:12;;;;:::i;:::-;4240:27;172:5679;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;-1:-1:-1;172:5679:12;;;;;;4282:18;;;4302:7;;;;;;4413:22;;;;3842:600;:::o;4311:3::-;4364:1;172:5679;;;;;;;;4364:1;172:5679;-1:-1:-1;172:5679:12;4351:8;172:5679;;4330:36;172:5679;-1:-1:-1;172:5679:12;;4337:10;;;;:::i;:::-;172:5679;;:::i;:::-;4330:36;;;;:::i;:::-;;;;:::i;:::-;;172:5679;4282:18;;172:5679;;;;;:::i;:::-;;;;;;;;;;4151:53;4182:11;;4151:53;;4025:78;-1:-1:-1;;172:5679:12;;-1:-1:-1;172:5679:12;;;;:::i;:::-;;;-1:-1:-1;;172:5679:12;;;;;;4060:32;;;;:::o;172:5679::-;;;;;:::i;:::-;;;;;;;;;;1796:162:0;1710:6;172:5679:12;-1:-1:-1;;;;;172:5679:12;735:10:6;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:6;1901:40:0;172:5679:12;;1710:6:0;1901:40;2575:307:8;1899:1;2702:7;172:5679:12;2702:18:8;2698:86;;1899:1;2702:7;172:5679:12;2575:307:8:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:8;;-1:-1:-1;2743:30:8"
            },
            "methodIdentifiers": {
              "allowedCallers(address)": "7b334154",
              "emergencyDeactivateNetwork(uint256)": "5a2f406f",
              "getHostEarnings(address)": "6d65573f",
              "getHostNetworks(address)": "79f0dc57",
              "getNetwork(uint256)": "95ea5717",
              "getNetworksPaginated(uint256,uint256)": "fa9c81a4",
              "getZaaNetEarnings()": "22a4808b",
              "hostEarnings(address)": "29c718b5",
              "hostNetworkIds(address,uint256)": "7bae8f5e",
              "increaseHostEarnings(address,uint256)": "e1c7a8aa",
              "increaseZaaNetEarnings(uint256)": "69009a13",
              "incrementNetworkId()": "5290ffc6",
              "networkExists(uint256)": "ec13f2a1",
              "networkIdCounter()": "217c682d",
              "networks(uint256)": "8bb0a17c",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "sessionExists(uint256)": "879ecf10",
              "setAllowedCaller(address,bool)": "d8b0e716",
              "setAllowedCallers(address[],bool)": "73f9a5d7",
              "setNetwork(uint256,(uint256,address,uint256,string,bool,uint256,uint256))": "50c0d41c",
              "transferOwnership(address)": "f2fde38b",
              "zaanetEarnings()": "4ce083be"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"AllowedCallerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalEarned\",\"type\":\"uint256\"}],\"name\":\"HostEarningsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"}],\"name\":\"NetworkStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"NetworkUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SessionStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalEarned\",\"type\":\"uint256\"}],\"name\":\"ZaaNetEarningsUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostNetworks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getNetwork\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getNetworksPaginated\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZaaNetEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hostEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hostNetworkIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseHostEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseZaaNetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNetworkId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"networkIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sessionExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAllowedCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAllowedCallers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"net\",\"type\":\"tuple\"}],\"name\":\"setNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zaanetEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetStorage.sol\":\"ZaaNetStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x2d84ff4b1782d1249c2189338a7d42b8159309ed614634f99c9be89d32199f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c68e8b2790b20da4a12c69088bce500a269e0f9b3ac80e3cd58c9ef11001ec\",\"dweb:/ipfs/QmdDitFPsfDEEfpbWgkqYCgpdSHq7j7Dm8ic4JecMwcfzj\"]}},\"version\":1}"
        }
      }
    }
  }
}