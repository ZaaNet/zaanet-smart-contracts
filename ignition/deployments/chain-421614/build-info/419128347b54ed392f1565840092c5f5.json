{
  "id": "419128347b54ed392f1565840092c5f5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/ZaaNetAdmin.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./ZaaNetStorage.sol\";\n\ncontract ZaaNetAdmin is Ownable, Pausable, ReentrancyGuard {\n    ZaaNetStorage public storageContract;\n    address public treasuryAddress; // Address to receive platform fees\n    address public paymentAddress; // Address to make voucher payments\n    uint256 public platformFeePercent; // Platform fee percentage (1-20%)\n    uint256 public hostingFee; // Hosting fee in USDT (6 decimals)\n\n    // Constants for validation\n    uint256 public constant MAX_PLATFORM_FEE = 20; // 20% maximum fee\n    uint256 public constant MIN_PLATFORM_FEE = 1;  // 1% minimum fee\n    uint256 public constant MAX_HOSTING_FEE = 100 * (10 ** 6); // 100 USDT maximum hosting fee\n    uint256 public constant MIN_HOSTING_FEE = 0; // 0 USDT minimum hosting fee (can be free)\n\n    // Emergency controls\n    bool public emergencyMode = false;\n    mapping(address => bool) public emergencyOperators;\n\n    // Fee history for transparency\n    struct FeeChange {\n        uint256 oldFee;\n        uint256 newFee;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    FeeChange[] public feeHistory;\n    \n    // Treasury change history\n    struct TreasuryChange {\n        address oldTreasury;\n        address newTreasury;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    TreasuryChange[] public treasuryHistory;\n\n    // Hosting fee history\n    struct HostingFeeChange {\n        uint256 oldFee;\n        uint256 newFee;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    HostingFeeChange[] public hostingFeeHistory;\n\n    // Events\n    event PlatformFeeUpdated(uint256 indexed oldFee, uint256 indexed newFee, address indexed changedBy);\n    event TreasuryUpdated(address indexed oldTreasury, address indexed newTreasury, address indexed changedBy);\n    event HostingFeeUpdated(uint256 indexed oldFee, uint256 indexed newFee, address indexed changedBy);\n    event AdminPaused(address indexed triggeredBy);\n    event AdminUnpaused(address indexed triggeredBy);\n    event EmergencyModeToggled(bool enabled, address indexed triggeredBy);\n    event EmergencyOperatorUpdated(address indexed operator, bool status, address indexed updatedBy);\n    event ContractsInitialized(address indexed storageContract, uint256 timestamp);\n\n    modifier onlyEmergencyOperator() {\n        require(emergencyOperators[msg.sender] || msg.sender == owner(), \"Not emergency operator\");\n        _;\n    }\n\n    modifier notInEmergencyMode() {\n        require(!emergencyMode, \"System in emergency mode\");\n        _;\n    }\n\n    constructor(\n        address _storageContract,\n        address _treasuryAddress,\n        address _paymentAddress,\n        uint256 _platformFeePercent,\n        uint256 _hostingFee\n    ) Ownable(msg.sender) {\n        require(_treasuryAddress != address(0), \"Treasury cannot be zero address\");\n        require(\n            _platformFeePercent >= MIN_PLATFORM_FEE && _platformFeePercent <= MAX_PLATFORM_FEE, \n            \"Platform fee must be between 1% and 20%\"\n        );\n        require(_paymentAddress != address(0), \"Payment address cannot be zero address\");\n        require(\n            _hostingFee >= MIN_HOSTING_FEE && _hostingFee <= MAX_HOSTING_FEE,\n            \"Hosting fee must be between 0 and 100 USDT\"\n        );\n\n        if (_storageContract != address(0)) {\n            storageContract = ZaaNetStorage(_storageContract);\n            emit ContractsInitialized(_storageContract, block.timestamp);\n        }\n        \n        treasuryAddress = _treasuryAddress;\n        platformFeePercent = _platformFeePercent;\n        hostingFee = _hostingFee;\n\n        // Record initial settings\n        feeHistory.push(FeeChange({\n            oldFee: 0,\n            newFee: _platformFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        treasuryHistory.push(TreasuryChange({\n            oldTreasury: address(0),\n            newTreasury: _treasuryAddress,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        hostingFeeHistory.push(HostingFeeChange({\n            oldFee: 0,\n            newFee: _hostingFee,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        // Set owner as emergency operator\n        emergencyOperators[msg.sender] = true;\n        emit EmergencyOperatorUpdated(msg.sender, true, msg.sender);\n    }\n\n    function setPlatformFee(uint256 _newFeePercent) external onlyOwner notInEmergencyMode {\n        require(\n            _newFeePercent >= MIN_PLATFORM_FEE && _newFeePercent <= MAX_PLATFORM_FEE, \n            \"Fee must be between 1% and 20%\"\n        );\n        require(_newFeePercent != platformFeePercent, \"Fee unchanged\");\n\n        uint256 oldFee = platformFeePercent;\n        platformFeePercent = _newFeePercent;\n\n        // Record fee change\n        feeHistory.push(FeeChange({\n            oldFee: oldFee,\n            newFee: _newFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit PlatformFeeUpdated(oldFee, _newFeePercent, msg.sender);\n    }\n\n    function setHostingFee(uint256 _newFee) external onlyOwner notInEmergencyMode {\n        require(\n            _newFee >= MIN_HOSTING_FEE && _newFee <= MAX_HOSTING_FEE,\n            \"Fee must be between 0 and 100 USDT\"\n        );\n        require(_newFee != hostingFee, \"Fee unchanged\");\n        \n        uint256 oldFee = hostingFee;\n        hostingFee = _newFee;\n        \n        // Record hosting fee change\n        hostingFeeHistory.push(HostingFeeChange({\n            oldFee: oldFee,\n            newFee: _newFee,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n        \n        emit HostingFeeUpdated(oldFee, _newFee, msg.sender);\n    }\n\n    function setTreasuryAddress(address _newTreasuryAddress) external onlyOwner notInEmergencyMode {\n        require(_newTreasuryAddress != address(0), \"Invalid treasury address\");\n        require(_newTreasuryAddress != treasuryAddress, \"Treasury unchanged\");\n\n        address oldTreasury = treasuryAddress;\n        treasuryAddress = _newTreasuryAddress;\n\n        // Record treasury change\n        treasuryHistory.push(TreasuryChange({\n            oldTreasury: oldTreasury,\n            newTreasury: _newTreasuryAddress,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit TreasuryUpdated(oldTreasury, _newTreasuryAddress, msg.sender);\n    }\n\n    function setPaymentAddress(address _newPaymentAddress) external onlyOwner notInEmergencyMode {\n        require(_newPaymentAddress != address(0), \"Invalid payment address\");\n        require(_newPaymentAddress != paymentAddress, \"Payment address unchanged\");\n\n        paymentAddress = _newPaymentAddress;\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n        emit AdminPaused(msg.sender);\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n        emit AdminUnpaused(msg.sender);\n    }\n\n    /// @notice Toggle emergency mode (stops most operations)\n    function toggleEmergencyMode() external onlyEmergencyOperator {\n        emergencyMode = !emergencyMode;\n        emit EmergencyModeToggled(emergencyMode, msg.sender);\n    }\n\n    /// @notice Add or remove emergency operators\n    function setEmergencyOperator(address operator, bool status) external onlyOwner {\n        require(operator != address(0), \"Invalid operator address\");\n        emergencyOperators[operator] = status;\n        emit EmergencyOperatorUpdated(operator, status, msg.sender);\n    }\n\n    /// @notice Emergency function to deactivate a network\n    function emergencyDeactivateNetwork(uint256 networkId) external onlyEmergencyOperator {\n        require(address(storageContract) != address(0), \"Storage not initialized\");\n        storageContract.emergencyDeactivateNetwork(networkId);\n    }\n\n    /// @notice Emergency fee adjustment (bypasses normal restrictions)\n    function emergencySetPlatformFee(uint256 _newFeePercent) external onlyEmergencyOperator {\n        require(_newFeePercent <= MAX_PLATFORM_FEE, \"Fee cannot exceed maximum\");\n        \n        uint256 oldFee = platformFeePercent;\n        platformFeePercent = _newFeePercent;\n\n        feeHistory.push(FeeChange({\n            oldFee: oldFee,\n            newFee: _newFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit PlatformFeeUpdated(oldFee, _newFeePercent, msg.sender);\n    }\n\n    /// @notice Emergency hosting fee adjustment (bypasses normal restrictions)\n    function emergencySetHostingFee(uint256 _newFee) external onlyEmergencyOperator {\n        require(_newFee <= MAX_HOSTING_FEE, \"Fee cannot exceed maximum\");\n        \n        uint256 oldFee = hostingFee;\n        hostingFee = _newFee;\n\n        hostingFeeHistory.push(HostingFeeChange({\n            oldFee: oldFee,\n            newFee: _newFee,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit HostingFeeUpdated(oldFee, _newFee, msg.sender);\n    }\n\n    // --- View Functions ---\n\n    /// @notice Expose admin address for other contracts (interface compatibility)\n    function admin() external view returns (address) {\n        return owner();\n    }\n\n    /// @notice Get fee change history\n    function getFeeHistory() external view returns (FeeChange[] memory) {\n        return feeHistory;\n    }\n\n    /// @notice Get treasury change history\n    function getTreasuryHistory() external view returns (TreasuryChange[] memory) {\n        return treasuryHistory;\n    }\n\n    /// @notice Get hosting fee change history\n    function getHostingFeeHistory() external view returns (HostingFeeChange[] memory) {\n        return hostingFeeHistory;\n    }\n\n    /// @notice Get current fee in basis points (for more precise calculations)\n    function getPlatformFeeBasisPoints() external view returns (uint256) {\n        return platformFeePercent * 100; // Convert percentage to basis points\n    }   \n\n    /// @notice Calculate platform fee for a given amount\n    function calculatePlatformFee(uint256 amount) external view returns (uint256) {\n        return (amount * platformFeePercent) / 100;\n    }\n\n    /// @notice Get comprehensive admin statistics\n    function getAdminStats() external view returns (\n        uint256 totalFeeChanges,\n        uint256 totalTreasuryChanges,\n        uint256 totalHostingFeeChanges,\n        bool isEmergencyMode,\n        uint256 currentPlatformFee,\n        uint256 currentHostingFee,\n        address currentTreasury\n    ) {\n        totalFeeChanges = feeHistory.length;\n        totalTreasuryChanges = treasuryHistory.length;\n        totalHostingFeeChanges = hostingFeeHistory.length;\n        isEmergencyMode = emergencyMode;\n        currentPlatformFee = platformFeePercent;\n        currentHostingFee = hostingFee;\n        currentTreasury = treasuryAddress;\n    }\n\n    /// @notice Check if address is emergency operator\n    function isEmergencyOperator(address operator) external view returns (bool) {\n        return emergencyOperators[operator];\n    }\n\n    /// @notice Get latest fee change details\n    function getLatestFeeChange() external view returns (FeeChange memory) {\n        require(feeHistory.length > 0, \"No fee changes recorded\");\n        return feeHistory[feeHistory.length - 1];\n    }\n\n    /// @notice Get latest treasury change details\n    function getLatestTreasuryChange() external view returns (TreasuryChange memory) {\n        require(treasuryHistory.length > 0, \"No treasury changes recorded\");\n        return treasuryHistory[treasuryHistory.length - 1];\n    }\n\n    /// @notice Get latest hosting fee change details\n    function getLatestHostingFeeChange() external view returns (HostingFeeChange memory) {\n        require(hostingFeeHistory.length > 0, \"No hosting fee changes recorded\");\n        return hostingFeeHistory[hostingFeeHistory.length - 1];\n    }\n\n    /// @notice Get all current fees in one call (gas efficient)\n    function getCurrentFees() external view returns (\n        uint256 platformFeePercentage,\n        uint256 hostingFeeAmount\n    ) {\n        return (platformFeePercent, hostingFee);\n    }\n\n    // --- Compatibility Functions (for interface alignment) ---\n\n    /// @notice Alternative name for treasury address (interface compatibility)\n    function treasury() external view returns (address) {\n        return treasuryAddress;\n    }\n\n    /// @notice Alternative name for payment address (interface compatibility)\n    function payment() external view returns (address) {\n        return paymentAddress;\n    }\n\n    /// @notice Check if contract is paused (interface compatibility)\n    function paused() public view override returns (bool) {\n        return super.paused();\n    }\n}"
      },
      "contracts/ZaaNetStorage.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract ZaaNetStorage is Ownable, ReentrancyGuard {\n    struct Network {\n        uint256 id;\n        address hostAddress;\n        uint256 pricePerSession;\n        string mongoDataId;\n        bool isActive;\n        uint256 createdAt;\n        uint256 updatedAt;\n    }\n\n    mapping(address => bool) public allowedCallers; // Addresses allowed to call storage functions\n    uint256 public networkIdCounter; // Counter for network IDs\n    uint256 public zaanetEarnings = 0; // Total earnings for ZaaNet platform\n    mapping(uint256 => Network) public networks;\n    mapping(address => uint256) public hostEarnings;\n\n    // New mappings for better data management\n    mapping(address => uint256[]) public hostNetworkIds;\n    mapping(uint256 => bool) public networkExists;\n    mapping(uint256 => bool) public sessionExists;\n\n    modifier onlyAllowed() {\n        require(\n            allowedCallers[msg.sender] || msg.sender == owner(),\n            \"Not authorized\"\n        );\n        _;\n    }\n\n    event AllowedCallerUpdated(address indexed caller, bool status);\n    event NetworkStored(\n        uint256 indexed id,\n        address indexed hostAddress,\n        uint256 pricePerSession\n    );\n    event NetworkUpdated(uint256 indexed id, address indexed hostAddress);\n    event SessionStored(\n        uint256 indexed sessionId,\n        address indexed paymentAddress,\n        uint256 amount\n    );\n    event HostEarningsUpdated(address indexed hostAddress, uint256 totalEarned);\n    event ZaaNetEarningsUpdated(uint256 totalEarned);\n\n    // --- Constructor ---\n    constructor() Ownable(msg.sender) {}\n\n    // --- Caller Management ---\n    function setAllowedCaller(address _caller, bool status) external onlyOwner {\n        require(_caller != address(0), \"Invalid caller address\");\n        allowedCallers[_caller] = status;\n        emit AllowedCallerUpdated(_caller, status);\n    }\n\n    // Batch set allowed callers for initial setup\n    function setAllowedCallers(\n        address[] calldata _callers,\n        bool status\n    ) external onlyOwner {\n        for (uint256 i = 0; i < _callers.length; i++) {\n            require(_callers[i] != address(0), \"Invalid caller address\");\n            allowedCallers[_callers[i]] = status;\n            emit AllowedCallerUpdated(_callers[i], status);\n        }\n    }\n\n    // --- Network Functions ---\n    function incrementNetworkId() external onlyAllowed returns (uint256) {\n        return ++networkIdCounter;\n    }\n\n    function setNetwork(uint256 id, Network calldata net) external onlyAllowed {\n        require(id > 0, \"Invalid network ID\");\n        require(net.hostAddress != address(0), \"Invalid host address\");\n        require(net.pricePerSession > 0, \"Price must be greater than 0\");\n        require(bytes(net.mongoDataId).length > 0, \"MongoDataID required\");\n\n        bool isNewNetwork = !networkExists[id];\n\n        networks[id] = Network({\n            id: net.id,\n            hostAddress: net.hostAddress,\n            pricePerSession: net.pricePerSession,\n            mongoDataId: net.mongoDataId,\n            isActive: net.isActive,\n            createdAt: isNewNetwork ? block.timestamp : networks[id].createdAt,\n            updatedAt: block.timestamp\n        });\n\n        if (isNewNetwork) {\n            networkExists[id] = true;\n            hostNetworkIds[net.hostAddress].push(id);\n            emit NetworkStored(id, net.hostAddress, net.pricePerSession);\n        } else {\n            emit NetworkUpdated(id, net.hostAddress);\n        }\n    }\n\n    function getNetwork(uint256 id) external view returns (Network memory) {\n        require(networkExists[id], \"Network does not exist\");\n        return networks[id];\n    }\n\n    function getNetworksPaginated(\n        uint256 offset,\n        uint256 limit\n    ) external view returns (Network[] memory, uint256 total) {\n        total = networkIdCounter;\n        if (offset >= total) {\n            return (new Network[](0), total);\n        }\n\n        uint256 end = offset + limit;\n        if (end > total) {\n            end = total;\n        }\n\n        Network[] memory result = new Network[](end - offset);\n        for (uint256 i = offset; i < end; i++) {\n            result[i - offset] = networks[i + 1]; // Networks start at ID 1\n        }\n\n        return (result, total);\n    }\n\n    function getHostNetworks(\n        address hostAddress\n    ) external view returns (uint256[] memory) {\n        return hostNetworkIds[hostAddress];\n    }\n\n    // --- Earnings ---\n    function increaseHostEarnings(\n        address hostAddress,\n        uint256 amount\n    ) external onlyAllowed nonReentrant {\n        require(hostAddress != address(0), \"Invalid host address\");\n        require(amount > 0, \"Amount must be greater than 0\");\n\n        hostEarnings[hostAddress] += amount;\n        emit HostEarningsUpdated(hostAddress, hostEarnings[hostAddress]);\n    }\n\n    function getHostEarnings(\n        address hostAddress\n    ) external view returns (uint256) {\n        return hostEarnings[hostAddress];\n    }\n\n    function increaseZaaNetEarnings(\n        uint256 amount\n    ) external onlyAllowed nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        zaanetEarnings += amount;\n    }\n\n    function getZaaNetEarnings() external view returns (uint256) {\n        return zaanetEarnings;\n    }\n\n    // Emergency function to deactivate a network\n    function emergencyDeactivateNetwork(uint256 networkId) external onlyOwner {\n        require(networkExists[networkId], \"Network does not exist\");\n        networks[networkId].isActive = false;\n        networks[networkId].updatedAt = block.timestamp;\n        emit NetworkUpdated(networkId, networks[networkId].hostAddress);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 178,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 177,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 177,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                177
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 159,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              177
            ]
          },
          "id": 178,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:1",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 177,
              "linearizedBaseContracts": [
                177
              ],
              "name": "Context",
              "nameLocation": "642:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 158,
                    "nodeType": "Block",
                    "src": "718:34:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 155,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 154,
                        "id": 157,
                        "nodeType": "Return",
                        "src": "728:17:1"
                      }
                    ]
                  },
                  "id": 159,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:1"
                  },
                  "returnParameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "709:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:1"
                  },
                  "scope": 177,
                  "src": "656:96:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "825:32:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 164,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:1",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 163,
                        "id": 166,
                        "nodeType": "Return",
                        "src": "835:15:1"
                      }
                    ]
                  },
                  "id": 168,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:1"
                  },
                  "returnParameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "809:14:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:1"
                  },
                  "scope": 177,
                  "src": "758:99:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "935:25:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 172,
                        "id": 174,
                        "nodeType": "Return",
                        "src": "945:8:1"
                      }
                    ]
                  },
                  "id": 176,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:1"
                  },
                  "returnParameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "926:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:1"
                  },
                  "scope": 177,
                  "src": "863:97:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 178,
              "src": "624:338:1",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "Pausable": [
              285
            ]
          },
          "id": 286,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 179,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 181,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 286,
              "sourceUnit": 178,
              "src": "128:45:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 180,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 177,
                    "src": "136:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 183,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 177,
                    "src": "645:7:2"
                  },
                  "id": 184,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:2"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 182,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:2",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 285,
              "linearizedBaseContracts": [
                285,
                177
              ],
              "name": "Pausable",
              "nameLocation": "633:8:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "659:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 187,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:2",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 191,
                  "name": "Paused",
                  "nameLocation": "770:6:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 189,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "777:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:2"
                  },
                  "src": "764:30:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 192,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:2",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 196,
                  "name": "Unpaused",
                  "nameLocation": "881:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 194,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "890:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:2"
                  },
                  "src": "875:32:2"
                },
                {
                  "documentation": {
                    "id": 197,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:2",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 199,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:2"
                  },
                  "src": "994:22:2"
                },
                {
                  "documentation": {
                    "id": 200,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:2",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 202,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:2"
                  },
                  "src": "1107:22:2"
                },
                {
                  "body": {
                    "id": 209,
                    "nodeType": "Block",
                    "src": "1340:47:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 205,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "1350:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:2"
                      },
                      {
                        "id": 208,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 203,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:2",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 210,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 204,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:2"
                  },
                  "src": "1315:72:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 217,
                    "nodeType": "Block",
                    "src": "1587:44:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 213,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "1597:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:2"
                      },
                      {
                        "id": 216,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 211,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:2",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 218,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:2"
                  },
                  "src": "1565:66:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 226,
                    "nodeType": "Block",
                    "src": "1779:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 224,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "1796:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 223,
                        "id": 225,
                        "nodeType": "Return",
                        "src": "1789:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 219,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:2",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 227,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:2"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "1773:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:2"
                  },
                  "scope": 285,
                  "src": "1726:84:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "1929:77:2",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 231,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "1943:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 237,
                        "nodeType": "IfStatement",
                        "src": "1939:61:2",
                        "trueBody": {
                          "id": 236,
                          "nodeType": "Block",
                          "src": "1953:47:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 233,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "1974:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 235,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 228,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:2",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 239,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:2"
                  },
                  "returnParameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:2"
                  },
                  "scope": 285,
                  "src": "1878:128:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "2126:78:2",
                    "statements": [
                      {
                        "condition": {
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:2",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 243,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "2141:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 250,
                        "nodeType": "IfStatement",
                        "src": "2136:62:2",
                        "trueBody": {
                          "id": 249,
                          "nodeType": "Block",
                          "src": "2151:47:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 246,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "2172:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 248,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 240,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:2",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 252,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:2"
                  },
                  "returnParameters": {
                    "id": 242,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:2"
                  },
                  "scope": 285,
                  "src": "2078:126:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 267,
                    "nodeType": "Block",
                    "src": "2388:66:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 258,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "2398:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 261,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 263,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 159,
                                "src": "2434:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 262,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "2427:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 266,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 253,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:2",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 268,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 256,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 255,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 210,
                        "src": "2374:13:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:2"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:2"
                  },
                  "returnParameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:2"
                  },
                  "scope": 285,
                  "src": "2339:115:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "2634:69:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 274,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "2644:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 277,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 279,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 159,
                                "src": "2683:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 278,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "2674:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 282,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 269,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:2",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 284,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 272,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 271,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "2623:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:2"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:2"
                  },
                  "returnParameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:2"
                  },
                  "scope": 285,
                  "src": "2586:117:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 286,
              "src": "615:2090:2",
              "usedErrors": [
                199,
                202
              ],
              "usedEvents": [
                191,
                196
              ]
            }
          ],
          "src": "102:2604:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              354
            ]
          },
          "id": 355,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 287,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:3"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 288,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:3",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 354,
              "linearizedBaseContracts": [
                354
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 291,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "1818:40:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 294,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "1864:36:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 296,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "1907:23:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 297,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:3",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 299,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:3"
                  },
                  "src": "1994:37:3"
                },
                {
                  "body": {
                    "id": 306,
                    "nodeType": "Block",
                    "src": "2051:38:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 302,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "2061:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 303,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "2071:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:3"
                      }
                    ]
                  },
                  "id": 307,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 300,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:3"
                  },
                  "returnParameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:3"
                  },
                  "scope": 354,
                  "src": "2037:52:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "2490:79:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 310,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
                            "src": "2500:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 312,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:3"
                      },
                      {
                        "id": 313,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:3"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 314,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "2542:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 316,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 308,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:3",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 318,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 309,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:3"
                  },
                  "src": "2466:103:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "2614:268:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 321,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "2702:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 322,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "2713:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 328,
                        "nodeType": "IfStatement",
                        "src": "2698:86:3",
                        "trueBody": {
                          "id": 327,
                          "nodeType": "Block",
                          "src": "2722:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 324,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "2743:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 326,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 329,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "2858:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 330,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "2868:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:3"
                      }
                    ]
                  },
                  "id": 334,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:3"
                  },
                  "returnParameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:3"
                  },
                  "scope": 354,
                  "src": "2575:307:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 341,
                    "nodeType": "Block",
                    "src": "2926:170:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 337,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "3068:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 338,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "3078:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 340,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:3"
                      }
                    ]
                  },
                  "id": 342,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 335,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:3"
                  },
                  "returnParameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:3"
                  },
                  "scope": 354,
                  "src": "2888:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 352,
                    "nodeType": "Block",
                    "src": "3339:42:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 348,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "3356:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 349,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "3367:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 347,
                        "id": 351,
                        "nodeType": "Return",
                        "src": "3349:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 343,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:3",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 353,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:3"
                  },
                  "returnParameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "3333:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:3"
                  },
                  "scope": 354,
                  "src": "3275:106:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 355,
              "src": "1030:2353:3",
              "usedErrors": [
                299
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:3"
        },
        "id": 3
      },
      "contracts/ZaaNetAdmin.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetAdmin.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              285
            ],
            "ReentrancyGuard": [
              354
            ],
            "ZaaNetAdmin": [
              1309
            ],
            "ZaaNetStorage": [
              1879
            ]
          },
          "id": 1310,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 356,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 357,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1310,
              "sourceUnit": 148,
              "src": "58:52:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 358,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1310,
              "sourceUnit": 286,
              "src": "111:52:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 359,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1310,
              "sourceUnit": 355,
              "src": "164:59:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "./ZaaNetStorage.sol",
              "id": 360,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1310,
              "sourceUnit": 1880,
              "src": "224:29:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 361,
                    "name": "Ownable",
                    "nameLocations": [
                      "279:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "279:7:4"
                  },
                  "id": 362,
                  "nodeType": "InheritanceSpecifier",
                  "src": "279:7:4"
                },
                {
                  "baseName": {
                    "id": 363,
                    "name": "Pausable",
                    "nameLocations": [
                      "288:8:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 285,
                    "src": "288:8:4"
                  },
                  "id": 364,
                  "nodeType": "InheritanceSpecifier",
                  "src": "288:8:4"
                },
                {
                  "baseName": {
                    "id": 365,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "298:15:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 354,
                    "src": "298:15:4"
                  },
                  "id": 366,
                  "nodeType": "InheritanceSpecifier",
                  "src": "298:15:4"
                }
              ],
              "canonicalName": "ZaaNetAdmin",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1309,
              "linearizedBaseContracts": [
                1309,
                354,
                285,
                147,
                177
              ],
              "name": "ZaaNetAdmin",
              "nameLocation": "264:11:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "11ce0267",
                  "id": 369,
                  "mutability": "mutable",
                  "name": "storageContract",
                  "nameLocation": "341:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "320:36:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ZaaNetStorage_$1879",
                    "typeString": "contract ZaaNetStorage"
                  },
                  "typeName": {
                    "id": 368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 367,
                      "name": "ZaaNetStorage",
                      "nameLocations": [
                        "320:13:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1879,
                      "src": "320:13:4"
                    },
                    "referencedDeclaration": 1879,
                    "src": "320:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZaaNetStorage_$1879",
                      "typeString": "contract ZaaNetStorage"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c5f956af",
                  "id": 371,
                  "mutability": "mutable",
                  "name": "treasuryAddress",
                  "nameLocation": "377:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "362:30:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "633423be",
                  "id": 373,
                  "mutability": "mutable",
                  "name": "paymentAddress",
                  "nameLocation": "449:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "434:29:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8c639a85",
                  "id": 375,
                  "mutability": "mutable",
                  "name": "platformFeePercent",
                  "nameLocation": "520:18:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "505:33:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ebe7fdaa",
                  "id": 377,
                  "mutability": "mutable",
                  "name": "hostingFee",
                  "nameLocation": "594:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "579:25:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "3998a681",
                  "id": 380,
                  "mutability": "constant",
                  "name": "MAX_PLATFORM_FEE",
                  "nameLocation": "703:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "679:45:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "722:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "6f04d994",
                  "id": 383,
                  "mutability": "constant",
                  "name": "MIN_PLATFORM_FEE",
                  "nameLocation": "773:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "749:44:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "792:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "bb8f0b65",
                  "id": 391,
                  "mutability": "constant",
                  "name": "MAX_HOSTING_FEE",
                  "nameLocation": "842:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "818:57:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "313030",
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "860:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "867:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "873:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "867:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        }
                      ],
                      "id": 389,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "866:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "860:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "54d74941",
                  "id": 394,
                  "mutability": "constant",
                  "name": "MIN_HOSTING_FEE",
                  "nameLocation": "937:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "913:43:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "955:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0905f560",
                  "id": 397,
                  "mutability": "mutable",
                  "name": "emergencyMode",
                  "nameLocation": "1045:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "1033:33:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1061:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "09705de8",
                  "id": 401,
                  "mutability": "mutable",
                  "name": "emergencyOperators",
                  "nameLocation": "1104:18:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "1072:50:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 400,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 398,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1080:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1072:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 399,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1091:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.FeeChange",
                  "id": 410,
                  "members": [
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "oldFee",
                      "nameLocation": "1200:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 410,
                      "src": "1192:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 402,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1192:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 405,
                      "mutability": "mutable",
                      "name": "newFee",
                      "nameLocation": "1224:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 410,
                      "src": "1216:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 404,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1216:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 407,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1248:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 410,
                      "src": "1240:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 406,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1240:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 409,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "1275:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 410,
                      "src": "1267:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 408,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1267:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FeeChange",
                  "nameLocation": "1172:9:4",
                  "nodeType": "StructDefinition",
                  "scope": 1309,
                  "src": "1165:126:4",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0d35a167",
                  "id": 414,
                  "mutability": "mutable",
                  "name": "feeHistory",
                  "nameLocation": "1320:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "1301:29:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.FeeChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 412,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 411,
                        "name": "FeeChange",
                        "nameLocations": [
                          "1301:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 410,
                        "src": "1301:9:4"
                      },
                      "referencedDeclaration": 410,
                      "src": "1301:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FeeChange_$410_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.FeeChange"
                      }
                    },
                    "id": 413,
                    "nodeType": "ArrayTypeName",
                    "src": "1301:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.FeeChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.TreasuryChange",
                  "id": 423,
                  "members": [
                    {
                      "constant": false,
                      "id": 416,
                      "mutability": "mutable",
                      "name": "oldTreasury",
                      "nameLocation": "1412:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 423,
                      "src": "1404:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 415,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1404:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 418,
                      "mutability": "mutable",
                      "name": "newTreasury",
                      "nameLocation": "1441:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 423,
                      "src": "1433:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 417,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1433:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 420,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1470:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 423,
                      "src": "1462:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1462:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "1497:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 423,
                      "src": "1489:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1489:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "TreasuryChange",
                  "nameLocation": "1379:14:4",
                  "nodeType": "StructDefinition",
                  "scope": 1309,
                  "src": "1372:141:4",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a380b86b",
                  "id": 427,
                  "mutability": "mutable",
                  "name": "treasuryHistory",
                  "nameLocation": "1547:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "1523:39:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 425,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 424,
                        "name": "TreasuryChange",
                        "nameLocations": [
                          "1523:14:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 423,
                        "src": "1523:14:4"
                      },
                      "referencedDeclaration": 423,
                      "src": "1523:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TreasuryChange_$423_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.TreasuryChange"
                      }
                    },
                    "id": 426,
                    "nodeType": "ArrayTypeName",
                    "src": "1523:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.HostingFeeChange",
                  "id": 436,
                  "members": [
                    {
                      "constant": false,
                      "id": 429,
                      "mutability": "mutable",
                      "name": "oldFee",
                      "nameLocation": "1638:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "1630:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 428,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1630:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 431,
                      "mutability": "mutable",
                      "name": "newFee",
                      "nameLocation": "1662:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "1654:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 430,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1654:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 433,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1686:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "1678:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1678:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "1713:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "1705:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1705:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "HostingFeeChange",
                  "nameLocation": "1603:16:4",
                  "nodeType": "StructDefinition",
                  "scope": 1309,
                  "src": "1596:133:4",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e53377eb",
                  "id": 440,
                  "mutability": "mutable",
                  "name": "hostingFeeHistory",
                  "nameLocation": "1765:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "1739:43:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 438,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 437,
                        "name": "HostingFeeChange",
                        "nameLocations": [
                          "1739:16:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 436,
                        "src": "1739:16:4"
                      },
                      "referencedDeclaration": 436,
                      "src": "1739:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HostingFeeChange_$436_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                      }
                    },
                    "id": 439,
                    "nodeType": "ArrayTypeName",
                    "src": "1739:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb99",
                  "id": 448,
                  "name": "PlatformFeeUpdated",
                  "nameLocation": "1809:18:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldFee",
                        "nameLocation": "1844:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "1828:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1828:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 444,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "1868:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "1852:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1852:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 446,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "1892:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "1876:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1876:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1827:75:4"
                  },
                  "src": "1803:100:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa13",
                  "id": 456,
                  "name": "TreasuryUpdated",
                  "nameLocation": "1914:15:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 455,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 450,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldTreasury",
                        "nameLocation": "1946:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "1930:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1930:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 452,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newTreasury",
                        "nameLocation": "1975:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "1959:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 451,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1959:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 454,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "2004:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "1988:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 453,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1988:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1929:85:4"
                  },
                  "src": "1908:107:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "eb710718efc8ce303613ea1c9fb97a21bd1154a827cdb5ed5607eadd10e8cf96",
                  "id": 464,
                  "name": "HostingFeeUpdated",
                  "nameLocation": "2026:17:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 458,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldFee",
                        "nameLocation": "2060:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "2044:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 457,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2044:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 460,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "2084:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "2068:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2068:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 462,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "2108:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "2092:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 461,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2092:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2043:75:4"
                  },
                  "src": "2020:99:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f0140290",
                  "id": 468,
                  "name": "AdminPaused",
                  "nameLocation": "2130:11:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 467,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 466,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2158:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "2142:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 465,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2142:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2141:29:4"
                  },
                  "src": "2124:47:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "cc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c634",
                  "id": 472,
                  "name": "AdminUnpaused",
                  "nameLocation": "2182:13:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 470,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2212:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "2196:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 469,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2196:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2195:29:4"
                  },
                  "src": "2176:49:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa40",
                  "id": 478,
                  "name": "EmergencyModeToggled",
                  "nameLocation": "2236:20:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 474,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "enabled",
                        "nameLocation": "2262:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "2257:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2257:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2287:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "2271:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2271:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2256:43:4"
                  },
                  "src": "2230:70:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce",
                  "id": 486,
                  "name": "EmergencyOperatorUpdated",
                  "nameLocation": "2311:24:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 485,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 480,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2352:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "2336:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2336:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 482,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "2367:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "2362:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 481,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2362:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 484,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "updatedBy",
                        "nameLocation": "2391:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "2375:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2335:66:4"
                  },
                  "src": "2305:97:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7f7d6e7886dca58922d0593a44928fb5066cd0e04369c371d72eb96e61368fa8",
                  "id": 492,
                  "name": "ContractsInitialized",
                  "nameLocation": "2413:20:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "storageContract",
                        "nameLocation": "2450:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 492,
                        "src": "2434:31:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2434:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 490,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2475:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 492,
                        "src": "2467:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 489,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2467:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2433:52:4"
                  },
                  "src": "2407:79:4"
                },
                {
                  "body": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "2525:118:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 495,
                                  "name": "emergencyOperators",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "2543:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 498,
                                "indexExpression": {
                                  "expression": {
                                    "id": 496,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2562:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2566:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2562:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2543:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 499,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2577:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2581:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2577:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 501,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "2591:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2591:7:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2577:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2543:55:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656d657267656e6379206f70657261746f72",
                              "id": 505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2600:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc1b39fc0b454b5fd3784c3a15d54fced45e89466614065aee240afeee0420b8",
                                "typeString": "literal_string \"Not emergency operator\""
                              },
                              "value": "Not emergency operator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc1b39fc0b454b5fd3784c3a15d54fced45e89466614065aee240afeee0420b8",
                                "typeString": "literal_string \"Not emergency operator\""
                              }
                            ],
                            "id": 494,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2535:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2535:90:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 507,
                        "nodeType": "ExpressionStatement",
                        "src": "2535:90:4"
                      },
                      {
                        "id": 508,
                        "nodeType": "PlaceholderStatement",
                        "src": "2635:1:4"
                      }
                    ]
                  },
                  "id": 510,
                  "name": "onlyEmergencyOperator",
                  "nameLocation": "2501:21:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 493,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2522:2:4"
                  },
                  "src": "2492:151:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 519,
                    "nodeType": "Block",
                    "src": "2679:79:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2697:14:4",
                              "subExpression": {
                                "id": 513,
                                "name": "emergencyMode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 397,
                                "src": "2698:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53797374656d20696e20656d657267656e6379206d6f6465",
                              "id": 515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2713:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6aa06e0bb1c440eec40b9cb8c9374010ea534350e6e4653e6abbb382dc701e03",
                                "typeString": "literal_string \"System in emergency mode\""
                              },
                              "value": "System in emergency mode"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6aa06e0bb1c440eec40b9cb8c9374010ea534350e6e4653e6abbb382dc701e03",
                                "typeString": "literal_string \"System in emergency mode\""
                              }
                            ],
                            "id": 512,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2689:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2689:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 517,
                        "nodeType": "ExpressionStatement",
                        "src": "2689:51:4"
                      },
                      {
                        "id": 518,
                        "nodeType": "PlaceholderStatement",
                        "src": "2750:1:4"
                      }
                    ]
                  },
                  "id": 520,
                  "name": "notInEmergencyMode",
                  "nameLocation": "2658:18:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 511,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2676:2:4"
                  },
                  "src": "2649:109:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 668,
                    "nodeType": "Block",
                    "src": "2969:1645:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 538,
                                "name": "_treasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 524,
                                "src": "2987:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 541,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3015:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 540,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3007:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 539,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3007:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3007:10:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2987:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726561737572792063616e6e6f74206265207a65726f2061646472657373",
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3019:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512",
                                "typeString": "literal_string \"Treasury cannot be zero address\""
                              },
                              "value": "Treasury cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512",
                                "typeString": "literal_string \"Treasury cannot be zero address\""
                              }
                            ],
                            "id": 537,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2979:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2979:74:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 546,
                        "nodeType": "ExpressionStatement",
                        "src": "2979:74:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 548,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 528,
                                  "src": "3084:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 549,
                                  "name": "MIN_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "3107:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3084:39:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 551,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 528,
                                  "src": "3127:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 552,
                                  "name": "MAX_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 380,
                                  "src": "3150:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3127:39:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3084:82:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506c6174666f726d20666565206d757374206265206265747765656e20312520616e6420323025",
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3181:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d95ddb3474aa062c903f578770b7dbf7ce309df8d78de188b95eac5cdd20fc7f",
                                "typeString": "literal_string \"Platform fee must be between 1% and 20%\""
                              },
                              "value": "Platform fee must be between 1% and 20%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d95ddb3474aa062c903f578770b7dbf7ce309df8d78de188b95eac5cdd20fc7f",
                                "typeString": "literal_string \"Platform fee must be between 1% and 20%\""
                              }
                            ],
                            "id": 547,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3063:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3063:169:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 557,
                        "nodeType": "ExpressionStatement",
                        "src": "3063:169:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 559,
                                "name": "_paymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 526,
                                "src": "3250:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 562,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3277:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3269:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 560,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3269:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3269:10:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3250:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061796d656e7420616464726573732063616e6e6f74206265207a65726f2061646472657373",
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3281:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0e07cf06ff6d2f5e708a84a558eed0fdb1fbd63261c7e66f60903a0dfc88550",
                                "typeString": "literal_string \"Payment address cannot be zero address\""
                              },
                              "value": "Payment address cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0e07cf06ff6d2f5e708a84a558eed0fdb1fbd63261c7e66f60903a0dfc88550",
                                "typeString": "literal_string \"Payment address cannot be zero address\""
                              }
                            ],
                            "id": 558,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3242:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3242:80:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 567,
                        "nodeType": "ExpressionStatement",
                        "src": "3242:80:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 569,
                                  "name": "_hostingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 530,
                                  "src": "3353:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 570,
                                  "name": "MIN_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 394,
                                  "src": "3368:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3353:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 572,
                                  "name": "_hostingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 530,
                                  "src": "3387:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 573,
                                  "name": "MAX_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "3402:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3387:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3353:64:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "486f7374696e6720666565206d757374206265206265747765656e203020616e64203130302055534454",
                              "id": 576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3431:44:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_558afdea4ba9d0c52c0eacab16b4bacaa8816b54f51337f4fde55b2f611332ed",
                                "typeString": "literal_string \"Hosting fee must be between 0 and 100 USDT\""
                              },
                              "value": "Hosting fee must be between 0 and 100 USDT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_558afdea4ba9d0c52c0eacab16b4bacaa8816b54f51337f4fde55b2f611332ed",
                                "typeString": "literal_string \"Hosting fee must be between 0 and 100 USDT\""
                              }
                            ],
                            "id": 568,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3332:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3332:153:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 578,
                        "nodeType": "ExpressionStatement",
                        "src": "3332:153:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 579,
                            "name": "_storageContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "3500:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3528:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3520:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 580,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3520:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3500:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 598,
                        "nodeType": "IfStatement",
                        "src": "3496:184:4",
                        "trueBody": {
                          "id": 597,
                          "nodeType": "Block",
                          "src": "3532:148:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 585,
                                  "name": "storageContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 369,
                                  "src": "3546:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ZaaNetStorage_$1879",
                                    "typeString": "contract ZaaNetStorage"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 587,
                                      "name": "_storageContract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 522,
                                      "src": "3578:16:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 586,
                                    "name": "ZaaNetStorage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1879,
                                    "src": "3564:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$1879_$",
                                      "typeString": "type(contract ZaaNetStorage)"
                                    }
                                  },
                                  "id": 588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3564:31:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ZaaNetStorage_$1879",
                                    "typeString": "contract ZaaNetStorage"
                                  }
                                },
                                "src": "3546:49:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZaaNetStorage_$1879",
                                  "typeString": "contract ZaaNetStorage"
                                }
                              },
                              "id": 590,
                              "nodeType": "ExpressionStatement",
                              "src": "3546:49:4"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 592,
                                    "name": "_storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 522,
                                    "src": "3635:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 593,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "3653:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3659:9:4",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "3653:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 591,
                                  "name": "ContractsInitialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 492,
                                  "src": "3614:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3614:55:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 596,
                              "nodeType": "EmitStatement",
                              "src": "3609:60:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 599,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "3698:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 600,
                            "name": "_treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "3716:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3698:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 602,
                        "nodeType": "ExpressionStatement",
                        "src": "3698:34:4"
                      },
                      {
                        "expression": {
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 603,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "3742:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 604,
                            "name": "_platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "3763:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3742:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 606,
                        "nodeType": "ExpressionStatement",
                        "src": "3742:40:4"
                      },
                      {
                        "expression": {
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 607,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 377,
                            "src": "3792:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 608,
                            "name": "_hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "3805:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3792:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 610,
                        "nodeType": "ExpressionStatement",
                        "src": "3792:24:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3910:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 616,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 528,
                                  "src": "3933:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 617,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3977:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3983:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3977:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 619,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4017:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 620,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4021:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4017:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 614,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 410,
                                "src": "3878:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$410_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "3902:6:4",
                                "3925:6:4",
                                "3966:9:4",
                                "4006:9:4"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "3878:160:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$410_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$410_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 611,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "3862:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3873:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3862:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$410_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3862:177:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 623,
                        "nodeType": "ExpressionStatement",
                        "src": "3862:177:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 630,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4121:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 629,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4113:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 628,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4113:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4113:10:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 632,
                                  "name": "_treasuryAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 524,
                                  "src": "4150:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 633,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4191:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 634,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4197:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4191:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 635,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4231:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4235:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4231:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 627,
                                "name": "TreasuryChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "4071:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_TreasuryChange_$423_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.TreasuryChange storage pointer)"
                                }
                              },
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "4100:11:4",
                                "4137:11:4",
                                "4180:9:4",
                                "4220:9:4"
                              ],
                              "names": [
                                "oldTreasury",
                                "newTreasury",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4071:181:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TreasuryChange_$423_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TreasuryChange_$423_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            ],
                            "expression": {
                              "id": 624,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 427,
                              "src": "4050:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4066:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4050:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage_ptr_$_t_struct$_TreasuryChange_$423_storage_$returns$__$attached_to$_t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.TreasuryChange storage ref[] storage pointer,struct ZaaNetAdmin.TreasuryChange storage ref)"
                            }
                          },
                          "id": 638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4050:203:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 639,
                        "nodeType": "ExpressionStatement",
                        "src": "4050:203:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4326:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 645,
                                  "name": "_hostingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 530,
                                  "src": "4349:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 646,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4385:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4391:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4385:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 648,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4425:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 649,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4429:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4425:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 643,
                                "name": "HostingFeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 436,
                                "src": "4287:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_HostingFeeChange_$436_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.HostingFeeChange storage pointer)"
                                }
                              },
                              "id": 650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "4318:6:4",
                                "4341:6:4",
                                "4374:9:4",
                                "4414:9:4"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4287:159:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$436_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$436_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 640,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 440,
                              "src": "4264:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4282:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4264:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage_ptr_$_t_struct$_HostingFeeChange_$436_storage_$returns$__$attached_to$_t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.HostingFeeChange storage ref[] storage pointer,struct ZaaNetAdmin.HostingFeeChange storage ref)"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4264:183:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 652,
                        "nodeType": "ExpressionStatement",
                        "src": "4264:183:4"
                      },
                      {
                        "expression": {
                          "id": 658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 653,
                              "name": "emergencyOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "4501:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 656,
                            "indexExpression": {
                              "expression": {
                                "id": 654,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4520:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4524:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4520:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4501:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4534:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4501:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 659,
                        "nodeType": "ExpressionStatement",
                        "src": "4501:37:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 661,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4578:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4582:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4578:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4590:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "expression": {
                                "id": 664,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4596:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4600:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4596:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 660,
                            "name": "EmergencyOperatorUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 486,
                            "src": "4553:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (address,bool,address)"
                            }
                          },
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4553:54:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 667,
                        "nodeType": "EmitStatement",
                        "src": "4548:59:4"
                      }
                    ]
                  },
                  "id": 669,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 533,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2957:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2961:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2957:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 535,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 532,
                        "name": "Ownable",
                        "nameLocations": [
                          "2949:7:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2949:7:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2949:19:4"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 522,
                        "mutability": "mutable",
                        "name": "_storageContract",
                        "nameLocation": "2793:16:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "2785:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2785:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 524,
                        "mutability": "mutable",
                        "name": "_treasuryAddress",
                        "nameLocation": "2827:16:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "2819:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2819:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 526,
                        "mutability": "mutable",
                        "name": "_paymentAddress",
                        "nameLocation": "2861:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "2853:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 525,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2853:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 528,
                        "mutability": "mutable",
                        "name": "_platformFeePercent",
                        "nameLocation": "2894:19:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "2886:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 527,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2886:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "_hostingFee",
                        "nameLocation": "2931:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "2923:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2923:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2775:173:4"
                  },
                  "returnParameters": {
                    "id": 536,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2969:0:4"
                  },
                  "scope": 1309,
                  "src": "2764:1850:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 724,
                    "nodeType": "Block",
                    "src": "4706:617:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 679,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 671,
                                  "src": "4737:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 680,
                                  "name": "MIN_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "4755:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4737:34:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 682,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 671,
                                  "src": "4775:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 683,
                                  "name": "MAX_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 380,
                                  "src": "4793:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4775:34:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4737:72:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466565206d757374206265206265747765656e20312520616e6420323025",
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4824:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d94d2ca419eaacb351b7948b7af739baad982e852e68b60589813741b6c863f",
                                "typeString": "literal_string \"Fee must be between 1% and 20%\""
                              },
                              "value": "Fee must be between 1% and 20%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d94d2ca419eaacb351b7948b7af739baad982e852e68b60589813741b6c863f",
                                "typeString": "literal_string \"Fee must be between 1% and 20%\""
                              }
                            ],
                            "id": 678,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4716:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4716:150:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "4716:150:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 690,
                                "name": "_newFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 671,
                                "src": "4884:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 691,
                                "name": "platformFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "4902:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4884:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46656520756e6368616e676564",
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4922:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              },
                              "value": "Fee unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              }
                            ],
                            "id": 689,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4876:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4876:62:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 695,
                        "nodeType": "ExpressionStatement",
                        "src": "4876:62:4"
                      },
                      {
                        "assignments": [
                          697
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 697,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "4957:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 724,
                            "src": "4949:14:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 696,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4949:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 699,
                        "initialValue": {
                          "id": 698,
                          "name": "platformFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "4966:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4949:35:4"
                      },
                      {
                        "expression": {
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 700,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "4994:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 701,
                            "name": "_newFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "5015:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4994:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "4994:35:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 708,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 697,
                                  "src": "5117:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 709,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 671,
                                  "src": "5145:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 710,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5184:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 711,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5190:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5184:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 712,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5224:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5228:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5224:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 707,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 410,
                                "src": "5085:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$410_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "5109:6:4",
                                "5137:6:4",
                                "5173:9:4",
                                "5213:9:4"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "5085:160:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$410_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$410_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 704,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "5069:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5080:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5069:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$410_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5069:177:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "5069:177:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 718,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "5281:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 719,
                              "name": "_newFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 671,
                              "src": "5289:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 720,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5305:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5309:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5305:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 717,
                            "name": "PlatformFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "5262:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5262:54:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 723,
                        "nodeType": "EmitStatement",
                        "src": "5257:59:4"
                      }
                    ]
                  },
                  "functionSelector": "12e8e2c3",
                  "id": 725,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 674,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 673,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4677:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4677:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4677:9:4"
                    },
                    {
                      "id": 676,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 675,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "4687:18:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 520,
                        "src": "4687:18:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4687:18:4"
                    }
                  ],
                  "name": "setPlatformFee",
                  "nameLocation": "4629:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 672,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 671,
                        "mutability": "mutable",
                        "name": "_newFeePercent",
                        "nameLocation": "4652:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 725,
                        "src": "4644:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 670,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4644:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4643:24:4"
                  },
                  "returnParameters": {
                    "id": 677,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4706:0:4"
                  },
                  "scope": 1309,
                  "src": "4620:703:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 780,
                    "nodeType": "Block",
                    "src": "5407:597:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 737,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 735,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 727,
                                  "src": "5438:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 736,
                                  "name": "MIN_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 394,
                                  "src": "5449:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5438:26:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 738,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 727,
                                  "src": "5468:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 739,
                                  "name": "MAX_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "5479:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5468:26:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5438:56:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466565206d757374206265206265747765656e203020616e64203130302055534454",
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5508:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_000cb682cd7c8affc418fc78874a994822feb696edce91a1f30a9f78108d0d83",
                                "typeString": "literal_string \"Fee must be between 0 and 100 USDT\""
                              },
                              "value": "Fee must be between 0 and 100 USDT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_000cb682cd7c8affc418fc78874a994822feb696edce91a1f30a9f78108d0d83",
                                "typeString": "literal_string \"Fee must be between 0 and 100 USDT\""
                              }
                            ],
                            "id": 734,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5417:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5417:137:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 744,
                        "nodeType": "ExpressionStatement",
                        "src": "5417:137:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 746,
                                "name": "_newFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 727,
                                "src": "5572:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 747,
                                "name": "hostingFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 377,
                                "src": "5583:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5572:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46656520756e6368616e676564",
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5595:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              },
                              "value": "Fee unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              }
                            ],
                            "id": 745,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5564:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5564:47:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 751,
                        "nodeType": "ExpressionStatement",
                        "src": "5564:47:4"
                      },
                      {
                        "assignments": [
                          753
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 753,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "5638:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 780,
                            "src": "5630:14:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 752,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5630:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 755,
                        "initialValue": {
                          "id": 754,
                          "name": "hostingFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 377,
                          "src": "5647:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5630:27:4"
                      },
                      {
                        "expression": {
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 756,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 377,
                            "src": "5667:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 757,
                            "name": "_newFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 727,
                            "src": "5680:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5667:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 759,
                        "nodeType": "ExpressionStatement",
                        "src": "5667:20:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 764,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 753,
                                  "src": "5805:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 765,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 727,
                                  "src": "5833:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 766,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5865:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 767,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5871:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5865:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 768,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5905:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5909:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5905:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 763,
                                "name": "HostingFeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 436,
                                "src": "5766:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_HostingFeeChange_$436_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.HostingFeeChange storage pointer)"
                                }
                              },
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "5797:6:4",
                                "5825:6:4",
                                "5854:9:4",
                                "5894:9:4"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "5766:160:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$436_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$436_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 760,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 440,
                              "src": "5743:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5761:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5743:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage_ptr_$_t_struct$_HostingFeeChange_$436_storage_$returns$__$attached_to$_t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.HostingFeeChange storage ref[] storage pointer,struct ZaaNetAdmin.HostingFeeChange storage ref)"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5743:184:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 772,
                        "nodeType": "ExpressionStatement",
                        "src": "5743:184:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 774,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "5969:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 775,
                              "name": "_newFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 727,
                              "src": "5977:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 776,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5986:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5990:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5986:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 773,
                            "name": "HostingFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 464,
                            "src": "5951:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5951:46:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 779,
                        "nodeType": "EmitStatement",
                        "src": "5946:51:4"
                      }
                    ]
                  },
                  "functionSelector": "edfbf4f1",
                  "id": 781,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 730,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 729,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5378:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5378:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5378:9:4"
                    },
                    {
                      "id": 732,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 731,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "5388:18:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 520,
                        "src": "5388:18:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5388:18:4"
                    }
                  ],
                  "name": "setHostingFee",
                  "nameLocation": "5338:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 728,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 727,
                        "mutability": "mutable",
                        "name": "_newFee",
                        "nameLocation": "5360:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 781,
                        "src": "5352:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 726,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5352:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5351:17:4"
                  },
                  "returnParameters": {
                    "id": 733,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5407:0:4"
                  },
                  "scope": 1309,
                  "src": "5329:675:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 835,
                    "nodeType": "Block",
                    "src": "6105:590:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 791,
                                "name": "_newTreasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "6123:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 794,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6154:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 793,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6146:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 792,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6146:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6146:10:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6123:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642074726561737572792061646472657373",
                              "id": 797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6158:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
                                "typeString": "literal_string \"Invalid treasury address\""
                              },
                              "value": "Invalid treasury address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
                                "typeString": "literal_string \"Invalid treasury address\""
                              }
                            ],
                            "id": 790,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6115:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6115:70:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 799,
                        "nodeType": "ExpressionStatement",
                        "src": "6115:70:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 801,
                                "name": "_newTreasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "6203:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 802,
                                "name": "treasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 371,
                                "src": "6226:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6203:38:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "547265617375727920756e6368616e676564",
                              "id": 804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6243:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8173890bbafbce9334fc44523b57c04aecc013fd57fc2b0c602bc5bf1e7d2665",
                                "typeString": "literal_string \"Treasury unchanged\""
                              },
                              "value": "Treasury unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8173890bbafbce9334fc44523b57c04aecc013fd57fc2b0c602bc5bf1e7d2665",
                                "typeString": "literal_string \"Treasury unchanged\""
                              }
                            ],
                            "id": 800,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6195:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:69:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 806,
                        "nodeType": "ExpressionStatement",
                        "src": "6195:69:4"
                      },
                      {
                        "assignments": [
                          808
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 808,
                            "mutability": "mutable",
                            "name": "oldTreasury",
                            "nameLocation": "6283:11:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 835,
                            "src": "6275:19:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 807,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6275:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 810,
                        "initialValue": {
                          "id": 809,
                          "name": "treasuryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 371,
                          "src": "6297:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6275:37:4"
                      },
                      {
                        "expression": {
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 811,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "6322:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 812,
                            "name": "_newTreasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 783,
                            "src": "6340:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6322:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 814,
                        "nodeType": "ExpressionStatement",
                        "src": "6322:37:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 819,
                                  "name": "oldTreasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 808,
                                  "src": "6467:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 820,
                                  "name": "_newTreasuryAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 783,
                                  "src": "6505:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 821,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6549:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 822,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6555:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6549:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 823,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6589:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 824,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6593:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6589:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 818,
                                "name": "TreasuryChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "6425:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_TreasuryChange_$423_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.TreasuryChange storage pointer)"
                                }
                              },
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "6454:11:4",
                                "6492:11:4",
                                "6538:9:4",
                                "6578:9:4"
                              ],
                              "names": [
                                "oldTreasury",
                                "newTreasury",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "6425:185:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TreasuryChange_$423_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TreasuryChange_$423_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            ],
                            "expression": {
                              "id": 815,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 427,
                              "src": "6404:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6420:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6404:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage_ptr_$_t_struct$_TreasuryChange_$423_storage_$returns$__$attached_to$_t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.TreasuryChange storage ref[] storage pointer,struct ZaaNetAdmin.TreasuryChange storage ref)"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6404:207:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 827,
                        "nodeType": "ExpressionStatement",
                        "src": "6404:207:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 829,
                              "name": "oldTreasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "6643:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 830,
                              "name": "_newTreasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 783,
                              "src": "6656:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 831,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6677:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6681:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6677:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 828,
                            "name": "TreasuryUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "6627:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6627:61:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 834,
                        "nodeType": "EmitStatement",
                        "src": "6622:66:4"
                      }
                    ]
                  },
                  "functionSelector": "6605bfda",
                  "id": 836,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 786,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 785,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6076:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6076:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6076:9:4"
                    },
                    {
                      "id": 788,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 787,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "6086:18:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 520,
                        "src": "6086:18:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6086:18:4"
                    }
                  ],
                  "name": "setTreasuryAddress",
                  "nameLocation": "6019:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 784,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 783,
                        "mutability": "mutable",
                        "name": "_newTreasuryAddress",
                        "nameLocation": "6046:19:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "6038:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6038:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6037:29:4"
                  },
                  "returnParameters": {
                    "id": 789,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6105:0:4"
                  },
                  "scope": 1309,
                  "src": "6010:685:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 866,
                    "nodeType": "Block",
                    "src": "6794:215:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 846,
                                "name": "_newPaymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 838,
                                "src": "6812:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 849,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6842:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 848,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6834:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 847,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6834:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6834:10:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6812:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207061796d656e742061646472657373",
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6846:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c30ffd4d4e62ad6cb5c99115837f313e332d04d4c16e9c74b308088b453c5761",
                                "typeString": "literal_string \"Invalid payment address\""
                              },
                              "value": "Invalid payment address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c30ffd4d4e62ad6cb5c99115837f313e332d04d4c16e9c74b308088b453c5761",
                                "typeString": "literal_string \"Invalid payment address\""
                              }
                            ],
                            "id": 845,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6804:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6804:68:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 854,
                        "nodeType": "ExpressionStatement",
                        "src": "6804:68:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 856,
                                "name": "_newPaymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 838,
                                "src": "6890:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 857,
                                "name": "paymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 373,
                                "src": "6912:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6890:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061796d656e74206164647265737320756e6368616e676564",
                              "id": 859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6928:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_322b7cdc9ee78c0715fd23ccbd9ba57a644d0ef9253322ddc5209104c897a221",
                                "typeString": "literal_string \"Payment address unchanged\""
                              },
                              "value": "Payment address unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_322b7cdc9ee78c0715fd23ccbd9ba57a644d0ef9253322ddc5209104c897a221",
                                "typeString": "literal_string \"Payment address unchanged\""
                              }
                            ],
                            "id": 855,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6882:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6882:74:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 861,
                        "nodeType": "ExpressionStatement",
                        "src": "6882:74:4"
                      },
                      {
                        "expression": {
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 862,
                            "name": "paymentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 373,
                            "src": "6967:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 863,
                            "name": "_newPaymentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "6984:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6967:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 865,
                        "nodeType": "ExpressionStatement",
                        "src": "6967:35:4"
                      }
                    ]
                  },
                  "functionSelector": "5e1e1004",
                  "id": 867,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 841,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 840,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6765:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6765:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6765:9:4"
                    },
                    {
                      "id": 843,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 842,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "6775:18:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 520,
                        "src": "6775:18:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6775:18:4"
                    }
                  ],
                  "name": "setPaymentAddress",
                  "nameLocation": "6710:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 839,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 838,
                        "mutability": "mutable",
                        "name": "_newPaymentAddress",
                        "nameLocation": "6736:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 867,
                        "src": "6728:26:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 837,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6728:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6727:28:4"
                  },
                  "returnParameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6794:0:4"
                  },
                  "scope": 1309,
                  "src": "6701:308:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 880,
                    "nodeType": "Block",
                    "src": "7051:63:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 872,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "7061:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7061:8:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 874,
                        "nodeType": "ExpressionStatement",
                        "src": "7061:8:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 876,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7096:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7100:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7096:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 875,
                            "name": "AdminPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 468,
                            "src": "7084:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7084:23:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 879,
                        "nodeType": "EmitStatement",
                        "src": "7079:28:4"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 881,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 870,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 869,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7041:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7041:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7041:9:4"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "7024:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 868,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7029:2:4"
                  },
                  "returnParameters": {
                    "id": 871,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7051:0:4"
                  },
                  "scope": 1309,
                  "src": "7015:99:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 894,
                    "nodeType": "Block",
                    "src": "7158:67:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 886,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "7168:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7168:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 888,
                        "nodeType": "ExpressionStatement",
                        "src": "7168:10:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 890,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7207:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7211:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7207:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 889,
                            "name": "AdminUnpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "7193:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7193:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 893,
                        "nodeType": "EmitStatement",
                        "src": "7188:30:4"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 895,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 884,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 883,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7148:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7148:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7148:9:4"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "7129:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 882,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7136:2:4"
                  },
                  "returnParameters": {
                    "id": 885,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7158:0:4"
                  },
                  "scope": 1309,
                  "src": "7120:105:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 912,
                    "nodeType": "Block",
                    "src": "7355:109:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 901,
                            "name": "emergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "7365:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7381:14:4",
                            "subExpression": {
                              "id": 902,
                              "name": "emergencyMode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "7382:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7365:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 905,
                        "nodeType": "ExpressionStatement",
                        "src": "7365:30:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 907,
                              "name": "emergencyMode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "7431:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 908,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7446:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7450:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7446:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 906,
                            "name": "EmergencyModeToggled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "7410:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (bool,address)"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7410:47:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 911,
                        "nodeType": "EmitStatement",
                        "src": "7405:52:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 896,
                    "nodeType": "StructuredDocumentation",
                    "src": "7231:57:4",
                    "text": "@notice Toggle emergency mode (stops most operations)"
                  },
                  "functionSelector": "4c17b530",
                  "id": 913,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 899,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 898,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "7333:21:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 510,
                        "src": "7333:21:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7333:21:4"
                    }
                  ],
                  "name": "toggleEmergencyMode",
                  "nameLocation": "7302:19:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 897,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7321:2:4"
                  },
                  "returnParameters": {
                    "id": 900,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7355:0:4"
                  },
                  "scope": 1309,
                  "src": "7293:171:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 946,
                    "nodeType": "Block",
                    "src": "7600:192:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 924,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 916,
                                "src": "7618:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 927,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7638:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 926,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7630:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 925,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7630:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7630:10:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7618:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                              "id": 930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7642:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                                "typeString": "literal_string \"Invalid operator address\""
                              },
                              "value": "Invalid operator address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                                "typeString": "literal_string \"Invalid operator address\""
                              }
                            ],
                            "id": 923,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7610:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7610:59:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 932,
                        "nodeType": "ExpressionStatement",
                        "src": "7610:59:4"
                      },
                      {
                        "expression": {
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 933,
                              "name": "emergencyOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "7679:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 935,
                            "indexExpression": {
                              "id": 934,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 916,
                              "src": "7698:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7679:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 936,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 918,
                            "src": "7710:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7679:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 938,
                        "nodeType": "ExpressionStatement",
                        "src": "7679:37:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 940,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 916,
                              "src": "7756:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 941,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 918,
                              "src": "7766:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 942,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7774:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7778:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7774:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 939,
                            "name": "EmergencyOperatorUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 486,
                            "src": "7731:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (address,bool,address)"
                            }
                          },
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7731:54:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 945,
                        "nodeType": "EmitStatement",
                        "src": "7726:59:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 914,
                    "nodeType": "StructuredDocumentation",
                    "src": "7470:45:4",
                    "text": "@notice Add or remove emergency operators"
                  },
                  "functionSelector": "02e88899",
                  "id": 947,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 921,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 920,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7590:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7590:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7590:9:4"
                    }
                  ],
                  "name": "setEmergencyOperator",
                  "nameLocation": "7529:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 916,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "7558:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 947,
                        "src": "7550:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 915,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7550:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "7573:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 947,
                        "src": "7568:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7568:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7549:31:4"
                  },
                  "returnParameters": {
                    "id": 922,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7600:0:4"
                  },
                  "scope": 1309,
                  "src": "7520:272:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 974,
                    "nodeType": "Block",
                    "src": "7943:154:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 958,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 369,
                                    "src": "7969:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$1879",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$1879",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  ],
                                  "id": 957,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7961:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 956,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7961:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7961:24:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 962,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7997:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7989:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 960,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7989:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7989:10:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7961:38:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53746f72616765206e6f7420696e697469616c697a6564",
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8001:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2023538f64727753263af97fb236e4ca5fd392e4beb26d70beb0b687afd58eae",
                                "typeString": "literal_string \"Storage not initialized\""
                              },
                              "value": "Storage not initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2023538f64727753263af97fb236e4ca5fd392e4beb26d70beb0b687afd58eae",
                                "typeString": "literal_string \"Storage not initialized\""
                              }
                            ],
                            "id": 955,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7953:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7953:74:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 967,
                        "nodeType": "ExpressionStatement",
                        "src": "7953:74:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 971,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 950,
                              "src": "8080:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 968,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "8037:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$1879",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8053:26:4",
                            "memberName": "emergencyDeactivateNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1878,
                            "src": "8037:42:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8037:53:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 973,
                        "nodeType": "ExpressionStatement",
                        "src": "8037:53:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 948,
                    "nodeType": "StructuredDocumentation",
                    "src": "7798:54:4",
                    "text": "@notice Emergency function to deactivate a network"
                  },
                  "functionSelector": "5a2f406f",
                  "id": 975,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 953,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 952,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "7921:21:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 510,
                        "src": "7921:21:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7921:21:4"
                    }
                  ],
                  "name": "emergencyDeactivateNetwork",
                  "nameLocation": "7866:26:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 951,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 950,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "7901:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "7893:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7893:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7892:19:4"
                  },
                  "returnParameters": {
                    "id": 954,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7943:0:4"
                  },
                  "scope": 1309,
                  "src": "7857:240:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1018,
                    "nodeType": "Block",
                    "src": "8263:446:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 984,
                                "name": "_newFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 978,
                                "src": "8281:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 985,
                                "name": "MAX_PLATFORM_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 380,
                                "src": "8299:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8281:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4665652063616e6e6f7420657863656564206d6178696d756d",
                              "id": 987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8317:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              },
                              "value": "Fee cannot exceed maximum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              }
                            ],
                            "id": 983,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8273:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8273:72:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 989,
                        "nodeType": "ExpressionStatement",
                        "src": "8273:72:4"
                      },
                      {
                        "assignments": [
                          991
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 991,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "8372:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1018,
                            "src": "8364:14:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 990,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8364:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 993,
                        "initialValue": {
                          "id": 992,
                          "name": "platformFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "8381:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8364:35:4"
                      },
                      {
                        "expression": {
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 994,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "8409:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 995,
                            "name": "_newFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "8430:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8409:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "8409:35:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1002,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 991,
                                  "src": "8503:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1003,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 978,
                                  "src": "8531:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1004,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8570:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8576:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8570:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1006,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8610:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1007,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8614:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "8610:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1001,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 410,
                                "src": "8471:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$410_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "8495:6:4",
                                "8523:6:4",
                                "8559:9:4",
                                "8599:9:4"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "8471:160:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$410_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$410_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 998,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "8455:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8466:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8455:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$410_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8455:177:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1010,
                        "nodeType": "ExpressionStatement",
                        "src": "8455:177:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1012,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "8667:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1013,
                              "name": "_newFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "8675:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1014,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8691:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8695:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8691:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1011,
                            "name": "PlatformFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "8648:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8648:54:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1017,
                        "nodeType": "EmitStatement",
                        "src": "8643:59:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 976,
                    "nodeType": "StructuredDocumentation",
                    "src": "8103:67:4",
                    "text": "@notice Emergency fee adjustment (bypasses normal restrictions)"
                  },
                  "functionSelector": "18b4f23b",
                  "id": 1019,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 981,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 980,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "8241:21:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 510,
                        "src": "8241:21:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8241:21:4"
                    }
                  ],
                  "name": "emergencySetPlatformFee",
                  "nameLocation": "8184:23:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 978,
                        "mutability": "mutable",
                        "name": "_newFeePercent",
                        "nameLocation": "8216:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "8208:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 977,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8208:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8207:24:4"
                  },
                  "returnParameters": {
                    "id": 982,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8263:0:4"
                  },
                  "scope": 1309,
                  "src": "8175:534:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "8875:414:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1028,
                                "name": "_newFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1022,
                                "src": "8893:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1029,
                                "name": "MAX_HOSTING_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 391,
                                "src": "8904:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8893:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4665652063616e6e6f7420657863656564206d6178696d756d",
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8921:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              },
                              "value": "Fee cannot exceed maximum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              }
                            ],
                            "id": 1027,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8885:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8885:64:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1033,
                        "nodeType": "ExpressionStatement",
                        "src": "8885:64:4"
                      },
                      {
                        "assignments": [
                          1035
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1035,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "8976:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1062,
                            "src": "8968:14:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1034,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8968:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1037,
                        "initialValue": {
                          "id": 1036,
                          "name": "hostingFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 377,
                          "src": "8985:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8968:27:4"
                      },
                      {
                        "expression": {
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1038,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 377,
                            "src": "9005:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1039,
                            "name": "_newFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1022,
                            "src": "9018:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9005:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1041,
                        "nodeType": "ExpressionStatement",
                        "src": "9005:20:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1046,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1035,
                                  "src": "9098:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1047,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1022,
                                  "src": "9126:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1048,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9158:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1049,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9164:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9158:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1050,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9198:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9202:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9198:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1045,
                                "name": "HostingFeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 436,
                                "src": "9059:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_HostingFeeChange_$436_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.HostingFeeChange storage pointer)"
                                }
                              },
                              "id": 1052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "9090:6:4",
                                "9118:6:4",
                                "9147:9:4",
                                "9187:9:4"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "9059:160:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$436_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$436_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1042,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 440,
                              "src": "9036:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9054:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "9036:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage_ptr_$_t_struct$_HostingFeeChange_$436_storage_$returns$__$attached_to$_t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.HostingFeeChange storage ref[] storage pointer,struct ZaaNetAdmin.HostingFeeChange storage ref)"
                            }
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9036:184:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1054,
                        "nodeType": "ExpressionStatement",
                        "src": "9036:184:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1056,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1035,
                              "src": "9254:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1057,
                              "name": "_newFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1022,
                              "src": "9262:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1058,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9271:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9275:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9271:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1055,
                            "name": "HostingFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 464,
                            "src": "9236:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9236:46:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1061,
                        "nodeType": "EmitStatement",
                        "src": "9231:51:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1020,
                    "nodeType": "StructuredDocumentation",
                    "src": "8715:75:4",
                    "text": "@notice Emergency hosting fee adjustment (bypasses normal restrictions)"
                  },
                  "functionSelector": "bbeecdf0",
                  "id": 1063,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1025,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1024,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "8853:21:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 510,
                        "src": "8853:21:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8853:21:4"
                    }
                  ],
                  "name": "emergencySetHostingFee",
                  "nameLocation": "8804:22:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1023,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1022,
                        "mutability": "mutable",
                        "name": "_newFee",
                        "nameLocation": "8835:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "8827:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1021,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8827:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8826:17:4"
                  },
                  "returnParameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8875:0:4"
                  },
                  "scope": 1309,
                  "src": "8795:494:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1072,
                    "nodeType": "Block",
                    "src": "9458:31:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1069,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "9475:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9475:7:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1068,
                        "id": 1071,
                        "nodeType": "Return",
                        "src": "9468:14:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1064,
                    "nodeType": "StructuredDocumentation",
                    "src": "9326:78:4",
                    "text": "@notice Expose admin address for other contracts (interface compatibility)"
                  },
                  "functionSelector": "f851a440",
                  "id": 1073,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "admin",
                  "nameLocation": "9418:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9423:2:4"
                  },
                  "returnParameters": {
                    "id": 1068,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1067,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1073,
                        "src": "9449:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1066,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9449:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9448:9:4"
                  },
                  "scope": 1309,
                  "src": "9409:80:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1083,
                    "nodeType": "Block",
                    "src": "9602:34:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1081,
                          "name": "feeHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "9619:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1080,
                        "id": 1082,
                        "nodeType": "Return",
                        "src": "9612:17:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1074,
                    "nodeType": "StructuredDocumentation",
                    "src": "9495:34:4",
                    "text": "@notice Get fee change history"
                  },
                  "functionSelector": "5707ed45",
                  "id": 1084,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFeeHistory",
                  "nameLocation": "9543:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1075,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9556:2:4"
                  },
                  "returnParameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1079,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "9582:18:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.FeeChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1077,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1076,
                              "name": "FeeChange",
                              "nameLocations": [
                                "9582:9:4"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 410,
                              "src": "9582:9:4"
                            },
                            "referencedDeclaration": 410,
                            "src": "9582:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FeeChange_$410_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.FeeChange"
                            }
                          },
                          "id": 1078,
                          "nodeType": "ArrayTypeName",
                          "src": "9582:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.FeeChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9581:20:4"
                  },
                  "scope": 1309,
                  "src": "9534:102:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1094,
                    "nodeType": "Block",
                    "src": "9764:39:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1092,
                          "name": "treasuryHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 427,
                          "src": "9781:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1091,
                        "id": 1093,
                        "nodeType": "Return",
                        "src": "9774:22:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1085,
                    "nodeType": "StructuredDocumentation",
                    "src": "9642:39:4",
                    "text": "@notice Get treasury change history"
                  },
                  "functionSelector": "492adaa8",
                  "id": 1095,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTreasuryHistory",
                  "nameLocation": "9695:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9713:2:4"
                  },
                  "returnParameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "9739:23:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1088,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1087,
                              "name": "TreasuryChange",
                              "nameLocations": [
                                "9739:14:4"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 423,
                              "src": "9739:14:4"
                            },
                            "referencedDeclaration": 423,
                            "src": "9739:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TreasuryChange_$423_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.TreasuryChange"
                            }
                          },
                          "id": 1089,
                          "nodeType": "ArrayTypeName",
                          "src": "9739:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9738:25:4"
                  },
                  "scope": 1309,
                  "src": "9686:117:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1105,
                    "nodeType": "Block",
                    "src": "9938:41:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1103,
                          "name": "hostingFeeHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 440,
                          "src": "9955:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1102,
                        "id": 1104,
                        "nodeType": "Return",
                        "src": "9948:24:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1096,
                    "nodeType": "StructuredDocumentation",
                    "src": "9809:42:4",
                    "text": "@notice Get hosting fee change history"
                  },
                  "functionSelector": "d4ab4b40",
                  "id": 1106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostingFeeHistory",
                  "nameLocation": "9865:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1097,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9885:2:4"
                  },
                  "returnParameters": {
                    "id": 1102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1101,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "9911:25:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1099,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1098,
                              "name": "HostingFeeChange",
                              "nameLocations": [
                                "9911:16:4"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 436,
                              "src": "9911:16:4"
                            },
                            "referencedDeclaration": 436,
                            "src": "9911:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HostingFeeChange_$436_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                            }
                          },
                          "id": 1100,
                          "nodeType": "ArrayTypeName",
                          "src": "9911:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9910:27:4"
                  },
                  "scope": 1309,
                  "src": "9856:123:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1116,
                    "nodeType": "Block",
                    "src": "10134:86:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1112,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "10151:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10172:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "10151:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1111,
                        "id": 1115,
                        "nodeType": "Return",
                        "src": "10144:31:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1107,
                    "nodeType": "StructuredDocumentation",
                    "src": "9985:75:4",
                    "text": "@notice Get current fee in basis points (for more precise calculations)"
                  },
                  "functionSelector": "7a9b93c6",
                  "id": 1117,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPlatformFeeBasisPoints",
                  "nameLocation": "10074:25:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10099:2:4"
                  },
                  "returnParameters": {
                    "id": 1111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1117,
                        "src": "10125:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1109,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10125:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10124:9:4"
                  },
                  "scope": 1309,
                  "src": "10065:155:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1132,
                    "nodeType": "Block",
                    "src": "10365:59:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1125,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1120,
                                  "src": "10383:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1126,
                                  "name": "platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 375,
                                  "src": "10392:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10383:27:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1128,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10382:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10414:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "10382:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1124,
                        "id": 1131,
                        "nodeType": "Return",
                        "src": "10375:42:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1118,
                    "nodeType": "StructuredDocumentation",
                    "src": "10229:53:4",
                    "text": "@notice Calculate platform fee for a given amount"
                  },
                  "functionSelector": "0cbab4f7",
                  "id": 1133,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculatePlatformFee",
                  "nameLocation": "10296:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1120,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "10325:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "10317:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10317:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10316:16:4"
                  },
                  "returnParameters": {
                    "id": 1124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1123,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "10356:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10356:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10355:9:4"
                  },
                  "scope": 1309,
                  "src": "10287:137:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1182,
                    "nodeType": "Block",
                    "src": "10780:339:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1151,
                            "name": "totalFeeChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1137,
                            "src": "10790:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1152,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "10808:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10819:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10808:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10790:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1155,
                        "nodeType": "ExpressionStatement",
                        "src": "10790:35:4"
                      },
                      {
                        "expression": {
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1156,
                            "name": "totalTreasuryChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1139,
                            "src": "10835:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1157,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 427,
                              "src": "10858:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 1158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10874:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10858:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10835:45:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1160,
                        "nodeType": "ExpressionStatement",
                        "src": "10835:45:4"
                      },
                      {
                        "expression": {
                          "id": 1164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1161,
                            "name": "totalHostingFeeChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "10890:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1162,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 440,
                              "src": "10915:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10933:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10915:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10890:49:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1165,
                        "nodeType": "ExpressionStatement",
                        "src": "10890:49:4"
                      },
                      {
                        "expression": {
                          "id": 1168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1166,
                            "name": "isEmergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1143,
                            "src": "10949:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1167,
                            "name": "emergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "10967:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10949:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1169,
                        "nodeType": "ExpressionStatement",
                        "src": "10949:31:4"
                      },
                      {
                        "expression": {
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1170,
                            "name": "currentPlatformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1145,
                            "src": "10990:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1171,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "11011:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10990:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1173,
                        "nodeType": "ExpressionStatement",
                        "src": "10990:39:4"
                      },
                      {
                        "expression": {
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1174,
                            "name": "currentHostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "11039:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1175,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 377,
                            "src": "11059:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11039:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1177,
                        "nodeType": "ExpressionStatement",
                        "src": "11039:30:4"
                      },
                      {
                        "expression": {
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1178,
                            "name": "currentTreasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1149,
                            "src": "11079:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1179,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "11097:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11079:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1181,
                        "nodeType": "ExpressionStatement",
                        "src": "11079:33:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1134,
                    "nodeType": "StructuredDocumentation",
                    "src": "10430:46:4",
                    "text": "@notice Get comprehensive admin statistics"
                  },
                  "functionSelector": "c116d936",
                  "id": 1183,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAdminStats",
                  "nameLocation": "10490:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1135,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10503:2:4"
                  },
                  "returnParameters": {
                    "id": 1150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "totalFeeChanges",
                        "nameLocation": "10546:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "10538:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10538:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1139,
                        "mutability": "mutable",
                        "name": "totalTreasuryChanges",
                        "nameLocation": "10579:20:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "10571:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10571:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1141,
                        "mutability": "mutable",
                        "name": "totalHostingFeeChanges",
                        "nameLocation": "10617:22:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "10609:30:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1140,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10609:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1143,
                        "mutability": "mutable",
                        "name": "isEmergencyMode",
                        "nameLocation": "10654:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "10649:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1142,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10649:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1145,
                        "mutability": "mutable",
                        "name": "currentPlatformFee",
                        "nameLocation": "10687:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "10679:26:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1144,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10679:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1147,
                        "mutability": "mutable",
                        "name": "currentHostingFee",
                        "nameLocation": "10723:17:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "10715:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10715:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1149,
                        "mutability": "mutable",
                        "name": "currentTreasury",
                        "nameLocation": "10758:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "10750:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10750:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10528:251:4"
                  },
                  "scope": 1309,
                  "src": "10481:638:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1195,
                    "nodeType": "Block",
                    "src": "11256:52:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1191,
                            "name": "emergencyOperators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "11273:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1193,
                          "indexExpression": {
                            "id": 1192,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1186,
                            "src": "11292:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11273:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1190,
                        "id": 1194,
                        "nodeType": "Return",
                        "src": "11266:35:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1184,
                    "nodeType": "StructuredDocumentation",
                    "src": "11125:50:4",
                    "text": "@notice Check if address is emergency operator"
                  },
                  "functionSelector": "a10eb354",
                  "id": 1196,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isEmergencyOperator",
                  "nameLocation": "11189:19:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1186,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "11217:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "11209:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11209:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11208:18:4"
                  },
                  "returnParameters": {
                    "id": 1190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1189,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "11250:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1188,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11250:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11249:6:4"
                  },
                  "scope": 1309,
                  "src": "11180:128:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1218,
                    "nodeType": "Block",
                    "src": "11431:124:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1204,
                                  "name": "feeHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "11449:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11460:6:4",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11449:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11469:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11449:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20666565206368616e676573207265636f72646564",
                              "id": 1208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11472:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc8db7d8e1ea43532de30b244d617a8938afdef51027bcacf4eb88002a8b30fe",
                                "typeString": "literal_string \"No fee changes recorded\""
                              },
                              "value": "No fee changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc8db7d8e1ea43532de30b244d617a8938afdef51027bcacf4eb88002a8b30fe",
                                "typeString": "literal_string \"No fee changes recorded\""
                              }
                            ],
                            "id": 1203,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11441:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11441:57:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1210,
                        "nodeType": "ExpressionStatement",
                        "src": "11441:57:4"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1211,
                            "name": "feeHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "11515:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                            }
                          },
                          "id": 1216,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1212,
                                "name": "feeHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 414,
                                "src": "11526:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_FeeChange_$410_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                                }
                              },
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11537:6:4",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "11526:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11546:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11526:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11515:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeChange_$410_storage",
                            "typeString": "struct ZaaNetAdmin.FeeChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1202,
                        "id": 1217,
                        "nodeType": "Return",
                        "src": "11508:40:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1197,
                    "nodeType": "StructuredDocumentation",
                    "src": "11314:41:4",
                    "text": "@notice Get latest fee change details"
                  },
                  "functionSelector": "5071f27b",
                  "id": 1219,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestFeeChange",
                  "nameLocation": "11369:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1198,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11387:2:4"
                  },
                  "returnParameters": {
                    "id": 1202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1201,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "11413:16:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeChange_$410_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.FeeChange"
                        },
                        "typeName": {
                          "id": 1200,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1199,
                            "name": "FeeChange",
                            "nameLocations": [
                              "11413:9:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 410,
                            "src": "11413:9:4"
                          },
                          "referencedDeclaration": 410,
                          "src": "11413:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeChange_$410_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.FeeChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11412:18:4"
                  },
                  "scope": 1309,
                  "src": "11360:195:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1241,
                    "nodeType": "Block",
                    "src": "11693:144:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1227,
                                  "name": "treasuryHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 427,
                                  "src": "11711:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11727:6:4",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11711:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11736:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11711:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207472656173757279206368616e676573207265636f72646564",
                              "id": 1231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11739:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4e47ca2bca752e588b170d4c5b1a1d7e303331d2c70d184100b710867b7893e3",
                                "typeString": "literal_string \"No treasury changes recorded\""
                              },
                              "value": "No treasury changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4e47ca2bca752e588b170d4c5b1a1d7e303331d2c70d184100b710867b7893e3",
                                "typeString": "literal_string \"No treasury changes recorded\""
                              }
                            ],
                            "id": 1226,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11703:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11703:67:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1233,
                        "nodeType": "ExpressionStatement",
                        "src": "11703:67:4"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1234,
                            "name": "treasuryHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "11787:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                            }
                          },
                          "id": 1239,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1235,
                                "name": "treasuryHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 427,
                                "src": "11803:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$423_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                                }
                              },
                              "id": 1236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11819:6:4",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "11803:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11828:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11803:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11787:43:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TreasuryChange_$423_storage",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1225,
                        "id": 1240,
                        "nodeType": "Return",
                        "src": "11780:50:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1220,
                    "nodeType": "StructuredDocumentation",
                    "src": "11561:46:4",
                    "text": "@notice Get latest treasury change details"
                  },
                  "functionSelector": "4863687e",
                  "id": 1242,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestTreasuryChange",
                  "nameLocation": "11621:23:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11644:2:4"
                  },
                  "returnParameters": {
                    "id": 1225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1224,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "11670:21:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TreasuryChange_$423_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.TreasuryChange"
                        },
                        "typeName": {
                          "id": 1223,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1222,
                            "name": "TreasuryChange",
                            "nameLocations": [
                              "11670:14:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 423,
                            "src": "11670:14:4"
                          },
                          "referencedDeclaration": 423,
                          "src": "11670:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TreasuryChange_$423_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11669:23:4"
                  },
                  "scope": 1309,
                  "src": "11612:225:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1264,
                    "nodeType": "Block",
                    "src": "11982:153:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1250,
                                  "name": "hostingFeeHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 440,
                                  "src": "12000:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12018:6:4",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "12000:24:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12027:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12000:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20686f7374696e6720666565206368616e676573207265636f72646564",
                              "id": 1254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12030:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9af9622cb5b2e7f4b710ca9ca133f0a5ff6daec5b81316fe6395f1ec6a3a5be0",
                                "typeString": "literal_string \"No hosting fee changes recorded\""
                              },
                              "value": "No hosting fee changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9af9622cb5b2e7f4b710ca9ca133f0a5ff6daec5b81316fe6395f1ec6a3a5be0",
                                "typeString": "literal_string \"No hosting fee changes recorded\""
                              }
                            ],
                            "id": 1249,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11992:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11992:72:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1256,
                        "nodeType": "ExpressionStatement",
                        "src": "11992:72:4"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1257,
                            "name": "hostingFeeHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "12081:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                            }
                          },
                          "id": 1262,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1258,
                                "name": "hostingFeeHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "12099:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$436_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                                }
                              },
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12117:6:4",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "12099:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12126:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12099:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12081:47:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HostingFeeChange_$436_storage",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1248,
                        "id": 1263,
                        "nodeType": "Return",
                        "src": "12074:54:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1243,
                    "nodeType": "StructuredDocumentation",
                    "src": "11843:49:4",
                    "text": "@notice Get latest hosting fee change details"
                  },
                  "functionSelector": "d2643f1d",
                  "id": 1265,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestHostingFeeChange",
                  "nameLocation": "11906:25:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1244,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11931:2:4"
                  },
                  "returnParameters": {
                    "id": 1248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1247,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1265,
                        "src": "11957:23:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HostingFeeChange_$436_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                        },
                        "typeName": {
                          "id": 1246,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1245,
                            "name": "HostingFeeChange",
                            "nameLocations": [
                              "11957:16:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 436,
                            "src": "11957:16:4"
                          },
                          "referencedDeclaration": 436,
                          "src": "11957:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HostingFeeChange_$436_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11956:25:4"
                  },
                  "scope": 1309,
                  "src": "11897:238:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1277,
                    "nodeType": "Block",
                    "src": "12334:56:4",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1273,
                              "name": "platformFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "12352:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1274,
                              "name": "hostingFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "12372:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1275,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12351:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 1272,
                        "id": 1276,
                        "nodeType": "Return",
                        "src": "12344:39:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1266,
                    "nodeType": "StructuredDocumentation",
                    "src": "12141:60:4",
                    "text": "@notice Get all current fees in one call (gas efficient)"
                  },
                  "functionSelector": "71908a03",
                  "id": 1278,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentFees",
                  "nameLocation": "12215:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1267,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12229:2:4"
                  },
                  "returnParameters": {
                    "id": 1272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1269,
                        "mutability": "mutable",
                        "name": "platformFeePercentage",
                        "nameLocation": "12272:21:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1278,
                        "src": "12264:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1268,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12264:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1271,
                        "mutability": "mutable",
                        "name": "hostingFeeAmount",
                        "nameLocation": "12311:16:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1278,
                        "src": "12303:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12303:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12254:79:4"
                  },
                  "scope": 1309,
                  "src": "12206:184:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1286,
                    "nodeType": "Block",
                    "src": "12594:39:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1284,
                          "name": "treasuryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 371,
                          "src": "12611:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1283,
                        "id": 1285,
                        "nodeType": "Return",
                        "src": "12604:22:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1279,
                    "nodeType": "StructuredDocumentation",
                    "src": "12462:75:4",
                    "text": "@notice Alternative name for treasury address (interface compatibility)"
                  },
                  "functionSelector": "61d027b3",
                  "id": 1287,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "treasury",
                  "nameLocation": "12551:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1280,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12559:2:4"
                  },
                  "returnParameters": {
                    "id": 1283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1282,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1287,
                        "src": "12585:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12585:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12584:9:4"
                  },
                  "scope": 1309,
                  "src": "12542:91:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1295,
                    "nodeType": "Block",
                    "src": "12769:38:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1293,
                          "name": "paymentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 373,
                          "src": "12786:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1292,
                        "id": 1294,
                        "nodeType": "Return",
                        "src": "12779:21:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1288,
                    "nodeType": "StructuredDocumentation",
                    "src": "12639:74:4",
                    "text": "@notice Alternative name for payment address (interface compatibility)"
                  },
                  "functionSelector": "42f6487a",
                  "id": 1296,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "payment",
                  "nameLocation": "12727:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1289,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12734:2:4"
                  },
                  "returnParameters": {
                    "id": 1292,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1291,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1296,
                        "src": "12760:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1290,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12760:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12759:9:4"
                  },
                  "scope": 1309,
                  "src": "12718:89:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    227
                  ],
                  "body": {
                    "id": 1307,
                    "nodeType": "Block",
                    "src": "12937:38:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1303,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "12954:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ZaaNetAdmin_$1309_$",
                                "typeString": "type(contract super ZaaNetAdmin)"
                              }
                            },
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12960:6:4",
                            "memberName": "paused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 227,
                            "src": "12954:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12954:14:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1302,
                        "id": 1306,
                        "nodeType": "Return",
                        "src": "12947:21:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1297,
                    "nodeType": "StructuredDocumentation",
                    "src": "12813:65:4",
                    "text": "@notice Check if contract is paused (interface compatibility)"
                  },
                  "functionSelector": "5c975abb",
                  "id": 1308,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "12892:6:4",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1299,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "12913:8:4"
                  },
                  "parameters": {
                    "id": 1298,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12898:2:4"
                  },
                  "returnParameters": {
                    "id": 1302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1301,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "12931:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1300,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12931:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12930:6:4"
                  },
                  "scope": 1309,
                  "src": "12883:92:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1310,
              "src": "255:12722:4",
              "usedErrors": [
                13,
                18,
                199,
                202,
                299
              ],
              "usedEvents": [
                24,
                191,
                196,
                448,
                456,
                464,
                468,
                472,
                478,
                486,
                492
              ]
            }
          ],
          "src": "32:12945:4"
        },
        "id": 4
      },
      "contracts/ZaaNetStorage.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetStorage.sol",
          "exportedSymbols": {
            "Context": [
              177
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              354
            ],
            "ZaaNetStorage": [
              1879
            ]
          },
          "id": 1880,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1311,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1312,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1880,
              "sourceUnit": 148,
              "src": "58:52:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1313,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1880,
              "sourceUnit": 355,
              "src": "111:59:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1314,
                    "name": "Ownable",
                    "nameLocations": [
                      "198:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "198:7:5"
                  },
                  "id": 1315,
                  "nodeType": "InheritanceSpecifier",
                  "src": "198:7:5"
                },
                {
                  "baseName": {
                    "id": 1316,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "207:15:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 354,
                    "src": "207:15:5"
                  },
                  "id": 1317,
                  "nodeType": "InheritanceSpecifier",
                  "src": "207:15:5"
                }
              ],
              "canonicalName": "ZaaNetStorage",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1879,
              "linearizedBaseContracts": [
                1879,
                354,
                147,
                177
              ],
              "name": "ZaaNetStorage",
              "nameLocation": "181:13:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ZaaNetStorage.Network",
                  "id": 1332,
                  "members": [
                    {
                      "constant": false,
                      "id": 1319,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "262:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1332,
                      "src": "254:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "254:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1321,
                      "mutability": "mutable",
                      "name": "hostAddress",
                      "nameLocation": "282:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1332,
                      "src": "274:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1320,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "274:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1323,
                      "mutability": "mutable",
                      "name": "pricePerSession",
                      "nameLocation": "311:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1332,
                      "src": "303:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1322,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "303:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1325,
                      "mutability": "mutable",
                      "name": "mongoDataId",
                      "nameLocation": "343:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1332,
                      "src": "336:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1324,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "336:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1327,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "369:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1332,
                      "src": "364:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1326,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "364:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1329,
                      "mutability": "mutable",
                      "name": "createdAt",
                      "nameLocation": "395:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1332,
                      "src": "387:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1328,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "387:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1331,
                      "mutability": "mutable",
                      "name": "updatedAt",
                      "nameLocation": "422:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1332,
                      "src": "414:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1330,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "414:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Network",
                  "nameLocation": "236:7:5",
                  "nodeType": "StructDefinition",
                  "scope": 1879,
                  "src": "229:209:5",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7b334154",
                  "id": 1336,
                  "mutability": "mutable",
                  "name": "allowedCallers",
                  "nameLocation": "476:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "444:46:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1335,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1333,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "452:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "444:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1334,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "463:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "217c682d",
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "networkIdCounter",
                  "nameLocation": "558:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "543:31:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4ce083be",
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "zaanetEarnings",
                  "nameLocation": "622:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "607:33:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "639:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8bb0a17c",
                  "id": 1346,
                  "mutability": "mutable",
                  "name": "networks",
                  "nameLocation": "719:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "684:43:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$1332_storage_$",
                    "typeString": "mapping(uint256 => struct ZaaNetStorage.Network)"
                  },
                  "typeName": {
                    "id": 1345,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1342,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "692:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "684:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$1332_storage_$",
                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Network)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1344,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1343,
                        "name": "Network",
                        "nameLocations": [
                          "703:7:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1332,
                        "src": "703:7:5"
                      },
                      "referencedDeclaration": 1332,
                      "src": "703:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Network_$1332_storage_ptr",
                        "typeString": "struct ZaaNetStorage.Network"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "29c718b5",
                  "id": 1350,
                  "mutability": "mutable",
                  "name": "hostEarnings",
                  "nameLocation": "768:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "733:47:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1349,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1347,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "741:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "733:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1348,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "752:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7bae8f5e",
                  "id": 1355,
                  "mutability": "mutable",
                  "name": "hostNetworkIds",
                  "nameLocation": "871:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "834:51:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 1354,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1351,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "842:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "834:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 1352,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "853:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1353,
                      "nodeType": "ArrayTypeName",
                      "src": "853:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ec13f2a1",
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "networkExists",
                  "nameLocation": "923:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "891:45:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 1358,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1356,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "899:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "891:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1357,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "910:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "879ecf10",
                  "id": 1363,
                  "mutability": "mutable",
                  "name": "sessionExists",
                  "nameLocation": "974:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "942:45:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 1362,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1360,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "950:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "942:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1361,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "961:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1380,
                    "nodeType": "Block",
                    "src": "1017:140:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1366,
                                  "name": "allowedCallers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1336,
                                  "src": "1048:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1369,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1367,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1063:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1067:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1063:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1048:26:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1370,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1078:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1082:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1078:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1372,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "1092:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1373,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1092:7:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1078:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1048:51:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a6564",
                              "id": 1376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1113:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              },
                              "value": "Not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              }
                            ],
                            "id": 1365,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1027:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1027:112:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1378,
                        "nodeType": "ExpressionStatement",
                        "src": "1027:112:5"
                      },
                      {
                        "id": 1379,
                        "nodeType": "PlaceholderStatement",
                        "src": "1149:1:5"
                      }
                    ]
                  },
                  "id": 1381,
                  "name": "onlyAllowed",
                  "nameLocation": "1003:11:5",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1364,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1014:2:5"
                  },
                  "src": "994:163:5",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f",
                  "id": 1387,
                  "name": "AllowedCallerUpdated",
                  "nameLocation": "1169:20:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1383,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "1206:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1387,
                        "src": "1190:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1190:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1385,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "1219:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1387,
                        "src": "1214:11:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1384,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1214:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1189:37:5"
                  },
                  "src": "1163:64:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e",
                  "id": 1395,
                  "name": "NetworkStored",
                  "nameLocation": "1238:13:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1389,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1277:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "1261:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1388,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1261:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1391,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1305:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "1289:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1390,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1393,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pricePerSession",
                        "nameLocation": "1334:15:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "1326:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1326:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1251:104:5"
                  },
                  "src": "1232:124:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c",
                  "id": 1401,
                  "name": "NetworkUpdated",
                  "nameLocation": "1367:14:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1400,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1397,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1398:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1401,
                        "src": "1382:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1399,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1418:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1401,
                        "src": "1402:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1398,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1402:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1381:49:5"
                  },
                  "src": "1361:70:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "6d8d8fde140edbf6c26881f091850cb55bae733f801e9e4f9b7d123b88b620c8",
                  "id": 1409,
                  "name": "SessionStored",
                  "nameLocation": "1442:13:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1403,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "1481:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1409,
                        "src": "1465:25:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1402,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1465:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1405,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "paymentAddress",
                        "nameLocation": "1516:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1409,
                        "src": "1500:30:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1404,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1500:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1407,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1548:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1409,
                        "src": "1540:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1540:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1455:105:5"
                  },
                  "src": "1436:125:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be0",
                  "id": 1415,
                  "name": "HostEarningsUpdated",
                  "nameLocation": "1572:19:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1414,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1411,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1608:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1415,
                        "src": "1592:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1410,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1592:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1413,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalEarned",
                        "nameLocation": "1629:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1415,
                        "src": "1621:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1412,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1591:50:5"
                  },
                  "src": "1566:76:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "fd8145cfa93546227f9e46c710867061751c942a1b2c1aca58c7cdcea165f847",
                  "id": 1419,
                  "name": "ZaaNetEarningsUpdated",
                  "nameLocation": "1653:21:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1417,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalEarned",
                        "nameLocation": "1683:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1419,
                        "src": "1675:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1675:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1674:21:5"
                  },
                  "src": "1647:49:5"
                },
                {
                  "body": {
                    "id": 1426,
                    "nodeType": "Block",
                    "src": "1763:2:5",
                    "statements": []
                  },
                  "id": 1427,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1422,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1751:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1755:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1751:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1424,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1421,
                        "name": "Ownable",
                        "nameLocations": [
                          "1743:7:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1743:7:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1743:19:5"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1420,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1740:2:5"
                  },
                  "returnParameters": {
                    "id": 1425,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1763:0:5"
                  },
                  "scope": 1879,
                  "src": "1729:36:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1457,
                    "nodeType": "Block",
                    "src": "1879:167:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1437,
                                "name": "_caller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1429,
                                "src": "1897:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1916:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1908:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1438,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1908:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1908:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1897:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642063616c6c65722061646472657373",
                              "id": 1443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1920:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                "typeString": "literal_string \"Invalid caller address\""
                              },
                              "value": "Invalid caller address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                "typeString": "literal_string \"Invalid caller address\""
                              }
                            ],
                            "id": 1436,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1889:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1889:56:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1445,
                        "nodeType": "ExpressionStatement",
                        "src": "1889:56:5"
                      },
                      {
                        "expression": {
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1446,
                              "name": "allowedCallers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1336,
                              "src": "1955:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1448,
                            "indexExpression": {
                              "id": 1447,
                              "name": "_caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1429,
                              "src": "1970:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1955:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1449,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1431,
                            "src": "1981:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1955:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1451,
                        "nodeType": "ExpressionStatement",
                        "src": "1955:32:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1453,
                              "name": "_caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1429,
                              "src": "2023:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1454,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1431,
                              "src": "2032:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1452,
                            "name": "AllowedCallerUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1387,
                            "src": "2002:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2002:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1456,
                        "nodeType": "EmitStatement",
                        "src": "1997:42:5"
                      }
                    ]
                  },
                  "functionSelector": "d8b0e716",
                  "id": 1458,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1434,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1433,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1869:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1869:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1869:9:5"
                    }
                  ],
                  "name": "setAllowedCaller",
                  "nameLocation": "1813:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1429,
                        "mutability": "mutable",
                        "name": "_caller",
                        "nameLocation": "1838:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1458,
                        "src": "1830:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1830:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1431,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "1852:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1458,
                        "src": "1847:11:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1430,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1847:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1829:30:5"
                  },
                  "returnParameters": {
                    "id": 1435,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1879:0:5"
                  },
                  "scope": 1879,
                  "src": "1804:242:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1508,
                    "nodeType": "Block",
                    "src": "2213:257:5",
                    "statements": [
                      {
                        "body": {
                          "id": 1506,
                          "nodeType": "Block",
                          "src": "2269:195:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 1487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1480,
                                        "name": "_callers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1461,
                                        "src": "2291:8:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 1482,
                                      "indexExpression": {
                                        "id": 1481,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1469,
                                        "src": "2300:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2291:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 1485,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2314:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 1484,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2306:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1483,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2306:7:5",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1486,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2306:10:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "2291:25:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e76616c69642063616c6c65722061646472657373",
                                    "id": 1488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2318:24:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                      "typeString": "literal_string \"Invalid caller address\""
                                    },
                                    "value": "Invalid caller address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                      "typeString": "literal_string \"Invalid caller address\""
                                    }
                                  ],
                                  "id": 1479,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2283:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2283:60:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1490,
                              "nodeType": "ExpressionStatement",
                              "src": "2283:60:5"
                            },
                            {
                              "expression": {
                                "id": 1497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1491,
                                    "name": "allowedCallers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1336,
                                    "src": "2357:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 1495,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1492,
                                      "name": "_callers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1461,
                                      "src": "2372:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1494,
                                    "indexExpression": {
                                      "id": 1493,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1469,
                                      "src": "2381:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2372:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2357:27:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1496,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1463,
                                  "src": "2387:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2357:36:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1498,
                              "nodeType": "ExpressionStatement",
                              "src": "2357:36:5"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1500,
                                      "name": "_callers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1461,
                                      "src": "2433:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1502,
                                    "indexExpression": {
                                      "id": 1501,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1469,
                                      "src": "2442:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2433:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1503,
                                    "name": "status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1463,
                                    "src": "2446:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1499,
                                  "name": "AllowedCallerUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1387,
                                  "src": "2412:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 1504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2412:41:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1505,
                              "nodeType": "EmitStatement",
                              "src": "2407:46:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1472,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1469,
                            "src": "2243:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1473,
                              "name": "_callers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1461,
                              "src": "2247:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 1474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2256:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2247:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2243:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1507,
                        "initializationExpression": {
                          "assignments": [
                            1469
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1469,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2236:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1507,
                              "src": "2228:9:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1468,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2228:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1471,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2240:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2228:13:5"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2264:3:5",
                            "subExpression": {
                              "id": 1476,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "2264:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1478,
                          "nodeType": "ExpressionStatement",
                          "src": "2264:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "2223:241:5"
                      }
                    ]
                  },
                  "functionSelector": "73f9a5d7",
                  "id": 1509,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1466,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1465,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2203:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2203:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2203:9:5"
                    }
                  ],
                  "name": "setAllowedCallers",
                  "nameLocation": "2112:17:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1461,
                        "mutability": "mutable",
                        "name": "_callers",
                        "nameLocation": "2158:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "2139:27:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1459,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2139:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1460,
                          "nodeType": "ArrayTypeName",
                          "src": "2139:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1463,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "2181:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "2176:11:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1462,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2176:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2129:64:5"
                  },
                  "returnParameters": {
                    "id": 1467,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2213:0:5"
                  },
                  "scope": 1879,
                  "src": "2103:367:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1519,
                    "nodeType": "Block",
                    "src": "2578:42:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "2595:18:5",
                          "subExpression": {
                            "id": 1516,
                            "name": "networkIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "2597:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1515,
                        "id": 1518,
                        "nodeType": "Return",
                        "src": "2588:25:5"
                      }
                    ]
                  },
                  "functionSelector": "5290ffc6",
                  "id": 1520,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1512,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1511,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "2548:11:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1381,
                        "src": "2548:11:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2548:11:5"
                    }
                  ],
                  "name": "incrementNetworkId",
                  "nameLocation": "2518:18:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1510,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2536:2:5"
                  },
                  "returnParameters": {
                    "id": 1515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1514,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1520,
                        "src": "2569:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1513,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2569:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2568:9:5"
                  },
                  "scope": 1879,
                  "src": "2509:111:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1634,
                    "nodeType": "Block",
                    "src": "2701:960:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1531,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1522,
                                "src": "2719:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2724:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2719:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206e6574776f726b204944",
                              "id": 1534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2727:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1e0378fd91276cf2d1eb2c93fd43f1222cc240c032c3dc15352aeace0c1cd550",
                                "typeString": "literal_string \"Invalid network ID\""
                              },
                              "value": "Invalid network ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1e0378fd91276cf2d1eb2c93fd43f1222cc240c032c3dc15352aeace0c1cd550",
                                "typeString": "literal_string \"Invalid network ID\""
                              }
                            ],
                            "id": 1530,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2711:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2711:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1536,
                        "nodeType": "ExpressionStatement",
                        "src": "2711:37:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1538,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "2766:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 1539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2770:11:5",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1321,
                                "src": "2766:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1542,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2793:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1541,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2785:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1540,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2785:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2785:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2766:29:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420686f73742061646472657373",
                              "id": 1545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2797:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              },
                              "value": "Invalid host address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              }
                            ],
                            "id": 1537,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2758:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2758:62:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1547,
                        "nodeType": "ExpressionStatement",
                        "src": "2758:62:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1549,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "2838:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 1550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2842:15:5",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1323,
                                "src": "2838:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2860:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2838:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
                              "id": 1553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2863:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              },
                              "value": "Price must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              }
                            ],
                            "id": 1548,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2830:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2830:64:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1555,
                        "nodeType": "ExpressionStatement",
                        "src": "2830:64:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1559,
                                        "name": "net",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1525,
                                        "src": "2918:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                          "typeString": "struct ZaaNetStorage.Network calldata"
                                        }
                                      },
                                      "id": 1560,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2922:11:5",
                                      "memberName": "mongoDataId",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1325,
                                      "src": "2918:15:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 1558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2912:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 1557,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2912:5:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2912:22:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 1562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2935:6:5",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2912:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2944:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2912:33:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d6f6e676f446174614944207265717569726564",
                              "id": 1565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2947:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_63e0a91235b82882ae36fd20b4e9aa5277bcaaee4744335f869888bfb6cf38a6",
                                "typeString": "literal_string \"MongoDataID required\""
                              },
                              "value": "MongoDataID required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_63e0a91235b82882ae36fd20b4e9aa5277bcaaee4744335f869888bfb6cf38a6",
                                "typeString": "literal_string \"MongoDataID required\""
                              }
                            ],
                            "id": 1556,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2904:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2904:66:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1567,
                        "nodeType": "ExpressionStatement",
                        "src": "2904:66:5"
                      },
                      {
                        "assignments": [
                          1569
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1569,
                            "mutability": "mutable",
                            "name": "isNewNetwork",
                            "nameLocation": "2986:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1634,
                            "src": "2981:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1568,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2981:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1574,
                        "initialValue": {
                          "id": 1573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3001:18:5",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1570,
                              "name": "networkExists",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "3002:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 1572,
                            "indexExpression": {
                              "id": 1571,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1522,
                              "src": "3016:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3002:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2981:38:5"
                      },
                      {
                        "expression": {
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1575,
                              "name": "networks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1346,
                              "src": "3030:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$1332_storage_$",
                                "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                              }
                            },
                            "id": 1577,
                            "indexExpression": {
                              "id": 1576,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1522,
                              "src": "3039:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3030:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$1332_storage",
                              "typeString": "struct ZaaNetStorage.Network storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1579,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "3071:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 1580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3075:2:5",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1319,
                                "src": "3071:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1581,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "3104:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 1582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3108:11:5",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1321,
                                "src": "3104:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1583,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "3150:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 1584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3154:15:5",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1323,
                                "src": "3150:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1585,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "3196:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 1586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3200:11:5",
                                "memberName": "mongoDataId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1325,
                                "src": "3196:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1587,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "3235:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 1588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3239:8:5",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1327,
                                "src": "3235:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "condition": {
                                  "id": 1589,
                                  "name": "isNewNetwork",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1569,
                                  "src": "3272:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1592,
                                      "name": "networks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1346,
                                      "src": "3305:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$1332_storage_$",
                                        "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                      }
                                    },
                                    "id": 1594,
                                    "indexExpression": {
                                      "id": 1593,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1522,
                                      "src": "3314:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3305:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$1332_storage",
                                      "typeString": "struct ZaaNetStorage.Network storage ref"
                                    }
                                  },
                                  "id": 1595,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3318:9:5",
                                  "memberName": "createdAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1329,
                                  "src": "3305:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "3272:55:5",
                                "trueExpression": {
                                  "expression": {
                                    "id": 1590,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3287:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1591,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3293:9:5",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3287:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1597,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3352:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3358:9:5",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3352:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1578,
                              "name": "Network",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1332,
                              "src": "3045:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Network_$1332_storage_ptr_$",
                                "typeString": "type(struct ZaaNetStorage.Network storage pointer)"
                              }
                            },
                            "id": 1599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "3067:2:5",
                              "3091:11:5",
                              "3133:15:5",
                              "3183:11:5",
                              "3225:8:5",
                              "3261:9:5",
                              "3341:9:5"
                            ],
                            "names": [
                              "id",
                              "hostAddress",
                              "pricePerSession",
                              "mongoDataId",
                              "isActive",
                              "createdAt",
                              "updatedAt"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "3045:333:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$1332_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network memory"
                            }
                          },
                          "src": "3030:348:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$1332_storage",
                            "typeString": "struct ZaaNetStorage.Network storage ref"
                          }
                        },
                        "id": 1601,
                        "nodeType": "ExpressionStatement",
                        "src": "3030:348:5"
                      },
                      {
                        "condition": {
                          "id": 1602,
                          "name": "isNewNetwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1569,
                          "src": "3393:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1632,
                          "nodeType": "Block",
                          "src": "3590:65:5",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1627,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1522,
                                    "src": "3624:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1628,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1525,
                                      "src": "3628:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 1629,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3632:11:5",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1321,
                                    "src": "3628:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1626,
                                  "name": "NetworkUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1401,
                                  "src": "3609:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
                                "id": 1630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3609:35:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1631,
                              "nodeType": "EmitStatement",
                              "src": "3604:40:5"
                            }
                          ]
                        },
                        "id": 1633,
                        "nodeType": "IfStatement",
                        "src": "3389:266:5",
                        "trueBody": {
                          "id": 1625,
                          "nodeType": "Block",
                          "src": "3407:177:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1603,
                                    "name": "networkExists",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1359,
                                    "src": "3421:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                      "typeString": "mapping(uint256 => bool)"
                                    }
                                  },
                                  "id": 1605,
                                  "indexExpression": {
                                    "id": 1604,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1522,
                                    "src": "3435:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3421:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1606,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3441:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3421:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1608,
                              "nodeType": "ExpressionStatement",
                              "src": "3421:24:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1614,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1522,
                                    "src": "3496:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1609,
                                      "name": "hostNetworkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1355,
                                      "src": "3459:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                        "typeString": "mapping(address => uint256[] storage ref)"
                                      }
                                    },
                                    "id": 1612,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1610,
                                        "name": "net",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1525,
                                        "src": "3474:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                          "typeString": "struct ZaaNetStorage.Network calldata"
                                        }
                                      },
                                      "id": 1611,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3478:11:5",
                                      "memberName": "hostAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1321,
                                      "src": "3474:15:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3459:31:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 1613,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3491:4:5",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "3459:36:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer,uint256)"
                                  }
                                },
                                "id": 1615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3459:40:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1616,
                              "nodeType": "ExpressionStatement",
                              "src": "3459:40:5"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1618,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1522,
                                    "src": "3532:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1619,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1525,
                                      "src": "3536:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 1620,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3540:11:5",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1321,
                                    "src": "3536:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1621,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1525,
                                      "src": "3553:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 1622,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3557:15:5",
                                    "memberName": "pricePerSession",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1323,
                                    "src": "3553:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1617,
                                  "name": "NetworkStored",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1395,
                                  "src": "3518:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,address,uint256)"
                                  }
                                },
                                "id": 1623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3518:55:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1624,
                              "nodeType": "EmitStatement",
                              "src": "3513:60:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "50c0d41c",
                  "id": 1635,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1528,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1527,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "2689:11:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1381,
                        "src": "2689:11:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2689:11:5"
                    }
                  ],
                  "name": "setNetwork",
                  "nameLocation": "2635:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1526,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1522,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "2654:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1635,
                        "src": "2646:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1521,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2646:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1525,
                        "mutability": "mutable",
                        "name": "net",
                        "nameLocation": "2675:3:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1635,
                        "src": "2658:20:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$1332_calldata_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 1524,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1523,
                            "name": "Network",
                            "nameLocations": [
                              "2658:7:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1332,
                            "src": "2658:7:5"
                          },
                          "referencedDeclaration": 1332,
                          "src": "2658:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$1332_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2645:34:5"
                  },
                  "returnParameters": {
                    "id": 1529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2701:0:5"
                  },
                  "scope": 1879,
                  "src": "2626:1035:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1654,
                    "nodeType": "Block",
                    "src": "3738:98:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1644,
                                "name": "networkExists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1359,
                                "src": "3756:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 1646,
                              "indexExpression": {
                                "id": 1645,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1637,
                                "src": "3770:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3756:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20646f6573206e6f74206578697374",
                              "id": 1647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3775:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              },
                              "value": "Network does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              }
                            ],
                            "id": 1643,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3748:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3748:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1649,
                        "nodeType": "ExpressionStatement",
                        "src": "3748:52:5"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1650,
                            "name": "networks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1346,
                            "src": "3817:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$1332_storage_$",
                              "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                            }
                          },
                          "id": 1652,
                          "indexExpression": {
                            "id": 1651,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1637,
                            "src": "3826:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3817:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$1332_storage",
                            "typeString": "struct ZaaNetStorage.Network storage ref"
                          }
                        },
                        "functionReturnParameters": 1642,
                        "id": 1653,
                        "nodeType": "Return",
                        "src": "3810:19:5"
                      }
                    ]
                  },
                  "functionSelector": "95ea5717",
                  "id": 1655,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetwork",
                  "nameLocation": "3676:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1638,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1637,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3695:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1655,
                        "src": "3687:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1636,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3687:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3686:12:5"
                  },
                  "returnParameters": {
                    "id": 1642,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1641,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1655,
                        "src": "3722:14:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$1332_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 1640,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1639,
                            "name": "Network",
                            "nameLocations": [
                              "3722:7:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1332,
                            "src": "3722:7:5"
                          },
                          "referencedDeclaration": 1332,
                          "src": "3722:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$1332_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3721:16:5"
                  },
                  "scope": 1879,
                  "src": "3667:169:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1743,
                    "nodeType": "Block",
                    "src": "3981:461:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1668,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1666,
                            "src": "3991:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1669,
                            "name": "networkIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "3999:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3991:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1671,
                        "nodeType": "ExpressionStatement",
                        "src": "3991:24:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1672,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1657,
                            "src": "4029:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1673,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1666,
                            "src": "4039:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4029:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1685,
                        "nodeType": "IfStatement",
                        "src": "4025:78:5",
                        "trueBody": {
                          "id": 1684,
                          "nodeType": "Block",
                          "src": "4046:57:5",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1679,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4082:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1678,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "4068:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$1332_memory_ptr_$dyn_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                                      },
                                      "typeName": {
                                        "baseType": {
                                          "id": 1676,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 1675,
                                            "name": "Network",
                                            "nameLocations": [
                                              "4072:7:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1332,
                                            "src": "4072:7:5"
                                          },
                                          "referencedDeclaration": 1332,
                                          "src": "4072:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Network_$1332_storage_ptr",
                                            "typeString": "struct ZaaNetStorage.Network"
                                          }
                                        },
                                        "id": 1677,
                                        "nodeType": "ArrayTypeName",
                                        "src": "4072:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Network_$1332_storage_$dyn_storage_ptr",
                                          "typeString": "struct ZaaNetStorage.Network[]"
                                        }
                                      }
                                    },
                                    "id": 1680,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4068:16:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$1332_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  {
                                    "id": 1681,
                                    "name": "total",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1666,
                                    "src": "4086:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1682,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4067:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$1332_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                                  "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                                }
                              },
                              "functionReturnParameters": 1667,
                              "id": 1683,
                              "nodeType": "Return",
                              "src": "4060:32:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1687
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1687,
                            "mutability": "mutable",
                            "name": "end",
                            "nameLocation": "4121:3:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1743,
                            "src": "4113:11:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1686,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4113:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1691,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1688,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1657,
                            "src": "4127:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1689,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1659,
                            "src": "4136:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4127:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4113:28:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1692,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1687,
                            "src": "4155:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1693,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1666,
                            "src": "4161:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4155:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1700,
                        "nodeType": "IfStatement",
                        "src": "4151:53:5",
                        "trueBody": {
                          "id": 1699,
                          "nodeType": "Block",
                          "src": "4168:36:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1695,
                                  "name": "end",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1687,
                                  "src": "4182:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1696,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1666,
                                  "src": "4188:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4182:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1698,
                              "nodeType": "ExpressionStatement",
                              "src": "4182:11:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1705
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1705,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "4231:6:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1743,
                            "src": "4214:23:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$1332_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1703,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1702,
                                  "name": "Network",
                                  "nameLocations": [
                                    "4214:7:5"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1332,
                                  "src": "4214:7:5"
                                },
                                "referencedDeclaration": 1332,
                                "src": "4214:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$1332_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 1704,
                              "nodeType": "ArrayTypeName",
                              "src": "4214:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$1332_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1714,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1710,
                                "name": "end",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1687,
                                "src": "4254:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1711,
                                "name": "offset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1657,
                                "src": "4260:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4254:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4240:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$1332_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1707,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1706,
                                  "name": "Network",
                                  "nameLocations": [
                                    "4244:7:5"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1332,
                                  "src": "4244:7:5"
                                },
                                "referencedDeclaration": 1332,
                                "src": "4244:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$1332_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 1708,
                              "nodeType": "ArrayTypeName",
                              "src": "4244:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$1332_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            }
                          },
                          "id": 1713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4240:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$1332_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4214:53:5"
                      },
                      {
                        "body": {
                          "id": 1737,
                          "nodeType": "Block",
                          "src": "4316:87:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1725,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1705,
                                    "src": "4330:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$1332_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  "id": 1729,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1728,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1726,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1716,
                                      "src": "4337:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 1727,
                                      "name": "offset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1657,
                                      "src": "4341:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4337:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4330:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$1332_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1730,
                                    "name": "networks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1346,
                                    "src": "4351:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$1332_storage_$",
                                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                    }
                                  },
                                  "id": 1734,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1733,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1731,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1716,
                                      "src": "4360:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4364:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4360:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4351:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$1332_storage",
                                    "typeString": "struct ZaaNetStorage.Network storage ref"
                                  }
                                },
                                "src": "4330:36:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$1332_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 1736,
                              "nodeType": "ExpressionStatement",
                              "src": "4330:36:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1719,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "4302:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1720,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1687,
                            "src": "4306:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4302:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1738,
                        "initializationExpression": {
                          "assignments": [
                            1716
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1716,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4290:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1738,
                              "src": "4282:9:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1715,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4282:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1718,
                          "initialValue": {
                            "id": 1717,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1657,
                            "src": "4294:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4282:18:5"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4311:3:5",
                            "subExpression": {
                              "id": 1722,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "4311:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1724,
                          "nodeType": "ExpressionStatement",
                          "src": "4311:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "4277:126:5"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1739,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1705,
                              "src": "4421:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$1332_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory[] memory"
                              }
                            },
                            {
                              "id": 1740,
                              "name": "total",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1666,
                              "src": "4429:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1741,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4420:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$1332_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                          }
                        },
                        "functionReturnParameters": 1667,
                        "id": 1742,
                        "nodeType": "Return",
                        "src": "4413:22:5"
                      }
                    ]
                  },
                  "functionSelector": "fa9c81a4",
                  "id": 1744,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetworksPaginated",
                  "nameLocation": "3851:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1660,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1657,
                        "mutability": "mutable",
                        "name": "offset",
                        "nameLocation": "3889:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1744,
                        "src": "3881:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3881:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1659,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "3913:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1744,
                        "src": "3905:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1658,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3905:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3871:53:5"
                  },
                  "returnParameters": {
                    "id": 1667,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1664,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1744,
                        "src": "3948:16:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$1332_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1662,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1661,
                              "name": "Network",
                              "nameLocations": [
                                "3948:7:5"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1332,
                              "src": "3948:7:5"
                            },
                            "referencedDeclaration": 1332,
                            "src": "3948:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$1332_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 1663,
                          "nodeType": "ArrayTypeName",
                          "src": "3948:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$1332_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1666,
                        "mutability": "mutable",
                        "name": "total",
                        "nameLocation": "3974:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1744,
                        "src": "3966:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1665,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3966:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3947:33:5"
                  },
                  "scope": 1879,
                  "src": "3842:600:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1756,
                    "nodeType": "Block",
                    "src": "4549:51:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1752,
                            "name": "hostNetworkIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "4566:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 1754,
                          "indexExpression": {
                            "id": 1753,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1746,
                            "src": "4581:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4566:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1751,
                        "id": 1755,
                        "nodeType": "Return",
                        "src": "4559:34:5"
                      }
                    ]
                  },
                  "functionSelector": "79f0dc57",
                  "id": 1757,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostNetworks",
                  "nameLocation": "4457:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1746,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "4490:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1757,
                        "src": "4482:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1745,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4482:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4472:35:5"
                  },
                  "returnParameters": {
                    "id": 1751,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1750,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1757,
                        "src": "4531:16:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1748,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4531:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1749,
                          "nodeType": "ArrayTypeName",
                          "src": "4531:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4530:18:5"
                  },
                  "scope": 1879,
                  "src": "4448:152:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1798,
                    "nodeType": "Block",
                    "src": "4753:257:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1769,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1759,
                                "src": "4771:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1772,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4794:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4786:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1770,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4786:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4786:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4771:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420686f73742061646472657373",
                              "id": 1775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4798:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              },
                              "value": "Invalid host address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              }
                            ],
                            "id": 1768,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4763:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4763:58:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1777,
                        "nodeType": "ExpressionStatement",
                        "src": "4763:58:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1779,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1761,
                                "src": "4839:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4848:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4839:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 1782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4851:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 1778,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4831:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4831:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1784,
                        "nodeType": "ExpressionStatement",
                        "src": "4831:52:5"
                      },
                      {
                        "expression": {
                          "id": 1789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1785,
                              "name": "hostEarnings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1350,
                              "src": "4894:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1787,
                            "indexExpression": {
                              "id": 1786,
                              "name": "hostAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1759,
                              "src": "4907:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4894:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1788,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1761,
                            "src": "4923:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4894:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1790,
                        "nodeType": "ExpressionStatement",
                        "src": "4894:35:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1792,
                              "name": "hostAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1759,
                              "src": "4964:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1793,
                                "name": "hostEarnings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "4977:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1795,
                              "indexExpression": {
                                "id": 1794,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1759,
                                "src": "4990:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4977:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1791,
                            "name": "HostEarningsUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "4944:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4944:59:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1797,
                        "nodeType": "EmitStatement",
                        "src": "4939:64:5"
                      }
                    ]
                  },
                  "functionSelector": "e1c7a8aa",
                  "id": 1799,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1764,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1763,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "4728:11:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1381,
                        "src": "4728:11:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4728:11:5"
                    },
                    {
                      "id": 1766,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1765,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4740:12:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 318,
                        "src": "4740:12:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4740:12:5"
                    }
                  ],
                  "name": "increaseHostEarnings",
                  "nameLocation": "4639:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1759,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "4677:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1799,
                        "src": "4669:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1758,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4669:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1761,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4706:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1799,
                        "src": "4698:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1760,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4698:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4659:59:5"
                  },
                  "returnParameters": {
                    "id": 1767,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4753:0:5"
                  },
                  "scope": 1879,
                  "src": "4630:380:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1810,
                    "nodeType": "Block",
                    "src": "5108:49:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1806,
                            "name": "hostEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "5125:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1808,
                          "indexExpression": {
                            "id": 1807,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1801,
                            "src": "5138:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5125:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1805,
                        "id": 1809,
                        "nodeType": "Return",
                        "src": "5118:32:5"
                      }
                    ]
                  },
                  "functionSelector": "6d65573f",
                  "id": 1811,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostEarnings",
                  "nameLocation": "5025:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1802,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1801,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "5058:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "5050:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1800,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5050:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5040:35:5"
                  },
                  "returnParameters": {
                    "id": 1805,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1804,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "5099:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1803,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5099:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5098:9:5"
                  },
                  "scope": 1879,
                  "src": "5016:141:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1831,
                    "nodeType": "Block",
                    "src": "5259:103:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1821,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1813,
                                "src": "5277:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5286:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5277:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 1824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5289:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 1820,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5269:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5269:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1826,
                        "nodeType": "ExpressionStatement",
                        "src": "5269:52:5"
                      },
                      {
                        "expression": {
                          "id": 1829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1827,
                            "name": "zaanetEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "5331:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1828,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1813,
                            "src": "5349:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5331:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1830,
                        "nodeType": "ExpressionStatement",
                        "src": "5331:24:5"
                      }
                    ]
                  },
                  "functionSelector": "69009a13",
                  "id": 1832,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1816,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1815,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "5234:11:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1381,
                        "src": "5234:11:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5234:11:5"
                    },
                    {
                      "id": 1818,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1817,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "5246:12:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 318,
                        "src": "5246:12:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5246:12:5"
                    }
                  ],
                  "name": "increaseZaaNetEarnings",
                  "nameLocation": "5172:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1814,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1813,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5212:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1832,
                        "src": "5204:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1812,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5204:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5194:30:5"
                  },
                  "returnParameters": {
                    "id": 1819,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5259:0:5"
                  },
                  "scope": 1879,
                  "src": "5163:199:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1839,
                    "nodeType": "Block",
                    "src": "5429:38:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1837,
                          "name": "zaanetEarnings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "5446:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1836,
                        "id": 1838,
                        "nodeType": "Return",
                        "src": "5439:21:5"
                      }
                    ]
                  },
                  "functionSelector": "22a4808b",
                  "id": 1840,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getZaaNetEarnings",
                  "nameLocation": "5377:17:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1833,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5394:2:5"
                  },
                  "returnParameters": {
                    "id": 1836,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1835,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1840,
                        "src": "5420:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1834,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5420:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5419:9:5"
                  },
                  "scope": 1879,
                  "src": "5368:99:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1877,
                    "nodeType": "Block",
                    "src": "5597:252:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1848,
                                "name": "networkExists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1359,
                                "src": "5615:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 1850,
                              "indexExpression": {
                                "id": 1849,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1842,
                                "src": "5629:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5615:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20646f6573206e6f74206578697374",
                              "id": 1851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5641:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              },
                              "value": "Network does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              }
                            ],
                            "id": 1847,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5607:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5607:59:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1853,
                        "nodeType": "ExpressionStatement",
                        "src": "5607:59:5"
                      },
                      {
                        "expression": {
                          "id": 1859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1854,
                                "name": "networks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1346,
                                "src": "5676:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$1332_storage_$",
                                  "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                }
                              },
                              "id": 1856,
                              "indexExpression": {
                                "id": 1855,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1842,
                                "src": "5685:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5676:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$1332_storage",
                                "typeString": "struct ZaaNetStorage.Network storage ref"
                              }
                            },
                            "id": 1857,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5696:8:5",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1327,
                            "src": "5676:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5707:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "5676:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1860,
                        "nodeType": "ExpressionStatement",
                        "src": "5676:36:5"
                      },
                      {
                        "expression": {
                          "id": 1867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1861,
                                "name": "networks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1346,
                                "src": "5722:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$1332_storage_$",
                                  "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                }
                              },
                              "id": 1863,
                              "indexExpression": {
                                "id": 1862,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1842,
                                "src": "5731:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5722:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$1332_storage",
                                "typeString": "struct ZaaNetStorage.Network storage ref"
                              }
                            },
                            "id": 1864,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5742:9:5",
                            "memberName": "updatedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1331,
                            "src": "5722:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1865,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5754:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5760:9:5",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5754:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5722:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1868,
                        "nodeType": "ExpressionStatement",
                        "src": "5722:47:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1870,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1842,
                              "src": "5799:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1871,
                                  "name": "networks",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1346,
                                  "src": "5810:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$1332_storage_$",
                                    "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                  }
                                },
                                "id": 1873,
                                "indexExpression": {
                                  "id": 1872,
                                  "name": "networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1842,
                                  "src": "5819:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5810:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$1332_storage",
                                  "typeString": "struct ZaaNetStorage.Network storage ref"
                                }
                              },
                              "id": 1874,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5830:11:5",
                              "memberName": "hostAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1321,
                              "src": "5810:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1869,
                            "name": "NetworkUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
                            "src": "5784:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 1875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5784:58:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1876,
                        "nodeType": "EmitStatement",
                        "src": "5779:63:5"
                      }
                    ]
                  },
                  "functionSelector": "5a2f406f",
                  "id": 1878,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1845,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1844,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5587:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5587:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5587:9:5"
                    }
                  ],
                  "name": "emergencyDeactivateNetwork",
                  "nameLocation": "5532:26:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1842,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "5567:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1878,
                        "src": "5559:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5559:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5558:19:5"
                  },
                  "returnParameters": {
                    "id": 1846,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5597:0:5"
                  },
                  "scope": 1879,
                  "src": "5523:326:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1880,
              "src": "172:5679:5",
              "usedErrors": [
                13,
                18,
                299
              ],
              "usedEvents": [
                24,
                1387,
                1395,
                1401,
                1409,
                1415,
                1419
              ]
            }
          ],
          "src": "32:5820:5"
        },
        "id": 5
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetAdmin.sol": {
        "ZaaNetAdmin": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_storageContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_treasuryAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_paymentAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_platformFeePercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_hostingFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "AdminPaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "AdminUnpaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "storageContract",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "ContractsInitialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "EmergencyModeToggled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "updatedBy",
                  "type": "address"
                }
              ],
              "name": "EmergencyOperatorUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "HostingFeeUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "PlatformFeeUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldTreasury",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newTreasury",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "TreasuryUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_HOSTING_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_PLATFORM_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_HOSTING_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_PLATFORM_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "calculatePlatformFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "emergencyDeactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyMode",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "emergencyOperators",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFee",
                  "type": "uint256"
                }
              ],
              "name": "emergencySetHostingFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFeePercent",
                  "type": "uint256"
                }
              ],
              "name": "emergencySetPlatformFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "feeHistory",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAdminStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalFeeChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalTreasuryChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalHostingFeeChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isEmergencyMode",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "currentPlatformFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentHostingFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currentTreasury",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentFees",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "platformFeePercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "hostingFeeAmount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFeeHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.FeeChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHostingFeeHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.HostingFeeChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestFeeChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.FeeChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestHostingFeeChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.HostingFeeChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestTreasuryChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "oldTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "newTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.TreasuryChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPlatformFeeBasisPoints",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTreasuryHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "oldTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "newTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.TreasuryChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "hostingFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "hostingFeeHistory",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isEmergencyOperator",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "payment",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paymentAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "platformFeePercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setEmergencyOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFee",
                  "type": "uint256"
                }
              ],
              "name": "setHostingFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newPaymentAddress",
                  "type": "address"
                }
              ],
              "name": "setPaymentAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFeePercent",
                  "type": "uint256"
                }
              ],
              "name": "setPlatformFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newTreasuryAddress",
                  "type": "address"
                }
              ],
              "name": "setTreasuryAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storageContract",
              "outputs": [
                {
                  "internalType": "contract ZaaNetStorage",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "toggleEmergencyMode",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasury",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "treasuryHistory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "oldTreasury",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newTreasury",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 1510,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 1479,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "update_storage_value_struct_FeeChange_to_struct_FeeChange": {
                  "entryPoint": 1530,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346105c2576040516000611ed83881900390601f8201601f191684016001600160401b038111858210176105ae579180859260a0946040528339810103126105ab5761004f826105e6565b9061005c602084016105e6565b92610069604082016105e6565b9260806060830151920151933315610597578354336001600160a01b031982168117865560405197916001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3600180556007805460ff191690556001600160a01b0316958615610555575060018310158061054a575b156104f5576001600160a01b0316156104a1576305f5e1008411610449576001600160a01b031680610405575b50600380546001600160a01b031916851790556005819055600683905561013b6105c7565b908282526020820152426040820152336060820152600954680100000000000000008110156103f1576001810160095560095481101561039f57600983526101aa9190839060021b7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af016105fa565b6101b26105c7565b9281845260208401908152604084014281526060850191338352600a5495680100000000000000008710156103dd5760018701600a55600a548710156103c957600a909452925160029590951b7fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8810180546001600160a01b03199081166001600160a01b039889161790915593517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a982018054861691881691909117905590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa82015590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ab90910180549092169316929092179091556102d36105c7565b90600082526020820152426040820152336060820152600b5490680100000000000000008210156103b35760018201600b55600091600b5481101561039f57600b9092526103489160009060021b7f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9016105fa565b3360005260086020526040600020600160ff198254161790556040516001815233907f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce60203392a360405161187f90816106598239f35b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b83526041600452602483fd5b600280546001600160a01b031916821790556040514281527f7f7d6e7886dca58922d0593a44928fb5066cd0e04369c371d72eb96e61368fa890602090a238610116565b60405162461bcd60e51b815260206004820152602a60248201527f486f7374696e6720666565206d757374206265206265747765656e203020616e60448201526919080c4c0c081554d11560b21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f5061796d656e7420616464726573732063616e6e6f74206265207a65726f206160448201526564647265737360d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f506c6174666f726d20666565206d757374206265206265747765656e20312520604482015266616e642032302560c81b6064820152608490fd5b5060148311156100e9565b62461bcd60e51b815260206004820152601f60248201527f54726561737572792063616e6e6f74206265207a65726f2061646472657373006044820152606490fd5b631e4fbdf760e01b84526004849052602484fd5b80fd5b634e487b7160e01b84526041600452602484fd5b600080fd5b60405190608082016001600160401b038111838210176103b357604052565b51906001600160a01b03821682036105c257565b9190610642578051825560208101516001830155604081015160028301556060015160039190910180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052600060045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c806302e88899146113cf5780630905f560146113ac57806309705de81461075d5780630cbab4f7146113755780630d35a1671461134d57806311ce02671461132457806312e8e2c31461127557806318b4f23b146111c65780633998a681146111aa5780633f4ba83a1461111757806342f6487a14610b135780634863687e14611052578063492adaa814610f5c5780634c17b53014610ed35780635071f27b14610e5057806354d7494114610e345780635707ed4514610d3f5780635a2f406f14610c4f5780635c975abb14610c2a5780635e1e100414610b3c57806361d027b3146105e2578063633423be14610b135780636605bfda146109475780636f04d9941461092b578063715018a6146108d157806371908a03146108ac5780637a9b93c6146108795780638456cb59146107e15780638c639a85146107c35780638da5cb5b1461079c578063a10eb3541461075d578063a380b86b146106f7578063bb8f0b65146106d8578063bbeecdf014610669578063c116d9361461060b578063c5f956af146105e2578063d2643f1d1461050f578063d4ab4b401461041a578063e53377eb146103b0578063ebe7fdaa14610392578063edfbf4f1146102a5578063f2fde38b1461021f5763f851a440146101f657600080fd5b3461021c578060031936011261021c57546040516001600160a01b039091168152602090f35b80fd5b503461021c57602036600319011261021c5761023961149f565b610241611820565b6001600160a01b031680156102915781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b503461021c57602036600319011261021c576004356102c2611820565b6102d160ff6007541615611549565b6305f5e100811161034257600654906102ec82821415611595565b806006556103196040516102ff816115d1565b8381528260208201524260408201523360608201526117fb565b33917feb710718efc8ce303613ea1c9fb97a21bd1154a827cdb5ed5607eadd10e8cf968480a480f35b60405162461bcd60e51b815260206004820152602260248201527f466565206d757374206265206265747765656e203020616e6420313030205553604482015261111560f21b6064820152608490fd5b503461021c578060031936011261021c576020600654604051908152f35b503461021c57602036600319011261021c57600435600b54811015610416576103d89061150e565b50805460018201546002830154600390930154604080519384526020840192909252908201929092526001600160a01b039091166060820152608090f35b5080fd5b503461021c578060031936011261021c57600b54610437816117a8565b6104446040519182611603565b818152600b83526020810191837f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9845b8383106104f157868587604051928392602084019060208552518091526040840192915b8181106104a6575050500390f35b9193509160206080826104e360019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b019401910191849392610498565b60046020600192610501856117c0565b815201920192019190610474565b503461021c578060031936011261021c57610528611741565b50600b5490811561059d57600019820191821161058957608061055361054d8461150e565b506117c0565b61058760405180926060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565bf35b634e487b7160e01b81526011600452602490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4e6f20686f7374696e6720666565206368616e676573207265636f72646564006044820152606490fd5b503461021c578060031936011261021c576003546040516001600160a01b039091168152602090f35b503461021c578060031936011261021c5760e0600954600a54600b5460ff60075416600554906006549260018060a01b0360035416946040519687526020870152604086015215156060850152608084015260a083015260c0820152f35b503461021c57602036600319011261021c57600435338252600860205260ff60408320541680156106c5575b61069e906116b0565b6106ae6305f5e1008211156116f5565b60065490806006556103196040516102ff816115d1565b5081546001600160a01b03163314610695565b503461021c578060031936011261021c5760206040516305f5e1008152f35b503461021c57602036600319011261021c5760043590600a5482101561021c576080610722836114ef565b50805460018201546002830154600390930154604080516001600160a01b039485168152928416602084015282019390935291166060820152f35b503461021c57602036600319011261021c5760209060ff906040906001600160a01b0361078861149f565b168152600884522054166040519015158152f35b503461021c578060031936011261021c57546040516001600160a01b039091168152602090f35b503461021c578060031936011261021c576020600554604051908152f35b503461021c578060031936011261021c576107fa611820565b805460ff8160a01c1661086a5760ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1337ff9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f01402908280a280f35b63d93c066560e01b8252600482fd5b503461021c578060031936011261021c576005549060648202918083046064149015171561058957602082604051908152f35b503461021c578060031936011261021c57604060055460065482519182526020820152f35b503461021c578060031936011261021c576108ea611820565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461021c578060031936011261021c57602060405160018152f35b503461021c57602036600319011261021c5761096161149f565b610969611820565b61097860ff6007541615611549565b6001600160a01b03168015610ace576003546001600160a01b0381169190828214610a94576001600160a01b03191681176003556040516109b8816115d1565b82815260208101828152604082014281526060830191338352600a54600160401b811015610a80578060016109f09201600a556114ef565b949094610a6c575184546001600160a01b03199081166001600160a01b03928316178655915160018601805484169183169190911790559151600285015591516003939093018054909216921691909117905533917f23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa138480a480f35b634e487b7160e01b88526004889052602488fd5b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b8152602060048201526012602482015271151c99585cdd5c9e481d5b98da185b99d95960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b503461021c578060031936011261021c576004546040516001600160a01b039091168152602090f35b503461021c57602036600319011261021c57610b5661149f565b610b5e611820565b610b6d60ff6007541615611549565b6001600160a01b03168015610be5576004546001600160a01b0381168214610ba0576001600160a01b0319161760045580f35b60405162461bcd60e51b815260206004820152601960248201527f5061796d656e74206164647265737320756e6368616e676564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796d656e7420616464726573730000000000000000006044820152606490fd5b503461021c578060031936011261021c5760ff6020915460a01c166040519015158152f35b503461021c57602036600319011261021c57338152600860205260ff6040822054168015610d2c575b610c81906116b0565b6002546001600160a01b03168015610ce7578082913b15610ce457818091602460405180958193635a2f406f60e01b835260043560048401525af18015610cd757610cc95780f35b610cd291611603565b388180f35b50604051903d90823e3d90fd5b50fd5b60405162461bcd60e51b815260206004820152601760248201527f53746f72616765206e6f7420696e697469616c697a65640000000000000000006044820152606490fd5b5080546001600160a01b03163314610c78565b503461021c578060031936011261021c57600954610d5c816117a8565b610d696040519182611603565b818152600983526020810191837f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af845b838310610e1657868587604051928392602084019060208552518091526040840192915b818110610dcb575050500390f35b919350916020608082610e0860019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b019401910191849392610dbd565b60046020600192610e26856117c0565b815201920192019190610d99565b503461021c578060031936011261021c57602090604051908152f35b503461021c578060031936011261021c57610e69611741565b50600954908115610e8e57600019820191821161058957608061055361054d846114ba565b60405162461bcd60e51b815260206004820152601760248201527f4e6f20666565206368616e676573207265636f726465640000000000000000006044820152606490fd5b503461021c578060031936011261021c57338152600860205260ff6040822054168015610f49575b610f04906116b0565b60075460ff8082161516809160ff19161760075560405190151581527fc35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa4060203392a280f35b5080546001600160a01b03163314610efb565b503461021c578060031936011261021c57600a54610f79816117a8565b610f866040519182611603565b818152600a83526020810191837fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8845b83831061103457868587604051928392602084019060208552518091526040840192915b818110610fe8575050500390f35b825180516001600160a01b039081168652602080830151821681880152604080840151908801526060928301519091169186019190915286955060809094019390920191600101610fda565b6004602060019261104485611766565b815201920192019190610fb6565b503461021c578060031936011261021c5761106b611741565b50600a549081156110d2576000198201918211610589576080611096611090846114ef565b50611766565b6040805182516001600160a01b039081168252602080850151821690830152838301519282019290925260609283015190911691810191909152f35b60405162461bcd60e51b815260206004820152601c60248201527f4e6f207472656173757279206368616e676573207265636f72646564000000006044820152606490fd5b503461021c578060031936011261021c57611130611820565b805460ff8160a01c161561119b5760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1337fcc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c6348280a280f35b638dfc202b60e01b8252600482fd5b503461021c578060031936011261021c57602060405160148152f35b503461021c57602036600319011261021c57600435338252600860205260ff6040832054168015611262575b6111fb906116b0565b61120860148211156116f5565b600554908060055561123960405161121f816115d1565b838152826020820152426040820152336060820152611683565b33917f9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb998480a480f35b5081546001600160a01b031633146111f2565b503461021c57602036600319011261021c57600435611292611820565b6112a160ff6007541615611549565b600181101580611319575b156112d457600554906112c182821415611595565b8060055561123960405161121f816115d1565b60405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265206265747765656e20312520616e642032302500006044820152606490fd5b5060148111156112ac565b503461021c578060031936011261021c576002546040516001600160a01b039091168152602090f35b503461021c57602036600319011261021c57600435600954811015610416576103d8906114ba565b503461021c57602036600319011261021c576005546004358181029291811591840414171561058957602082606460405191048152f35b503461021c578060031936011261021c57602060ff600754166040519015158152f35b503461021c57604036600319011261021c576113e961149f565b6024359081151580920361149b576113ff611820565b6001600160a01b031680156114565780835260086020526040832060ff1981541660ff84161790556040519182527f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce60203393a380f35b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206f70657261746f72206164647265737300000000000000006044820152606490fd5b8280fd5b600435906001600160a01b03821682036114b557565b600080fd5b6009548110156114d957600960005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b600a548110156114d957600a60005260206000209060021b0190600090565b600b548110156114d957600b60005260206000209060021b0190600090565b80548210156114d95760005260206000209060021b0190600090565b1561155057565b60405162461bcd60e51b815260206004820152601860248201527f53797374656d20696e20656d657267656e6379206d6f646500000000000000006044820152606490fd5b1561159c57565b60405162461bcd60e51b815260206004820152600d60248201526c119959481d5b98da185b99d959609a1b6044820152606490fd5b6080810190811067ffffffffffffffff8211176115ed57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176115ed57604052565b919061166d578051825560208101516001830155604081015160028301556060015160039190910180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052600060045260246000fd5b60095490600160401b8210156115ed576116a88260016116ae9401600955600961152d565b90611625565b565b156116b757565b60405162461bcd60e51b81526020600482015260166024820152752737ba1032b6b2b933b2b731bc9037b832b930ba37b960511b6044820152606490fd5b156116fc57565b60405162461bcd60e51b815260206004820152601960248201527f4665652063616e6e6f7420657863656564206d6178696d756d000000000000006044820152606490fd5b6040519061174e826115d1565b60006060838281528260208201528260408201520152565b90604051611773816115d1565b82546001600160a01b039081168252600184015481166020830152600284015460408301526003909301549092166060830152565b67ffffffffffffffff81116115ed5760051b60200190565b906040516117cd816115d1565b8254815260018301546020820152600283015460408201526003909201546001600160a01b03166060830152565b600b5490600160401b8210156115ed576116a88260016116ae9401600b55600b61152d565b6000546001600160a01b0316330361183457565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212202ec1dbb426e6f48326e8ddc06496e0a9ba734c4ba5f8400d0f3ffa515578a70064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1ED8 CODESIZE DUP2 SWAP1 SUB SWAP1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP5 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP6 DUP3 LT OR PUSH2 0x5AE JUMPI SWAP2 DUP1 DUP6 SWAP3 PUSH1 0xA0 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5AB JUMPI PUSH2 0x4F DUP3 PUSH2 0x5E6 JUMP JUMPDEST SWAP1 PUSH2 0x5C PUSH1 0x20 DUP5 ADD PUSH2 0x5E6 JUMP JUMPDEST SWAP3 PUSH2 0x69 PUSH1 0x40 DUP3 ADD PUSH2 0x5E6 JUMP JUMPDEST SWAP3 PUSH1 0x80 PUSH1 0x60 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP4 CALLER ISZERO PUSH2 0x597 JUMPI DUP4 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP7 SSTORE PUSH1 0x40 MLOAD SWAP8 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP8 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP7 ISZERO PUSH2 0x555 JUMPI POP PUSH1 0x1 DUP4 LT ISZERO DUP1 PUSH2 0x54A JUMPI JUMPDEST ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4A1 JUMPI PUSH4 0x5F5E100 DUP5 GT PUSH2 0x449 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x405 JUMPI JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE PUSH2 0x13B PUSH2 0x5C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x9 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x1 DUP2 ADD PUSH1 0x9 SSTORE PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x39F JUMPI PUSH1 0x9 DUP4 MSTORE PUSH2 0x1AA SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x2 SHL PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0xA SLOAD SWAP6 PUSH9 0x10000000000000000 DUP8 LT ISZERO PUSH2 0x3DD JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0xA SSTORE PUSH1 0xA SLOAD DUP8 LT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0xA SWAP1 SWAP5 MSTORE SWAP3 MLOAD PUSH1 0x2 SWAP6 SWAP1 SWAP6 SHL PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND OR SWAP1 SWAP2 SSTORE SWAP4 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9 DUP3 ADD DUP1 SLOAD DUP7 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AB SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x2D3 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x1 DUP3 ADD PUSH1 0xB SSTORE PUSH1 0x0 SWAP2 PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x39F JUMPI PUSH1 0xB SWAP1 SWAP3 MSTORE PUSH2 0x348 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x2 SHL PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH2 0x5FA JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x40 MLOAD PUSH2 0x187F SWAP1 DUP2 PUSH2 0x659 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x7F7D6E7886DCA58922D0593A44928FB5066CD0E04369C371D72EB96E61368FA8 SWAP1 PUSH1 0x20 SWAP1 LOG2 CODESIZE PUSH2 0x116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F7374696E6720666565206D757374206265206265747765656E203020616E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x19080C4C0C081554D115 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420616464726573732063616E6E6F74206265207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6174666F726D20666565206D757374206265206265747765656E20312520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616E6420323025 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP4 GT ISZERO PUSH2 0xE9 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792063616E6E6F74206265207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x3B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5C2 JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x642 JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E88899 EQ PUSH2 0x13CF JUMPI DUP1 PUSH4 0x905F560 EQ PUSH2 0x13AC JUMPI DUP1 PUSH4 0x9705DE8 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0xCBAB4F7 EQ PUSH2 0x1375 JUMPI DUP1 PUSH4 0xD35A167 EQ PUSH2 0x134D JUMPI DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x1324 JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0x1275 JUMPI DUP1 PUSH4 0x18B4F23B EQ PUSH2 0x11C6 JUMPI DUP1 PUSH4 0x3998A681 EQ PUSH2 0x11AA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1117 JUMPI DUP1 PUSH4 0x42F6487A EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0x4863687E EQ PUSH2 0x1052 JUMPI DUP1 PUSH4 0x492ADAA8 EQ PUSH2 0xF5C JUMPI DUP1 PUSH4 0x4C17B530 EQ PUSH2 0xED3 JUMPI DUP1 PUSH4 0x5071F27B EQ PUSH2 0xE50 JUMPI DUP1 PUSH4 0x54D74941 EQ PUSH2 0xE34 JUMPI DUP1 PUSH4 0x5707ED45 EQ PUSH2 0xD3F JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0xC4F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC2A JUMPI DUP1 PUSH4 0x5E1E1004 EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0x633423BE EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x947 JUMPI DUP1 PUSH4 0x6F04D994 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8D1 JUMPI DUP1 PUSH4 0x71908A03 EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0x7A9B93C6 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x7E1 JUMPI DUP1 PUSH4 0x8C639A85 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0xA10EB354 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0xA380B86B EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xBB8F0B65 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0xBBEECDF0 EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xC116D936 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xD2643F1D EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xD4AB4B40 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE53377EB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xEBE7FDAA EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xEDFBF4F1 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21F JUMPI PUSH4 0xF851A440 EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x239 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x241 PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x291 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2C2 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x2D1 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 GT PUSH2 0x342 JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH2 0x2EC DUP3 DUP3 EQ ISZERO PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x6 SSTORE PUSH2 0x319 PUSH1 0x40 MLOAD PUSH2 0x2FF DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x17FB JUMP JUMPDEST CALLER SWAP2 PUSH32 0xEB710718EFC8CE303613EA1C9FB97A21BD1154A827CDB5ED5607EADD10E8CF96 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E203020616E6420313030205553 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1115 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH2 0x3D8 SWAP1 PUSH2 0x150E JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xB SLOAD PUSH2 0x437 DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x444 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xB DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x4F1 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x4A6 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0x4E3 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x501 DUP6 PUSH2 0x17C0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x474 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x528 PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0xB SLOAD SWAP1 DUP2 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x553 PUSH2 0x54D DUP5 PUSH2 0x150E JUMP JUMPDEST POP PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x587 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20686F7374696E6720666565206368616E676573207265636F7264656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xE0 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x5 SLOAD SWAP1 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x6C5 JUMPI JUMPDEST PUSH2 0x69E SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x6AE PUSH4 0x5F5E100 DUP3 GT ISZERO PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 DUP1 PUSH1 0x6 SSTORE PUSH2 0x319 PUSH1 0x40 MLOAD PUSH2 0x2FF DUP2 PUSH2 0x15D1 JUMP JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x695 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xA SLOAD DUP3 LT ISZERO PUSH2 0x21C JUMPI PUSH1 0x80 PUSH2 0x722 DUP4 PUSH2 0x14EF JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x788 PUSH2 0x149F JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x7FA PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH2 0x86A JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xF9C91E483CE8BC4CC31645E7CC0F01A3371813E76469A71104841507F0140290 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x589 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x40 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x8EA PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x961 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x969 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x978 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xACE JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 DUP3 EQ PUSH2 0xA94 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x9B8 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x40 DUP3 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xA80 JUMPI DUP1 PUSH1 0x1 PUSH2 0x9F0 SWAP3 ADD PUSH1 0xA SSTORE PUSH2 0x14EF JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0xA6C JUMPI MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x23C12D5579081C5F1077C04A6B1C114D0F3DE239E81A436836D30ECB099FFA13 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 SWAP1 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C99585CDD5C9E481D5B98DA185B99D959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0xB56 PUSH2 0x149F JUMP JUMPDEST PUSH2 0xB5E PUSH2 0x1820 JUMP JUMPDEST PUSH2 0xB6D PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 EQ PUSH2 0xBA0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74206164647265737320756E6368616E67656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xD2C JUMPI JUMPDEST PUSH2 0xC81 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xCE7 JUMPI DUP1 DUP3 SWAP2 EXTCODESIZE ISZERO PUSH2 0xCE4 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0x5A2F406F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCC9 JUMPI DUP1 RETURN JUMPDEST PUSH2 0xCD2 SWAP2 PUSH2 0x1603 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F72616765206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC78 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x9 SLOAD PUSH2 0xD5C DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0xD69 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0xE16 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xDCB JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0xE08 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0xE26 DUP6 PUSH2 0x17C0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0xE69 PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x553 PUSH2 0x54D DUP5 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20666565206368616E676573207265636F72646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xF49 JUMPI JUMPDEST PUSH2 0xF04 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 SWAP2 PUSH1 0xFF NOT AND OR PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0xC35ED978E97C366B3A5F9375508BCFBCA850FCA66BF334B9477118918E6EAA40 PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEFB JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xA SLOAD PUSH2 0xF79 DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0xF86 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x1034 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xFE8 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 SWAP6 POP PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x1044 DUP6 PUSH2 0x1766 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x106B PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 DUP2 ISZERO PUSH2 0x10D2 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x1096 PUSH2 0x1090 DUP5 PUSH2 0x14EF JUMP JUMPDEST POP PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE DUP4 DUP4 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207472656173757279206368616E676573207265636F7264656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x1130 PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x119B JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xCC2B689B01792CCC45F7D02099E9EF3FFD7058E45803395690C61EFDD0F0C634 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1262 JUMPI JUMPDEST PUSH2 0x11FB SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x1208 PUSH1 0x14 DUP3 GT ISZERO PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 DUP1 PUSH1 0x5 SSTORE PUSH2 0x1239 PUSH1 0x40 MLOAD PUSH2 0x121F DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1683 JUMP JUMPDEST CALLER SWAP2 PUSH32 0x9E74D2175D1604CA094D3C60971771FB54AA1A0ADBADCEDCB69C48CFBD4FEB99 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1292 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x12A1 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 PUSH2 0x1319 JUMPI JUMPDEST ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH2 0x12C1 DUP3 DUP3 EQ ISZERO PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x5 SSTORE PUSH2 0x1239 PUSH1 0x40 MLOAD PUSH2 0x121F DUP2 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20312520616E64203230250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x12AC JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH2 0x3D8 SWAP1 PUSH2 0x14BA JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 CALLDATALOAD DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x589 JUMPI PUSH1 0x20 DUP3 PUSH1 0x64 PUSH1 0x40 MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x13E9 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x149B JUMPI PUSH2 0x13FF PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1456 JUMPI DUP1 DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x14B5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1550 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53797374656D20696E20656D657267656E6379206D6F64650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x159C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x119959481D5B98DA185B99D959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x166D JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x16A8 DUP3 PUSH1 0x1 PUSH2 0x16AE SWAP5 ADD PUSH1 0x9 SSTORE PUSH1 0x9 PUSH2 0x152D JUMP JUMPDEST SWAP1 PUSH2 0x1625 JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x16B7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1032B6B2B933B2B731BC9037B832B930BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x16FC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616E6E6F7420657863656564206D6178696D756D00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x174E DUP3 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1773 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15ED JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x17CD DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x16A8 DUP3 PUSH1 0x1 PUSH2 0x16AE SWAP5 ADD PUSH1 0xB SSTORE PUSH1 0xB PUSH2 0x152D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1834 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xC1 0xDB 0xB4 0x26 0xE6 DELEGATECALL DUP4 0x26 0xE8 0xDD 0xC0 PUSH5 0x96E0A9BA73 0x4C 0x4B 0xA5 0xF8 BLOCKHASH 0xD 0xF EXTCODEHASH STATICCALL MLOAD SSTORE PUSH25 0xA70064736F6C634300081C0033000000000000000000000000 ",
              "sourceMap": "255:12722:4:-:0;;;;;;;;-1:-1:-1;255:12722:4;;;;;;;;;-1:-1:-1;;255:12722:4;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;2957:10;;1273:26:0;1269:95;;255:12722:4;;2957:10;-1:-1:-1;;;;;;860:15:4;;;;;;255:12722;;;;-1:-1:-1;;;;;255:12722:4;3052:40:0;255:12722:4;;3052:40:0;255:12722:4;860:15;;1061:5;255:12722;;-1:-1:-1;;255:12722:4;;;-1:-1:-1;;;;;255:12722:4;;2987:30;;255:12722;;3084:39;255:12722;3084:39;;;:82;;;-1:-1:-1;722:2:4;;;-1:-1:-1;;;;;255:12722:4;3250:29;722:2;;860:15;3387:30;;860:15;;-1:-1:-1;;;;;255:12722:4;;3496:184;;-1:-1:-1;;3698:34:4;860:15;;-1:-1:-1;;;;;;860:15:4;;;;;3742:40;860:15;;;3792:24;860:15;;;;;:::i;:::-;;;;;255:12722;3878:160;;860:15;3977;255:12722;3878:160;;860:15;2957:10;255:12722;3878:160;;860:15;3862:10;860:15;;;;;;;255:12722;860:15;;3862:10;860:15;3862:10;860:15;;;;;;3862:10;860:15;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;255:12722;4071:181;;860:15;;;255:12722;4071:181;;3977:15;860;;255:12722;4071:181;;2957:10;;860:15;;4050;860;;;;;;;;255:12722;860:15;;4050;860;4050;860;;;;;;4050;860;;;;;;;;;;;;;;;-1:-1:-1;;;;;;860:15:4;;;-1:-1:-1;;;;;255:12722:4;;;860:15;;;;;;;;;;;;;255:12722;;;860:15;;;;;;;;;;;;;;;;;;;;;;;255:12722;;860:15;;;;;;;;;:::i;:::-;;-1:-1:-1;860:15:4;;255:12722;4287:159;;860:15;3977;255:12722;4287:159;;860:15;2957:10;255:12722;4287:159;;860:15;4264:17;860:15;;;;;;;;255:12722;860:15;;4264:17;860:15;-1:-1:-1;860:15:4;4264:17;860:15;;;;;;4264:17;860:15;;;;;-1:-1:-1;;860:15:4;;;;;:::i;:::-;2957:10;-1:-1:-1;860:15:4;4501:18;255:12722;860:15;255:12722;-1:-1:-1;860:15:4;255:12722;;;;;;;;;;;;860:15;;2957:10;;4553:54;255:12722;2957:10;4553:54;;255:12722;;;;;;;;;860:15;-1:-1:-1;;;860:15:4;;;;;;255:12722;860:15;;255:12722;;;-1:-1:-1;255:12722:4;;;;;-1:-1:-1;255:12722:4;860:15;-1:-1:-1;;;860:15:4;;;;;;255:12722;860:15;;-1:-1:-1;;;255:12722:4;;;;;;;;860:15;-1:-1:-1;;;255:12722:4;;;;;;;;3496:184;3546:49;860:15;;-1:-1:-1;;;;;;860:15:4;;;;;255:12722;;3653:15;860;;3614:55;;255:12722;;3614:55;3496:184;;;860:15;255:12722;;-1:-1:-1;;;860:15:4;;255:12722;860:15;;;;;;;;255:12722;860:15;255:12722;;;860:15;-1:-1:-1;;;860:15:4;;;;;;;722:2;255:12722;;-1:-1:-1;;;722:2:4;;255:12722;722:2;;;;;;;;255:12722;722:2;255:12722;;;722:2;-1:-1:-1;;;722:2:4;;;;;;;;255:12722;;-1:-1:-1;;;722:2:4;;255:12722;722:2;;;;;;;;255:12722;722:2;255:12722;;;722:2;-1:-1:-1;;;722:2:4;;;;;;;3084:82;3127:39;722:2;3127:39;;;3084:82;;255:12722;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;1269:95:0;-1:-1:-1;;;1322:31:0;;;255:12722:4;;;;1322:31:0;;255:12722:4;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;255:12722:4;;;;;;:::o;860:15::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;860:15:4;-1:-1:-1;;;;;255:12722:4;;;;860:15;;;;;;:::o;:::-;255:12722;;;860:15;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 5279,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_struct_FeeChange": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_struct_TreasuryChange": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256_uint256_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_struct_struct_TreasuryChange": {
                  "entryPoint": 5953,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_TreasuryChange_dyn": {
                  "entryPoint": 6056,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_push_from_struct_FeeChange_to_array_struct_FeeChange_storage_dyn_ptr": {
                  "entryPoint": 5763,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "array_push_from_struct_HostingFeeChange_to_array_struct_HostingFeeChange_storage_dyn_ptr": {
                  "entryPoint": 6139,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 5635,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_18471": {
                  "entryPoint": 5585,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 6176,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_reference_type_struct_FeeChange": {
                  "entryPoint": 6080,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_reference_type_struct_TreasuryChange": {
                  "entryPoint": 5990,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_6aa0": {
                  "entryPoint": 5449,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_6d20": {
                  "entryPoint": 5877,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c5b9": {
                  "entryPoint": 5525,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_dc1b": {
                  "entryPoint": 5808,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_struct_FeeChange__dyn": {
                  "entryPoint": 5421,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_FeeChange__dyn_18470": {
                  "entryPoint": 5306,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_FeeChange__dyn_18475": {
                  "entryPoint": 5359,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_FeeChange__dyn_18486": {
                  "entryPoint": 5390,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_struct_FeeChange_to_struct_FeeChange": {
                  "entryPoint": 5669,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b6000803560e01c806302e88899146113cf5780630905f560146113ac57806309705de81461075d5780630cbab4f7146113755780630d35a1671461134d57806311ce02671461132457806312e8e2c31461127557806318b4f23b146111c65780633998a681146111aa5780633f4ba83a1461111757806342f6487a14610b135780634863687e14611052578063492adaa814610f5c5780634c17b53014610ed35780635071f27b14610e5057806354d7494114610e345780635707ed4514610d3f5780635a2f406f14610c4f5780635c975abb14610c2a5780635e1e100414610b3c57806361d027b3146105e2578063633423be14610b135780636605bfda146109475780636f04d9941461092b578063715018a6146108d157806371908a03146108ac5780637a9b93c6146108795780638456cb59146107e15780638c639a85146107c35780638da5cb5b1461079c578063a10eb3541461075d578063a380b86b146106f7578063bb8f0b65146106d8578063bbeecdf014610669578063c116d9361461060b578063c5f956af146105e2578063d2643f1d1461050f578063d4ab4b401461041a578063e53377eb146103b0578063ebe7fdaa14610392578063edfbf4f1146102a5578063f2fde38b1461021f5763f851a440146101f657600080fd5b3461021c578060031936011261021c57546040516001600160a01b039091168152602090f35b80fd5b503461021c57602036600319011261021c5761023961149f565b610241611820565b6001600160a01b031680156102915781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b503461021c57602036600319011261021c576004356102c2611820565b6102d160ff6007541615611549565b6305f5e100811161034257600654906102ec82821415611595565b806006556103196040516102ff816115d1565b8381528260208201524260408201523360608201526117fb565b33917feb710718efc8ce303613ea1c9fb97a21bd1154a827cdb5ed5607eadd10e8cf968480a480f35b60405162461bcd60e51b815260206004820152602260248201527f466565206d757374206265206265747765656e203020616e6420313030205553604482015261111560f21b6064820152608490fd5b503461021c578060031936011261021c576020600654604051908152f35b503461021c57602036600319011261021c57600435600b54811015610416576103d89061150e565b50805460018201546002830154600390930154604080519384526020840192909252908201929092526001600160a01b039091166060820152608090f35b5080fd5b503461021c578060031936011261021c57600b54610437816117a8565b6104446040519182611603565b818152600b83526020810191837f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9845b8383106104f157868587604051928392602084019060208552518091526040840192915b8181106104a6575050500390f35b9193509160206080826104e360019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b019401910191849392610498565b60046020600192610501856117c0565b815201920192019190610474565b503461021c578060031936011261021c57610528611741565b50600b5490811561059d57600019820191821161058957608061055361054d8461150e565b506117c0565b61058760405180926060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565bf35b634e487b7160e01b81526011600452602490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4e6f20686f7374696e6720666565206368616e676573207265636f72646564006044820152606490fd5b503461021c578060031936011261021c576003546040516001600160a01b039091168152602090f35b503461021c578060031936011261021c5760e0600954600a54600b5460ff60075416600554906006549260018060a01b0360035416946040519687526020870152604086015215156060850152608084015260a083015260c0820152f35b503461021c57602036600319011261021c57600435338252600860205260ff60408320541680156106c5575b61069e906116b0565b6106ae6305f5e1008211156116f5565b60065490806006556103196040516102ff816115d1565b5081546001600160a01b03163314610695565b503461021c578060031936011261021c5760206040516305f5e1008152f35b503461021c57602036600319011261021c5760043590600a5482101561021c576080610722836114ef565b50805460018201546002830154600390930154604080516001600160a01b039485168152928416602084015282019390935291166060820152f35b503461021c57602036600319011261021c5760209060ff906040906001600160a01b0361078861149f565b168152600884522054166040519015158152f35b503461021c578060031936011261021c57546040516001600160a01b039091168152602090f35b503461021c578060031936011261021c576020600554604051908152f35b503461021c578060031936011261021c576107fa611820565b805460ff8160a01c1661086a5760ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1337ff9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f01402908280a280f35b63d93c066560e01b8252600482fd5b503461021c578060031936011261021c576005549060648202918083046064149015171561058957602082604051908152f35b503461021c578060031936011261021c57604060055460065482519182526020820152f35b503461021c578060031936011261021c576108ea611820565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461021c578060031936011261021c57602060405160018152f35b503461021c57602036600319011261021c5761096161149f565b610969611820565b61097860ff6007541615611549565b6001600160a01b03168015610ace576003546001600160a01b0381169190828214610a94576001600160a01b03191681176003556040516109b8816115d1565b82815260208101828152604082014281526060830191338352600a54600160401b811015610a80578060016109f09201600a556114ef565b949094610a6c575184546001600160a01b03199081166001600160a01b03928316178655915160018601805484169183169190911790559151600285015591516003939093018054909216921691909117905533917f23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa138480a480f35b634e487b7160e01b88526004889052602488fd5b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b8152602060048201526012602482015271151c99585cdd5c9e481d5b98da185b99d95960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b503461021c578060031936011261021c576004546040516001600160a01b039091168152602090f35b503461021c57602036600319011261021c57610b5661149f565b610b5e611820565b610b6d60ff6007541615611549565b6001600160a01b03168015610be5576004546001600160a01b0381168214610ba0576001600160a01b0319161760045580f35b60405162461bcd60e51b815260206004820152601960248201527f5061796d656e74206164647265737320756e6368616e676564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796d656e7420616464726573730000000000000000006044820152606490fd5b503461021c578060031936011261021c5760ff6020915460a01c166040519015158152f35b503461021c57602036600319011261021c57338152600860205260ff6040822054168015610d2c575b610c81906116b0565b6002546001600160a01b03168015610ce7578082913b15610ce457818091602460405180958193635a2f406f60e01b835260043560048401525af18015610cd757610cc95780f35b610cd291611603565b388180f35b50604051903d90823e3d90fd5b50fd5b60405162461bcd60e51b815260206004820152601760248201527f53746f72616765206e6f7420696e697469616c697a65640000000000000000006044820152606490fd5b5080546001600160a01b03163314610c78565b503461021c578060031936011261021c57600954610d5c816117a8565b610d696040519182611603565b818152600983526020810191837f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af845b838310610e1657868587604051928392602084019060208552518091526040840192915b818110610dcb575050500390f35b919350916020608082610e0860019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b019401910191849392610dbd565b60046020600192610e26856117c0565b815201920192019190610d99565b503461021c578060031936011261021c57602090604051908152f35b503461021c578060031936011261021c57610e69611741565b50600954908115610e8e57600019820191821161058957608061055361054d846114ba565b60405162461bcd60e51b815260206004820152601760248201527f4e6f20666565206368616e676573207265636f726465640000000000000000006044820152606490fd5b503461021c578060031936011261021c57338152600860205260ff6040822054168015610f49575b610f04906116b0565b60075460ff8082161516809160ff19161760075560405190151581527fc35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa4060203392a280f35b5080546001600160a01b03163314610efb565b503461021c578060031936011261021c57600a54610f79816117a8565b610f866040519182611603565b818152600a83526020810191837fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8845b83831061103457868587604051928392602084019060208552518091526040840192915b818110610fe8575050500390f35b825180516001600160a01b039081168652602080830151821681880152604080840151908801526060928301519091169186019190915286955060809094019390920191600101610fda565b6004602060019261104485611766565b815201920192019190610fb6565b503461021c578060031936011261021c5761106b611741565b50600a549081156110d2576000198201918211610589576080611096611090846114ef565b50611766565b6040805182516001600160a01b039081168252602080850151821690830152838301519282019290925260609283015190911691810191909152f35b60405162461bcd60e51b815260206004820152601c60248201527f4e6f207472656173757279206368616e676573207265636f72646564000000006044820152606490fd5b503461021c578060031936011261021c57611130611820565b805460ff8160a01c161561119b5760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1337fcc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c6348280a280f35b638dfc202b60e01b8252600482fd5b503461021c578060031936011261021c57602060405160148152f35b503461021c57602036600319011261021c57600435338252600860205260ff6040832054168015611262575b6111fb906116b0565b61120860148211156116f5565b600554908060055561123960405161121f816115d1565b838152826020820152426040820152336060820152611683565b33917f9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb998480a480f35b5081546001600160a01b031633146111f2565b503461021c57602036600319011261021c57600435611292611820565b6112a160ff6007541615611549565b600181101580611319575b156112d457600554906112c182821415611595565b8060055561123960405161121f816115d1565b60405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265206265747765656e20312520616e642032302500006044820152606490fd5b5060148111156112ac565b503461021c578060031936011261021c576002546040516001600160a01b039091168152602090f35b503461021c57602036600319011261021c57600435600954811015610416576103d8906114ba565b503461021c57602036600319011261021c576005546004358181029291811591840414171561058957602082606460405191048152f35b503461021c578060031936011261021c57602060ff600754166040519015158152f35b503461021c57604036600319011261021c576113e961149f565b6024359081151580920361149b576113ff611820565b6001600160a01b031680156114565780835260086020526040832060ff1981541660ff84161790556040519182527f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce60203393a380f35b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206f70657261746f72206164647265737300000000000000006044820152606490fd5b8280fd5b600435906001600160a01b03821682036114b557565b600080fd5b6009548110156114d957600960005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b600a548110156114d957600a60005260206000209060021b0190600090565b600b548110156114d957600b60005260206000209060021b0190600090565b80548210156114d95760005260206000209060021b0190600090565b1561155057565b60405162461bcd60e51b815260206004820152601860248201527f53797374656d20696e20656d657267656e6379206d6f646500000000000000006044820152606490fd5b1561159c57565b60405162461bcd60e51b815260206004820152600d60248201526c119959481d5b98da185b99d959609a1b6044820152606490fd5b6080810190811067ffffffffffffffff8211176115ed57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176115ed57604052565b919061166d578051825560208101516001830155604081015160028301556060015160039190910180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052600060045260246000fd5b60095490600160401b8210156115ed576116a88260016116ae9401600955600961152d565b90611625565b565b156116b757565b60405162461bcd60e51b81526020600482015260166024820152752737ba1032b6b2b933b2b731bc9037b832b930ba37b960511b6044820152606490fd5b156116fc57565b60405162461bcd60e51b815260206004820152601960248201527f4665652063616e6e6f7420657863656564206d6178696d756d000000000000006044820152606490fd5b6040519061174e826115d1565b60006060838281528260208201528260408201520152565b90604051611773816115d1565b82546001600160a01b039081168252600184015481166020830152600284015460408301526003909301549092166060830152565b67ffffffffffffffff81116115ed5760051b60200190565b906040516117cd816115d1565b8254815260018301546020820152600283015460408201526003909201546001600160a01b03166060830152565b600b5490600160401b8210156115ed576116a88260016116ae9401600b55600b61152d565b6000546001600160a01b0316330361183457565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212202ec1dbb426e6f48326e8ddc06496e0a9ba734c4ba5f8400d0f3ffa515578a70064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E88899 EQ PUSH2 0x13CF JUMPI DUP1 PUSH4 0x905F560 EQ PUSH2 0x13AC JUMPI DUP1 PUSH4 0x9705DE8 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0xCBAB4F7 EQ PUSH2 0x1375 JUMPI DUP1 PUSH4 0xD35A167 EQ PUSH2 0x134D JUMPI DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x1324 JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0x1275 JUMPI DUP1 PUSH4 0x18B4F23B EQ PUSH2 0x11C6 JUMPI DUP1 PUSH4 0x3998A681 EQ PUSH2 0x11AA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1117 JUMPI DUP1 PUSH4 0x42F6487A EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0x4863687E EQ PUSH2 0x1052 JUMPI DUP1 PUSH4 0x492ADAA8 EQ PUSH2 0xF5C JUMPI DUP1 PUSH4 0x4C17B530 EQ PUSH2 0xED3 JUMPI DUP1 PUSH4 0x5071F27B EQ PUSH2 0xE50 JUMPI DUP1 PUSH4 0x54D74941 EQ PUSH2 0xE34 JUMPI DUP1 PUSH4 0x5707ED45 EQ PUSH2 0xD3F JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0xC4F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC2A JUMPI DUP1 PUSH4 0x5E1E1004 EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0x633423BE EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x947 JUMPI DUP1 PUSH4 0x6F04D994 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8D1 JUMPI DUP1 PUSH4 0x71908A03 EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0x7A9B93C6 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x7E1 JUMPI DUP1 PUSH4 0x8C639A85 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0xA10EB354 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0xA380B86B EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xBB8F0B65 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0xBBEECDF0 EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xC116D936 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xD2643F1D EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xD4AB4B40 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE53377EB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xEBE7FDAA EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xEDFBF4F1 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21F JUMPI PUSH4 0xF851A440 EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x239 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x241 PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x291 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2C2 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x2D1 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 GT PUSH2 0x342 JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH2 0x2EC DUP3 DUP3 EQ ISZERO PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x6 SSTORE PUSH2 0x319 PUSH1 0x40 MLOAD PUSH2 0x2FF DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x17FB JUMP JUMPDEST CALLER SWAP2 PUSH32 0xEB710718EFC8CE303613EA1C9FB97A21BD1154A827CDB5ED5607EADD10E8CF96 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E203020616E6420313030205553 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1115 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH2 0x3D8 SWAP1 PUSH2 0x150E JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xB SLOAD PUSH2 0x437 DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x444 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xB DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x4F1 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x4A6 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0x4E3 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x501 DUP6 PUSH2 0x17C0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x474 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x528 PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0xB SLOAD SWAP1 DUP2 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x553 PUSH2 0x54D DUP5 PUSH2 0x150E JUMP JUMPDEST POP PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x587 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20686F7374696E6720666565206368616E676573207265636F7264656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xE0 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x5 SLOAD SWAP1 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x6C5 JUMPI JUMPDEST PUSH2 0x69E SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x6AE PUSH4 0x5F5E100 DUP3 GT ISZERO PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 DUP1 PUSH1 0x6 SSTORE PUSH2 0x319 PUSH1 0x40 MLOAD PUSH2 0x2FF DUP2 PUSH2 0x15D1 JUMP JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x695 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xA SLOAD DUP3 LT ISZERO PUSH2 0x21C JUMPI PUSH1 0x80 PUSH2 0x722 DUP4 PUSH2 0x14EF JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x788 PUSH2 0x149F JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x7FA PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH2 0x86A JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xF9C91E483CE8BC4CC31645E7CC0F01A3371813E76469A71104841507F0140290 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x589 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x40 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x8EA PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x961 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x969 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x978 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xACE JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 DUP3 EQ PUSH2 0xA94 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x9B8 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x40 DUP3 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xA80 JUMPI DUP1 PUSH1 0x1 PUSH2 0x9F0 SWAP3 ADD PUSH1 0xA SSTORE PUSH2 0x14EF JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0xA6C JUMPI MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x23C12D5579081C5F1077C04A6B1C114D0F3DE239E81A436836D30ECB099FFA13 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 SWAP1 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C99585CDD5C9E481D5B98DA185B99D959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0xB56 PUSH2 0x149F JUMP JUMPDEST PUSH2 0xB5E PUSH2 0x1820 JUMP JUMPDEST PUSH2 0xB6D PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 EQ PUSH2 0xBA0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74206164647265737320756E6368616E67656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xD2C JUMPI JUMPDEST PUSH2 0xC81 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xCE7 JUMPI DUP1 DUP3 SWAP2 EXTCODESIZE ISZERO PUSH2 0xCE4 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0x5A2F406F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCC9 JUMPI DUP1 RETURN JUMPDEST PUSH2 0xCD2 SWAP2 PUSH2 0x1603 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F72616765206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC78 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x9 SLOAD PUSH2 0xD5C DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0xD69 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0xE16 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xDCB JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0xE08 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0xE26 DUP6 PUSH2 0x17C0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0xE69 PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x553 PUSH2 0x54D DUP5 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20666565206368616E676573207265636F72646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xF49 JUMPI JUMPDEST PUSH2 0xF04 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 SWAP2 PUSH1 0xFF NOT AND OR PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0xC35ED978E97C366B3A5F9375508BCFBCA850FCA66BF334B9477118918E6EAA40 PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEFB JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xA SLOAD PUSH2 0xF79 DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0xF86 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x1034 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xFE8 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 SWAP6 POP PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x1044 DUP6 PUSH2 0x1766 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x106B PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 DUP2 ISZERO PUSH2 0x10D2 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x1096 PUSH2 0x1090 DUP5 PUSH2 0x14EF JUMP JUMPDEST POP PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE DUP4 DUP4 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207472656173757279206368616E676573207265636F7264656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x1130 PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x119B JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xCC2B689B01792CCC45F7D02099E9EF3FFD7058E45803395690C61EFDD0F0C634 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1262 JUMPI JUMPDEST PUSH2 0x11FB SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x1208 PUSH1 0x14 DUP3 GT ISZERO PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 DUP1 PUSH1 0x5 SSTORE PUSH2 0x1239 PUSH1 0x40 MLOAD PUSH2 0x121F DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1683 JUMP JUMPDEST CALLER SWAP2 PUSH32 0x9E74D2175D1604CA094D3C60971771FB54AA1A0ADBADCEDCB69C48CFBD4FEB99 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1292 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x12A1 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 PUSH2 0x1319 JUMPI JUMPDEST ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH2 0x12C1 DUP3 DUP3 EQ ISZERO PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x5 SSTORE PUSH2 0x1239 PUSH1 0x40 MLOAD PUSH2 0x121F DUP2 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20312520616E64203230250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x12AC JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH2 0x3D8 SWAP1 PUSH2 0x14BA JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 CALLDATALOAD DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x589 JUMPI PUSH1 0x20 DUP3 PUSH1 0x64 PUSH1 0x40 MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x13E9 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x149B JUMPI PUSH2 0x13FF PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1456 JUMPI DUP1 DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x14B5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1550 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53797374656D20696E20656D657267656E6379206D6F64650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x159C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x119959481D5B98DA185B99D959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x166D JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x16A8 DUP3 PUSH1 0x1 PUSH2 0x16AE SWAP5 ADD PUSH1 0x9 SSTORE PUSH1 0x9 PUSH2 0x152D JUMP JUMPDEST SWAP1 PUSH2 0x1625 JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x16B7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1032B6B2B933B2B731BC9037B832B930BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x16FC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616E6E6F7420657863656564206D6178696D756D00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x174E DUP3 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1773 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15ED JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x17CD DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x16A8 DUP3 PUSH1 0x1 PUSH2 0x16AE SWAP5 ADD PUSH1 0xB SSTORE PUSH1 0xB PUSH2 0x152D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1834 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xC1 0xDB 0xB4 0x26 0xE6 DELEGATECALL DUP4 0x26 0xE8 0xDD 0xC0 PUSH5 0x96E0A9BA73 0x4C 0x4B 0xA5 0xF8 BLOCKHASH 0xD 0xF EXTCODEHASH STATICCALL MLOAD SSTORE PUSH25 0xA70064736F6C634300081C0033000000000000000000000000 ",
              "sourceMap": "255:12722:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;255:12722:4;2627:22:0;;2623:91;;255:12722:4;;-1:-1:-1;;;;;;255:12722:4;;;;;;-1:-1:-1;;;;;255:12722:4;3052:40:0;255:12722:4;;3052:40:0;255:12722:4;;2623:91:0;-1:-1:-1;;;2672:31:0;;255:12722:4;;;;;2672:31:0;;255:12722:4;;;;;;;-1:-1:-1;;255:12722:4;;;;;;1500:62:0;;:::i;:::-;2689:51:4;255:12722;2698:13;255:12722;;2697:14;2689:51;:::i;:::-;860:15;5468:26;;255:12722;;5583:10;255:12722;5572:21;5564:47;5572:21;;;;5564:47;:::i;:::-;255:12722;5583:10;255:12722;5743:184;255:12722;;;;;:::i;:::-;;;;5766:160;255:12722;5766:160;;255:12722;5865:15;255:12722;5766:160;;255:12722;5905:10;5766:160;;;255:12722;5743:184;:::i;:::-;5905:10;5951:46;;;;;255:12722;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;579:25;255:12722;;;;;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;;;1739:43;255:12722;1739:43;;;;;;;;:::i;:::-;-1:-1:-1;255:12722:4;;;1739:43;;255:12722;1739:43;;;255:12722;1739:43;;;;255:12722;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;1739:43;;255:12722;;;;;;;;;;;;;;;9955:17;255:12722;;;;:::i;:::-;;;;;;;:::i;:::-;;;;9955:17;255:12722;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12000:17;255:12722;12000:28;;;255:12722;;-1:-1:-1;;255:12722:4;;;;;;;;;12081:47;;;:::i;:::-;255:12722;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;362:30;255:12722;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;10808:10;255:12722;10858:15;255:12722;10915:17;255:12722;;10967:13;255:12722;;11011:18;255:12722;;11059:10;255:12722;;;;;;;11097:15;255:12722;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;;;2562:10;255:12722;;2543:18;255:12722;;;;;;;;2543:55;;;;255:12722;2535:90;;;:::i;:::-;8885:64;860:15;8893:26;;;8885:64;:::i;:::-;8985:10;255:12722;;;8985:10;255:12722;9036:184;255:12722;;;;;:::i;2543:55::-;-1:-1:-1;255:12722:4;;-1:-1:-1;;;;;255:12722:4;2562:10;2577:21;2543:55;;255:12722;;;;;;;;;;;;;;;;860:15;255:12722;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;;;;1523:39;255:12722;1523:39;;;;;255:12722;1523:39;;;:::i;:::-;-1:-1:-1;255:12722:4;;;1523:39;;255:12722;1523:39;;;255:12722;1523:39;;;;255:12722;;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;;;;;;;-1:-1:-1;;;;;255:12722:4;;:::i;:::-;;;;11273:18;255:12722;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;505:33;255:12722;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:12722:4;;;;;;;1939:61:2;;-1:-1:-1;;;;255:12722:4;-1:-1:-1;;;255:12722:4;;;;;735:10:1;255:12722:4;;2427:20:2;;255:12722:4;;2427:20:2;735:10:1;7084:23:4;;;;255:12722;;1939:61:2;-1:-1:-1;;;1974:15:2;;255:12722:4;1974:15:2;;255:12722:4;;;;;;;;;;;;;10151:18;255:12722;;10172:3;255:12722;;;;;;10172:3;255:12722;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12352:18;255:12722;12372:10;255:12722;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:12722:4;;-1:-1:-1;;;;;;255:12722:4;;;;;;-1:-1:-1;;;;;255:12722:4;3052:40:0;255:12722:4;;3052:40:0;255:12722:4;;;;;;;;;;;;;;;;;;792:1;255:12722;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;2689:51:4;255:12722;2698:13;255:12722;;2697:14;2689:51;:::i;:::-;-1:-1:-1;;;;;255:12722:4;6123:33;;255:12722;;6226:15;255:12722;-1:-1:-1;;;;;255:12722:4;;;;6203:38;;;255:12722;;-1:-1:-1;;;;;;255:12722:4;;;6226:15;255:12722;;;;;;:::i;:::-;;;;;6425:185;;255:12722;;;;6425:185;;6549:15;255:12722;;6425:185;;;6589:10;;255:12722;;6404:15;255:12722;-1:-1:-1;;;255:12722:4;;;;;;;;;;6404:15;255:12722;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;255:12722:4;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6226:15;255:12722;;;;;;;;;;;;;;;;;6589:10;;6627:61;;;;255:12722;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;2689:51:4;255:12722;2698:13;255:12722;;2697:14;2689:51;:::i;:::-;-1:-1:-1;;;;;255:12722:4;6812:32;;255:12722;;;;-1:-1:-1;;;;;255:12722:4;;6890:36;;255:12722;;-1:-1:-1;;;;;;255:12722:4;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;2562:10;255:12722;;2543:18;255:12722;;;;;;;;2543:55;;;;255:12722;2535:90;;;:::i;:::-;7969:15;255:12722;-1:-1:-1;;;;;255:12722:4;7961:38;;255:12722;;8037:53;;;;;;;255:12722;;;8037:53;255:12722;;;;;;;;;8037:53;;255:12722;;;8037:53;;255:12722;8037:53;;;;;;;;255:12722;;8037:53;;;;:::i;:::-;;;255:12722;;8037:53;255:12722;;;;;;;;;;;8037:53;255:12722;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;2543:55;-1:-1:-1;255:12722:4;;-1:-1:-1;;;;;255:12722:4;2562:10;2577:21;2543:55;;255:12722;;;;;;;;;;;;;9619:10;255:12722;;;;:::i;:::-;;;;;;;:::i;:::-;;;;9619:10;255:12722;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11449:10;255:12722;11449:21;;;255:12722;;-1:-1:-1;;255:12722:4;;;;;;;;;11515:33;;;:::i;255:12722::-;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2562:10;255:12722;;2543:18;255:12722;;;;;;;;2543:55;;;;255:12722;2535:90;;;:::i;:::-;7382:13;255:12722;;;;;7381:14;255:12722;;;;;;;7382:13;255:12722;;;;;;;;7410:47;255:12722;2562:10;7410:47;;255:12722;;2543:55;-1:-1:-1;255:12722:4;;-1:-1:-1;;;;;255:12722:4;2562:10;2577:21;2543:55;;255:12722;;;;;;;;;;;;;9781:15;255:12722;;;;:::i;:::-;;;;;;;:::i;:::-;;;;9781:15;255:12722;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;255:12722:4;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11711:15;255:12722;11711:26;;;255:12722;;-1:-1:-1;;255:12722:4;;;;;;;;;11787:43;;;:::i;:::-;255:12722;;:::i;:::-;;;;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:12722:4;;;;;;;2140:9:2;2136:62;;-1:-1:-1;;;;255:12722:4;;;;;735:10:1;255:12722:4;;2674:22:2;;255:12722:4;;2674:22:2;735:10:1;7193:25:4;;;;255:12722;;2136:62:2;-1:-1:-1;;;2172:15:2;;255:12722:4;2172:15:2;;255:12722:4;;;;;;;;;;;;;;;;722:2;255:12722;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;;;2562:10;255:12722;;2543:18;255:12722;;;;;;;;2543:55;;;;255:12722;2535:90;;;:::i;:::-;8273:72;722:2;8281:34;;;8273:72;:::i;:::-;8381:18;255:12722;;;8381:18;255:12722;8455:177;255:12722;;;;;:::i;:::-;;;;8471:160;255:12722;8471:160;;255:12722;8570:15;255:12722;8471:160;;255:12722;2562:10;8471:160;;;255:12722;8455:177;:::i;:::-;2562:10;8648:54;;;;;255:12722;;2543:55;-1:-1:-1;255:12722:4;;-1:-1:-1;;;;;255:12722:4;2562:10;2577:21;2543:55;;255:12722;;;;;;;-1:-1:-1;;255:12722:4;;;;;;1500:62:0;;:::i;:::-;2689:51:4;255:12722;2698:13;255:12722;;2697:14;2689:51;:::i;:::-;255:12722;4737:34;;;:72;;;255:12722;;;;4902:18;255:12722;4884:36;4876:62;4884:36;;;;4876:62;:::i;:::-;255:12722;4902:18;255:12722;5069:177;255:12722;;;;;:::i;:::-;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;4737:72;4775:34;722:2;4775:34;;;4737:72;;255:12722;;;;;;;;;;;;;320:36;255:12722;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;;;1301:29;255:12722;1301:29;;;;;;;;:::i;255:12722::-;;;;;;;-1:-1:-1;;255:12722:4;;;;10392:18;255:12722;;;;;;;;;;;;;;;;;;;;10414:3;255:12722;;;;;;;;;;;;;;;;;;;;;;1033:33;255:12722;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12722:4;;;;;;:::i;:::-;;;;;;;;;;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;255:12722:4;7618:22;;255:12722;;;;;7679:18;255:12722;;;;;;;;;;;;;;;;;;;;;7731:54;255:12722;7774:10;7731:54;;255:12722;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12722:4;;;;;;:::o;:::-;;;;;1301:29;255:12722;;;;;;1301:29;-1:-1:-1;255:12722:4;;-1:-1:-1;255:12722:4;;;;;;-1:-1:-1;255:12722:4;:::o;:::-;;;;;;;;;;;;;11711:15;255:12722;;;;;;11711:15;-1:-1:-1;255:12722:4;;-1:-1:-1;255:12722:4;;;;;;-1:-1:-1;255:12722:4;:::o;:::-;12000:17;255:12722;;;;;;12000:17;-1:-1:-1;255:12722:4;;-1:-1:-1;255:12722:4;;;;;;-1:-1:-1;255:12722:4;:::o;:::-;;;;;;;;-1:-1:-1;255:12722:4;;-1:-1:-1;255:12722:4;;;;;;-1:-1:-1;255:12722:4;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;255:12722:4;;;;;-1:-1:-1;255:12722:4;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;255:12722:4;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;5069:10;255:12722;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;5069:10;255:12722;5069:10;255:12722;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;255:12722:4;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;255:12722:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12722:4;;;;;:::o;:::-;9036:17;255:12722;;-1:-1:-1;;;255:12722:4;;;;;;;;;;;9036:17;255:12722;9036:17;255:12722;:::i;1796:162:0:-;1710:6;255:12722:4;-1:-1:-1;;;;;255:12722:4;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:1;1901:40:0;255:12722:4;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "MAX_HOSTING_FEE()": "bb8f0b65",
              "MAX_PLATFORM_FEE()": "3998a681",
              "MIN_HOSTING_FEE()": "54d74941",
              "MIN_PLATFORM_FEE()": "6f04d994",
              "admin()": "f851a440",
              "calculatePlatformFee(uint256)": "0cbab4f7",
              "emergencyDeactivateNetwork(uint256)": "5a2f406f",
              "emergencyMode()": "0905f560",
              "emergencyOperators(address)": "09705de8",
              "emergencySetHostingFee(uint256)": "bbeecdf0",
              "emergencySetPlatformFee(uint256)": "18b4f23b",
              "feeHistory(uint256)": "0d35a167",
              "getAdminStats()": "c116d936",
              "getCurrentFees()": "71908a03",
              "getFeeHistory()": "5707ed45",
              "getHostingFeeHistory()": "d4ab4b40",
              "getLatestFeeChange()": "5071f27b",
              "getLatestHostingFeeChange()": "d2643f1d",
              "getLatestTreasuryChange()": "4863687e",
              "getPlatformFeeBasisPoints()": "7a9b93c6",
              "getTreasuryHistory()": "492adaa8",
              "hostingFee()": "ebe7fdaa",
              "hostingFeeHistory(uint256)": "e53377eb",
              "isEmergencyOperator(address)": "a10eb354",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "payment()": "42f6487a",
              "paymentAddress()": "633423be",
              "platformFeePercent()": "8c639a85",
              "renounceOwnership()": "715018a6",
              "setEmergencyOperator(address,bool)": "02e88899",
              "setHostingFee(uint256)": "edfbf4f1",
              "setPaymentAddress(address)": "5e1e1004",
              "setPlatformFee(uint256)": "12e8e2c3",
              "setTreasuryAddress(address)": "6605bfda",
              "storageContract()": "11ce0267",
              "toggleEmergencyMode()": "4c17b530",
              "transferOwnership(address)": "f2fde38b",
              "treasury()": "61d027b3",
              "treasuryAddress()": "c5f956af",
              "treasuryHistory(uint256)": "a380b86b",
              "unpause()": "3f4ba83a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storageContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hostingFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"AdminPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"AdminUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"storageContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ContractsInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"EmergencyModeToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"}],\"name\":\"EmergencyOperatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"HostingFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_HOSTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PLATFORM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_HOSTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PLATFORM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculatePlatformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"emergencyOperators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"emergencySetHostingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"emergencySetPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalFeeChanges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTreasuryChanges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalHostingFeeChanges\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isEmergencyMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"currentPlatformFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentHostingFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currentTreasury\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"platformFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hostingFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.FeeChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHostingFeeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.HostingFeeChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestFeeChange\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.FeeChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestHostingFeeChange\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.HostingFeeChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTreasuryChange\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.TreasuryChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasuryHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.TreasuryChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hostingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hostingFeeHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isEmergencyOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setEmergencyOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setHostingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPaymentAddress\",\"type\":\"address\"}],\"name\":\"setPaymentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasuryAddress\",\"type\":\"address\"}],\"name\":\"setTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"contract ZaaNetStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleEmergencyMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"treasuryHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"Expose admin address for other contracts (interface compatibility)\"},\"calculatePlatformFee(uint256)\":{\"notice\":\"Calculate platform fee for a given amount\"},\"emergencyDeactivateNetwork(uint256)\":{\"notice\":\"Emergency function to deactivate a network\"},\"emergencySetHostingFee(uint256)\":{\"notice\":\"Emergency hosting fee adjustment (bypasses normal restrictions)\"},\"emergencySetPlatformFee(uint256)\":{\"notice\":\"Emergency fee adjustment (bypasses normal restrictions)\"},\"getAdminStats()\":{\"notice\":\"Get comprehensive admin statistics\"},\"getCurrentFees()\":{\"notice\":\"Get all current fees in one call (gas efficient)\"},\"getFeeHistory()\":{\"notice\":\"Get fee change history\"},\"getHostingFeeHistory()\":{\"notice\":\"Get hosting fee change history\"},\"getLatestFeeChange()\":{\"notice\":\"Get latest fee change details\"},\"getLatestHostingFeeChange()\":{\"notice\":\"Get latest hosting fee change details\"},\"getLatestTreasuryChange()\":{\"notice\":\"Get latest treasury change details\"},\"getPlatformFeeBasisPoints()\":{\"notice\":\"Get current fee in basis points (for more precise calculations)\"},\"getTreasuryHistory()\":{\"notice\":\"Get treasury change history\"},\"isEmergencyOperator(address)\":{\"notice\":\"Check if address is emergency operator\"},\"paused()\":{\"notice\":\"Check if contract is paused (interface compatibility)\"},\"payment()\":{\"notice\":\"Alternative name for payment address (interface compatibility)\"},\"setEmergencyOperator(address,bool)\":{\"notice\":\"Add or remove emergency operators\"},\"toggleEmergencyMode()\":{\"notice\":\"Toggle emergency mode (stops most operations)\"},\"treasury()\":{\"notice\":\"Alternative name for treasury address (interface compatibility)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetAdmin.sol\":\"ZaaNetAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetAdmin.sol\":{\"keccak256\":\"0xd3f6a682c55364dbd823d678bb3a8f960e49aced09cd97bbf8c64b1ca14a7c4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86a8c01ed9b0a84b459754c069d3f02d09d735e755a8ced5c7e61bf884784ef9\",\"dweb:/ipfs/QmZGxbWU8yiAA7QNEVj3G6YytNxsd5dABJBva79iCgFwmA\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x2d84ff4b1782d1249c2189338a7d42b8159309ed614634f99c9be89d32199f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c68e8b2790b20da4a12c69088bce500a269e0f9b3ac80e3cd58c9ef11001ec\",\"dweb:/ipfs/QmdDitFPsfDEEfpbWgkqYCgpdSHq7j7Dm8ic4JecMwcfzj\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetStorage.sol": {
        "ZaaNetStorage": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "AllowedCallerUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalEarned",
                  "type": "uint256"
                }
              ],
              "name": "HostEarningsUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                }
              ],
              "name": "NetworkStored",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "NetworkUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "paymentAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "SessionStored",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalEarned",
                  "type": "uint256"
                }
              ],
              "name": "ZaaNetEarningsUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowedCallers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "emergencyDeactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostNetworks",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "getNetwork",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "offset",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                }
              ],
              "name": "getNetworksPaginated",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "total",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getZaaNetEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "hostEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "hostNetworkIds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseHostEarnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseZaaNetEarnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "incrementNetworkId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networkExists",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "networkIdCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networks",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "sessionExists",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_caller",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setAllowedCaller",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_callers",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setAllowedCallers",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "net",
                  "type": "tuple"
                }
              ],
              "name": "setNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "zaanetEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234607e57331560685760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805560006004556114e190816100848239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c908163217c682d14610e965750806322a4808b14610e7857806329c718b5146107e05780634ce083be14610e7857806350c0d41c146109915780635290ffc6146109165780635a2f406f1461088b57806369009a131461081a5780636d65573f146107e0578063715018a61461078757806373f9a5d71461066c57806379f0dc57146105b25780637b334154146105735780637bae8f5e1461051a578063879ecf10146104e95780638bb0a17c146104565780638da5cb5b1461042d57806395ea5717146103c6578063d8b0e71614610337578063e1c7a8aa14610262578063ec13f2a114610231578063f2fde38b146101a85763fa9c81a41461011c57600080fd5b346101a35760403660031901126101a35761013b60243560043561134f565b9060405190604082016040835281518091526060830190602060608260051b8601019301916000905b828210610178578580868960208301520390f35b90919293602080610195600193605f198a82030186528851611061565b960192019201909291610164565b600080fd5b346101a35760203660031901126101a3576101c1610eb1565b6101c9611460565b6001600160a01b0316801561021b57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101a35760203660031901126101a3576004356000526008602052602060ff604060002054166040519015158152f35b346101a35760403660031901126101a35761027b610eb1565b6024359033600052600260205260ff604060002054168015610323575b6102a1906110bd565b6102a9611489565b6001600160a01b0316906102be82151561110e565b6102c98115156111c9565b8160005260066020526102e26040600020918254611215565b90558060005260066020527f61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be06020604060002054604051908152a260018055005b506000546001600160a01b03163314610298565b346101a35760403660031901126101a357610350610eb1565b7fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f602061037b610ec7565b92610384611460565b6001600160a01b031692610399841515611232565b83600052600282526103bb8160406000209060ff801983541691151516179055565b6040519015158152a2005b346101a35760203660031901126101a3576004356103e2611277565b508060005260086020526103fd60ff60406000205416611184565b600052600560205261042961041560406000206112ae565b604051918291602083526020830190611061565b0390f35b346101a35760003660031901126101a3576000546040516001600160a01b039091168152602090f35b346101a35760203660031901126101a35760043560005260056020526040600020805460018060a01b0360018301541691600281015461049860038301610f7c565b916104d360ff60048301541693600660058401549301549360405197889788526020880152604087015260e0606087015260e0860190611020565b921515608085015260a084015260c08301520390f35b346101a35760203660031901126101a3576004356000526009602052602060ff604060002054166040519015158152f35b346101a35760403660031901126101a357610533610eb1565b6001600160a01b03166000908152600760205260409020805460243591908210156101a35760209161056491610ed6565b90549060031b1c604051908152f35b346101a35760203660031901126101a3576001600160a01b03610594610eb1565b166000526002602052602060ff604060002054166040519015158152f35b346101a35760203660031901126101a3576001600160a01b036105d3610eb1565b16600052600760205260406000206040518060208354918281520190819360005260206000209060005b8181106106565750505081610613910382610f5a565b6040519182916020830190602084525180915260408301919060005b81811061063d575050500390f35b825184528594506020938401939092019160010161062f565b82548452602090930192600192830192016105fd565b346101a35760403660031901126101a35760043567ffffffffffffffff81116101a357366023820112156101a357806004013567ffffffffffffffff81116101a3576024820191602436918360051b0101116101a3576106ca610ec7565b6106d2611460565b8015159060005b8381106106e257005b60019061070b6001600160a01b036107036106fe84898b611222565b6110fa565b161515611232565b818060a01b0361071f6106fe83888a611222565b1660005260026020526107428360406000209060ff801983541691151516179055565b818060a01b036107566106fe83888a611222565b167fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f6020604051878152a2016106d9565b346101a35760003660031901126101a3576107a0611460565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101a35760203660031901126101a3576001600160a01b03610801610eb1565b1660005260066020526020604060002054604051908152f35b346101a35760203660031901126101a35761086e60043533600052600260205260ff604060002054168015610877575b610853906110bd565b61085b611489565b6108668115156111c9565b600454611215565b60045560018055005b506000546001600160a01b0316331461084a565b346101a35760203660031901126101a3576004356108a7611460565b8060005260086020526108c160ff60406000205416611184565b600081815260056020526040812060048101805460ff19169055426006820155600101546001600160a01b031691907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c9080a3005b346101a35760003660031901126101a35733600052600260205260ff60406000205416801561097d575b610949906110bd565b60035460001981146109675760016020910180600355604051908152f35b634e487b7160e01b600052601160045260246000fd5b506000546001600160a01b03163314610940565b346101a35760403660031901126101a35760243560043567ffffffffffffffff82116101a357816004019160e060031982360301126101a35733600052600260205260ff604060002054168015610e64575b6109ec906110bd565b8115610e2a576024810190610a136001600160a01b03610a0b846110fa565b16151561110e565b6044810135938415610de55760648201610a2d8183611151565b905015610da957846000526008602052608460ff604060002054161593610a5d610a56876110fa565b9385611151565b9290910135908115158092036101a3578515610d915742925b60405195610a8387610f3e565b3586526001600160a01b0390941660208601908152604086018a8152909467ffffffffffffffff8111610c7a5760405192610ac8601f8301601f191660200185610f5a565b81845236828201116101a357816000926020928387013784010152606086019182526080860192835260a086019384524260c0870190815260008a81526005602052604090209651875594516001870180546001600160a01b0319166001600160a01b0392909216919091179055516002860155518051600386019167ffffffffffffffff8211610c7a57610b5d8354610f04565b601f8111610d49575b50602090601f8311600114610cd9579180610bb79492600698979694600092610cce575b50508160011b916000199060031b1c19161790555b511515600486019060ff801983541691151516179055565b5160058401555191015515610c90576000828152600860205260409020805460ff191660011790556001600160a01b03610bf0826110fa565b16600052600760205260406000209081549068010000000000000000821015610c7a57610c46827f3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e946001602095018155610ed6565b815460001960039290921b91821b19169086901b1790556001600160a01b0390610c6f906110fa565b1693604051908152a3005b634e487b7160e01b600052604160045260246000fd5b9091506001600160a01b0390610ca5906110fa565b16907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c600080a3005b015190508d80610b8a565b90601f1983169184600052816000209260005b818110610d31575092600192859260069a999896610bb7989610610d18575b505050811b019055610b9f565b015160001960f88460031b161c191690558d8080610d0b565b92936020600181928786015181550195019301610cec565b836000526020600020601f840160051c81019160208510610d87575b601f0160051c01905b818110610d7b5750610b66565b60008155600101610d6e565b9091508190610d65565b87600052600560205260056040600020015492610a76565b60405162461bcd60e51b8152602060048201526014602482015273135bdb99dbd1185d185251081c995c5d5a5c995960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b995d1ddbdc9ac8125160721b6044820152606490fd5b506000546001600160a01b031633146109e3565b346101a35760003660031901126101a3576020600454604051908152f35b346101a35760003660031901126101a3576020906003548152f35b600435906001600160a01b03821682036101a357565b6024359081151582036101a357565b8054821015610eee5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610f34575b6020831014610f1e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f13565b60e0810190811067ffffffffffffffff821117610c7a57604052565b90601f8019910116810190811067ffffffffffffffff821117610c7a57604052565b9060405191826000825492610f9084610f04565b8084529360018116908115610ffe5750600114610fb7575b50610fb592500383610f5a565b565b90506000929192526020600020906000915b818310610fe2575050906020610fb59282010138610fa8565b6020919350806001915483858901015201910190918492610fc9565b905060209250610fb594915060ff191682840152151560051b82010138610fa8565b919082519283825260005b84811061104c575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161102b565b908151815260018060a01b0360208301511660208201526040820151604082015260c08061109e606085015160e0606086015260e0850190611020565b9360808101511515608085015260a081015160a0850152015191015290565b156110c457565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b356001600160a01b03811681036101a35790565b1561111557565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420686f7374206164647265737360601b6044820152606490fd5b903590601e19813603018212156101a3570180359067ffffffffffffffff82116101a3576020019181360383136101a357565b1561118b57565b60405162461bcd60e51b815260206004820152601660248201527513995d1ddbdc9ac8191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b156111d057565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b9190820180921161096757565b9190811015610eee5760051b0190565b1561123957565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642063616c6c6572206164647265737360501b6044820152606490fd5b6040519061128482610f3e565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b906040516112bb81610f3e565b8254815260018301546001600160a01b031660208201526002830154604082015291829060c0906006906112f160038201610f7c565b606085015260ff60048201541615156080850152600581015460a08501520154910152565b67ffffffffffffffff8111610c7a5760051b60200190565b9190820391821161096757565b8051821015610eee5760209160051b010190565b600354929183821015611424576113669082611215565b83811161141d575b611378828261132e565b9161138283611316565b926113906040519485610f5a565b80845261139f601f1991611316565b0160005b818110611406575050805b8281106113bc575050509190565b60018101908181116109675760019160005260056020526113ff60406000206113ee6113e8868561132e565b916112ae565b6113f8828961133b565b528661133b565b50016113ae565b602090611411611277565b828288010152016113a3565b508261136e565b50506040516000611436602083610f5a565b81526000805b8181106114495750509190565b602090611454611277565b8282860101520161143c565b6000546001600160a01b0316330361147457565b63118cdaa760e01b6000523360045260246000fd5b60026001541461149a576002600155565b633ee5aeb560e01b60005260046000fdfea2646970667358221220e0dccc0601c187e252de40a7942ded4529a09ba4e9e9b1ec97efa3889f8b374e64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x7E JUMPI CALLER ISZERO PUSH1 0x68 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH2 0x14E1 SWAP1 DUP2 PUSH2 0x84 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x217C682D EQ PUSH2 0xE96 JUMPI POP DUP1 PUSH4 0x22A4808B EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x29C718B5 EQ PUSH2 0x7E0 JUMPI DUP1 PUSH4 0x4CE083BE EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x50C0D41C EQ PUSH2 0x991 JUMPI DUP1 PUSH4 0x5290FFC6 EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0x88B JUMPI DUP1 PUSH4 0x69009A13 EQ PUSH2 0x81A JUMPI DUP1 PUSH4 0x6D65573F EQ PUSH2 0x7E0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0x73F9A5D7 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x7B334154 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x7BAE8F5E EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x879ECF10 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x8BB0A17C EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x95EA5717 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xD8B0E716 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xE1C7A8AA EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xEC13F2A1 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A8 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x13B PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x134F JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x178 JUMPI DUP6 DUP1 DUP7 DUP10 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x195 PUSH1 0x1 SWAP4 PUSH1 0x5F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1061 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x1C1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x27B PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x323 JUMPI JUMPDEST PUSH2 0x2A1 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2BE DUP3 ISZERO ISZERO PUSH2 0x110E JUMP JUMPDEST PUSH2 0x2C9 DUP2 ISZERO ISZERO PUSH2 0x11C9 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x2E2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1215 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH32 0x61A8B1A557E4D03803DB90D13FF76DB2C25FBA3ED24882CECDA8C8423B9B2BE0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x298 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x350 PUSH2 0xEB1 JUMP JUMPDEST PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH2 0x37B PUSH2 0xEC7 JUMP JUMPDEST SWAP3 PUSH2 0x384 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0x399 DUP5 ISZERO ISZERO PUSH2 0x1232 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x3BB DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3E2 PUSH2 0x1277 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x3FD PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x429 PUSH2 0x415 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1061 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x498 PUSH1 0x3 DUP4 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 PUSH2 0x4D3 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x6 PUSH1 0x5 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x1020 JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x533 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x564 SWAP2 PUSH2 0xED6 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x594 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5D3 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x656 JUMPI POP POP POP DUP2 PUSH2 0x613 SWAP2 SUB DUP3 PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x63D JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x62F JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5FD JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A3 JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1A3 JUMPI PUSH2 0x6CA PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0x1460 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6E2 JUMPI STOP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x70B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x703 PUSH2 0x6FE DUP5 DUP10 DUP12 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x10FA JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1232 JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x71F PUSH2 0x6FE DUP4 DUP9 DUP11 PUSH2 0x1222 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x742 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x756 PUSH2 0x6FE DUP4 DUP9 DUP11 PUSH2 0x1222 JUMP JUMPDEST AND PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE LOG2 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x7A0 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x801 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x86E PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x877 JUMPI JUMPDEST PUSH2 0x853 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x85B PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x866 DUP2 ISZERO ISZERO PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84A JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8A7 PUSH2 0x1460 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x8C1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C SWAP1 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x97D JUMPI JUMPDEST PUSH2 0x949 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x967 JUMPI PUSH1 0x1 PUSH1 0x20 SWAP2 ADD DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x940 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A3 JUMPI DUP2 PUSH1 0x4 ADD SWAP2 PUSH1 0xE0 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1A3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xE64 JUMPI JUMPDEST PUSH2 0x9EC SWAP1 PUSH2 0x10BD JUMP JUMPDEST DUP2 ISZERO PUSH2 0xE2A JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH2 0xA13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA0B DUP5 PUSH2 0x10FA JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x110E JUMP JUMPDEST PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP4 DUP5 ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x64 DUP3 ADD PUSH2 0xA2D DUP2 DUP4 PUSH2 0x1151 JUMP JUMPDEST SWAP1 POP ISZERO PUSH2 0xDA9 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x84 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP4 PUSH2 0xA5D PUSH2 0xA56 DUP8 PUSH2 0x10FA JUMP JUMPDEST SWAP4 DUP6 PUSH2 0x1151 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1A3 JUMPI DUP6 ISZERO PUSH2 0xD91 JUMPI TIMESTAMP SWAP3 JUMPDEST PUSH1 0x40 MLOAD SWAP6 PUSH2 0xA83 DUP8 PUSH2 0xF3E JUMP JUMPDEST CALLDATALOAD DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD DUP11 DUP2 MSTORE SWAP1 SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xAC8 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xF5A JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE DUP3 DUP3 ADD GT PUSH2 0x1A3 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 DUP5 MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP7 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x3 DUP7 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xC7A JUMPI PUSH2 0xB5D DUP4 SLOAD PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD49 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCD9 JUMPI SWAP2 DUP1 PUSH2 0xBB7 SWAP5 SWAP3 PUSH1 0x6 SWAP9 SWAP8 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xCCE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ISZERO PUSH2 0xC90 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF0 DUP3 PUSH2 0x10FA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xC7A JUMPI PUSH2 0xC46 DUP3 PUSH32 0x3A3EE326DD9451112D67D1BABDAF697562D06E41E2571DDD356B4E9BE0DE478E SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD DUP2 SSTORE PUSH2 0xED6 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP7 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xC6F SWAP1 PUSH2 0x10FA JUMP JUMPDEST AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xCA5 SWAP1 PUSH2 0x10FA JUMP JUMPDEST AND SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xB8A JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD31 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x6 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0xBB7 SWAP9 SWAP7 LT PUSH2 0xD18 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xB9F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0xD0B JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xCEC JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xD87 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xD7B JUMPI POP PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD6E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135BDB99DBD1185D185251081C995C5D5A5C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081B995D1DDBDC9AC81251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E3 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1A3 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xF34 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xF1E JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC7A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC7A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xF90 DUP5 PUSH2 0xF04 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xFFE JUMPI POP PUSH1 0x1 EQ PUSH2 0xFB7 JUMPI JUMPDEST POP PUSH2 0xFB5 SWAP3 POP SUB DUP4 PUSH2 0xF5A JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xFE2 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0xFB5 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0xFA8 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0xFB5 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0xFA8 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x104C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x102B JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x109E PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1020 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x10C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1A3 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1115 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420686F73742061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A3 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A3 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1A3 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x118B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13995D1DDBDC9AC8191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11D0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x967 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1239 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642063616C6C65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1284 DUP3 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x12BB DUP2 PUSH2 0xF3E JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0xC0 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x12F1 PUSH1 0x3 DUP3 ADD PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC7A JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x967 JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP3 SWAP2 DUP4 DUP3 LT ISZERO PUSH2 0x1424 JUMPI PUSH2 0x1366 SWAP1 DUP3 PUSH2 0x1215 JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x141D JUMPI JUMPDEST PUSH2 0x1378 DUP3 DUP3 PUSH2 0x132E JUMP JUMPDEST SWAP2 PUSH2 0x1382 DUP4 PUSH2 0x1316 JUMP JUMPDEST SWAP3 PUSH2 0x1390 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xF5A JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x139F PUSH1 0x1F NOT SWAP2 PUSH2 0x1316 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1406 JUMPI POP POP DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x13BC JUMPI POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x967 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x13FF PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x13EE PUSH2 0x13E8 DUP7 DUP6 PUSH2 0x132E JUMP JUMPDEST SWAP2 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x13F8 DUP3 DUP10 PUSH2 0x133B JUMP JUMPDEST MSTORE DUP7 PUSH2 0x133B JUMP JUMPDEST POP ADD PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1411 PUSH2 0x1277 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x13A3 JUMP JUMPDEST POP DUP3 PUSH2 0x136E JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1436 PUSH1 0x20 DUP4 PUSH2 0xF5A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1449 JUMPI POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1454 PUSH2 0x1277 JUMP JUMPDEST DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x143C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1474 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x149A JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xDC 0xCC MOD ADD 0xC1 DUP8 0xE2 MSTORE 0xDE BLOCKHASH 0xA7 SWAP5 0x2D 0xED GASLIMIT 0x29 LOG0 SWAP12 LOG4 0xE9 0xE9 0xB1 0xEC SWAP8 0xEF LOG3 DUP9 SWAP16 DUP12 CALLDATACOPY 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "172:5679:5:-:0;;;;;;;1751:10;1273:26:0;1269:95;;1297:1;172:5679:5;;1751:10;-1:-1:-1;;;;;;172:5679:5;;;;;;1751:10;-1:-1:-1;;;;;172:5679:5;;;;3052:40:0;;1297:1;3052:40;1857:1:3;172:5679:5;;1297:1:0;639::5;172:5679;;;;;;;;1269:95:0;1322:31;;;1297:1;1322:31;1297:1;1322:31;172:5679:5;;1297:1:0;1322:31;172:5679:5;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 3761,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool": {
                  "entryPoint": 3783,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 4128,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_Network": {
                  "entryPoint": 4193,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "access_calldata_tail_string_calldata": {
                  "entryPoint": 4433,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "allocate_and_zero_memory_struct_struct_Network": {
                  "entryPoint": 4727,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_Network_dyn": {
                  "entryPoint": 4886,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "calldata_array_index_access_address_dyn_calldata": {
                  "entryPoint": 4642,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 4629,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 4910,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 3964,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 3844,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 3930,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_15427": {
                  "entryPoint": 3902,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 5216,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getNetworksPaginated": {
                  "entryPoint": 4943,
                  "id": 1744,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 5257,
                  "id": 334,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "memory_array_index_access_struct_Network_dyn": {
                  "entryPoint": 4923,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_calldatat_address": {
                  "entryPoint": 4346,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_reference_type_struct_Network": {
                  "entryPoint": 4782,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_3e76": {
                  "entryPoint": 4553,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_6ca8": {
                  "entryPoint": 4658,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_b1b0": {
                  "entryPoint": 4484,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ecf3": {
                  "entryPoint": 4366,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_fac3": {
                  "entryPoint": 4285,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_uint256_dyn": {
                  "entryPoint": 3798,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c908163217c682d14610e965750806322a4808b14610e7857806329c718b5146107e05780634ce083be14610e7857806350c0d41c146109915780635290ffc6146109165780635a2f406f1461088b57806369009a131461081a5780636d65573f146107e0578063715018a61461078757806373f9a5d71461066c57806379f0dc57146105b25780637b334154146105735780637bae8f5e1461051a578063879ecf10146104e95780638bb0a17c146104565780638da5cb5b1461042d57806395ea5717146103c6578063d8b0e71614610337578063e1c7a8aa14610262578063ec13f2a114610231578063f2fde38b146101a85763fa9c81a41461011c57600080fd5b346101a35760403660031901126101a35761013b60243560043561134f565b9060405190604082016040835281518091526060830190602060608260051b8601019301916000905b828210610178578580868960208301520390f35b90919293602080610195600193605f198a82030186528851611061565b960192019201909291610164565b600080fd5b346101a35760203660031901126101a3576101c1610eb1565b6101c9611460565b6001600160a01b0316801561021b57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101a35760203660031901126101a3576004356000526008602052602060ff604060002054166040519015158152f35b346101a35760403660031901126101a35761027b610eb1565b6024359033600052600260205260ff604060002054168015610323575b6102a1906110bd565b6102a9611489565b6001600160a01b0316906102be82151561110e565b6102c98115156111c9565b8160005260066020526102e26040600020918254611215565b90558060005260066020527f61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be06020604060002054604051908152a260018055005b506000546001600160a01b03163314610298565b346101a35760403660031901126101a357610350610eb1565b7fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f602061037b610ec7565b92610384611460565b6001600160a01b031692610399841515611232565b83600052600282526103bb8160406000209060ff801983541691151516179055565b6040519015158152a2005b346101a35760203660031901126101a3576004356103e2611277565b508060005260086020526103fd60ff60406000205416611184565b600052600560205261042961041560406000206112ae565b604051918291602083526020830190611061565b0390f35b346101a35760003660031901126101a3576000546040516001600160a01b039091168152602090f35b346101a35760203660031901126101a35760043560005260056020526040600020805460018060a01b0360018301541691600281015461049860038301610f7c565b916104d360ff60048301541693600660058401549301549360405197889788526020880152604087015260e0606087015260e0860190611020565b921515608085015260a084015260c08301520390f35b346101a35760203660031901126101a3576004356000526009602052602060ff604060002054166040519015158152f35b346101a35760403660031901126101a357610533610eb1565b6001600160a01b03166000908152600760205260409020805460243591908210156101a35760209161056491610ed6565b90549060031b1c604051908152f35b346101a35760203660031901126101a3576001600160a01b03610594610eb1565b166000526002602052602060ff604060002054166040519015158152f35b346101a35760203660031901126101a3576001600160a01b036105d3610eb1565b16600052600760205260406000206040518060208354918281520190819360005260206000209060005b8181106106565750505081610613910382610f5a565b6040519182916020830190602084525180915260408301919060005b81811061063d575050500390f35b825184528594506020938401939092019160010161062f565b82548452602090930192600192830192016105fd565b346101a35760403660031901126101a35760043567ffffffffffffffff81116101a357366023820112156101a357806004013567ffffffffffffffff81116101a3576024820191602436918360051b0101116101a3576106ca610ec7565b6106d2611460565b8015159060005b8381106106e257005b60019061070b6001600160a01b036107036106fe84898b611222565b6110fa565b161515611232565b818060a01b0361071f6106fe83888a611222565b1660005260026020526107428360406000209060ff801983541691151516179055565b818060a01b036107566106fe83888a611222565b167fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f6020604051878152a2016106d9565b346101a35760003660031901126101a3576107a0611460565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101a35760203660031901126101a3576001600160a01b03610801610eb1565b1660005260066020526020604060002054604051908152f35b346101a35760203660031901126101a35761086e60043533600052600260205260ff604060002054168015610877575b610853906110bd565b61085b611489565b6108668115156111c9565b600454611215565b60045560018055005b506000546001600160a01b0316331461084a565b346101a35760203660031901126101a3576004356108a7611460565b8060005260086020526108c160ff60406000205416611184565b600081815260056020526040812060048101805460ff19169055426006820155600101546001600160a01b031691907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c9080a3005b346101a35760003660031901126101a35733600052600260205260ff60406000205416801561097d575b610949906110bd565b60035460001981146109675760016020910180600355604051908152f35b634e487b7160e01b600052601160045260246000fd5b506000546001600160a01b03163314610940565b346101a35760403660031901126101a35760243560043567ffffffffffffffff82116101a357816004019160e060031982360301126101a35733600052600260205260ff604060002054168015610e64575b6109ec906110bd565b8115610e2a576024810190610a136001600160a01b03610a0b846110fa565b16151561110e565b6044810135938415610de55760648201610a2d8183611151565b905015610da957846000526008602052608460ff604060002054161593610a5d610a56876110fa565b9385611151565b9290910135908115158092036101a3578515610d915742925b60405195610a8387610f3e565b3586526001600160a01b0390941660208601908152604086018a8152909467ffffffffffffffff8111610c7a5760405192610ac8601f8301601f191660200185610f5a565b81845236828201116101a357816000926020928387013784010152606086019182526080860192835260a086019384524260c0870190815260008a81526005602052604090209651875594516001870180546001600160a01b0319166001600160a01b0392909216919091179055516002860155518051600386019167ffffffffffffffff8211610c7a57610b5d8354610f04565b601f8111610d49575b50602090601f8311600114610cd9579180610bb79492600698979694600092610cce575b50508160011b916000199060031b1c19161790555b511515600486019060ff801983541691151516179055565b5160058401555191015515610c90576000828152600860205260409020805460ff191660011790556001600160a01b03610bf0826110fa565b16600052600760205260406000209081549068010000000000000000821015610c7a57610c46827f3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e946001602095018155610ed6565b815460001960039290921b91821b19169086901b1790556001600160a01b0390610c6f906110fa565b1693604051908152a3005b634e487b7160e01b600052604160045260246000fd5b9091506001600160a01b0390610ca5906110fa565b16907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c600080a3005b015190508d80610b8a565b90601f1983169184600052816000209260005b818110610d31575092600192859260069a999896610bb7989610610d18575b505050811b019055610b9f565b015160001960f88460031b161c191690558d8080610d0b565b92936020600181928786015181550195019301610cec565b836000526020600020601f840160051c81019160208510610d87575b601f0160051c01905b818110610d7b5750610b66565b60008155600101610d6e565b9091508190610d65565b87600052600560205260056040600020015492610a76565b60405162461bcd60e51b8152602060048201526014602482015273135bdb99dbd1185d185251081c995c5d5a5c995960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b995d1ddbdc9ac8125160721b6044820152606490fd5b506000546001600160a01b031633146109e3565b346101a35760003660031901126101a3576020600454604051908152f35b346101a35760003660031901126101a3576020906003548152f35b600435906001600160a01b03821682036101a357565b6024359081151582036101a357565b8054821015610eee5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610f34575b6020831014610f1e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f13565b60e0810190811067ffffffffffffffff821117610c7a57604052565b90601f8019910116810190811067ffffffffffffffff821117610c7a57604052565b9060405191826000825492610f9084610f04565b8084529360018116908115610ffe5750600114610fb7575b50610fb592500383610f5a565b565b90506000929192526020600020906000915b818310610fe2575050906020610fb59282010138610fa8565b6020919350806001915483858901015201910190918492610fc9565b905060209250610fb594915060ff191682840152151560051b82010138610fa8565b919082519283825260005b84811061104c575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161102b565b908151815260018060a01b0360208301511660208201526040820151604082015260c08061109e606085015160e0606086015260e0850190611020565b9360808101511515608085015260a081015160a0850152015191015290565b156110c457565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b356001600160a01b03811681036101a35790565b1561111557565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420686f7374206164647265737360601b6044820152606490fd5b903590601e19813603018212156101a3570180359067ffffffffffffffff82116101a3576020019181360383136101a357565b1561118b57565b60405162461bcd60e51b815260206004820152601660248201527513995d1ddbdc9ac8191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b156111d057565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b9190820180921161096757565b9190811015610eee5760051b0190565b1561123957565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642063616c6c6572206164647265737360501b6044820152606490fd5b6040519061128482610f3e565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b906040516112bb81610f3e565b8254815260018301546001600160a01b031660208201526002830154604082015291829060c0906006906112f160038201610f7c565b606085015260ff60048201541615156080850152600581015460a08501520154910152565b67ffffffffffffffff8111610c7a5760051b60200190565b9190820391821161096757565b8051821015610eee5760209160051b010190565b600354929183821015611424576113669082611215565b83811161141d575b611378828261132e565b9161138283611316565b926113906040519485610f5a565b80845261139f601f1991611316565b0160005b818110611406575050805b8281106113bc575050509190565b60018101908181116109675760019160005260056020526113ff60406000206113ee6113e8868561132e565b916112ae565b6113f8828961133b565b528661133b565b50016113ae565b602090611411611277565b828288010152016113a3565b508261136e565b50506040516000611436602083610f5a565b81526000805b8181106114495750509190565b602090611454611277565b8282860101520161143c565b6000546001600160a01b0316330361147457565b63118cdaa760e01b6000523360045260246000fd5b60026001541461149a576002600155565b633ee5aeb560e01b60005260046000fdfea2646970667358221220e0dccc0601c187e252de40a7942ded4529a09ba4e9e9b1ec97efa3889f8b374e64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x217C682D EQ PUSH2 0xE96 JUMPI POP DUP1 PUSH4 0x22A4808B EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x29C718B5 EQ PUSH2 0x7E0 JUMPI DUP1 PUSH4 0x4CE083BE EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x50C0D41C EQ PUSH2 0x991 JUMPI DUP1 PUSH4 0x5290FFC6 EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0x88B JUMPI DUP1 PUSH4 0x69009A13 EQ PUSH2 0x81A JUMPI DUP1 PUSH4 0x6D65573F EQ PUSH2 0x7E0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0x73F9A5D7 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x7B334154 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x7BAE8F5E EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x879ECF10 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x8BB0A17C EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x95EA5717 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xD8B0E716 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xE1C7A8AA EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xEC13F2A1 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A8 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x13B PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x134F JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x178 JUMPI DUP6 DUP1 DUP7 DUP10 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x195 PUSH1 0x1 SWAP4 PUSH1 0x5F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1061 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x1C1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x27B PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x323 JUMPI JUMPDEST PUSH2 0x2A1 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2BE DUP3 ISZERO ISZERO PUSH2 0x110E JUMP JUMPDEST PUSH2 0x2C9 DUP2 ISZERO ISZERO PUSH2 0x11C9 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x2E2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1215 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH32 0x61A8B1A557E4D03803DB90D13FF76DB2C25FBA3ED24882CECDA8C8423B9B2BE0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x298 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x350 PUSH2 0xEB1 JUMP JUMPDEST PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH2 0x37B PUSH2 0xEC7 JUMP JUMPDEST SWAP3 PUSH2 0x384 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0x399 DUP5 ISZERO ISZERO PUSH2 0x1232 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x3BB DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3E2 PUSH2 0x1277 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x3FD PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x429 PUSH2 0x415 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1061 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x498 PUSH1 0x3 DUP4 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 PUSH2 0x4D3 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x6 PUSH1 0x5 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x1020 JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x533 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x564 SWAP2 PUSH2 0xED6 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x594 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5D3 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x656 JUMPI POP POP POP DUP2 PUSH2 0x613 SWAP2 SUB DUP3 PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x63D JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x62F JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5FD JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A3 JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1A3 JUMPI PUSH2 0x6CA PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0x1460 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6E2 JUMPI STOP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x70B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x703 PUSH2 0x6FE DUP5 DUP10 DUP12 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x10FA JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1232 JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x71F PUSH2 0x6FE DUP4 DUP9 DUP11 PUSH2 0x1222 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x742 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x756 PUSH2 0x6FE DUP4 DUP9 DUP11 PUSH2 0x1222 JUMP JUMPDEST AND PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE LOG2 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x7A0 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x801 PUSH2 0xEB1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x86E PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x877 JUMPI JUMPDEST PUSH2 0x853 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x85B PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x866 DUP2 ISZERO ISZERO PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84A JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8A7 PUSH2 0x1460 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x8C1 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C SWAP1 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x97D JUMPI JUMPDEST PUSH2 0x949 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x967 JUMPI PUSH1 0x1 PUSH1 0x20 SWAP2 ADD DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x940 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A3 JUMPI DUP2 PUSH1 0x4 ADD SWAP2 PUSH1 0xE0 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1A3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xE64 JUMPI JUMPDEST PUSH2 0x9EC SWAP1 PUSH2 0x10BD JUMP JUMPDEST DUP2 ISZERO PUSH2 0xE2A JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH2 0xA13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA0B DUP5 PUSH2 0x10FA JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x110E JUMP JUMPDEST PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP4 DUP5 ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x64 DUP3 ADD PUSH2 0xA2D DUP2 DUP4 PUSH2 0x1151 JUMP JUMPDEST SWAP1 POP ISZERO PUSH2 0xDA9 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x84 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP4 PUSH2 0xA5D PUSH2 0xA56 DUP8 PUSH2 0x10FA JUMP JUMPDEST SWAP4 DUP6 PUSH2 0x1151 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1A3 JUMPI DUP6 ISZERO PUSH2 0xD91 JUMPI TIMESTAMP SWAP3 JUMPDEST PUSH1 0x40 MLOAD SWAP6 PUSH2 0xA83 DUP8 PUSH2 0xF3E JUMP JUMPDEST CALLDATALOAD DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD DUP11 DUP2 MSTORE SWAP1 SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xAC8 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xF5A JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE DUP3 DUP3 ADD GT PUSH2 0x1A3 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 DUP5 MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP7 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x3 DUP7 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xC7A JUMPI PUSH2 0xB5D DUP4 SLOAD PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD49 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCD9 JUMPI SWAP2 DUP1 PUSH2 0xBB7 SWAP5 SWAP3 PUSH1 0x6 SWAP9 SWAP8 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xCCE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ISZERO PUSH2 0xC90 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBF0 DUP3 PUSH2 0x10FA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xC7A JUMPI PUSH2 0xC46 DUP3 PUSH32 0x3A3EE326DD9451112D67D1BABDAF697562D06E41E2571DDD356B4E9BE0DE478E SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD DUP2 SSTORE PUSH2 0xED6 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP7 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xC6F SWAP1 PUSH2 0x10FA JUMP JUMPDEST AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xCA5 SWAP1 PUSH2 0x10FA JUMP JUMPDEST AND SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xB8A JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD31 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x6 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0xBB7 SWAP9 SWAP7 LT PUSH2 0xD18 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xB9F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0xD0B JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xCEC JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xD87 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xD7B JUMPI POP PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD6E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135BDB99DBD1185D185251081C995C5D5A5C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081B995D1DDBDC9AC81251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E3 JUMP JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1A3 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xF34 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xF1E JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC7A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC7A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xF90 DUP5 PUSH2 0xF04 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xFFE JUMPI POP PUSH1 0x1 EQ PUSH2 0xFB7 JUMPI JUMPDEST POP PUSH2 0xFB5 SWAP3 POP SUB DUP4 PUSH2 0xF5A JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xFE2 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0xFB5 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0xFA8 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0xFB5 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0xFA8 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x104C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x102B JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x109E PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1020 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x10C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1A3 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1115 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420686F73742061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A3 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A3 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1A3 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x118B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13995D1DDBDC9AC8191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11D0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x967 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1239 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642063616C6C65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1284 DUP3 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x12BB DUP2 PUSH2 0xF3E JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0xC0 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x12F1 PUSH1 0x3 DUP3 ADD PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC7A JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x967 JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP3 SWAP2 DUP4 DUP3 LT ISZERO PUSH2 0x1424 JUMPI PUSH2 0x1366 SWAP1 DUP3 PUSH2 0x1215 JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x141D JUMPI JUMPDEST PUSH2 0x1378 DUP3 DUP3 PUSH2 0x132E JUMP JUMPDEST SWAP2 PUSH2 0x1382 DUP4 PUSH2 0x1316 JUMP JUMPDEST SWAP3 PUSH2 0x1390 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xF5A JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x139F PUSH1 0x1F NOT SWAP2 PUSH2 0x1316 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1406 JUMPI POP POP DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x13BC JUMPI POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x967 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x13FF PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x13EE PUSH2 0x13E8 DUP7 DUP6 PUSH2 0x132E JUMP JUMPDEST SWAP2 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x13F8 DUP3 DUP10 PUSH2 0x133B JUMP JUMPDEST MSTORE DUP7 PUSH2 0x133B JUMP JUMPDEST POP ADD PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1411 PUSH2 0x1277 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x13A3 JUMP JUMPDEST POP DUP3 PUSH2 0x136E JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1436 PUSH1 0x20 DUP4 PUSH2 0xF5A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1449 JUMPI POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1454 PUSH2 0x1277 JUMP JUMPDEST DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x143C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1474 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x149A JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xDC 0xCC MOD ADD 0xC1 DUP8 0xE2 MSTORE 0xDE BLOCKHASH 0xA7 SWAP5 0x2D 0xED GASLIMIT 0x29 LOG0 SWAP12 LOG4 0xE9 0xE9 0xB1 0xEC SWAP8 0xEF LOG3 DUP9 SWAP16 DUP12 CALLDATACOPY 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "172:5679:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;172:5679:5;2627:22:0;;2623:91;;172:5679:5;;;-1:-1:-1;;;;;;172:5679:5;;;;;;-1:-1:-1;;;;;172:5679:5;;3052:40:0;;172:5679:5;3052:40:0;172:5679:5;2623:91:0;2672:31;;;172:5679:5;2672:31:0;172:5679:5;;;;;2672:31:0;172:5679:5;;;;;;-1:-1:-1;;172:5679:5;;;;;;;;891:45;172:5679;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;;;:::i;:::-;;;1063:10;;172:5679;;1048:14;172:5679;;;;;;;;1048:51;;;;172:5679;1027:112;;;:::i;:::-;2466:103:3;;:::i;:::-;-1:-1:-1;;;;;172:5679:5;;4763:58;4771:25;;;4763:58;:::i;:::-;4831:52;4839:10;;;4831:52;:::i;:::-;172:5679;;;4894:12;172:5679;;4894:35;172:5679;;;;;;4894:35;:::i;:::-;172:5679;;;;;4894:12;172:5679;;4944:59;172:5679;;;;;;;;;;4944:59;172:5679;;;;1048:51;-1:-1:-1;172:5679:5;;-1:-1:-1;;;;;172:5679:5;1063:10;1078:21;1048:51;;172:5679;;;;;;-1:-1:-1;;172:5679:5;;;;;;:::i;:::-;2002:37;172:5679;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;172:5679:5;;1889:56;1897:21;;;1889:56;:::i;:::-;172:5679;;;1955:14;172:5679;;1955:32;172:5679;;;;;;;;;;;;;;;;;;;1955:32;172:5679;;;;;;;2002:37;172:5679;;;;;;;-1:-1:-1;;172:5679:5;;;;;;;;:::i;:::-;;;;;3756:13;172:5679;;3748:52;172:5679;;;;;;3748:52;:::i;:::-;172:5679;;3817:8;172:5679;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;;;;;-1:-1:-1;;;;;172:5679:5;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;;;;;684:43;172:5679;;;;;;;;;;;;;684:43;;172:5679;;684:43;;;;172:5679;684:43;;;;;:::i;:::-;;172:5679;;;684:43;;172:5679;;684:43;;;;;172:5679;684:43;;172:5679;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;;;;;942:45;172:5679;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;;;:::i;:::-;-1:-1:-1;;;;;172:5679:5;;;;;834:51;172:5679;;;;;;;;;;;834:51;;;;;172:5679;834:51;;;;:::i;:::-;172:5679;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;-1:-1:-1;;;;;172:5679:5;;:::i;:::-;;;;444:46;172:5679;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;-1:-1:-1;;;;;172:5679:5;;:::i;:::-;;;;4566:14;172:5679;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5679:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;172:5679:5;;;;;2243:19;;;;;;172:5679;2264:3;172:5679;;2283:60;-1:-1:-1;;;;;2291:11:5;;172:5679;2291:11;;;:::i;:::-;;:::i;:::-;172:5679;2291:25;;2283:60;:::i;:::-;172:5679;;;;;2372:11;;;;;;:::i;:::-;172:5679;;;2357:14;172:5679;;2357:36;172:5679;;;;;;;;;;;;;;;;;;;2357:36;172:5679;;;;;2433:11;;;;;;:::i;:::-;172:5679;2412:41;172:5679;;;;;;2412:41;172:5679;2228:13;;172:5679;;;;;;-1:-1:-1;;172:5679:5;;;;1500:62:0;;:::i;:::-;172:5679:5;;;-1:-1:-1;;;;;;172:5679:5;;;;-1:-1:-1;;;;;172:5679:5;3052:40:0;172:5679:5;;3052:40:0;172:5679:5;;;;;;;-1:-1:-1;;172:5679:5;;;;-1:-1:-1;;;;;172:5679:5;;:::i;:::-;;;;5125:12;172:5679;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;5331:24;172:5679;;1063:10;172:5679;;1048:14;172:5679;;;;;;;;1048:51;;;;172:5679;1027:112;;;:::i;:::-;2466:103:3;;:::i;:::-;5269:52:5;5277:10;;;5269:52;:::i;:::-;172:5679;;5331:24;:::i;:::-;172:5679;;;;;;1048:51;-1:-1:-1;172:5679:5;;-1:-1:-1;;;;;172:5679:5;1063:10;1078:21;1048:51;;172:5679;;;;;;-1:-1:-1;;172:5679:5;;;;;;1500:62:0;;:::i;:::-;172:5679:5;;;5615:13;172:5679;;5607:59;172:5679;;;;;;5607:59;:::i;:::-;172:5679;;;;5676:8;172:5679;;;;;;5676:28;;172:5679;;-1:-1:-1;;172:5679:5;;;5754:15;5722:29;;;172:5679;-1:-1:-1;5810:31:5;172:5679;-1:-1:-1;;;;;172:5679:5;;;5784:58;;172:5679;5784:58;172:5679;;;;;;;-1:-1:-1;;172:5679:5;;;;1063:10;172:5679;;1048:14;172:5679;;;;;;;;1048:51;;;;172:5679;1027:112;;;:::i;:::-;2595:18;172:5679;-1:-1:-1;;172:5679:5;;;;;;;;;2595:18;172:5679;;;;;;;;;;;;;;;;;;;1048:51;-1:-1:-1;172:5679:5;;-1:-1:-1;;;;;172:5679:5;1063:10;1078:21;1048:51;;172:5679;;;;;;-1:-1:-1;;172:5679:5;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:10;172:5679;;1048:14;172:5679;;;;;;;;1048:51;;;;172:5679;1027:112;;;:::i;:::-;2719:6;;172:5679;;;2766:15;;;2758:62;-1:-1:-1;;;;;2766:15:5;;;:::i;:::-;172:5679;2766:29;;2758:62;:::i;:::-;2838:19;;;172:5679;2838:23;;;172:5679;;2918:15;;;;;;;:::i;:::-;2912:33;;;172:5679;;;;;3002:13;172:5679;;3235:12;172:5679;;;;;;3001:18;3104:15;3196;3104;;;:::i;:::-;3196;;;:::i;:::-;3235:12;;;;172:5679;;;;;;;;;;3272:55;;;;3287:15;3272:55;;172:5679;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;172:5679:5;;;;3045:333;;172:5679;;;;3045:333;;172:5679;;;3045:333;;172:5679;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2918:15;3045:333;;172:5679;;;3235:12;3045:333;;172:5679;;;3045:333;;;172:5679;;;3352:15;3045:333;;;172:5679;;;-1:-1:-1;172:5679:5;;;3030:8;172:5679;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;172:5679:5;-1:-1:-1;;;;;172:5679:5;;;;;;;;;;;1048:14;172:5679;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;3272:55;172:5679;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3030:8;172:5679;;;;;;;3389:266;;;172:5679;;;;3002:13;172:5679;;;;;;;-1:-1:-1;;172:5679:5;;;;;-1:-1:-1;;;;;3474:15:5;;;:::i;:::-;172:5679;;;3459:14;172:5679;;;;;;;;;;;;;;;;;3518:55;172:5679;;;;;;;;:::i;:::-;;;-1:-1:-1;;172:5679:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:5679:5;3536:15;;;:::i;:::-;172:5679;;;;;;;3518:55;172:5679;;;;;;;;;;;;;3389:266;172:5679;;-1:-1:-1;;;;;;172:5679:5;3628:15;;;:::i;:::-;172:5679;3609:35;;172:5679;3609:35;;172:5679;;;;;-1:-1:-1;172:5679:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3030:8;172:5679;;;;;;;;;;;;3030:8;172:5679;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:5679:5;;;;3272:55;172:5679;;;3305:8;172:5679;;3305:8;172:5679;;;3305:22;172:5679;3272:55;;;172:5679;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;;-1:-1:-1;;;2838:19:5;172:5679;;;2918:15;;172:5679;;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;;;2838:19;172:5679;;;;;;;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;;-1:-1:-1;;;172:5679:5;;;;;;;1048:51;-1:-1:-1;172:5679:5;;-1:-1:-1;;;;;172:5679:5;1063:10;1078:21;1048:51;;172:5679;;;;;;-1:-1:-1;;172:5679:5;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:5679:5;;;;;;543:31;172:5679;;;;;;;;-1:-1:-1;;;;;172:5679:5;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;172:5679:5;;-1:-1:-1;172:5679:5;;;-1:-1:-1;172:5679:5;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;172:5679:5;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;172:5679:5;;;;;-1:-1:-1;172:5679:5;;-1:-1:-1;172:5679:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;;-1:-1:-1;;;172:5679:5;;;;;;;;;-1:-1:-1;;;;;172:5679:5;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;;-1:-1:-1;;;172:5679:5;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;172:5679:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;172:5679:5;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;3842:600::-;3999:16;172:5679;;3842:600;4029:15;;;;4025:78;;4127:14;;;;:::i;:::-;4155:11;;;4151:53;;3842:600;4254:12;;;;:::i;:::-;4240:27;172:5679;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;-1:-1:-1;172:5679:5;;;;;;4282:18;;;4302:7;;;;;;4413:22;;;;3842:600;:::o;4311:3::-;4364:1;172:5679;;;;;;;;4364:1;172:5679;-1:-1:-1;172:5679:5;4351:8;172:5679;;4330:36;172:5679;-1:-1:-1;172:5679:5;;4337:10;;;;:::i;:::-;172:5679;;:::i;:::-;4330:36;;;;:::i;:::-;;;;:::i;:::-;;172:5679;4282:18;;172:5679;;;;;:::i;:::-;;;;;;;;;;4151:53;4182:11;;4151:53;;4025:78;-1:-1:-1;;172:5679:5;;-1:-1:-1;172:5679:5;;;;:::i;:::-;;;-1:-1:-1;;172:5679:5;;;;;;4060:32;;;;:::o;172:5679::-;;;;;:::i;:::-;;;;;;;;;;1796:162:0;1710:6;172:5679:5;-1:-1:-1;;;;;172:5679:5;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:1;1901:40:0;172:5679:5;;1710:6:0;1901:40;2575:307:3;1899:1;2702:7;172:5679:5;2702:18:3;2698:86;;1899:1;2702:7;172:5679:5;2575:307:3:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:3;;-1:-1:-1;2743:30:3"
            },
            "methodIdentifiers": {
              "allowedCallers(address)": "7b334154",
              "emergencyDeactivateNetwork(uint256)": "5a2f406f",
              "getHostEarnings(address)": "6d65573f",
              "getHostNetworks(address)": "79f0dc57",
              "getNetwork(uint256)": "95ea5717",
              "getNetworksPaginated(uint256,uint256)": "fa9c81a4",
              "getZaaNetEarnings()": "22a4808b",
              "hostEarnings(address)": "29c718b5",
              "hostNetworkIds(address,uint256)": "7bae8f5e",
              "increaseHostEarnings(address,uint256)": "e1c7a8aa",
              "increaseZaaNetEarnings(uint256)": "69009a13",
              "incrementNetworkId()": "5290ffc6",
              "networkExists(uint256)": "ec13f2a1",
              "networkIdCounter()": "217c682d",
              "networks(uint256)": "8bb0a17c",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "sessionExists(uint256)": "879ecf10",
              "setAllowedCaller(address,bool)": "d8b0e716",
              "setAllowedCallers(address[],bool)": "73f9a5d7",
              "setNetwork(uint256,(uint256,address,uint256,string,bool,uint256,uint256))": "50c0d41c",
              "transferOwnership(address)": "f2fde38b",
              "zaanetEarnings()": "4ce083be"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"AllowedCallerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalEarned\",\"type\":\"uint256\"}],\"name\":\"HostEarningsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"}],\"name\":\"NetworkStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"NetworkUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SessionStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalEarned\",\"type\":\"uint256\"}],\"name\":\"ZaaNetEarningsUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostNetworks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getNetwork\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getNetworksPaginated\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZaaNetEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hostEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hostNetworkIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseHostEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseZaaNetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNetworkId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"networkIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sessionExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAllowedCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAllowedCallers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"net\",\"type\":\"tuple\"}],\"name\":\"setNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zaanetEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetStorage.sol\":\"ZaaNetStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x2d84ff4b1782d1249c2189338a7d42b8159309ed614634f99c9be89d32199f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c68e8b2790b20da4a12c69088bce500a269e0f9b3ac80e3cd58c9ef11001ec\",\"dweb:/ipfs/QmdDitFPsfDEEfpbWgkqYCgpdSHq7j7Dm8ic4JecMwcfzj\"]}},\"version\":1}"
        }
      }
    }
  }
}