{
  "id": "12d40570ef982ac333e7f567f52b8d60",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/ZaaNetAdmin.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./ZaaNetStorage.sol\";\n\ncontract ZaaNetAdmin is Ownable, Pausable, ReentrancyGuard {\n    ZaaNetStorage public storageContract;\n    address public treasuryAddress; // Address to receive platform fees\n    address public paymentAddress; // Address to make voucher payments\n    uint256 public platformFeePercent; // Platform fee percentage (1-20%)\n    uint256 public hostingFee; // Hosting fee in USDT (6 decimals)\n\n    // Constants for validation\n    uint256 public constant MAX_PLATFORM_FEE = 20; // 20% maximum fee\n    uint256 public constant MIN_PLATFORM_FEE = 1;  // 1% minimum fee\n    uint256 public constant MAX_HOSTING_FEE = 100 * (10 ** 6); // 100 USDT maximum hosting fee\n    uint256 public constant MIN_HOSTING_FEE = 0; // 0 USDT minimum hosting fee (can be free)\n\n    // Emergency controls\n    bool public emergencyMode = false;\n    mapping(address => bool) public emergencyOperators;\n\n    // Fee history for transparency\n    struct FeeChange {\n        uint256 oldFee;\n        uint256 newFee;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    FeeChange[] public feeHistory;\n    \n    // Treasury change history\n    struct TreasuryChange {\n        address oldTreasury;\n        address newTreasury;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    TreasuryChange[] public treasuryHistory;\n\n    // Hosting fee history\n    struct HostingFeeChange {\n        uint256 oldFee;\n        uint256 newFee;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    HostingFeeChange[] public hostingFeeHistory;\n\n    // Events\n    event PlatformFeeUpdated(uint256 indexed oldFee, uint256 indexed newFee, address indexed changedBy);\n    event TreasuryUpdated(address indexed oldTreasury, address indexed newTreasury, address indexed changedBy);\n    event HostingFeeUpdated(uint256 indexed oldFee, uint256 indexed newFee, address indexed changedBy);\n    event AdminPaused(address indexed triggeredBy);\n    event AdminUnpaused(address indexed triggeredBy);\n    event EmergencyModeToggled(bool enabled, address indexed triggeredBy);\n    event EmergencyOperatorUpdated(address indexed operator, bool status, address indexed updatedBy);\n    event ContractsInitialized(address indexed storageContract, uint256 timestamp);\n\n    modifier onlyEmergencyOperator() {\n        require(emergencyOperators[msg.sender] || msg.sender == owner(), \"Not emergency operator\");\n        _;\n    }\n\n    modifier notInEmergencyMode() {\n        require(!emergencyMode, \"System in emergency mode\");\n        _;\n    }\n\n    constructor(\n        address _storageContract,\n        address _treasuryAddress,\n        address _paymentAddress,\n        uint256 _platformFeePercent,\n        uint256 _hostingFee\n    ) Ownable(msg.sender) {\n        require(_treasuryAddress != address(0), \"Treasury cannot be zero address\");\n        require(\n            _platformFeePercent >= MIN_PLATFORM_FEE && _platformFeePercent <= MAX_PLATFORM_FEE, \n            \"Platform fee must be between 1% and 20%\"\n        );\n        require(_paymentAddress != address(0), \"Payment address cannot be zero address\");\n        require(\n            _hostingFee >= MIN_HOSTING_FEE && _hostingFee <= MAX_HOSTING_FEE,\n            \"Hosting fee must be between 0 and 100 USDT\"\n        );\n\n        if (_storageContract != address(0)) {\n            storageContract = ZaaNetStorage(_storageContract);\n            emit ContractsInitialized(_storageContract, block.timestamp);\n        }\n        \n        treasuryAddress = _treasuryAddress;\n        paymentAddress = _paymentAddress;\n        platformFeePercent = _platformFeePercent;\n        hostingFee = _hostingFee;\n\n        // Record initial settings\n        feeHistory.push(FeeChange({\n            oldFee: 0,\n            newFee: _platformFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        treasuryHistory.push(TreasuryChange({\n            oldTreasury: address(0),\n            newTreasury: _treasuryAddress,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        hostingFeeHistory.push(HostingFeeChange({\n            oldFee: 0,\n            newFee: _hostingFee,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        // Set owner as emergency operator\n        emergencyOperators[msg.sender] = true;\n        emit EmergencyOperatorUpdated(msg.sender, true, msg.sender);\n    }\n\n    function setPlatformFee(uint256 _newFeePercent) external onlyOwner notInEmergencyMode {\n        require(\n            _newFeePercent >= MIN_PLATFORM_FEE && _newFeePercent <= MAX_PLATFORM_FEE, \n            \"Fee must be between 1% and 20%\"\n        );\n        require(_newFeePercent != platformFeePercent, \"Fee unchanged\");\n\n        uint256 oldFee = platformFeePercent;\n        platformFeePercent = _newFeePercent;\n\n        // Record fee change\n        feeHistory.push(FeeChange({\n            oldFee: oldFee,\n            newFee: _newFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit PlatformFeeUpdated(oldFee, _newFeePercent, msg.sender);\n    }\n\n    function setHostingFee(uint256 _newFee) external onlyOwner notInEmergencyMode {\n        require(\n            _newFee >= MIN_HOSTING_FEE && _newFee <= MAX_HOSTING_FEE,\n            \"Fee must be between 0 and 100 USDT\"\n        );\n        require(_newFee != hostingFee, \"Fee unchanged\");\n        \n        uint256 oldFee = hostingFee;\n        hostingFee = _newFee;\n        \n        // Record hosting fee change\n        hostingFeeHistory.push(HostingFeeChange({\n            oldFee: oldFee,\n            newFee: _newFee,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n        \n        emit HostingFeeUpdated(oldFee, _newFee, msg.sender);\n    }\n\n    function setTreasuryAddress(address _newTreasuryAddress) external onlyOwner notInEmergencyMode {\n        require(_newTreasuryAddress != address(0), \"Invalid treasury address\");\n        require(_newTreasuryAddress != treasuryAddress, \"Treasury unchanged\");\n\n        address oldTreasury = treasuryAddress;\n        treasuryAddress = _newTreasuryAddress;\n\n        // Record treasury change\n        treasuryHistory.push(TreasuryChange({\n            oldTreasury: oldTreasury,\n            newTreasury: _newTreasuryAddress,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit TreasuryUpdated(oldTreasury, _newTreasuryAddress, msg.sender);\n    }\n\n    function setPaymentAddress(address _newPaymentAddress) external onlyOwner notInEmergencyMode {\n        require(_newPaymentAddress != address(0), \"Invalid payment address\");\n        require(_newPaymentAddress != paymentAddress, \"Payment address unchanged\");\n\n        paymentAddress = _newPaymentAddress;\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n        emit AdminPaused(msg.sender);\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n        emit AdminUnpaused(msg.sender);\n    }\n\n    /// @notice Toggle emergency mode (stops most operations)\n    function toggleEmergencyMode() external onlyEmergencyOperator {\n        emergencyMode = !emergencyMode;\n        emit EmergencyModeToggled(emergencyMode, msg.sender);\n    }\n\n    /// @notice Add or remove emergency operators\n    function setEmergencyOperator(address operator, bool status) external onlyOwner {\n        require(operator != address(0), \"Invalid operator address\");\n        emergencyOperators[operator] = status;\n        emit EmergencyOperatorUpdated(operator, status, msg.sender);\n    }\n\n    /// @notice Emergency function to deactivate a network\n    function emergencyDeactivateNetwork(uint256 networkId) external onlyEmergencyOperator {\n        require(address(storageContract) != address(0), \"Storage not initialized\");\n        storageContract.emergencyDeactivateNetwork(networkId);\n    }\n\n    /// @notice Emergency fee adjustment (bypasses normal restrictions)\n    function emergencySetPlatformFee(uint256 _newFeePercent) external onlyEmergencyOperator {\n        require(_newFeePercent <= MAX_PLATFORM_FEE, \"Fee cannot exceed maximum\");\n        \n        uint256 oldFee = platformFeePercent;\n        platformFeePercent = _newFeePercent;\n\n        feeHistory.push(FeeChange({\n            oldFee: oldFee,\n            newFee: _newFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit PlatformFeeUpdated(oldFee, _newFeePercent, msg.sender);\n    }\n\n    /// @notice Emergency hosting fee adjustment (bypasses normal restrictions)\n    function emergencySetHostingFee(uint256 _newFee) external onlyEmergencyOperator {\n        require(_newFee <= MAX_HOSTING_FEE, \"Fee cannot exceed maximum\");\n        \n        uint256 oldFee = hostingFee;\n        hostingFee = _newFee;\n\n        hostingFeeHistory.push(HostingFeeChange({\n            oldFee: oldFee,\n            newFee: _newFee,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit HostingFeeUpdated(oldFee, _newFee, msg.sender);\n    }\n\n    // --- View Functions ---\n\n    /// @notice Expose admin address for other contracts (interface compatibility)\n    function admin() external view returns (address) {\n        return owner();\n    }\n\n    /// @notice Get fee change history\n    function getFeeHistory() external view returns (FeeChange[] memory) {\n        return feeHistory;\n    }\n\n    /// @notice Get treasury change history\n    function getTreasuryHistory() external view returns (TreasuryChange[] memory) {\n        return treasuryHistory;\n    }\n\n    /// @notice Get hosting fee change history\n    function getHostingFeeHistory() external view returns (HostingFeeChange[] memory) {\n        return hostingFeeHistory;\n    }\n\n    /// @notice Get current fee in basis points (for more precise calculations)\n    function getPlatformFeeBasisPoints() external view returns (uint256) {\n        return platformFeePercent * 100; // Convert percentage to basis points\n    }   \n\n    /// @notice Calculate platform fee for a given amount\n    function calculatePlatformFee(uint256 amount) external view returns (uint256) {\n        return (amount * platformFeePercent) / 100;\n    }\n\n    /// @notice Get comprehensive admin statistics\n    function getAdminStats() external view returns (\n        uint256 totalFeeChanges,\n        uint256 totalTreasuryChanges,\n        uint256 totalHostingFeeChanges,\n        bool isEmergencyMode,\n        uint256 currentPlatformFee,\n        uint256 currentHostingFee,\n        address currentTreasury\n    ) {\n        totalFeeChanges = feeHistory.length;\n        totalTreasuryChanges = treasuryHistory.length;\n        totalHostingFeeChanges = hostingFeeHistory.length;\n        isEmergencyMode = emergencyMode;\n        currentPlatformFee = platformFeePercent;\n        currentHostingFee = hostingFee;\n        currentTreasury = treasuryAddress;\n    }\n\n    /// @notice Check if address is emergency operator\n    function isEmergencyOperator(address operator) external view returns (bool) {\n        return emergencyOperators[operator];\n    }\n\n    /// @notice Get latest fee change details\n    function getLatestFeeChange() external view returns (FeeChange memory) {\n        require(feeHistory.length > 0, \"No fee changes recorded\");\n        return feeHistory[feeHistory.length - 1];\n    }\n\n    /// @notice Get latest treasury change details\n    function getLatestTreasuryChange() external view returns (TreasuryChange memory) {\n        require(treasuryHistory.length > 0, \"No treasury changes recorded\");\n        return treasuryHistory[treasuryHistory.length - 1];\n    }\n\n    /// @notice Get latest hosting fee change details\n    function getLatestHostingFeeChange() external view returns (HostingFeeChange memory) {\n        require(hostingFeeHistory.length > 0, \"No hosting fee changes recorded\");\n        return hostingFeeHistory[hostingFeeHistory.length - 1];\n    }\n\n    /// @notice Get all current fees in one call (gas efficient)\n    function getCurrentFees() external view returns (\n        uint256 platformFeePercentage,\n        uint256 hostingFeeAmount\n    ) {\n        return (platformFeePercent, hostingFee);\n    }\n\n    // --- Compatibility Functions (for interface alignment) ---\n\n    /// @notice Alternative name for treasury address (interface compatibility)\n    function treasury() external view returns (address) {\n        return treasuryAddress;\n    }\n\n    /// @notice Alternative name for payment address (interface compatibility)\n    function payment() external view returns (address) {\n        return paymentAddress;\n    }\n\n    /// @notice Check if contract is paused (interface compatibility)\n    function paused() public view override returns (bool) {\n        return super.paused();\n    }\n}"
      },
      "contracts/ZaaNetNetwork.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./ZaaNetStorage.sol\";\n\ninterface IZaaNetAdmin {\n    function hostingFee() external view returns (uint256);\n\n    function treasuryAddress() external view returns (address);\n}\n\ncontract ZaaNetNetwork is Ownable, Pausable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    ZaaNetStorage public storageContract;\n    IZaaNetAdmin public adminContract;\n    IERC20 public usdt;\n\n    // Constants for validation (updated for 6-decimal USDT)\n    uint256 public constant MIN_PRICE_PER_SESSION = 10000; // 0.01 USDT (6 decimals)\n    uint256 public constant MAX_PRICE_PER_SESSION = 50000000; // 50 USDT (6 decimals)\n    uint256 public constant MAX_MONGO_DATA_LENGTH = 200; // Reasonable limit for data ID\n\n    mapping(address => bool) public isHost;\n    mapping(address => uint256[]) private hostNetworks;\n    mapping(uint256 => address) public networkToHost; // For quick lookups\n\n    // Rate limiting\n    mapping(address => uint256) public lastRegistrationTime;\n    uint256 public constant REGISTRATION_COOLDOWN = 1 minutes;\n\n    // Enhanced events\n    event NetworkRegistered(\n        uint256 indexed networkId,\n        address indexed hostAddress,\n        string mongoDataId,\n        uint256 pricePerSession,\n        bool isActive,\n        uint256 hostingFeePaid,\n        uint256 timestamp\n    );\n\n    event HostingFeePaid(\n        address indexed host,\n        uint256 amount,\n        uint256 timestamp\n    );\n\n    event NetworkUpdated(\n        uint256 indexed networkId,\n        address indexed hostAddress,\n        uint256 pricePerSession,\n        string mongoDataId,\n        bool isActive\n    );\n\n    event NetworkPriceUpdated(\n        uint256 indexed networkId,\n        uint256 oldPrice,\n        uint256 newPrice\n    );\n\n    event NetworkStatusChanged(\n        uint256 indexed networkId,\n        bool oldStatus,\n        bool newStatus\n    );\n\n    event HostAdded(address indexed host);\n\n    constructor(\n        address _storageContract,\n        address _adminContract,\n        address _usdt\n    ) Ownable(msg.sender) {\n        require(\n            _storageContract != address(0),\n            \"Invalid storage contract address\"\n        );\n        require(_adminContract != address(0), \"Invalid admin contract address\");\n        require(_usdt != address(0), \"Invalid USDT contract address\");\n\n        storageContract = ZaaNetStorage(_storageContract);\n        adminContract = IZaaNetAdmin(_adminContract);\n        usdt = IERC20(_usdt);\n    }\n\n    /// @notice Register a new network with mongoDataID and pay hosting fee\n    function registerNetwork(\n        uint256 _pricePerSession,\n        string memory _mongoDataId,\n        bool _isActive\n    ) external whenNotPaused nonReentrant {\n        require(\n            block.timestamp >=\n                lastRegistrationTime[msg.sender] + REGISTRATION_COOLDOWN,\n            \"Registration cooldown active\"\n        );\n        require(\n            _pricePerSession >= MIN_PRICE_PER_SESSION &&\n                _pricePerSession <= MAX_PRICE_PER_SESSION,\n            \"Price out of allowed range\"\n        );\n        require(\n            bytes(_mongoDataId).length > 0 &&\n                bytes(_mongoDataId).length <= MAX_MONGO_DATA_LENGTH,\n            \"Invalid MongoDataID length\"\n        );\n\n        // Get hosting fee from admin contract\n        uint256 hostingFee = adminContract.hostingFee();\n        address treasuryAddress = adminContract.treasuryAddress();\n\n        // Collect hosting fee if required\n        if (hostingFee > 0 && treasuryAddress != address(0)) {\n            require(\n                usdt.balanceOf(msg.sender) >= hostingFee,\n                \"Insufficient USDT balance for hosting fee\"\n            );\n            require(\n                usdt.allowance(msg.sender, address(this)) >= hostingFee,\n                \"Hosting fee not approved\"\n            );\n\n            // Transfer hosting fee to treasury\n            usdt.safeTransferFrom(msg.sender, treasuryAddress, hostingFee);\n\n            // Increase ZaaNet earnings and total hosting amount in storage\n            storageContract.increaseZaaNetEarnings(hostingFee);\n            storageContract.updateTotalHostingAmount(hostingFee);\n\n            emit HostingFeePaid(msg.sender, hostingFee, block.timestamp);\n        }\n\n        // Request a new ID from storage\n        uint256 networkId = storageContract.incrementNetworkId();\n\n        // Save the network details into storage\n        storageContract.setNetwork(\n            networkId,\n            ZaaNetStorage.Network({\n                id: networkId,\n                hostAddress: msg.sender,\n                pricePerSession: _pricePerSession,\n                mongoDataId: _mongoDataId,\n                isActive: _isActive,\n                createdAt: block.timestamp,\n                updatedAt: block.timestamp\n            })\n        );\n\n        hostNetworks[msg.sender].push(networkId);\n        networkToHost[networkId] = msg.sender;\n        lastRegistrationTime[msg.sender] = block.timestamp;\n\n        if (!isHost[msg.sender]) {\n            isHost[msg.sender] = true;\n            emit HostAdded(msg.sender);\n        }\n\n        // Enhanced event with hosting fee information\n        emit NetworkRegistered(\n            networkId,\n            msg.sender,\n            _mongoDataId,\n            _pricePerSession,\n            _isActive,\n            hostingFee,\n            block.timestamp\n        );\n    }\n\n    /// @notice Internal function to update network details\n    function _updateNetwork(\n        uint256 _networkId,\n        uint256 _pricePerSession,\n        bool _isActive,\n        address sender\n    ) internal {\n        ZaaNetStorage.Network memory network = storageContract.getNetwork(\n            _networkId\n        );\n        require(network.hostAddress == sender, \"Only host can update\");\n        require(\n            _pricePerSession >= MIN_PRICE_PER_SESSION &&\n                _pricePerSession <= MAX_PRICE_PER_SESSION,\n            \"Price out of allowed range\"\n        );\n\n        // Store old values for events\n        uint256 oldPrice = network.pricePerSession;\n        bool oldStatus = network.isActive;\n\n        storageContract.setNetwork(\n            _networkId,\n            ZaaNetStorage.Network({\n                id: _networkId,\n                hostAddress: sender,\n                pricePerSession: _pricePerSession,\n                mongoDataId: network.mongoDataId, // Keep existing metadata\n                isActive: _isActive,\n                createdAt: network.createdAt, // Keep original creation time\n                updatedAt: block.timestamp\n            })\n        );\n\n        // Emit detailed events for better tracking\n        if (oldPrice != _pricePerSession) {\n            emit NetworkPriceUpdated(_networkId, oldPrice, _pricePerSession);\n        }\n        if (oldStatus != _isActive) {\n            emit NetworkStatusChanged(_networkId, oldStatus, _isActive);\n        }\n\n        emit NetworkUpdated(\n            _networkId,\n            sender,\n            _pricePerSession,\n            network.mongoDataId,\n            _isActive\n        );\n    }\n\n    /// @notice Update existing network with new details\n    function updateNetwork(\n        uint256 _networkId,\n        uint256 _pricePerSession,\n        bool _isActive\n    ) external whenNotPaused nonReentrant {\n        _updateNetwork(_networkId, _pricePerSession, _isActive, msg.sender);\n    }\n\n    /// @notice Deactivate a network (soft delete)\n    function deactivateNetwork(uint256 _networkId) external whenNotPaused {\n        ZaaNetStorage.Network memory network = storageContract.getNetwork(\n            _networkId\n        );\n        require(network.hostAddress == msg.sender, \"Only host can deactivate\");\n        require(network.isActive, \"Network already inactive\");\n\n        _updateNetwork(_networkId, network.pricePerSession, false, msg.sender);\n    }\n\n    /// @notice Get full network details from storage\n    function getHostedNetworkById(\n        uint256 _networkId\n    ) external view returns (ZaaNetStorage.Network memory) {\n        return storageContract.getNetwork(_networkId);\n    }\n\n    /// @notice Get all network IDs registered by a host\n    function getHostNetworks(\n        address hostAddress\n    ) external view returns (uint256[] memory) {\n        return hostNetworks[hostAddress];\n    }\n\n    /// @notice Get active networks for a host\n    function getActiveHostNetworks(\n        address hostAddress\n    ) external view returns (ZaaNetStorage.Network[] memory) {\n        uint256[] memory networkIds = hostNetworks[hostAddress];\n        uint256 activeCount = 0;\n\n        // First pass: count active networks\n        for (uint256 i = 0; i < networkIds.length; i++) {\n            ZaaNetStorage.Network memory network = storageContract.getNetwork(\n                networkIds[i]\n            );\n            if (network.isActive) {\n                activeCount++;\n            }\n        }\n\n        // Second pass: populate active networks\n        ZaaNetStorage.Network[]\n            memory activeNetworks = new ZaaNetStorage.Network[](activeCount);\n        uint256 index = 0;\n        for (uint256 i = 0; i < networkIds.length; i++) {\n            ZaaNetStorage.Network memory network = storageContract.getNetwork(\n                networkIds[i]\n            );\n            if (network.isActive) {\n                activeNetworks[index] = network;\n                index++;\n            }\n        }\n\n        return activeNetworks;\n    }\n\n    /// @notice Public method to check if an address is a registered host\n    function isRegisteredHost(\n        address hostAddress\n    ) external view returns (bool) {\n        return isHost[hostAddress];\n    }\n\n    /// @notice Get host statistics\n    function getHostStats(\n        address hostAddress\n    )\n        external\n        view\n        returns (\n            uint256 totalNetworks,\n            uint256 activeNetworks,\n            uint256 totalEarnings\n        )\n    {\n        totalNetworks = hostNetworks[hostAddress].length;\n        totalEarnings = storageContract.getHostEarnings(hostAddress);\n\n        // Count active networks\n        uint256[] memory networkIds = hostNetworks[hostAddress];\n        for (uint256 i = 0; i < networkIds.length; i++) {\n            ZaaNetStorage.Network memory network = storageContract.getNetwork(\n                networkIds[i]\n            );\n            if (network.isActive) {\n                activeNetworks++;\n            }\n        }\n    }\n\n    /// @notice Retrieve networks with pagination (gas-optimized)\n    function getNetworksPaginated(\n        uint256 offset,\n        uint256 limit\n    )\n        external\n        view\n        returns (ZaaNetStorage.Network[] memory networks, uint256 totalCount)\n    {\n        return storageContract.getNetworksPaginated(offset, limit);\n    }\n\n    /// @notice Get all active networks (limited to prevent gas issues)\n    function getAllActiveNetworks()\n        external\n        view\n        returns (ZaaNetStorage.Network[] memory)\n    {\n        (ZaaNetStorage.Network[] memory allNetworks, ) = storageContract\n            .getNetworksPaginated(0, 100);\n        uint256 activeCount = 0;\n\n        // Count active networks first\n        for (uint256 i = 0; i < allNetworks.length; i++) {\n            if (allNetworks[i].isActive) {\n                activeCount++;\n            }\n        }\n\n        // Create properly sized array and populate with active networks\n        ZaaNetStorage.Network[]\n            memory activeNetworks = new ZaaNetStorage.Network[](activeCount);\n        uint256 index = 0;\n        for (uint256 i = 0; i < allNetworks.length; i++) {\n            if (allNetworks[i].isActive) {\n                activeNetworks[index] = allNetworks[i];\n                index++;\n            }\n        }\n\n        return activeNetworks;\n    }\n\n    /// @notice Get current hosting fee\n    function getCurrentHostingFee() external view returns (uint256) {\n        return adminContract.hostingFee();\n    }\n\n    /// @notice Get treasury address\n    function getTreasuryAddress() external view returns (address) {\n        return adminContract.treasuryAddress();\n    }\n\n    // --- Admin Functions ---\n\n    /// @notice Update admin contract address (owner only)\n    function setAdminContract(address _newAdminContract) external onlyOwner {\n        require(_newAdminContract != address(0), \"Invalid admin contract\");\n        adminContract = IZaaNetAdmin(_newAdminContract);\n    }\n\n    /// @notice Update USDT contract address (owner only)\n    function setUsdtContract(address _newUsdt) external onlyOwner {\n        require(_newUsdt != address(0), \"Invalid USDT contract\");\n        usdt = IERC20(_newUsdt);\n    }\n\n    /// @notice Emergency pause (only owner)\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /// @notice Unpause (only owner)\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /// @notice Get contract statistics\n    function getContractStats() external view returns (uint256 totalNetworks) {\n        totalNetworks = storageContract.networkIdCounter();\n    }\n}\n"
      },
      "contracts/ZaaNetPayment.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\ninterface IZaaNetStorage {\n    struct Network {\n        uint256 id;\n        address hostAddress;\n        uint256 pricePerSession;\n        string mongoDataId;\n        bool isActive;\n        uint256 createdAt;\n        uint256 updatedAt;\n    }\n\n    function getNetwork(\n        uint256 networkId\n    ) external view returns (Network memory);\n\n    function increaseHostEarnings(address host, uint256 amount) external;\n\n    function increaseZaaNetEarnings(uint256 amount) external;\n\n   function updateTotalPaymentsAmount(uint256 amount) external;\n\n    function updateTotalWithdrawalsAmount(uint256 amount) external;\n\n    function updateTotalHostingAmount(uint256 amount) external;\n}\n\ninterface IZaaNetAdmin {\n    function platformFeePercent() external view returns (uint256);\n\n    function treasuryAddress() external view returns (address);\n\n    function paymentAddress() external view returns (address);\n}\n\ncontract ZaaNetPayment is Ownable, Pausable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    IERC20 public usdt;\n    uint8 public tokenDecimals;\n\n    IZaaNetStorage public storageContract;\n    IZaaNetAdmin public adminContract;\n\n    struct BatchPayment {\n        uint256 contractId;\n        uint256 grossAmount;\n        bytes32 voucherId;\n    }\n\n    // Security controls\n    uint256 public constant MAX_INDIVIDUAL_PAYMENT = 50 * (10 ** 6); // 50 USDT\n\n    uint256 public constant MAX_FEERATE_PERCENT = 20; // 20% maximum\n\n    // Daily withdrawal limits\n    uint256 public dailyWithdrawalLimit = 10000 * (10 ** 6); // 10K USDT\n    mapping(uint256 => uint256) public dailyWithdrawals; // day => amount withdrawn\n\n    // Payment validation\n    mapping(bytes32 => bool) public processedVouchers; // Prevent double processing\n\n    // Events\n    event PaymentProcessed(\n        bytes32 indexed voucherId,\n        uint256 indexed contractId,\n        address indexed host,\n        address payer,\n        uint256 grossAmount,\n        uint256 platformFee,\n        uint256 hostAmount,\n        uint256 timestamp\n    );\n\n    event DailyLimitExceeded(\n        address indexed treasury,\n        uint256 attemptedAmount,\n        uint256 dailyLimit,\n        uint256 alreadyWithdrawn\n    );\n\n    event BatchPaymentProcessed(\n        uint256 batchSize,\n        uint256 totalAmount,\n        uint256 totalPlatformFee\n    );\n\n    // Modifiers\n    modifier onlyTreasuryOrOwner() {\n        address treasury = adminContract.treasuryAddress();\n        require(\n            msg.sender == owner() ||\n                (treasury != address(0) && msg.sender == treasury),\n            \"Not authorized\"\n        );\n        _;\n    }\n\n    modifier withinDailyLimit(uint256 amount) {\n        uint256 today = block.timestamp / 1 days;\n        uint256 newDailyTotal = dailyWithdrawals[today] + amount;\n\n        if (newDailyTotal > dailyWithdrawalLimit) {\n            emit DailyLimitExceeded(\n                msg.sender,\n                amount,\n                dailyWithdrawalLimit,\n                dailyWithdrawals[today]\n            );\n            require(false, \"Daily withdrawal limit exceeded\");\n        }\n\n        dailyWithdrawals[today] = newDailyTotal;\n        _;\n    }\n\n    constructor(\n        address _usdt,\n        address _storageContract,\n        address _adminContract\n    ) Ownable(msg.sender) {\n        require(_usdt != address(0), \"token zero\");\n        require(_storageContract != address(0), \"storage zero\");\n        require(_adminContract != address(0), \"admin zero\");\n\n        usdt = IERC20(_usdt);\n        tokenDecimals = IERC20Metadata(_usdt).decimals();\n\n        storageContract = IZaaNetStorage(_storageContract);\n        adminContract = IZaaNetAdmin(_adminContract);\n    }\n\n    /**\n     * @notice Process a payment for a voucher with enhanced security controls\n     * @param _contractId The ID of the network contract\n     * @param _grossAmount The total amount paid by the user (in USDT, 6 decimals)\n     * @param _voucherId Unique voucher ID to prevent double processing\n     * @dev Enforces max individual payment, daily limits, and prevents double processing\n     */\n    function processPayment(\n        uint256 _contractId,\n        uint256 _grossAmount,\n        bytes32 _voucherId\n    ) external whenNotPaused nonReentrant withinDailyLimit(_grossAmount) {\n        // Only payment address can call this\n        require(\n            msg.sender == adminContract.paymentAddress(),\n            \"Not payment address\"\n        );\n\n        // Prevent double processing\n        require(!processedVouchers[_voucherId], \"Voucher already processed\");\n\n        // Validate individual payment against MAX_INDIVIDUAL_PAYMENT\n        require(\n            _grossAmount > 0 && _grossAmount <= MAX_INDIVIDUAL_PAYMENT,\n            \"Invalid amount\"\n        );\n\n        // Validate network\n        IZaaNetStorage.Network memory network = storageContract.getNetwork(\n            _contractId\n        );\n        require(network.isActive, \"Network not active\");\n        require(_grossAmount >= network.pricePerSession, \"Amount too low\");\n\n        // Get platform fee\n        uint256 feePercent = adminContract.platformFeePercent();\n        require(feePercent <= MAX_FEERATE_PERCENT, \"Fee too high\");\n\n        // Get treasury address\n        address treasuryWallet = adminContract.treasuryAddress();\n        require(treasuryWallet != address(0), \"Invalid treasury\");\n\n        // Get payment address\n        address paymentWallet = adminContract.paymentAddress();\n        require(paymentWallet != address(0), \"Invalid payment\");\n        require(msg.sender == paymentWallet, \"Not payment address\");\n\n        // Process normal payment\n        _executePayment(\n            _contractId,\n            _grossAmount,\n            _voucherId,\n            network,\n            feePercent,\n            treasuryWallet\n        );\n    }\n\n    /**\n     * @notice Process a batch of payments for vouchers with enhanced security controls\n     * @dev Limits: max 50 payments per batch, total batch amount must not exceed daily limit\n     * @param payments Array of BatchPayment structs\n     */\n    function processBatchPayments(\n        BatchPayment[] calldata payments\n    ) external whenNotPaused nonReentrant {\n        // Only payment address can call this\n        require(\n            msg.sender == adminContract.paymentAddress(),\n            \"Not payment address\"\n        );\n        require(\n            payments.length > 0 && payments.length <= 50,\n            \"Invalid batch size\"\n        );\n\n        uint256 totalAmount = 0;\n        uint256 feePercent = adminContract.platformFeePercent();\n        require(feePercent <= MAX_FEERATE_PERCENT, \"Fee too high\");\n\n        address treasuryWallet = adminContract.treasuryAddress();\n        require(treasuryWallet != address(0), \"Invalid treasury\");\n\n        // First pass: validate all payments and calculate total\n        for (uint256 i = 0; i < payments.length; i++) {\n            BatchPayment memory payment = payments[i];\n\n            // Basic validations\n            require(\n                payment.grossAmount > 0 &&\n                    payment.grossAmount <= MAX_INDIVIDUAL_PAYMENT,\n                \"Invalid amount\"\n            );\n            require(\n                !processedVouchers[payment.voucherId],\n                \"Voucher already processed\"\n            );\n\n            // Validate network\n            IZaaNetStorage.Network memory network = storageContract.getNetwork(\n                payment.contractId\n            );\n            require(network.isActive, \"Network not active\");\n            require(\n                payment.grossAmount >= network.pricePerSession,\n                \"Amount too low\"\n            );\n\n            totalAmount += payment.grossAmount;\n        }\n\n        // Check daily limit for total batch\n        require(totalAmount <= getRemainingDailyLimit(), \"Exceeds daily limit\");\n\n        // Update daily withdrawals\n        uint256 today = block.timestamp / 1 days;\n        dailyWithdrawals[today] += totalAmount;\n\n        // Check contract balance\n        require(\n            usdt.balanceOf(address(this)) >= totalAmount,\n            \"Insufficient contract balance\"\n        );\n\n        // Second pass: execute all payments\n        uint256 totalPlatformFee = 0;\n\n        for (uint256 i = 0; i < payments.length; i++) {\n            BatchPayment memory payment = payments[i];\n\n            IZaaNetStorage.Network memory network = storageContract.getNetwork(\n                payment.contractId\n            );\n\n            uint256 platformFee = (payment.grossAmount * feePercent) / 100;\n            uint256 hostAmount = payment.grossAmount - platformFee;\n\n            // Transfer to host\n            usdt.safeTransfer(network.hostAddress, hostAmount);\n\n            // Update earnings\n            storageContract.increaseHostEarnings(\n                network.hostAddress,\n                hostAmount\n            );\n\n            totalPlatformFee += platformFee;\n\n\n            // Mark as processed to prevent double-processing\n            processedVouchers[payment.voucherId] = true;\n\n            // Emit individual event\n            emit PaymentProcessed(\n                payment.voucherId,\n                payment.contractId,\n                network.hostAddress,\n                msg.sender,\n                payment.grossAmount,\n                platformFee,\n                hostAmount,\n                block.timestamp\n            );\n        }\n\n        // Transfer total platform fees\n        if (totalPlatformFee > 0) {\n            usdt.safeTransfer(treasuryWallet, totalPlatformFee);\n            storageContract.increaseZaaNetEarnings(totalPlatformFee);\n        }\n\n        // Update total payments amount in storage\n        storageContract.updateTotalPaymentsAmount(totalAmount);\n\n        emit BatchPaymentProcessed(\n            payments.length,\n            totalAmount,\n            totalPlatformFee\n        );\n    }\n\n    /**\n     * @notice Internal function to execute payment\n     * @param _contractId The ID of the network contract\n     * @param _grossAmount The total amount paid by the user (in USDT, 6 decimals)\n     * @param _voucherId Unique voucher ID to prevent double processing\n     * @param network The network details from storage\n     * @param feePercent The platform fee percentage\n     * @param treasuryWallet The treasury wallet address\n     * @dev Assumes all validations are done prior to calling this function\n     */\n    function _executePayment(\n        uint256 _contractId,\n        uint256 _grossAmount,\n        bytes32 _voucherId,\n        IZaaNetStorage.Network memory network,\n        uint256 feePercent,\n        address treasuryWallet\n    ) internal {\n        // Mark voucher as processed\n        processedVouchers[_voucherId] = true;\n\n        // Calculate fee and host share\n        uint256 platformFee = (_grossAmount * feePercent) / 100;\n        uint256 hostAmount = _grossAmount - platformFee;\n\n        // Final balance check\n        require(\n            usdt.balanceOf(address(this)) >= hostAmount + platformFee,\n            \"Insufficient contract balance for payment\"\n        );\n\n        // Transfer host payment\n        usdt.safeTransfer(network.hostAddress, hostAmount);\n\n        // Transfer platform fee\n        if (platformFee > 0) {\n            usdt.safeTransfer(treasuryWallet, platformFee);\n        }\n\n        // Update storage\n        storageContract.increaseHostEarnings(network.hostAddress, hostAmount);\n        if (platformFee > 0) {\n            storageContract.increaseZaaNetEarnings(platformFee);\n        }\n\n        // Update total payments amount in storage\n        storageContract.updateTotalPaymentsAmount(_grossAmount);\n\n        emit PaymentProcessed(\n            _voucherId,\n            _contractId,\n            network.hostAddress,\n            msg.sender,\n            _grossAmount,\n            platformFee,\n            hostAmount,\n            block.timestamp\n        );\n    }\n\n    /**\n     * @notice Set daily withdrawal limit (owner only)\n     */\n    function setDailyWithdrawalLimit(uint256 _newLimit) external onlyOwner {\n        require(_newLimit > 0, \"Invalid limit\");\n        dailyWithdrawalLimit = _newLimit;\n    }\n\n    /**\n     * @notice Get today's withdrawal amount\n     */\n    function getTodayWithdrawals() external view returns (uint256) {\n        uint256 today = block.timestamp / 1 days;\n        return dailyWithdrawals[today];\n    }\n\n    /**\n     * @notice Check if voucher has been processed\n     */\n    function isVoucherProcessed(\n        bytes32 _voucherId\n    ) external view returns (bool) {\n        return processedVouchers[_voucherId];\n    }\n\n    /**\n     * @notice Get remaining daily limit\n     */\n    function getRemainingDailyLimit() public view returns (uint256) {\n        uint256 today = block.timestamp / 1 days;\n        uint256 used = dailyWithdrawals[today];\n        return used >= dailyWithdrawalLimit ? 0 : dailyWithdrawalLimit - used;\n    }\n\n    // Existing functions remain the same...\n    function withdrawToken(address _to, uint256 _amount) external onlyOwner {\n        require(_to != address(0), \"Invalid recipient address\");\n        require(_amount > 0, \"Amount must be greater than zero\");\n        require(usdt.balanceOf(address(this)) >= _amount, \"Insufficient contract balance\");\n        require(_amount <= getRemainingDailyLimit(), \"Exceeds daily withdrawal limit\");\n        usdt.safeTransfer(_to, _amount);\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function rescueERC20(\n        address _erc20,\n        address _to,\n        uint256 _amount\n    ) external onlyOwner {\n        require(_to != address(0), \"zero to\");\n        IERC20(_erc20).safeTransfer(_to, _amount);\n    }\n\n    function contractTokenBalance() external view returns (uint256) {\n        return usdt.balanceOf(address(this));\n    }\n}\n"
      },
      "contracts/ZaaNetStorage.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract ZaaNetStorage is Ownable, ReentrancyGuard {\n    struct Network {\n        uint256 id;\n        address hostAddress;\n        uint256 pricePerSession;\n        string mongoDataId;\n        bool isActive;\n        uint256 createdAt;\n        uint256 updatedAt;\n    }\n\n    mapping(address => bool) public allowedCallers; // Addresses allowed to call storage functions\n    uint256 public networkIdCounter; // Counter for network IDs\n    uint256 public totalPaymentsAmount = 0; // Total amount processed through payments\n    uint256 public totalWithdrawalsAmount = 0; // Total amount processed through withdrawals\n    uint256 public totalHostingAmount = 0; // Total amount processed through hosting\n    uint256 public zaanetEarnings = 0; // Total earnings for ZaaNet platform\n    mapping(uint256 => Network) public networks;\n    mapping(address => uint256) public hostEarnings;\n    \n\n    // New mappings for better data management\n    mapping(address => uint256[]) public hostNetworkIds;\n    mapping(uint256 => bool) public networkExists;\n    mapping(uint256 => bool) public sessionExists;\n\n    modifier onlyAllowed() {\n        require(\n            allowedCallers[msg.sender] || msg.sender == owner(),\n            \"Not authorized\"\n        );\n        _;\n    }\n\n    event AllowedCallerUpdated(address indexed caller, bool status);\n    event NetworkStored(\n        uint256 indexed id,\n        address indexed hostAddress,\n        uint256 pricePerSession\n    );\n    event NetworkUpdated(uint256 indexed id, address indexed hostAddress);\n    event SessionStored(\n        uint256 indexed sessionId,\n        address indexed paymentAddress,\n        uint256 amount\n    );\n    event HostEarningsUpdated(address indexed hostAddress, uint256 totalEarned);\n    event ZaaNetEarningsUpdated(uint256 totalEarned);\n\n    // --- Constructor ---\n    constructor() Ownable(msg.sender) {}\n\n    // --- Caller Management ---\n    function setAllowedCaller(address _caller, bool status) external onlyOwner {\n        require(_caller != address(0), \"Invalid caller address\");\n        allowedCallers[_caller] = status;\n        emit AllowedCallerUpdated(_caller, status);\n    }\n\n    // Batch set allowed callers for initial setup\n    function setAllowedCallers(\n        address[] calldata _callers,\n        bool status\n    ) external onlyOwner {\n        for (uint256 i = 0; i < _callers.length; i++) {\n            require(_callers[i] != address(0), \"Invalid caller address\");\n            allowedCallers[_callers[i]] = status;\n            emit AllowedCallerUpdated(_callers[i], status);\n        }\n    }\n\n    // --- Network Functions ---\n    function incrementNetworkId() external onlyAllowed returns (uint256) {\n        return ++networkIdCounter;\n    }\n\n    function setNetwork(uint256 id, Network calldata net) external onlyAllowed {\n        require(id > 0, \"Invalid network ID\");\n        require(net.hostAddress != address(0), \"Invalid host address\");\n        require(net.pricePerSession > 0, \"Price must be greater than 0\");\n        require(bytes(net.mongoDataId).length > 0, \"MongoDataID required\");\n\n        bool isNewNetwork = !networkExists[id];\n\n        networks[id] = Network({\n            id: net.id,\n            hostAddress: net.hostAddress,\n            pricePerSession: net.pricePerSession,\n            mongoDataId: net.mongoDataId,\n            isActive: net.isActive,\n            createdAt: isNewNetwork ? block.timestamp : networks[id].createdAt,\n            updatedAt: block.timestamp\n        });\n\n        if (isNewNetwork) {\n            networkExists[id] = true;\n            hostNetworkIds[net.hostAddress].push(id);\n            emit NetworkStored(id, net.hostAddress, net.pricePerSession);\n        } else {\n            emit NetworkUpdated(id, net.hostAddress);\n        }\n    }\n\n    function getNetwork(uint256 id) external view returns (Network memory) {\n        require(networkExists[id], \"Network does not exist\");\n        return networks[id];\n    }\n\n    function getNetworksPaginated(\n        uint256 offset,\n        uint256 limit\n    ) external view returns (Network[] memory, uint256 total) {\n        total = networkIdCounter;\n        if (offset >= total) {\n            return (new Network[](0), total);\n        }\n\n        uint256 end = offset + limit;\n        if (end > total) {\n            end = total;\n        }\n\n        Network[] memory result = new Network[](end - offset);\n        for (uint256 i = offset; i < end; i++) {\n            result[i - offset] = networks[i + 1]; // Networks start at ID 1\n        }\n\n        return (result, total);\n    }\n\n    function getHostNetworks(\n        address hostAddress\n    ) external view returns (uint256[] memory) {\n        return hostNetworkIds[hostAddress];\n    }\n\n    // --- Earnings ---\n    function increaseHostEarnings(\n        address hostAddress,\n        uint256 amount\n    ) external onlyAllowed nonReentrant {\n        require(hostAddress != address(0), \"Invalid host address\");\n        require(amount > 0, \"Amount must be greater than 0\");\n\n        hostEarnings[hostAddress] += amount;\n        emit HostEarningsUpdated(hostAddress, hostEarnings[hostAddress]);\n    }\n\n    function getHostEarnings(\n        address hostAddress\n    ) external view returns (uint256) {\n        return hostEarnings[hostAddress];\n    }\n\n    function increaseZaaNetEarnings(\n        uint256 amount\n    ) external onlyAllowed nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        zaanetEarnings += amount;\n    }\n\n    function getZaaNetEarnings() external view returns (uint256) {\n        return zaanetEarnings;\n    }\n\n    function updateTotalPaymentsAmount(\n        uint256 amount\n    ) external onlyAllowed nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        totalPaymentsAmount += amount;\n    }\n    function updateTotalWithdrawalsAmount(\n        uint256 amount\n    ) external onlyAllowed nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        totalWithdrawalsAmount += amount;\n    }\n    function updateTotalHostingAmount(\n        uint256 amount\n    ) external onlyAllowed nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        totalHostingAmount += amount;\n    }\n    // Emergency function to deactivate a network\n    function emergencyDeactivateNetwork(uint256 networkId) external onlyOwner {\n        require(networkExists[networkId], \"Network does not exist\");\n        networks[networkId].isActive = false;\n        networks[networkId].updatedAt = block.timestamp;\n        emit NetworkUpdated(networkId, networks[networkId].hostAddress);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              835
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 836,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 835,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 835,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                835
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 817,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 817,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
          "exportedSymbols": {
            "IERC1363": [
              229
            ],
            "IERC165": [
              1024
            ],
            "IERC20": [
              315
            ]
          },
          "id": 230,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 230,
              "sourceUnit": 238,
              "src": "133:36:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 150,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 315,
                    "src": "141:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 153,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 230,
              "sourceUnit": 234,
              "src": "170:38:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 152,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1024,
                    "src": "178:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 155,
                    "name": "IERC20",
                    "nameLocations": [
                      "590:6:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 315,
                    "src": "590:6:1"
                  },
                  "id": 156,
                  "nodeType": "InheritanceSpecifier",
                  "src": "590:6:1"
                },
                {
                  "baseName": {
                    "id": 157,
                    "name": "IERC165",
                    "nameLocations": [
                      "598:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1024,
                    "src": "598:7:1"
                  },
                  "id": 158,
                  "nodeType": "InheritanceSpecifier",
                  "src": "598:7:1"
                }
              ],
              "canonicalName": "IERC1363",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 154,
                "nodeType": "StructuredDocumentation",
                "src": "210:357:1",
                "text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
              },
              "fullyImplemented": false,
              "id": 229,
              "linearizedBaseContracts": [
                229,
                1024,
                315
              ],
              "name": "IERC1363",
              "nameLocation": "578:8:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 159,
                    "nodeType": "StructuredDocumentation",
                    "src": "1148:370:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "1296ee62",
                  "id": 168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "1532:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1556:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1548:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1548:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1568:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1560:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1560:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1547:27:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1593:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1592:6:1"
                  },
                  "scope": 229,
                  "src": "1523:76:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "1605:453:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "4000aea0",
                  "id": 180,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "2072:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2096:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2088:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2088:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2108:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2100:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2130:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2115:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2115:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2087:48:1"
                  },
                  "returnParameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2154:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:6:1"
                  },
                  "scope": 229,
                  "src": "2063:97:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 181,
                    "nodeType": "StructuredDocumentation",
                    "src": "2166:453:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "d8fbe994",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "2633:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2661:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2653:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2675:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2667:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2667:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2687:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2679:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2679:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2652:41:1"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2712:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:6:1"
                  },
                  "scope": 229,
                  "src": "2624:94:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "2724:536:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "c1d34b89",
                  "id": 206,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "3274:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3302:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3294:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3294:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3316:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3308:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3308:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3328:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3320:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3320:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3350:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3335:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3335:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3293:62:1"
                  },
                  "returnParameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3374:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3374:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3373:6:1"
                  },
                  "scope": 229,
                  "src": "3265:115:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "3386:390:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "3177029f",
                  "id": 216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "3790:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3813:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3805:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3805:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3830:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3822:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3822:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3804:32:1"
                  },
                  "returnParameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3855:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3855:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3854:6:1"
                  },
                  "scope": 229,
                  "src": "3781:80:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "3867:478:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "cae9ca51",
                  "id": 228,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "4359:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4382:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4374:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4399:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4391:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4391:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4421:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4406:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4406:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4373:53:1"
                  },
                  "returnParameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4445:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4445:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4444:6:1"
                  },
                  "scope": 229,
                  "src": "4350:101:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 230,
              "src": "568:3885:1",
              "usedErrors": [],
              "usedEvents": [
                249,
                258
              ]
            }
          ],
          "src": "107:4347:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1024
            ]
          },
          "id": 234,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 231,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../utils/introspection/IERC165.sol",
              "id": 233,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 234,
              "sourceUnit": 1025,
              "src": "132:59:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 232,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1024,
                    "src": "140:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "106:86:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              315
            ]
          },
          "id": 238,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 235,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 237,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 238,
              "sourceUnit": 316,
              "src": "131:49:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 236,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 315,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "105:76:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              315
            ]
          },
          "id": 316,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 239,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 240,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:4",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 315,
              "linearizedBaseContracts": [
                315
              ],
              "name": "IERC20",
              "nameLocation": "214:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 241,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 249,
                  "name": "Transfer",
                  "nameLocation": "396:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "405:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "427:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "447:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:4"
                  },
                  "src": "390:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 258,
                  "name": "Approval",
                  "nameLocation": "627:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "636:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "659:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "684:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:4"
                  },
                  "src": "621:78:4"
                },
                {
                  "documentation": {
                    "id": 259,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 264,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:4"
                  },
                  "returnParameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "821:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:4"
                  },
                  "scope": 315,
                  "src": "775:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 265,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 272,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "931:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:4"
                  },
                  "returnParameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "971:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:4"
                  },
                  "scope": 315,
                  "src": "912:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 273,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 282,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1222:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1234:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:4"
                  },
                  "returnParameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 280,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1267:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:4"
                  },
                  "scope": 315,
                  "src": "1204:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 283,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 292,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 288,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "1567:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "1582:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:4"
                  },
                  "returnParameters": {
                    "id": 291,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 290,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "1622:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 289,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:4"
                  },
                  "scope": 315,
                  "src": "1548:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 293,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 302,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2326:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2343:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:4"
                  },
                  "returnParameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 300,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2376:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:4"
                  },
                  "scope": 315,
                  "src": "2309:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 303,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 314,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 314,
                        "src": "2712:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 314,
                        "src": "2726:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 314,
                        "src": "2738:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:4"
                  },
                  "returnParameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 314,
                        "src": "2771:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:4"
                  },
                  "scope": 315,
                  "src": "2690:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 316,
              "src": "204:2575:4",
              "usedErrors": [],
              "usedEvents": [
                249,
                258
              ]
            }
          ],
          "src": "106:2674:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              315
            ],
            "IERC20Metadata": [
              341
            ]
          },
          "id": 342,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 317,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 319,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 342,
              "sourceUnit": 316,
              "src": "151:37:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 318,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 315,
                    "src": "159:6:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 321,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 315,
                    "src": "306:6:5"
                  },
                  "id": 322,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:5"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 320,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:5",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 341,
              "linearizedBaseContracts": [
                341,
                315
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 323,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:5",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 328,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 324,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:5"
                  },
                  "returnParameters": {
                    "id": 327,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 326,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "417:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:5"
                  },
                  "scope": 341,
                  "src": "378:54:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 329,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:5",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 334,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 330,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:5"
                  },
                  "returnParameters": {
                    "id": 333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 332,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "540:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:5"
                  },
                  "scope": 341,
                  "src": "499:56:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 335,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:5",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 340,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:5"
                  },
                  "returnParameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "674:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:5"
                  },
                  "scope": 341,
                  "src": "631:50:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 342,
              "src": "278:405:5",
              "usedErrors": [],
              "usedEvents": [
                249,
                258
              ]
            }
          ],
          "src": "125:559:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "IERC1363": [
              229
            ],
            "IERC20": [
              315
            ],
            "SafeERC20": [
              805
            ]
          },
          "id": 806,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 343,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 345,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 806,
              "sourceUnit": 316,
              "src": "141:37:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 344,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 315,
                    "src": "149:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
              "file": "../../../interfaces/IERC1363.sol",
              "id": 347,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 806,
              "sourceUnit": 230,
              "src": "179:58:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 346,
                    "name": "IERC1363",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 229,
                    "src": "187:8:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeERC20",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 348,
                "nodeType": "StructuredDocumentation",
                "src": "239:458:6",
                "text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 805,
              "linearizedBaseContracts": [
                805
              ],
              "name": "SafeERC20",
              "nameLocation": "706:9:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 349,
                    "nodeType": "StructuredDocumentation",
                    "src": "722:65:6",
                    "text": " @dev An operation with an ERC-20 token failed."
                  },
                  "errorSelector": "5274afe7",
                  "id": 353,
                  "name": "SafeERC20FailedOperation",
                  "nameLocation": "798:24:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "831:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "823:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "822:15:6"
                  },
                  "src": "792:46:6"
                },
                {
                  "documentation": {
                    "id": 354,
                    "nodeType": "StructuredDocumentation",
                    "src": "844:71:6",
                    "text": " @dev Indicates a failed `decreaseAllowance` request."
                  },
                  "errorSelector": "e570110f",
                  "id": 362,
                  "name": "SafeERC20FailedDecreaseAllowance",
                  "nameLocation": "926:32:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "967:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "959:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "959:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "984:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "976:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "976:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "1010:17:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "1002:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1002:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "958:70:6"
                  },
                  "src": "920:109:6"
                },
                {
                  "body": {
                    "id": 385,
                    "nodeType": "Block",
                    "src": "1291:88:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 374,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "1321:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 377,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 366,
                                    "src": "1343:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1349:8:6",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 282,
                                  "src": "1343:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 379,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 368,
                                      "src": "1360:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 380,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 370,
                                      "src": "1364:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 381,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1359:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 375,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1328:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1332:10:6",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1328:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1328:43:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 373,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "1301:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1301:71:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 384,
                        "nodeType": "ExpressionStatement",
                        "src": "1301:71:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 363,
                    "nodeType": "StructuredDocumentation",
                    "src": "1035:179:6",
                    "text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 386,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "1228:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1248:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "1241:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 365,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 364,
                            "name": "IERC20",
                            "nameLocations": [
                              "1241:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "1241:6:6"
                          },
                          "referencedDeclaration": 315,
                          "src": "1241:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 368,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1263:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "1255:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 367,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 370,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1275:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "1267:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 369,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1240:41:6"
                  },
                  "returnParameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1291:0:6"
                  },
                  "scope": 805,
                  "src": "1219:160:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "1708:98:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 400,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "1738:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 403,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 390,
                                    "src": "1760:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1766:12:6",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 314,
                                  "src": "1760:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 405,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 392,
                                      "src": "1781:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 406,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 394,
                                      "src": "1787:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 407,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 396,
                                      "src": "1791:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 408,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1780:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 401,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1745:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1749:10:6",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1745:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1745:53:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 399,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "1718:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1718:81:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 411,
                        "nodeType": "ExpressionStatement",
                        "src": "1718:81:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 387,
                    "nodeType": "StructuredDocumentation",
                    "src": "1385:228:6",
                    "text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
                  },
                  "id": 413,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1627:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1651:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "1644:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 389,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 388,
                            "name": "IERC20",
                            "nameLocations": [
                              "1644:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "1644:6:6"
                          },
                          "referencedDeclaration": 315,
                          "src": "1644:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 392,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1666:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "1658:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1658:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1680:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "1672:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1672:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1692:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "1684:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:55:6"
                  },
                  "returnParameters": {
                    "id": 398,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:0:6"
                  },
                  "scope": 805,
                  "src": "1618:188:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 438,
                    "nodeType": "Block",
                    "src": "2033:99:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 427,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "2074:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 430,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 417,
                                    "src": "2096:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 431,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2102:8:6",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 282,
                                  "src": "2096:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 432,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 419,
                                      "src": "2113:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 433,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 421,
                                      "src": "2117:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 434,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2112:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 428,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2081:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2085:10:6",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2081:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2081:43:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 426,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "2050:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2050:75:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 425,
                        "id": 437,
                        "nodeType": "Return",
                        "src": "2043:82:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 414,
                    "nodeType": "StructuredDocumentation",
                    "src": "1812:126:6",
                    "text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 439,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransfer",
                  "nameLocation": "1952:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1975:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1968:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 416,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 415,
                            "name": "IERC20",
                            "nameLocations": [
                              "1968:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "1968:6:6"
                          },
                          "referencedDeclaration": 315,
                          "src": "1968:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1990:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1982:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1982:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2002:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1994:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1994:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1967:41:6"
                  },
                  "returnParameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "2027:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2026:6:6"
                  },
                  "scope": 805,
                  "src": "1943:189:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 467,
                    "nodeType": "Block",
                    "src": "2381:109:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 455,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "2422:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 458,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 443,
                                    "src": "2444:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 459,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2450:12:6",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 314,
                                  "src": "2444:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 460,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 445,
                                      "src": "2465:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 461,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 447,
                                      "src": "2471:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 462,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 449,
                                      "src": "2475:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 463,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2464:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 456,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2429:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2433:10:6",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2429:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2429:53:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 454,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "2398:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2398:85:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 453,
                        "id": 466,
                        "nodeType": "Return",
                        "src": "2391:92:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 440,
                    "nodeType": "StructuredDocumentation",
                    "src": "2138:130:6",
                    "text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 468,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransferFrom",
                  "nameLocation": "2282:19:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 450,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2309:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "2302:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 442,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 441,
                            "name": "IERC20",
                            "nameLocations": [
                              "2302:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "2302:6:6"
                          },
                          "referencedDeclaration": 315,
                          "src": "2302:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 445,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2324:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "2316:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2316:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 447,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2338:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "2330:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 446,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 449,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "2342:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 448,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2301:55:6"
                  },
                  "returnParameters": {
                    "id": 453,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 452,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "2375:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 451,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:6"
                  },
                  "scope": 805,
                  "src": "2273:217:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 498,
                    "nodeType": "Block",
                    "src": "3232:139:6",
                    "statements": [
                      {
                        "assignments": [
                          480
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 480,
                            "mutability": "mutable",
                            "name": "oldAllowance",
                            "nameLocation": "3250:12:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 498,
                            "src": "3242:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 479,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3242:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 489,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 485,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3289:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeERC20_$805",
                                    "typeString": "library SafeERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeERC20_$805",
                                    "typeString": "library SafeERC20"
                                  }
                                ],
                                "id": 484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3281:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 483,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3281:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3281:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 487,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "3296:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 481,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "3265:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3271:9:6",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 292,
                            "src": "3265:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3242:62:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 491,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "3327:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 492,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "3334:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 493,
                                "name": "oldAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "3343:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 494,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 476,
                                "src": "3358:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3343:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 490,
                            "name": "forceApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "3314:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3314:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 497,
                        "nodeType": "ExpressionStatement",
                        "src": "3314:50:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 469,
                    "nodeType": "StructuredDocumentation",
                    "src": "2496:645:6",
                    "text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 499,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nameLocation": "3155:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 472,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3184:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "3177:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 471,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 470,
                            "name": "IERC20",
                            "nameLocations": [
                              "3177:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "3177:6:6"
                          },
                          "referencedDeclaration": 315,
                          "src": "3177:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3199:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "3191:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3191:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3216:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "3208:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3208:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3176:46:6"
                  },
                  "returnParameters": {
                    "id": 478,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3232:0:6"
                  },
                  "scope": 805,
                  "src": "3146:225:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 541,
                    "nodeType": "Block",
                    "src": "4137:370:6",
                    "statements": [
                      {
                        "id": 540,
                        "nodeType": "UncheckedBlock",
                        "src": "4147:354:6",
                        "statements": [
                          {
                            "assignments": [
                              511
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 511,
                                "mutability": "mutable",
                                "name": "currentAllowance",
                                "nameLocation": "4179:16:6",
                                "nodeType": "VariableDeclaration",
                                "scope": 540,
                                "src": "4171:24:6",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 510,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4171:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 520,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 516,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4222:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$805",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$805",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 515,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4214:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 514,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4214:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 517,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4214:13:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 518,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 505,
                                  "src": "4229:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 512,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "4198:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$315",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4204:9:6",
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 292,
                                "src": "4198:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4198:39:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4171:66:6"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 521,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 511,
                                "src": "4255:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 522,
                                "name": "requestedDecrease",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 507,
                                "src": "4274:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4255:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 531,
                            "nodeType": "IfStatement",
                            "src": "4251:160:6",
                            "trueBody": {
                              "id": 530,
                              "nodeType": "Block",
                              "src": "4293:118:6",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 525,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 505,
                                        "src": "4351:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 526,
                                        "name": "currentAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 511,
                                        "src": "4360:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 527,
                                        "name": "requestedDecrease",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 507,
                                        "src": "4378:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 524,
                                      "name": "SafeERC20FailedDecreaseAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 362,
                                      "src": "4318:32:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                        "typeString": "function (address,uint256,uint256) pure returns (error)"
                                      }
                                    },
                                    "id": 528,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4318:78:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 529,
                                  "nodeType": "RevertStatement",
                                  "src": "4311:85:6"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 533,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "4437:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$315",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 534,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 505,
                                  "src": "4444:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 535,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 511,
                                    "src": "4453:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 536,
                                    "name": "requestedDecrease",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 507,
                                    "src": "4472:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4453:36:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$315",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 532,
                                "name": "forceApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 589,
                                "src": "4424:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (contract IERC20,address,uint256)"
                                }
                              },
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4424:66:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 539,
                            "nodeType": "ExpressionStatement",
                            "src": "4424:66:6"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 500,
                    "nodeType": "StructuredDocumentation",
                    "src": "3377:657:6",
                    "text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 542,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nameLocation": "4048:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4077:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "4070:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 502,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 501,
                            "name": "IERC20",
                            "nameLocations": [
                              "4070:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "4070:6:6"
                          },
                          "referencedDeclaration": 315,
                          "src": "4070:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4092:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "4084:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "4109:17:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "4101:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4101:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4069:58:6"
                  },
                  "returnParameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4137:0:6"
                  },
                  "scope": 805,
                  "src": "4039:468:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 588,
                    "nodeType": "Block",
                    "src": "5161:303:6",
                    "statements": [
                      {
                        "assignments": [
                          554
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 554,
                            "mutability": "mutable",
                            "name": "approvalCall",
                            "nameLocation": "5184:12:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 588,
                            "src": "5171:25:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 553,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5171:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 563,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 557,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 546,
                                "src": "5214:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$315",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5220:7:6",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 302,
                              "src": "5214:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 559,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 548,
                                  "src": "5230:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 560,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 550,
                                  "src": "5239:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 561,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5229:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            ],
                            "expression": {
                              "id": 555,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5199:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5203:10:6",
                            "memberName": "encodeCall",
                            "nodeType": "MemberAccess",
                            "src": "5199:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5199:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5171:75:6"
                      },
                      {
                        "condition": {
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5261:45:6",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 565,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 546,
                                "src": "5286:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$315",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 566,
                                "name": "approvalCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 554,
                                "src": "5293:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$315",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 564,
                              "name": "_callOptionalReturnBool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 804,
                              "src": "5262:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5262:44:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 587,
                        "nodeType": "IfStatement",
                        "src": "5257:201:6",
                        "trueBody": {
                          "id": 586,
                          "nodeType": "Block",
                          "src": "5308:150:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 570,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 546,
                                    "src": "5342:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 573,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 546,
                                          "src": "5364:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$315",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 574,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5370:7:6",
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 302,
                                        "src": "5364:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 575,
                                            "name": "spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 548,
                                            "src": "5380:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "hexValue": "30",
                                            "id": 576,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5389:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "id": 577,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5379:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        },
                                        {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 571,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "5349:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 572,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5353:10:6",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "5349:14:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5349:43:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 569,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "5322:19:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5322:71:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 580,
                              "nodeType": "ExpressionStatement",
                              "src": "5322:71:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 582,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 546,
                                    "src": "5427:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 583,
                                    "name": "approvalCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 554,
                                    "src": "5434:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 581,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "5407:19:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5407:40:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 585,
                              "nodeType": "ExpressionStatement",
                              "src": "5407:40:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 543,
                    "nodeType": "StructuredDocumentation",
                    "src": "4513:566:6",
                    "text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
                  },
                  "id": 589,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forceApprove",
                  "nameLocation": "5093:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 546,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5113:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 589,
                        "src": "5106:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 545,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 544,
                            "name": "IERC20",
                            "nameLocations": [
                              "5106:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "5106:6:6"
                          },
                          "referencedDeclaration": 315,
                          "src": "5106:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 548,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5128:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 589,
                        "src": "5120:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 547,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5120:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 550,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5145:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 589,
                        "src": "5137:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5137:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5105:46:6"
                  },
                  "returnParameters": {
                    "id": 552,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5161:0:6"
                  },
                  "scope": 805,
                  "src": "5084:380:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 631,
                    "nodeType": "Block",
                    "src": "5911:219:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 602,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 595,
                                "src": "5925:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5928:4:6",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "5925:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5933:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5925:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5943:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5925:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6011:39:6",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 616,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 595,
                                  "src": "6034:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 617,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 597,
                                  "src": "6038:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 618,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 599,
                                  "src": "6045:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 614,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 593,
                                  "src": "6012:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6018:15:6",
                                "memberName": "transferAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 180,
                                "src": "6012:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6012:38:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 629,
                          "nodeType": "IfStatement",
                          "src": "6007:117:6",
                          "trueBody": {
                            "id": 628,
                            "nodeType": "Block",
                            "src": "6052:72:6",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 624,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 593,
                                          "src": "6106:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 623,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6098:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 622,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6098:7:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 625,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6098:14:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 621,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 353,
                                    "src": "6073:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6073:40:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 627,
                                "nodeType": "RevertStatement",
                                "src": "6066:47:6"
                              }
                            ]
                          }
                        },
                        "id": 630,
                        "nodeType": "IfStatement",
                        "src": "5921:203:6",
                        "trueBody": {
                          "id": 613,
                          "nodeType": "Block",
                          "src": "5946:55:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 608,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 593,
                                    "src": "5973:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 609,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 595,
                                    "src": "5980:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 610,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 597,
                                    "src": "5984:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 607,
                                  "name": "safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "5960:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5960:30:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 612,
                              "nodeType": "ExpressionStatement",
                              "src": "5960:30:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 590,
                    "nodeType": "StructuredDocumentation",
                    "src": "5470:333:6",
                    "text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 632,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCallRelaxed",
                  "nameLocation": "5817:22:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5849:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "5840:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 592,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 591,
                            "name": "IERC1363",
                            "nameLocations": [
                              "5840:8:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "5840:8:6"
                          },
                          "referencedDeclaration": 229,
                          "src": "5840:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 595,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5864:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "5856:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5856:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5876:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "5868:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5868:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 599,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5896:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "5883:17:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5883:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5839:62:6"
                  },
                  "returnParameters": {
                    "id": 601,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5911:0:6"
                  },
                  "scope": 805,
                  "src": "5808:322:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 678,
                    "nodeType": "Block",
                    "src": "6649:239:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 647,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 640,
                                "src": "6663:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6666:4:6",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "6663:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6671:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6663:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6681:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6663:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6759:49:6",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 662,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 638,
                                  "src": "6786:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 663,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 640,
                                  "src": "6792:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 664,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 642,
                                  "src": "6796:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 665,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 644,
                                  "src": "6803:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 660,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 636,
                                  "src": "6760:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6766:19:6",
                                "memberName": "transferFromAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 206,
                                "src": "6760:25:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6760:48:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 676,
                          "nodeType": "IfStatement",
                          "src": "6755:127:6",
                          "trueBody": {
                            "id": 675,
                            "nodeType": "Block",
                            "src": "6810:72:6",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 671,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 636,
                                          "src": "6864:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 670,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6856:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 669,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6856:7:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 672,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6856:14:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 668,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 353,
                                    "src": "6831:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6831:40:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 674,
                                "nodeType": "RevertStatement",
                                "src": "6824:47:6"
                              }
                            ]
                          }
                        },
                        "id": 677,
                        "nodeType": "IfStatement",
                        "src": "6659:223:6",
                        "trueBody": {
                          "id": 659,
                          "nodeType": "Block",
                          "src": "6684:65:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 653,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 636,
                                    "src": "6715:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 654,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 638,
                                    "src": "6722:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 655,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 640,
                                    "src": "6728:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 656,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 642,
                                    "src": "6732:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 652,
                                  "name": "safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 413,
                                  "src": "6698:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6698:40:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 658,
                              "nodeType": "ExpressionStatement",
                              "src": "6698:40:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 633,
                    "nodeType": "StructuredDocumentation",
                    "src": "6136:341:6",
                    "text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 679,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCallRelaxed",
                  "nameLocation": "6491:26:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 636,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6536:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 679,
                        "src": "6527:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 635,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 634,
                            "name": "IERC1363",
                            "nameLocations": [
                              "6527:8:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "6527:8:6"
                          },
                          "referencedDeclaration": 229,
                          "src": "6527:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 638,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6559:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 679,
                        "src": "6551:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 637,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6551:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 640,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6581:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 679,
                        "src": "6573:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 639,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6573:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6601:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 679,
                        "src": "6593:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6593:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6629:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 679,
                        "src": "6616:17:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6616:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6517:122:6"
                  },
                  "returnParameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6649:0:6"
                  },
                  "scope": 805,
                  "src": "6482:406:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 721,
                    "nodeType": "Block",
                    "src": "7655:218:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 692,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 685,
                                "src": "7669:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7672:4:6",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "7669:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7677:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7669:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7687:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7669:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7755:38:6",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 706,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 685,
                                  "src": "7777:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 707,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 687,
                                  "src": "7781:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 708,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 689,
                                  "src": "7788:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 704,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 683,
                                  "src": "7756:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7762:14:6",
                                "memberName": "approveAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 228,
                                "src": "7756:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7756:37:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 719,
                          "nodeType": "IfStatement",
                          "src": "7751:116:6",
                          "trueBody": {
                            "id": 718,
                            "nodeType": "Block",
                            "src": "7795:72:6",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 714,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 683,
                                          "src": "7849:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 713,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7841:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 712,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7841:7:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 715,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7841:14:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 711,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 353,
                                    "src": "7816:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7816:40:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 717,
                                "nodeType": "RevertStatement",
                                "src": "7809:47:6"
                              }
                            ]
                          }
                        },
                        "id": 720,
                        "nodeType": "IfStatement",
                        "src": "7665:202:6",
                        "trueBody": {
                          "id": 703,
                          "nodeType": "Block",
                          "src": "7690:55:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 698,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 683,
                                    "src": "7717:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 699,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 685,
                                    "src": "7724:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 700,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 687,
                                    "src": "7728:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 697,
                                  "name": "forceApprove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 589,
                                  "src": "7704:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7704:30:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 702,
                              "nodeType": "ExpressionStatement",
                              "src": "7704:30:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 680,
                    "nodeType": "StructuredDocumentation",
                    "src": "6894:654:6",
                    "text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 722,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCallRelaxed",
                  "nameLocation": "7562:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 690,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "7593:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "7584:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 682,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 681,
                            "name": "IERC1363",
                            "nameLocations": [
                              "7584:8:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "7584:8:6"
                          },
                          "referencedDeclaration": 229,
                          "src": "7584:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 685,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7608:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "7600:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 684,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7600:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 687,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7620:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "7612:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 686,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7612:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7640:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "7627:17:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7627:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7583:62:6"
                  },
                  "returnParameters": {
                    "id": 691,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7655:0:6"
                  },
                  "scope": 805,
                  "src": "7553:320:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 762,
                    "nodeType": "Block",
                    "src": "8440:650:6",
                    "statements": [
                      {
                        "assignments": [
                          732
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 732,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "8458:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 762,
                            "src": "8450:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 731,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8450:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 733,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8450:18:6"
                      },
                      {
                        "assignments": [
                          735
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 735,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "8486:11:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 762,
                            "src": "8478:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 734,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8478:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 736,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8478:19:6"
                      },
                      {
                        "AST": {
                          "nativeSrc": "8532:396:6",
                          "nodeType": "YulBlock",
                          "src": "8532:396:6",
                          "statements": [
                            {
                              "nativeSrc": "8546:75:6",
                              "nodeType": "YulVariableDeclaration",
                              "src": "8546:75:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "8566:3:6",
                                      "nodeType": "YulIdentifier",
                                      "src": "8566:3:6"
                                    },
                                    "nativeSrc": "8566:5:6",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8566:5:6"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "8573:5:6",
                                    "nodeType": "YulIdentifier",
                                    "src": "8573:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8580:1:6",
                                    "nodeType": "YulLiteral",
                                    "src": "8580:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8587:4:6",
                                        "nodeType": "YulIdentifier",
                                        "src": "8587:4:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8593:4:6",
                                        "nodeType": "YulLiteral",
                                        "src": "8593:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8583:3:6",
                                      "nodeType": "YulIdentifier",
                                      "src": "8583:3:6"
                                    },
                                    "nativeSrc": "8583:15:6",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8583:15:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8606:4:6",
                                        "nodeType": "YulIdentifier",
                                        "src": "8606:4:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "8600:5:6",
                                      "nodeType": "YulIdentifier",
                                      "src": "8600:5:6"
                                    },
                                    "nativeSrc": "8600:11:6",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8600:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8613:1:6",
                                    "nodeType": "YulLiteral",
                                    "src": "8613:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8616:4:6",
                                    "nodeType": "YulLiteral",
                                    "src": "8616:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "8561:4:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "8561:4:6"
                                },
                                "nativeSrc": "8561:60:6",
                                "nodeType": "YulFunctionCall",
                                "src": "8561:60:6"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nativeSrc": "8550:7:6",
                                  "nodeType": "YulTypedName",
                                  "src": "8550:7:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "8682:157:6",
                                "nodeType": "YulBlock",
                                "src": "8682:157:6",
                                "statements": [
                                  {
                                    "nativeSrc": "8700:22:6",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8700:22:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8717:4:6",
                                          "nodeType": "YulLiteral",
                                          "src": "8717:4:6",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "8711:5:6",
                                        "nodeType": "YulIdentifier",
                                        "src": "8711:5:6"
                                      },
                                      "nativeSrc": "8711:11:6",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8711:11:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "ptr",
                                        "nativeSrc": "8704:3:6",
                                        "nodeType": "YulTypedName",
                                        "src": "8704:3:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8754:3:6",
                                          "nodeType": "YulIdentifier",
                                          "src": "8754:3:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8759:1:6",
                                          "nodeType": "YulLiteral",
                                          "src": "8759:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8762:14:6",
                                            "nodeType": "YulIdentifier",
                                            "src": "8762:14:6"
                                          },
                                          "nativeSrc": "8762:16:6",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8762:16:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nativeSrc": "8739:14:6",
                                        "nodeType": "YulIdentifier",
                                        "src": "8739:14:6"
                                      },
                                      "nativeSrc": "8739:40:6",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8739:40:6"
                                    },
                                    "nativeSrc": "8739:40:6",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8739:40:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8803:3:6",
                                          "nodeType": "YulIdentifier",
                                          "src": "8803:3:6"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8808:14:6",
                                            "nodeType": "YulIdentifier",
                                            "src": "8808:14:6"
                                          },
                                          "nativeSrc": "8808:16:6",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8808:16:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "8796:6:6",
                                        "nodeType": "YulIdentifier",
                                        "src": "8796:6:6"
                                      },
                                      "nativeSrc": "8796:29:6",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8796:29:6"
                                    },
                                    "nativeSrc": "8796:29:6",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8796:29:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nativeSrc": "8673:7:6",
                                    "nodeType": "YulIdentifier",
                                    "src": "8673:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "8666:6:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "8666:6:6"
                                },
                                "nativeSrc": "8666:15:6",
                                "nodeType": "YulFunctionCall",
                                "src": "8666:15:6"
                              },
                              "nativeSrc": "8663:176:6",
                              "nodeType": "YulIf",
                              "src": "8663:176:6"
                            },
                            {
                              "nativeSrc": "8852:30:6",
                              "nodeType": "YulAssignment",
                              "src": "8852:30:6",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "8866:14:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "8866:14:6"
                                },
                                "nativeSrc": "8866:16:6",
                                "nodeType": "YulFunctionCall",
                                "src": "8866:16:6"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "8852:10:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "8852:10:6"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "8895:23:6",
                              "nodeType": "YulAssignment",
                              "src": "8895:23:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8916:1:6",
                                    "nodeType": "YulLiteral",
                                    "src": "8916:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "8910:5:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "8910:5:6"
                                },
                                "nativeSrc": "8910:8:6",
                                "nodeType": "YulFunctionCall",
                                "src": "8910:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "8895:11:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "8895:11:6"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 728,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8587:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 728,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8606:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 732,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8852:10:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 735,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8895:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 726,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8573:5:6",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 737,
                        "nodeType": "InlineAssembly",
                        "src": "8507:421:6"
                      },
                      {
                        "condition": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 738,
                              "name": "returnSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 732,
                              "src": "8942:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8956:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8942:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 749,
                              "name": "returnValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 735,
                              "src": "8994:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9009:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8994:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8942:68:6",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 743,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 726,
                                      "src": "8968:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$315",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$315",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 742,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8960:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 741,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8960:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 744,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8960:14:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8975:4:6",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "8960:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8980:6:6",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "8960:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8990:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8960:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 761,
                        "nodeType": "IfStatement",
                        "src": "8938:146:6",
                        "trueBody": {
                          "id": 760,
                          "nodeType": "Block",
                          "src": "9012:72:6",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 756,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 726,
                                        "src": "9066:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$315",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$315",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 755,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9058:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 754,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9058:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 757,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9058:14:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 753,
                                  "name": "SafeERC20FailedOperation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 353,
                                  "src": "9033:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9033:40:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 759,
                              "nodeType": "RevertStatement",
                              "src": "9026:47:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 723,
                    "nodeType": "StructuredDocumentation",
                    "src": "7879:486:6",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
                  },
                  "id": 763,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "8379:19:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 729,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 726,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8406:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 763,
                        "src": "8399:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 725,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 724,
                            "name": "IERC20",
                            "nameLocations": [
                              "8399:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "8399:6:6"
                          },
                          "referencedDeclaration": 315,
                          "src": "8399:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 728,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8426:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 763,
                        "src": "8413:17:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8413:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8398:33:6"
                  },
                  "returnParameters": {
                    "id": 730,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8440:0:6"
                  },
                  "scope": 805,
                  "src": "8370:720:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 803,
                    "nodeType": "Block",
                    "src": "9681:391:6",
                    "statements": [
                      {
                        "assignments": [
                          775
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 775,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9696:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 803,
                            "src": "9691:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 774,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9691:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 776,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9691:12:6"
                      },
                      {
                        "assignments": [
                          778
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 778,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "9721:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 803,
                            "src": "9713:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 777,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9713:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 779,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9713:18:6"
                      },
                      {
                        "assignments": [
                          781
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 781,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "9749:11:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 803,
                            "src": "9741:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 780,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9741:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 782,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9741:19:6"
                      },
                      {
                        "AST": {
                          "nativeSrc": "9795:174:6",
                          "nodeType": "YulBlock",
                          "src": "9795:174:6",
                          "statements": [
                            {
                              "nativeSrc": "9809:71:6",
                              "nodeType": "YulAssignment",
                              "src": "9809:71:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "9825:3:6",
                                      "nodeType": "YulIdentifier",
                                      "src": "9825:3:6"
                                    },
                                    "nativeSrc": "9825:5:6",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9825:5:6"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "9832:5:6",
                                    "nodeType": "YulIdentifier",
                                    "src": "9832:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9839:1:6",
                                    "nodeType": "YulLiteral",
                                    "src": "9839:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9846:4:6",
                                        "nodeType": "YulIdentifier",
                                        "src": "9846:4:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9852:4:6",
                                        "nodeType": "YulLiteral",
                                        "src": "9852:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9842:3:6",
                                      "nodeType": "YulIdentifier",
                                      "src": "9842:3:6"
                                    },
                                    "nativeSrc": "9842:15:6",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9842:15:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9865:4:6",
                                        "nodeType": "YulIdentifier",
                                        "src": "9865:4:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "9859:5:6",
                                      "nodeType": "YulIdentifier",
                                      "src": "9859:5:6"
                                    },
                                    "nativeSrc": "9859:11:6",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9859:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9872:1:6",
                                    "nodeType": "YulLiteral",
                                    "src": "9872:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9875:4:6",
                                    "nodeType": "YulLiteral",
                                    "src": "9875:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "9820:4:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "9820:4:6"
                                },
                                "nativeSrc": "9820:60:6",
                                "nodeType": "YulFunctionCall",
                                "src": "9820:60:6"
                              },
                              "variableNames": [
                                {
                                  "name": "success",
                                  "nativeSrc": "9809:7:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "9809:7:6"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9893:30:6",
                              "nodeType": "YulAssignment",
                              "src": "9893:30:6",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "9907:14:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "9907:14:6"
                                },
                                "nativeSrc": "9907:16:6",
                                "nodeType": "YulFunctionCall",
                                "src": "9907:16:6"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "9893:10:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "9893:10:6"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9936:23:6",
                              "nodeType": "YulAssignment",
                              "src": "9936:23:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9957:1:6",
                                    "nodeType": "YulLiteral",
                                    "src": "9957:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "9951:5:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "9951:5:6"
                                },
                                "nativeSrc": "9951:8:6",
                                "nodeType": "YulFunctionCall",
                                "src": "9951:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "9936:11:6",
                                  "nodeType": "YulIdentifier",
                                  "src": "9936:11:6"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 769,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9846:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 769,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9865:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 778,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9893:10:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 781,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9936:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 775,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9809:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 767,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9832:5:6",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 783,
                        "nodeType": "InlineAssembly",
                        "src": "9770:199:6"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 784,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "9985:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 787,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 785,
                                    "name": "returnSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 778,
                                    "src": "9997:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 786,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10011:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9997:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 796,
                                    "name": "returnValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 781,
                                    "src": "10048:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 797,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10063:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10048:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9997:67:6",
                                "trueExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 790,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 767,
                                            "src": "10023:5:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$315",
                                              "typeString": "contract IERC20"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IERC20_$315",
                                              "typeString": "contract IERC20"
                                            }
                                          ],
                                          "id": 789,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "10015:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 788,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "10015:7:6",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10015:14:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 792,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10030:4:6",
                                      "memberName": "code",
                                      "nodeType": "MemberAccess",
                                      "src": "10015:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 793,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10035:6:6",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "10015:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 794,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10044:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "10015:30:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 800,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9996:69:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9985:80:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 773,
                        "id": 802,
                        "nodeType": "Return",
                        "src": "9978:87:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 764,
                    "nodeType": "StructuredDocumentation",
                    "src": "9096:491:6",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
                  },
                  "id": 804,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturnBool",
                  "nameLocation": "9601:23:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "9632:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 804,
                        "src": "9625:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$315",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 766,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 765,
                            "name": "IERC20",
                            "nameLocations": [
                              "9625:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 315,
                            "src": "9625:6:6"
                          },
                          "referencedDeclaration": 315,
                          "src": "9625:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "9652:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 804,
                        "src": "9639:17:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9639:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9624:33:6"
                  },
                  "returnParameters": {
                    "id": 773,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 772,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 804,
                        "src": "9675:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 771,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9675:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9674:6:6"
                  },
                  "scope": 805,
                  "src": "9592:480:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 806,
              "src": "698:9376:6",
              "usedErrors": [
                353,
                362
              ],
              "usedEvents": []
            }
          ],
          "src": "115:9960:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              835
            ]
          },
          "id": 836,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 807,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:7"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 808,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:7",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 835,
              "linearizedBaseContracts": [
                835
              ],
              "name": "Context",
              "nameLocation": "642:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 816,
                    "nodeType": "Block",
                    "src": "718:34:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 813,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 812,
                        "id": 815,
                        "nodeType": "Return",
                        "src": "728:17:7"
                      }
                    ]
                  },
                  "id": 817,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 809,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:7"
                  },
                  "returnParameters": {
                    "id": 812,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 811,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "709:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 810,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:7"
                  },
                  "scope": 835,
                  "src": "656:96:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 825,
                    "nodeType": "Block",
                    "src": "825:32:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 822,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:7",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 821,
                        "id": 824,
                        "nodeType": "Return",
                        "src": "835:15:7"
                      }
                    ]
                  },
                  "id": 826,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 818,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:7"
                  },
                  "returnParameters": {
                    "id": 821,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 820,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "809:14:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 819,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:7"
                  },
                  "scope": 835,
                  "src": "758:99:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 833,
                    "nodeType": "Block",
                    "src": "935:25:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 830,
                        "id": 832,
                        "nodeType": "Return",
                        "src": "945:8:7"
                      }
                    ]
                  },
                  "id": 834,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 827,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:7"
                  },
                  "returnParameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "926:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:7"
                  },
                  "scope": 835,
                  "src": "863:97:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 836,
              "src": "624:338:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              835
            ],
            "Pausable": [
              943
            ]
          },
          "id": 944,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 837,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 839,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 944,
              "sourceUnit": 836,
              "src": "128:45:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 838,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 835,
                    "src": "136:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 841,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 835,
                    "src": "645:7:8"
                  },
                  "id": 842,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:8"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 840,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:8",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 943,
              "linearizedBaseContracts": [
                943,
                835
              ],
              "name": "Pausable",
              "nameLocation": "633:8:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "659:20:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 845,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:8",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 849,
                  "name": "Paused",
                  "nameLocation": "770:6:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "777:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:8"
                  },
                  "src": "764:30:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 850,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:8",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 854,
                  "name": "Unpaused",
                  "nameLocation": "881:8:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "890:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:8"
                  },
                  "src": "875:32:8"
                },
                {
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:8",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 857,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 856,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:8"
                  },
                  "src": "994:22:8"
                },
                {
                  "documentation": {
                    "id": 858,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:8",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 860,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 859,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:8"
                  },
                  "src": "1107:22:8"
                },
                {
                  "body": {
                    "id": 867,
                    "nodeType": "Block",
                    "src": "1340:47:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 863,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "1350:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 865,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:8"
                      },
                      {
                        "id": 866,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 861,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:8",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 868,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 862,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:8"
                  },
                  "src": "1315:72:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 875,
                    "nodeType": "Block",
                    "src": "1587:44:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 871,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "1597:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 873,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:8"
                      },
                      {
                        "id": 874,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 869,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:8",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 876,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 870,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:8"
                  },
                  "src": "1565:66:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 884,
                    "nodeType": "Block",
                    "src": "1779:31:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 882,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "1796:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 881,
                        "id": 883,
                        "nodeType": "Return",
                        "src": "1789:14:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 877,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:8",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 885,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 878,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:8"
                  },
                  "returnParameters": {
                    "id": 881,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 880,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 885,
                        "src": "1773:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 879,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:8"
                  },
                  "scope": 943,
                  "src": "1726:84:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 896,
                    "nodeType": "Block",
                    "src": "1929:77:8",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 889,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 885,
                            "src": "1943:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 895,
                        "nodeType": "IfStatement",
                        "src": "1939:61:8",
                        "trueBody": {
                          "id": 894,
                          "nodeType": "Block",
                          "src": "1953:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 891,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 857,
                                  "src": "1974:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 893,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 886,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:8",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 897,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 887,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:8"
                  },
                  "returnParameters": {
                    "id": 888,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:8"
                  },
                  "scope": 943,
                  "src": "1878:128:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 909,
                    "nodeType": "Block",
                    "src": "2126:78:8",
                    "statements": [
                      {
                        "condition": {
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:8",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 901,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 885,
                              "src": "2141:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 908,
                        "nodeType": "IfStatement",
                        "src": "2136:62:8",
                        "trueBody": {
                          "id": 907,
                          "nodeType": "Block",
                          "src": "2151:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 904,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 860,
                                  "src": "2172:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 906,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 898,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:8",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 910,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 899,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:8"
                  },
                  "returnParameters": {
                    "id": 900,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:8"
                  },
                  "scope": 943,
                  "src": "2078:126:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 925,
                    "nodeType": "Block",
                    "src": "2388:66:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 916,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "2398:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 921,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "2434:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 920,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 849,
                            "src": "2427:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 924,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 911,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:8",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 926,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 914,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 913,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 868,
                        "src": "2374:13:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:8"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:8"
                  },
                  "returnParameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:8"
                  },
                  "scope": 943,
                  "src": "2339:115:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "2634:69:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 932,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "2644:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 935,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 937,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "2683:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 936,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "2674:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 940,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 927,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:8",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 942,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 930,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 929,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 876,
                        "src": "2623:10:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:8"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:8"
                  },
                  "returnParameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:8"
                  },
                  "scope": 943,
                  "src": "2586:117:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 944,
              "src": "615:2090:8",
              "usedErrors": [
                857,
                860
              ],
              "usedEvents": [
                849,
                854
              ]
            }
          ],
          "src": "102:2604:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1012
            ]
          },
          "id": 1013,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 945,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:9"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 946,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:9",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1012,
              "linearizedBaseContracts": [
                1012
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 949,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1012,
                  "src": "1818:40:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 952,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1012,
                  "src": "1864:36:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1012,
                  "src": "1907:23:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 955,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:9",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 957,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 956,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:9"
                  },
                  "src": "1994:37:9"
                },
                {
                  "body": {
                    "id": 964,
                    "nodeType": "Block",
                    "src": "2051:38:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 960,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "2061:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 961,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 949,
                            "src": "2071:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 963,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:9"
                      }
                    ]
                  },
                  "id": 965,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 958,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:9"
                  },
                  "returnParameters": {
                    "id": 959,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:9"
                  },
                  "scope": 1012,
                  "src": "2037:52:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 975,
                    "nodeType": "Block",
                    "src": "2490:79:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 968,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 992,
                            "src": "2500:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 970,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:9"
                      },
                      {
                        "id": 971,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:9"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 972,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "2542:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 974,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 966,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:9",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 976,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 967,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:9"
                  },
                  "src": "2466:103:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 991,
                    "nodeType": "Block",
                    "src": "2614:268:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 979,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "2702:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 980,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "2713:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 986,
                        "nodeType": "IfStatement",
                        "src": "2698:86:9",
                        "trueBody": {
                          "id": 985,
                          "nodeType": "Block",
                          "src": "2722:62:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 982,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 957,
                                  "src": "2743:28:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 984,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 987,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "2858:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 988,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "2868:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 990,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:9"
                      }
                    ]
                  },
                  "id": 992,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 977,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:9"
                  },
                  "returnParameters": {
                    "id": 978,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:9"
                  },
                  "scope": 1012,
                  "src": "2575:307:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 999,
                    "nodeType": "Block",
                    "src": "2926:170:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 995,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "3068:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 996,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 949,
                            "src": "3078:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 998,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:9"
                      }
                    ]
                  },
                  "id": 1000,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 993,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:9"
                  },
                  "returnParameters": {
                    "id": 994,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:9"
                  },
                  "scope": 1012,
                  "src": "2888:208:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1010,
                    "nodeType": "Block",
                    "src": "3339:42:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1006,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "3356:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1007,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "3367:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1005,
                        "id": 1009,
                        "nodeType": "Return",
                        "src": "3349:25:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1001,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:9",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 1011,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1002,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:9"
                  },
                  "returnParameters": {
                    "id": 1005,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1004,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1011,
                        "src": "3333:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:9"
                  },
                  "scope": 1012,
                  "src": "3275:106:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1013,
              "src": "1030:2353:9",
              "usedErrors": [
                957
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1024
            ]
          },
          "id": 1025,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1014,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1015,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:10",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1024,
              "linearizedBaseContracts": [
                1024
              ],
              "name": "IERC165",
              "nameLocation": "432:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1016,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:10",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1023,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1019,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1018,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1023,
                        "src": "818:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1017,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:10"
                  },
                  "returnParameters": {
                    "id": 1022,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1023,
                        "src": "861:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:10"
                  },
                  "scope": 1024,
                  "src": "791:76:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1025,
              "src": "422:447:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:10"
        },
        "id": 10
      },
      "contracts/ZaaNetAdmin.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetAdmin.sol",
          "exportedSymbols": {
            "Context": [
              835
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              943
            ],
            "ReentrancyGuard": [
              1012
            ],
            "ZaaNetAdmin": [
              1983
            ],
            "ZaaNetStorage": [
              4702
            ]
          },
          "id": 1984,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1026,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1027,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1984,
              "sourceUnit": 148,
              "src": "58:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1028,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1984,
              "sourceUnit": 944,
              "src": "111:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1029,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1984,
              "sourceUnit": 1013,
              "src": "164:59:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "./ZaaNetStorage.sol",
              "id": 1030,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1984,
              "sourceUnit": 4703,
              "src": "224:29:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1031,
                    "name": "Ownable",
                    "nameLocations": [
                      "279:7:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "279:7:11"
                  },
                  "id": 1032,
                  "nodeType": "InheritanceSpecifier",
                  "src": "279:7:11"
                },
                {
                  "baseName": {
                    "id": 1033,
                    "name": "Pausable",
                    "nameLocations": [
                      "288:8:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 943,
                    "src": "288:8:11"
                  },
                  "id": 1034,
                  "nodeType": "InheritanceSpecifier",
                  "src": "288:8:11"
                },
                {
                  "baseName": {
                    "id": 1035,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "298:15:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1012,
                    "src": "298:15:11"
                  },
                  "id": 1036,
                  "nodeType": "InheritanceSpecifier",
                  "src": "298:15:11"
                }
              ],
              "canonicalName": "ZaaNetAdmin",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1983,
              "linearizedBaseContracts": [
                1983,
                1012,
                943,
                147,
                835
              ],
              "name": "ZaaNetAdmin",
              "nameLocation": "264:11:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "11ce0267",
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "storageContract",
                  "nameLocation": "341:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "320:36:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                    "typeString": "contract ZaaNetStorage"
                  },
                  "typeName": {
                    "id": 1038,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1037,
                      "name": "ZaaNetStorage",
                      "nameLocations": [
                        "320:13:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4702,
                      "src": "320:13:11"
                    },
                    "referencedDeclaration": 4702,
                    "src": "320:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                      "typeString": "contract ZaaNetStorage"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c5f956af",
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "treasuryAddress",
                  "nameLocation": "377:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "362:30:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "633423be",
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "paymentAddress",
                  "nameLocation": "449:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "434:29:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8c639a85",
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "platformFeePercent",
                  "nameLocation": "520:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "505:33:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ebe7fdaa",
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "hostingFee",
                  "nameLocation": "594:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "579:25:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "3998a681",
                  "id": 1050,
                  "mutability": "constant",
                  "name": "MAX_PLATFORM_FEE",
                  "nameLocation": "703:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "679:45:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "722:2:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "6f04d994",
                  "id": 1053,
                  "mutability": "constant",
                  "name": "MIN_PLATFORM_FEE",
                  "nameLocation": "773:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "749:44:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "792:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "bb8f0b65",
                  "id": 1061,
                  "mutability": "constant",
                  "name": "MAX_HOSTING_FEE",
                  "nameLocation": "842:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "818:57:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "313030",
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "860:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 1056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "867:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 1057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "873:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "867:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        }
                      ],
                      "id": 1059,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "866:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "860:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "54d74941",
                  "id": 1064,
                  "mutability": "constant",
                  "name": "MIN_HOSTING_FEE",
                  "nameLocation": "937:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "913:43:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "955:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0905f560",
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "emergencyMode",
                  "nameLocation": "1045:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "1033:33:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1065,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1061:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "09705de8",
                  "id": 1071,
                  "mutability": "mutable",
                  "name": "emergencyOperators",
                  "nameLocation": "1104:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "1072:50:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1070,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1068,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1080:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1072:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1069,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1091:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.FeeChange",
                  "id": 1080,
                  "members": [
                    {
                      "constant": false,
                      "id": 1073,
                      "mutability": "mutable",
                      "name": "oldFee",
                      "nameLocation": "1200:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1192:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1072,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1192:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1075,
                      "mutability": "mutable",
                      "name": "newFee",
                      "nameLocation": "1224:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1216:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1074,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1216:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1077,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1248:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1240:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1076,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1240:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1079,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "1275:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1267:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1078,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1267:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FeeChange",
                  "nameLocation": "1172:9:11",
                  "nodeType": "StructDefinition",
                  "scope": 1983,
                  "src": "1165:126:11",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0d35a167",
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "feeHistory",
                  "nameLocation": "1320:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "1301:29:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.FeeChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1082,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1081,
                        "name": "FeeChange",
                        "nameLocations": [
                          "1301:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1080,
                        "src": "1301:9:11"
                      },
                      "referencedDeclaration": 1080,
                      "src": "1301:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FeeChange_$1080_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.FeeChange"
                      }
                    },
                    "id": 1083,
                    "nodeType": "ArrayTypeName",
                    "src": "1301:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.FeeChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.TreasuryChange",
                  "id": 1093,
                  "members": [
                    {
                      "constant": false,
                      "id": 1086,
                      "mutability": "mutable",
                      "name": "oldTreasury",
                      "nameLocation": "1412:11:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1093,
                      "src": "1404:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1085,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1404:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1088,
                      "mutability": "mutable",
                      "name": "newTreasury",
                      "nameLocation": "1441:11:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1093,
                      "src": "1433:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1087,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1433:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1090,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1470:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1093,
                      "src": "1462:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1089,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1462:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1092,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "1497:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1093,
                      "src": "1489:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1091,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1489:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "TreasuryChange",
                  "nameLocation": "1379:14:11",
                  "nodeType": "StructDefinition",
                  "scope": 1983,
                  "src": "1372:141:11",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a380b86b",
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "treasuryHistory",
                  "nameLocation": "1547:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "1523:39:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1095,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1094,
                        "name": "TreasuryChange",
                        "nameLocations": [
                          "1523:14:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1093,
                        "src": "1523:14:11"
                      },
                      "referencedDeclaration": 1093,
                      "src": "1523:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TreasuryChange_$1093_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.TreasuryChange"
                      }
                    },
                    "id": 1096,
                    "nodeType": "ArrayTypeName",
                    "src": "1523:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.HostingFeeChange",
                  "id": 1106,
                  "members": [
                    {
                      "constant": false,
                      "id": 1099,
                      "mutability": "mutable",
                      "name": "oldFee",
                      "nameLocation": "1638:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1106,
                      "src": "1630:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1098,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1630:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1101,
                      "mutability": "mutable",
                      "name": "newFee",
                      "nameLocation": "1662:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1106,
                      "src": "1654:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1100,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1654:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1103,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1686:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1106,
                      "src": "1678:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1102,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1678:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1105,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "1713:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1106,
                      "src": "1705:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1104,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1705:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "HostingFeeChange",
                  "nameLocation": "1603:16:11",
                  "nodeType": "StructDefinition",
                  "scope": 1983,
                  "src": "1596:133:11",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e53377eb",
                  "id": 1110,
                  "mutability": "mutable",
                  "name": "hostingFeeHistory",
                  "nameLocation": "1765:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "1739:43:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1108,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1107,
                        "name": "HostingFeeChange",
                        "nameLocations": [
                          "1739:16:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1106,
                        "src": "1739:16:11"
                      },
                      "referencedDeclaration": 1106,
                      "src": "1739:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HostingFeeChange_$1106_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                      }
                    },
                    "id": 1109,
                    "nodeType": "ArrayTypeName",
                    "src": "1739:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb99",
                  "id": 1118,
                  "name": "PlatformFeeUpdated",
                  "nameLocation": "1809:18:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1112,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldFee",
                        "nameLocation": "1844:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "1828:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1828:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1114,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "1868:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "1852:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1852:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1116,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "1892:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "1876:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1876:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1827:75:11"
                  },
                  "src": "1803:100:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa13",
                  "id": 1126,
                  "name": "TreasuryUpdated",
                  "nameLocation": "1914:15:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1120,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldTreasury",
                        "nameLocation": "1946:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1126,
                        "src": "1930:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1119,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1930:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1122,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newTreasury",
                        "nameLocation": "1975:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1126,
                        "src": "1959:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1959:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1124,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "2004:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1126,
                        "src": "1988:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1988:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1929:85:11"
                  },
                  "src": "1908:107:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "eb710718efc8ce303613ea1c9fb97a21bd1154a827cdb5ed5607eadd10e8cf96",
                  "id": 1134,
                  "name": "HostingFeeUpdated",
                  "nameLocation": "2026:17:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1128,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldFee",
                        "nameLocation": "2060:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1134,
                        "src": "2044:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2044:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1130,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "2084:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1134,
                        "src": "2068:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1129,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2068:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1132,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "2108:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1134,
                        "src": "2092:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2092:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2043:75:11"
                  },
                  "src": "2020:99:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f0140290",
                  "id": 1138,
                  "name": "AdminPaused",
                  "nameLocation": "2130:11:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1136,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2158:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "2142:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2142:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2141:29:11"
                  },
                  "src": "2124:47:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "cc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c634",
                  "id": 1142,
                  "name": "AdminUnpaused",
                  "nameLocation": "2182:13:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1140,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2212:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "2196:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1139,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2196:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2195:29:11"
                  },
                  "src": "2176:49:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa40",
                  "id": 1148,
                  "name": "EmergencyModeToggled",
                  "nameLocation": "2236:20:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1144,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "enabled",
                        "nameLocation": "2262:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1148,
                        "src": "2257:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2257:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1146,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "2287:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1148,
                        "src": "2271:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2271:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2256:43:11"
                  },
                  "src": "2230:70:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce",
                  "id": 1156,
                  "name": "EmergencyOperatorUpdated",
                  "nameLocation": "2311:24:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1150,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2352:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1156,
                        "src": "2336:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1149,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2336:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1152,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "2367:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1156,
                        "src": "2362:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1151,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2362:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1154,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "updatedBy",
                        "nameLocation": "2391:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1156,
                        "src": "2375:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2335:66:11"
                  },
                  "src": "2305:97:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7f7d6e7886dca58922d0593a44928fb5066cd0e04369c371d72eb96e61368fa8",
                  "id": 1162,
                  "name": "ContractsInitialized",
                  "nameLocation": "2413:20:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1158,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "storageContract",
                        "nameLocation": "2450:15:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1162,
                        "src": "2434:31:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2434:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1160,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2475:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1162,
                        "src": "2467:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1159,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2467:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2433:52:11"
                  },
                  "src": "2407:79:11"
                },
                {
                  "body": {
                    "id": 1179,
                    "nodeType": "Block",
                    "src": "2525:118:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1165,
                                  "name": "emergencyOperators",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1071,
                                  "src": "2543:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1168,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1166,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2562:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2566:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2562:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2543:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1169,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2577:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1170,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2581:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2577:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1171,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "2591:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2591:7:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2577:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2543:55:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656d657267656e6379206f70657261746f72",
                              "id": 1175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2600:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc1b39fc0b454b5fd3784c3a15d54fced45e89466614065aee240afeee0420b8",
                                "typeString": "literal_string \"Not emergency operator\""
                              },
                              "value": "Not emergency operator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc1b39fc0b454b5fd3784c3a15d54fced45e89466614065aee240afeee0420b8",
                                "typeString": "literal_string \"Not emergency operator\""
                              }
                            ],
                            "id": 1164,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2535:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2535:90:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1177,
                        "nodeType": "ExpressionStatement",
                        "src": "2535:90:11"
                      },
                      {
                        "id": 1178,
                        "nodeType": "PlaceholderStatement",
                        "src": "2635:1:11"
                      }
                    ]
                  },
                  "id": 1180,
                  "name": "onlyEmergencyOperator",
                  "nameLocation": "2501:21:11",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1163,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2522:2:11"
                  },
                  "src": "2492:151:11",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1189,
                    "nodeType": "Block",
                    "src": "2679:79:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2697:14:11",
                              "subExpression": {
                                "id": 1183,
                                "name": "emergencyMode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1067,
                                "src": "2698:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53797374656d20696e20656d657267656e6379206d6f6465",
                              "id": 1185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2713:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6aa06e0bb1c440eec40b9cb8c9374010ea534350e6e4653e6abbb382dc701e03",
                                "typeString": "literal_string \"System in emergency mode\""
                              },
                              "value": "System in emergency mode"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6aa06e0bb1c440eec40b9cb8c9374010ea534350e6e4653e6abbb382dc701e03",
                                "typeString": "literal_string \"System in emergency mode\""
                              }
                            ],
                            "id": 1182,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2689:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2689:51:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1187,
                        "nodeType": "ExpressionStatement",
                        "src": "2689:51:11"
                      },
                      {
                        "id": 1188,
                        "nodeType": "PlaceholderStatement",
                        "src": "2750:1:11"
                      }
                    ]
                  },
                  "id": 1190,
                  "name": "notInEmergencyMode",
                  "nameLocation": "2658:18:11",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2676:2:11"
                  },
                  "src": "2649:109:11",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1342,
                    "nodeType": "Block",
                    "src": "2969:1687:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1208,
                                "name": "_treasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "2987:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1211,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3015:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3007:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1209,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3007:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3007:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2987:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726561737572792063616e6e6f74206265207a65726f2061646472657373",
                              "id": 1214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3019:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512",
                                "typeString": "literal_string \"Treasury cannot be zero address\""
                              },
                              "value": "Treasury cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512",
                                "typeString": "literal_string \"Treasury cannot be zero address\""
                              }
                            ],
                            "id": 1207,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2979:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2979:74:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1216,
                        "nodeType": "ExpressionStatement",
                        "src": "2979:74:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1218,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1198,
                                  "src": "3084:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1219,
                                  "name": "MIN_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1053,
                                  "src": "3107:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3084:39:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1221,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1198,
                                  "src": "3127:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1222,
                                  "name": "MAX_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1050,
                                  "src": "3150:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3127:39:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3084:82:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506c6174666f726d20666565206d757374206265206265747765656e20312520616e6420323025",
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3181:41:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d95ddb3474aa062c903f578770b7dbf7ce309df8d78de188b95eac5cdd20fc7f",
                                "typeString": "literal_string \"Platform fee must be between 1% and 20%\""
                              },
                              "value": "Platform fee must be between 1% and 20%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d95ddb3474aa062c903f578770b7dbf7ce309df8d78de188b95eac5cdd20fc7f",
                                "typeString": "literal_string \"Platform fee must be between 1% and 20%\""
                              }
                            ],
                            "id": 1217,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3063:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3063:169:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1227,
                        "nodeType": "ExpressionStatement",
                        "src": "3063:169:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1229,
                                "name": "_paymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1196,
                                "src": "3250:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1232,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3277:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3269:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1230,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3269:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3269:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3250:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061796d656e7420616464726573732063616e6e6f74206265207a65726f2061646472657373",
                              "id": 1235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3281:40:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0e07cf06ff6d2f5e708a84a558eed0fdb1fbd63261c7e66f60903a0dfc88550",
                                "typeString": "literal_string \"Payment address cannot be zero address\""
                              },
                              "value": "Payment address cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0e07cf06ff6d2f5e708a84a558eed0fdb1fbd63261c7e66f60903a0dfc88550",
                                "typeString": "literal_string \"Payment address cannot be zero address\""
                              }
                            ],
                            "id": 1228,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3242:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3242:80:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1237,
                        "nodeType": "ExpressionStatement",
                        "src": "3242:80:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1239,
                                  "name": "_hostingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1200,
                                  "src": "3353:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1240,
                                  "name": "MIN_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1064,
                                  "src": "3368:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3353:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1242,
                                  "name": "_hostingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1200,
                                  "src": "3387:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1243,
                                  "name": "MAX_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1061,
                                  "src": "3402:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3387:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3353:64:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "486f7374696e6720666565206d757374206265206265747765656e203020616e64203130302055534454",
                              "id": 1246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3431:44:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_558afdea4ba9d0c52c0eacab16b4bacaa8816b54f51337f4fde55b2f611332ed",
                                "typeString": "literal_string \"Hosting fee must be between 0 and 100 USDT\""
                              },
                              "value": "Hosting fee must be between 0 and 100 USDT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_558afdea4ba9d0c52c0eacab16b4bacaa8816b54f51337f4fde55b2f611332ed",
                                "typeString": "literal_string \"Hosting fee must be between 0 and 100 USDT\""
                              }
                            ],
                            "id": 1238,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3332:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3332:153:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1248,
                        "nodeType": "ExpressionStatement",
                        "src": "3332:153:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1249,
                            "name": "_storageContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "3500:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3528:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3520:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1250,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3520:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3500:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1268,
                        "nodeType": "IfStatement",
                        "src": "3496:184:11",
                        "trueBody": {
                          "id": 1267,
                          "nodeType": "Block",
                          "src": "3532:148:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 1259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1255,
                                  "name": "storageContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1039,
                                  "src": "3546:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                    "typeString": "contract ZaaNetStorage"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1257,
                                      "name": "_storageContract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1192,
                                      "src": "3578:16:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1256,
                                    "name": "ZaaNetStorage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4702,
                                    "src": "3564:13:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$4702_$",
                                      "typeString": "type(contract ZaaNetStorage)"
                                    }
                                  },
                                  "id": 1258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3564:31:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                    "typeString": "contract ZaaNetStorage"
                                  }
                                },
                                "src": "3546:49:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                  "typeString": "contract ZaaNetStorage"
                                }
                              },
                              "id": 1260,
                              "nodeType": "ExpressionStatement",
                              "src": "3546:49:11"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1262,
                                    "name": "_storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1192,
                                    "src": "3635:16:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1263,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "3653:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1264,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3659:9:11",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "3653:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1261,
                                  "name": "ContractsInitialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1162,
                                  "src": "3614:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3614:55:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1266,
                              "nodeType": "EmitStatement",
                              "src": "3609:60:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1269,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "3698:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1270,
                            "name": "_treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1194,
                            "src": "3716:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3698:34:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1272,
                        "nodeType": "ExpressionStatement",
                        "src": "3698:34:11"
                      },
                      {
                        "expression": {
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1273,
                            "name": "paymentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1043,
                            "src": "3742:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1274,
                            "name": "_paymentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "3759:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3742:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1276,
                        "nodeType": "ExpressionStatement",
                        "src": "3742:32:11"
                      },
                      {
                        "expression": {
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1277,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "3784:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1278,
                            "name": "_platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1198,
                            "src": "3805:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3784:40:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1280,
                        "nodeType": "ExpressionStatement",
                        "src": "3784:40:11"
                      },
                      {
                        "expression": {
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1281,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "3834:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1282,
                            "name": "_hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1200,
                            "src": "3847:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3834:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1284,
                        "nodeType": "ExpressionStatement",
                        "src": "3834:24:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3952:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 1290,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1198,
                                  "src": "3975:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1291,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4019:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4025:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4019:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1293,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4059:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4063:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4059:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1288,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1080,
                                "src": "3920:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$1080_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 1295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "3944:6:11",
                                "3967:6:11",
                                "4008:9:11",
                                "4048:9:11"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "3920:160:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1285,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "3904:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3915:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3904:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$1080_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3904:177:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1297,
                        "nodeType": "ExpressionStatement",
                        "src": "3904:177:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1304,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4163:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1303,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4155:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1302,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4155:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4155:10:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1306,
                                  "name": "_treasuryAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1194,
                                  "src": "4192:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1307,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4233:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4239:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4233:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1309,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4273:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1310,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4277:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4273:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1301,
                                "name": "TreasuryChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1093,
                                "src": "4113:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_TreasuryChange_$1093_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.TreasuryChange storage pointer)"
                                }
                              },
                              "id": 1311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "4142:11:11",
                                "4179:11:11",
                                "4222:9:11",
                                "4262:9:11"
                              ],
                              "names": [
                                "oldTreasury",
                                "newTreasury",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4113:181:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1093_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1093_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1298,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1097,
                              "src": "4092:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 1300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4108:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4092:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage_ptr_$_t_struct$_TreasuryChange_$1093_storage_$returns$__$attached_to$_t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.TreasuryChange storage ref[] storage pointer,struct ZaaNetAdmin.TreasuryChange storage ref)"
                            }
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4092:203:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1313,
                        "nodeType": "ExpressionStatement",
                        "src": "4092:203:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1318,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4368:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 1319,
                                  "name": "_hostingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1200,
                                  "src": "4391:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1320,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4427:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4433:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4427:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1322,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4467:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4471:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4467:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1317,
                                "name": "HostingFeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1106,
                                "src": "4329:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_HostingFeeChange_$1106_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.HostingFeeChange storage pointer)"
                                }
                              },
                              "id": 1324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "4360:6:11",
                                "4383:6:11",
                                "4416:9:11",
                                "4456:9:11"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4329:159:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1106_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1106_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1314,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1110,
                              "src": "4306:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4324:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4306:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage_ptr_$_t_struct$_HostingFeeChange_$1106_storage_$returns$__$attached_to$_t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.HostingFeeChange storage ref[] storage pointer,struct ZaaNetAdmin.HostingFeeChange storage ref)"
                            }
                          },
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4306:183:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1326,
                        "nodeType": "ExpressionStatement",
                        "src": "4306:183:11"
                      },
                      {
                        "expression": {
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1327,
                              "name": "emergencyOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1071,
                              "src": "4543:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1330,
                            "indexExpression": {
                              "expression": {
                                "id": 1328,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4562:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4566:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4562:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4543:30:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4576:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4543:37:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1333,
                        "nodeType": "ExpressionStatement",
                        "src": "4543:37:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1335,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4620:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4624:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4620:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4632:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "expression": {
                                "id": 1338,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4638:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4642:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4638:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1334,
                            "name": "EmergencyOperatorUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "4595:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (address,bool,address)"
                            }
                          },
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4595:54:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1341,
                        "nodeType": "EmitStatement",
                        "src": "4590:59:11"
                      }
                    ]
                  },
                  "id": 1343,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1203,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2957:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2961:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2957:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1205,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1202,
                        "name": "Ownable",
                        "nameLocations": [
                          "2949:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2949:7:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2949:19:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1192,
                        "mutability": "mutable",
                        "name": "_storageContract",
                        "nameLocation": "2793:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "2785:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1191,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2785:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1194,
                        "mutability": "mutable",
                        "name": "_treasuryAddress",
                        "nameLocation": "2827:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "2819:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2819:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1196,
                        "mutability": "mutable",
                        "name": "_paymentAddress",
                        "nameLocation": "2861:15:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "2853:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2853:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1198,
                        "mutability": "mutable",
                        "name": "_platformFeePercent",
                        "nameLocation": "2894:19:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "2886:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2886:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1200,
                        "mutability": "mutable",
                        "name": "_hostingFee",
                        "nameLocation": "2931:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "2923:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2923:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2775:173:11"
                  },
                  "returnParameters": {
                    "id": 1206,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2969:0:11"
                  },
                  "scope": 1983,
                  "src": "2764:1892:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1398,
                    "nodeType": "Block",
                    "src": "4748:617:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1353,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1345,
                                  "src": "4779:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1354,
                                  "name": "MIN_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1053,
                                  "src": "4797:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4779:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1356,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1345,
                                  "src": "4817:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1357,
                                  "name": "MAX_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1050,
                                  "src": "4835:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4817:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4779:72:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466565206d757374206265206265747765656e20312520616e6420323025",
                              "id": 1360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4866:32:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d94d2ca419eaacb351b7948b7af739baad982e852e68b60589813741b6c863f",
                                "typeString": "literal_string \"Fee must be between 1% and 20%\""
                              },
                              "value": "Fee must be between 1% and 20%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d94d2ca419eaacb351b7948b7af739baad982e852e68b60589813741b6c863f",
                                "typeString": "literal_string \"Fee must be between 1% and 20%\""
                              }
                            ],
                            "id": 1352,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4758:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4758:150:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1362,
                        "nodeType": "ExpressionStatement",
                        "src": "4758:150:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1364,
                                "name": "_newFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1345,
                                "src": "4926:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1365,
                                "name": "platformFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1045,
                                "src": "4944:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4926:36:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46656520756e6368616e676564",
                              "id": 1367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4964:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              },
                              "value": "Fee unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              }
                            ],
                            "id": 1363,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4918:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4918:62:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1369,
                        "nodeType": "ExpressionStatement",
                        "src": "4918:62:11"
                      },
                      {
                        "assignments": [
                          1371
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1371,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "4999:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1398,
                            "src": "4991:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1370,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4991:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1373,
                        "initialValue": {
                          "id": 1372,
                          "name": "platformFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "5008:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4991:35:11"
                      },
                      {
                        "expression": {
                          "id": 1376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1374,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "5036:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1375,
                            "name": "_newFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "5057:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5036:35:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1377,
                        "nodeType": "ExpressionStatement",
                        "src": "5036:35:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1382,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1371,
                                  "src": "5159:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1383,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1345,
                                  "src": "5187:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1384,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5226:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5232:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5226:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1386,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5266:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5270:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5266:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1381,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1080,
                                "src": "5127:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$1080_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 1388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "5151:6:11",
                                "5179:6:11",
                                "5215:9:11",
                                "5255:9:11"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "5127:160:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1378,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "5111:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5122:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5111:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$1080_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5111:177:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1390,
                        "nodeType": "ExpressionStatement",
                        "src": "5111:177:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1392,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1371,
                              "src": "5323:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1393,
                              "name": "_newFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1345,
                              "src": "5331:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1394,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5347:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5351:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5347:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1391,
                            "name": "PlatformFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "5304:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5304:54:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1397,
                        "nodeType": "EmitStatement",
                        "src": "5299:59:11"
                      }
                    ]
                  },
                  "functionSelector": "12e8e2c3",
                  "id": 1399,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1348,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1347,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4719:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4719:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4719:9:11"
                    },
                    {
                      "id": 1350,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1349,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "4729:18:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1190,
                        "src": "4729:18:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4729:18:11"
                    }
                  ],
                  "name": "setPlatformFee",
                  "nameLocation": "4671:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1345,
                        "mutability": "mutable",
                        "name": "_newFeePercent",
                        "nameLocation": "4694:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1399,
                        "src": "4686:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1344,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4686:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4685:24:11"
                  },
                  "returnParameters": {
                    "id": 1351,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4748:0:11"
                  },
                  "scope": 1983,
                  "src": "4662:703:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1454,
                    "nodeType": "Block",
                    "src": "5449:597:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1409,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1401,
                                  "src": "5480:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1410,
                                  "name": "MIN_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1064,
                                  "src": "5491:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5480:26:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1414,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1412,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1401,
                                  "src": "5510:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1413,
                                  "name": "MAX_HOSTING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1061,
                                  "src": "5521:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5510:26:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5480:56:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466565206d757374206265206265747765656e203020616e64203130302055534454",
                              "id": 1416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5550:36:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_000cb682cd7c8affc418fc78874a994822feb696edce91a1f30a9f78108d0d83",
                                "typeString": "literal_string \"Fee must be between 0 and 100 USDT\""
                              },
                              "value": "Fee must be between 0 and 100 USDT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_000cb682cd7c8affc418fc78874a994822feb696edce91a1f30a9f78108d0d83",
                                "typeString": "literal_string \"Fee must be between 0 and 100 USDT\""
                              }
                            ],
                            "id": 1408,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5459:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5459:137:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1418,
                        "nodeType": "ExpressionStatement",
                        "src": "5459:137:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1420,
                                "name": "_newFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1401,
                                "src": "5614:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1421,
                                "name": "hostingFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1047,
                                "src": "5625:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5614:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46656520756e6368616e676564",
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5637:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              },
                              "value": "Fee unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              }
                            ],
                            "id": 1419,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5606:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5606:47:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1425,
                        "nodeType": "ExpressionStatement",
                        "src": "5606:47:11"
                      },
                      {
                        "assignments": [
                          1427
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1427,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "5680:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1454,
                            "src": "5672:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1426,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5672:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1429,
                        "initialValue": {
                          "id": 1428,
                          "name": "hostingFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "5689:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5672:27:11"
                      },
                      {
                        "expression": {
                          "id": 1432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1430,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "5709:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1431,
                            "name": "_newFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
                            "src": "5722:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5709:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1433,
                        "nodeType": "ExpressionStatement",
                        "src": "5709:20:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1438,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1427,
                                  "src": "5847:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1439,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1401,
                                  "src": "5875:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1440,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5907:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1441,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5913:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5907:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1442,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5947:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5951:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5947:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1437,
                                "name": "HostingFeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1106,
                                "src": "5808:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_HostingFeeChange_$1106_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.HostingFeeChange storage pointer)"
                                }
                              },
                              "id": 1444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "5839:6:11",
                                "5867:6:11",
                                "5896:9:11",
                                "5936:9:11"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "5808:160:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1106_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1106_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1434,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1110,
                              "src": "5785:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5803:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5785:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage_ptr_$_t_struct$_HostingFeeChange_$1106_storage_$returns$__$attached_to$_t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.HostingFeeChange storage ref[] storage pointer,struct ZaaNetAdmin.HostingFeeChange storage ref)"
                            }
                          },
                          "id": 1445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5785:184:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1446,
                        "nodeType": "ExpressionStatement",
                        "src": "5785:184:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1448,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1427,
                              "src": "6011:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1449,
                              "name": "_newFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1401,
                              "src": "6019:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1450,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6028:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6032:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6028:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1447,
                            "name": "HostingFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "5993:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5993:46:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1453,
                        "nodeType": "EmitStatement",
                        "src": "5988:51:11"
                      }
                    ]
                  },
                  "functionSelector": "edfbf4f1",
                  "id": 1455,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1404,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1403,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5420:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5420:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5420:9:11"
                    },
                    {
                      "id": 1406,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1405,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "5430:18:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1190,
                        "src": "5430:18:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5430:18:11"
                    }
                  ],
                  "name": "setHostingFee",
                  "nameLocation": "5380:13:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1401,
                        "mutability": "mutable",
                        "name": "_newFee",
                        "nameLocation": "5402:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1455,
                        "src": "5394:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5394:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5393:17:11"
                  },
                  "returnParameters": {
                    "id": 1407,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5449:0:11"
                  },
                  "scope": 1983,
                  "src": "5371:675:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1509,
                    "nodeType": "Block",
                    "src": "6147:590:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1465,
                                "name": "_newTreasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1457,
                                "src": "6165:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6196:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1467,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6188:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1466,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6188:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6188:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6165:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642074726561737572792061646472657373",
                              "id": 1471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6200:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
                                "typeString": "literal_string \"Invalid treasury address\""
                              },
                              "value": "Invalid treasury address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
                                "typeString": "literal_string \"Invalid treasury address\""
                              }
                            ],
                            "id": 1464,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6157:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6157:70:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1473,
                        "nodeType": "ExpressionStatement",
                        "src": "6157:70:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1475,
                                "name": "_newTreasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1457,
                                "src": "6245:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1476,
                                "name": "treasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1041,
                                "src": "6268:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6245:38:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "547265617375727920756e6368616e676564",
                              "id": 1478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6285:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8173890bbafbce9334fc44523b57c04aecc013fd57fc2b0c602bc5bf1e7d2665",
                                "typeString": "literal_string \"Treasury unchanged\""
                              },
                              "value": "Treasury unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8173890bbafbce9334fc44523b57c04aecc013fd57fc2b0c602bc5bf1e7d2665",
                                "typeString": "literal_string \"Treasury unchanged\""
                              }
                            ],
                            "id": 1474,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6237:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6237:69:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1480,
                        "nodeType": "ExpressionStatement",
                        "src": "6237:69:11"
                      },
                      {
                        "assignments": [
                          1482
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1482,
                            "mutability": "mutable",
                            "name": "oldTreasury",
                            "nameLocation": "6325:11:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1509,
                            "src": "6317:19:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1481,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6317:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1484,
                        "initialValue": {
                          "id": 1483,
                          "name": "treasuryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "6339:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6317:37:11"
                      },
                      {
                        "expression": {
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1485,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "6364:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1486,
                            "name": "_newTreasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1457,
                            "src": "6382:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6364:37:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1488,
                        "nodeType": "ExpressionStatement",
                        "src": "6364:37:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1493,
                                  "name": "oldTreasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1482,
                                  "src": "6509:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1494,
                                  "name": "_newTreasuryAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1457,
                                  "src": "6547:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1495,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6591:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6597:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6591:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1497,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6631:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6635:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6631:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1492,
                                "name": "TreasuryChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1093,
                                "src": "6467:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_TreasuryChange_$1093_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.TreasuryChange storage pointer)"
                                }
                              },
                              "id": 1499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "6496:11:11",
                                "6534:11:11",
                                "6580:9:11",
                                "6620:9:11"
                              ],
                              "names": [
                                "oldTreasury",
                                "newTreasury",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "6467:185:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1093_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1093_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1489,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1097,
                              "src": "6446:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6462:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6446:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage_ptr_$_t_struct$_TreasuryChange_$1093_storage_$returns$__$attached_to$_t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.TreasuryChange storage ref[] storage pointer,struct ZaaNetAdmin.TreasuryChange storage ref)"
                            }
                          },
                          "id": 1500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6446:207:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1501,
                        "nodeType": "ExpressionStatement",
                        "src": "6446:207:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1503,
                              "name": "oldTreasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1482,
                              "src": "6685:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1504,
                              "name": "_newTreasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1457,
                              "src": "6698:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1505,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6719:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6723:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6719:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1502,
                            "name": "TreasuryUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1126,
                            "src": "6669:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 1507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6669:61:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1508,
                        "nodeType": "EmitStatement",
                        "src": "6664:66:11"
                      }
                    ]
                  },
                  "functionSelector": "6605bfda",
                  "id": 1510,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1460,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1459,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6118:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6118:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6118:9:11"
                    },
                    {
                      "id": 1462,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1461,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "6128:18:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1190,
                        "src": "6128:18:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6128:18:11"
                    }
                  ],
                  "name": "setTreasuryAddress",
                  "nameLocation": "6061:18:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1457,
                        "mutability": "mutable",
                        "name": "_newTreasuryAddress",
                        "nameLocation": "6088:19:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1510,
                        "src": "6080:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1456,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6080:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6079:29:11"
                  },
                  "returnParameters": {
                    "id": 1463,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6147:0:11"
                  },
                  "scope": 1983,
                  "src": "6052:685:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1540,
                    "nodeType": "Block",
                    "src": "6836:215:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1520,
                                "name": "_newPaymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1512,
                                "src": "6854:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6884:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6876:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1521,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6876:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6876:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6854:32:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207061796d656e742061646472657373",
                              "id": 1526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6888:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c30ffd4d4e62ad6cb5c99115837f313e332d04d4c16e9c74b308088b453c5761",
                                "typeString": "literal_string \"Invalid payment address\""
                              },
                              "value": "Invalid payment address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c30ffd4d4e62ad6cb5c99115837f313e332d04d4c16e9c74b308088b453c5761",
                                "typeString": "literal_string \"Invalid payment address\""
                              }
                            ],
                            "id": 1519,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6846:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6846:68:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1528,
                        "nodeType": "ExpressionStatement",
                        "src": "6846:68:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1530,
                                "name": "_newPaymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1512,
                                "src": "6932:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1531,
                                "name": "paymentAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1043,
                                "src": "6954:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6932:36:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061796d656e74206164647265737320756e6368616e676564",
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6970:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_322b7cdc9ee78c0715fd23ccbd9ba57a644d0ef9253322ddc5209104c897a221",
                                "typeString": "literal_string \"Payment address unchanged\""
                              },
                              "value": "Payment address unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_322b7cdc9ee78c0715fd23ccbd9ba57a644d0ef9253322ddc5209104c897a221",
                                "typeString": "literal_string \"Payment address unchanged\""
                              }
                            ],
                            "id": 1529,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6924:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6924:74:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1535,
                        "nodeType": "ExpressionStatement",
                        "src": "6924:74:11"
                      },
                      {
                        "expression": {
                          "id": 1538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1536,
                            "name": "paymentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1043,
                            "src": "7009:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1537,
                            "name": "_newPaymentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1512,
                            "src": "7026:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7009:35:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1539,
                        "nodeType": "ExpressionStatement",
                        "src": "7009:35:11"
                      }
                    ]
                  },
                  "functionSelector": "5e1e1004",
                  "id": 1541,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1515,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1514,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6807:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6807:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6807:9:11"
                    },
                    {
                      "id": 1517,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1516,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "6817:18:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1190,
                        "src": "6817:18:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6817:18:11"
                    }
                  ],
                  "name": "setPaymentAddress",
                  "nameLocation": "6752:17:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1512,
                        "mutability": "mutable",
                        "name": "_newPaymentAddress",
                        "nameLocation": "6778:18:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1541,
                        "src": "6770:26:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6770:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6769:28:11"
                  },
                  "returnParameters": {
                    "id": 1518,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6836:0:11"
                  },
                  "scope": 1983,
                  "src": "6743:308:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1554,
                    "nodeType": "Block",
                    "src": "7093:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1546,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "7103:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7103:8:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1548,
                        "nodeType": "ExpressionStatement",
                        "src": "7103:8:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1550,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7138:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7142:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7138:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1549,
                            "name": "AdminPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "7126:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7126:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1553,
                        "nodeType": "EmitStatement",
                        "src": "7121:28:11"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 1555,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1544,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1543,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7083:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7083:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7083:9:11"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "7066:5:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1542,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7071:2:11"
                  },
                  "returnParameters": {
                    "id": 1545,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7093:0:11"
                  },
                  "scope": 1983,
                  "src": "7057:99:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1568,
                    "nodeType": "Block",
                    "src": "7200:67:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1560,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "7210:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7210:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1562,
                        "nodeType": "ExpressionStatement",
                        "src": "7210:10:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1564,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7249:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7253:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7249:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1563,
                            "name": "AdminUnpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1142,
                            "src": "7235:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7235:25:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1567,
                        "nodeType": "EmitStatement",
                        "src": "7230:30:11"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 1569,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1558,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1557,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7190:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7190:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7190:9:11"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "7171:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1556,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7178:2:11"
                  },
                  "returnParameters": {
                    "id": 1559,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7200:0:11"
                  },
                  "scope": 1983,
                  "src": "7162:105:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1586,
                    "nodeType": "Block",
                    "src": "7397:109:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1575,
                            "name": "emergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "7407:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7423:14:11",
                            "subExpression": {
                              "id": 1576,
                              "name": "emergencyMode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1067,
                              "src": "7424:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7407:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1579,
                        "nodeType": "ExpressionStatement",
                        "src": "7407:30:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1581,
                              "name": "emergencyMode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1067,
                              "src": "7473:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1582,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7488:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7492:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7488:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1580,
                            "name": "EmergencyModeToggled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "7452:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (bool,address)"
                            }
                          },
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7452:47:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1585,
                        "nodeType": "EmitStatement",
                        "src": "7447:52:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1570,
                    "nodeType": "StructuredDocumentation",
                    "src": "7273:57:11",
                    "text": "@notice Toggle emergency mode (stops most operations)"
                  },
                  "functionSelector": "4c17b530",
                  "id": 1587,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1573,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1572,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "7375:21:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1180,
                        "src": "7375:21:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7375:21:11"
                    }
                  ],
                  "name": "toggleEmergencyMode",
                  "nameLocation": "7344:19:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1571,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7363:2:11"
                  },
                  "returnParameters": {
                    "id": 1574,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7397:0:11"
                  },
                  "scope": 1983,
                  "src": "7335:171:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1620,
                    "nodeType": "Block",
                    "src": "7642:192:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1598,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1590,
                                "src": "7660:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1601,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7680:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7672:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1599,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7672:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7672:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7660:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7684:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                                "typeString": "literal_string \"Invalid operator address\""
                              },
                              "value": "Invalid operator address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                                "typeString": "literal_string \"Invalid operator address\""
                              }
                            ],
                            "id": 1597,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7652:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7652:59:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1606,
                        "nodeType": "ExpressionStatement",
                        "src": "7652:59:11"
                      },
                      {
                        "expression": {
                          "id": 1611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1607,
                              "name": "emergencyOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1071,
                              "src": "7721:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1609,
                            "indexExpression": {
                              "id": 1608,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "7740:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7721:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1610,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1592,
                            "src": "7752:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7721:37:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1612,
                        "nodeType": "ExpressionStatement",
                        "src": "7721:37:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1614,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "7798:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1615,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1592,
                              "src": "7808:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1616,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7816:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7820:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7816:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1613,
                            "name": "EmergencyOperatorUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "7773:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (address,bool,address)"
                            }
                          },
                          "id": 1618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7773:54:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1619,
                        "nodeType": "EmitStatement",
                        "src": "7768:59:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1588,
                    "nodeType": "StructuredDocumentation",
                    "src": "7512:45:11",
                    "text": "@notice Add or remove emergency operators"
                  },
                  "functionSelector": "02e88899",
                  "id": 1621,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1595,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1594,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7632:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7632:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7632:9:11"
                    }
                  ],
                  "name": "setEmergencyOperator",
                  "nameLocation": "7571:20:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1590,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "7600:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1621,
                        "src": "7592:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1589,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7592:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1592,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "7615:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1621,
                        "src": "7610:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7610:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7591:31:11"
                  },
                  "returnParameters": {
                    "id": 1596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7642:0:11"
                  },
                  "scope": 1983,
                  "src": "7562:272:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1648,
                    "nodeType": "Block",
                    "src": "7985:154:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1632,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1039,
                                    "src": "8011:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  ],
                                  "id": 1631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8003:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1630,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8003:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8003:24:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1636,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8039:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8031:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1634,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8031:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8031:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8003:38:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53746f72616765206e6f7420696e697469616c697a6564",
                              "id": 1639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8043:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2023538f64727753263af97fb236e4ca5fd392e4beb26d70beb0b687afd58eae",
                                "typeString": "literal_string \"Storage not initialized\""
                              },
                              "value": "Storage not initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2023538f64727753263af97fb236e4ca5fd392e4beb26d70beb0b687afd58eae",
                                "typeString": "literal_string \"Storage not initialized\""
                              }
                            ],
                            "id": 1629,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7995:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7995:74:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1641,
                        "nodeType": "ExpressionStatement",
                        "src": "7995:74:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1645,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1624,
                              "src": "8122:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1642,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1039,
                              "src": "8079:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 1644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8095:26:11",
                            "memberName": "emergencyDeactivateNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4701,
                            "src": "8079:42:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8079:53:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1647,
                        "nodeType": "ExpressionStatement",
                        "src": "8079:53:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1622,
                    "nodeType": "StructuredDocumentation",
                    "src": "7840:54:11",
                    "text": "@notice Emergency function to deactivate a network"
                  },
                  "functionSelector": "5a2f406f",
                  "id": 1649,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1627,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1626,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "7963:21:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1180,
                        "src": "7963:21:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7963:21:11"
                    }
                  ],
                  "name": "emergencyDeactivateNetwork",
                  "nameLocation": "7908:26:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1624,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "7943:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1649,
                        "src": "7935:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1623,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7935:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7934:19:11"
                  },
                  "returnParameters": {
                    "id": 1628,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7985:0:11"
                  },
                  "scope": 1983,
                  "src": "7899:240:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1692,
                    "nodeType": "Block",
                    "src": "8305:446:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1658,
                                "name": "_newFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1652,
                                "src": "8323:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1659,
                                "name": "MAX_PLATFORM_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1050,
                                "src": "8341:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8323:34:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4665652063616e6e6f7420657863656564206d6178696d756d",
                              "id": 1661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8359:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              },
                              "value": "Fee cannot exceed maximum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              }
                            ],
                            "id": 1657,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8315:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8315:72:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1663,
                        "nodeType": "ExpressionStatement",
                        "src": "8315:72:11"
                      },
                      {
                        "assignments": [
                          1665
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1665,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "8414:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1692,
                            "src": "8406:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1664,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8406:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1667,
                        "initialValue": {
                          "id": 1666,
                          "name": "platformFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "8423:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8406:35:11"
                      },
                      {
                        "expression": {
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1668,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "8451:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1669,
                            "name": "_newFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1652,
                            "src": "8472:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8451:35:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1671,
                        "nodeType": "ExpressionStatement",
                        "src": "8451:35:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1676,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1665,
                                  "src": "8545:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1677,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1652,
                                  "src": "8573:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1678,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8612:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8618:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8612:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1680,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8652:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8656:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "8652:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1675,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1080,
                                "src": "8513:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$1080_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 1682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "8537:6:11",
                                "8565:6:11",
                                "8601:9:11",
                                "8641:9:11"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "8513:160:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$1080_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1672,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "8497:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8508:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8497:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$1080_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 1683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8497:177:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1684,
                        "nodeType": "ExpressionStatement",
                        "src": "8497:177:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1686,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1665,
                              "src": "8709:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1687,
                              "name": "_newFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1652,
                              "src": "8717:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1688,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8733:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8737:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8733:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1685,
                            "name": "PlatformFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "8690:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8690:54:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1691,
                        "nodeType": "EmitStatement",
                        "src": "8685:59:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1650,
                    "nodeType": "StructuredDocumentation",
                    "src": "8145:67:11",
                    "text": "@notice Emergency fee adjustment (bypasses normal restrictions)"
                  },
                  "functionSelector": "18b4f23b",
                  "id": 1693,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1655,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1654,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "8283:21:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1180,
                        "src": "8283:21:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8283:21:11"
                    }
                  ],
                  "name": "emergencySetPlatformFee",
                  "nameLocation": "8226:23:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1653,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1652,
                        "mutability": "mutable",
                        "name": "_newFeePercent",
                        "nameLocation": "8258:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1693,
                        "src": "8250:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1651,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8250:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8249:24:11"
                  },
                  "returnParameters": {
                    "id": 1656,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8305:0:11"
                  },
                  "scope": 1983,
                  "src": "8217:534:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1736,
                    "nodeType": "Block",
                    "src": "8917:414:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1702,
                                "name": "_newFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1696,
                                "src": "8935:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1703,
                                "name": "MAX_HOSTING_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1061,
                                "src": "8946:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8935:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4665652063616e6e6f7420657863656564206d6178696d756d",
                              "id": 1705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8963:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              },
                              "value": "Fee cannot exceed maximum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              }
                            ],
                            "id": 1701,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8927:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8927:64:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1707,
                        "nodeType": "ExpressionStatement",
                        "src": "8927:64:11"
                      },
                      {
                        "assignments": [
                          1709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1709,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "9018:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1736,
                            "src": "9010:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1708,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9010:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1711,
                        "initialValue": {
                          "id": 1710,
                          "name": "hostingFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "9027:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9010:27:11"
                      },
                      {
                        "expression": {
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1712,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "9047:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1713,
                            "name": "_newFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1696,
                            "src": "9060:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9047:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1715,
                        "nodeType": "ExpressionStatement",
                        "src": "9047:20:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1720,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1709,
                                  "src": "9140:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1721,
                                  "name": "_newFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1696,
                                  "src": "9168:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1722,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9200:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1723,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9206:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9200:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1724,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9240:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1725,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9244:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9240:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1719,
                                "name": "HostingFeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1106,
                                "src": "9101:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_HostingFeeChange_$1106_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.HostingFeeChange storage pointer)"
                                }
                              },
                              "id": 1726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "9132:6:11",
                                "9160:6:11",
                                "9189:9:11",
                                "9229:9:11"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "9101:160:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1106_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HostingFeeChange_$1106_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1716,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1110,
                              "src": "9078:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9096:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "9078:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage_ptr_$_t_struct$_HostingFeeChange_$1106_storage_$returns$__$attached_to$_t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.HostingFeeChange storage ref[] storage pointer,struct ZaaNetAdmin.HostingFeeChange storage ref)"
                            }
                          },
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9078:184:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1728,
                        "nodeType": "ExpressionStatement",
                        "src": "9078:184:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1730,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "9296:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1731,
                              "name": "_newFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1696,
                              "src": "9304:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1732,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9313:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9317:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9313:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1729,
                            "name": "HostingFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "9278:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9278:46:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1735,
                        "nodeType": "EmitStatement",
                        "src": "9273:51:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1694,
                    "nodeType": "StructuredDocumentation",
                    "src": "8757:75:11",
                    "text": "@notice Emergency hosting fee adjustment (bypasses normal restrictions)"
                  },
                  "functionSelector": "bbeecdf0",
                  "id": 1737,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1699,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1698,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "8895:21:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1180,
                        "src": "8895:21:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8895:21:11"
                    }
                  ],
                  "name": "emergencySetHostingFee",
                  "nameLocation": "8846:22:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1697,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1696,
                        "mutability": "mutable",
                        "name": "_newFee",
                        "nameLocation": "8877:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1737,
                        "src": "8869:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1695,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8869:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8868:17:11"
                  },
                  "returnParameters": {
                    "id": 1700,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8917:0:11"
                  },
                  "scope": 1983,
                  "src": "8837:494:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1746,
                    "nodeType": "Block",
                    "src": "9500:31:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1743,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "9517:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9517:7:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1742,
                        "id": 1745,
                        "nodeType": "Return",
                        "src": "9510:14:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1738,
                    "nodeType": "StructuredDocumentation",
                    "src": "9368:78:11",
                    "text": "@notice Expose admin address for other contracts (interface compatibility)"
                  },
                  "functionSelector": "f851a440",
                  "id": 1747,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "admin",
                  "nameLocation": "9460:5:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1739,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9465:2:11"
                  },
                  "returnParameters": {
                    "id": 1742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1741,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1747,
                        "src": "9491:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1740,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9491:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9490:9:11"
                  },
                  "scope": 1983,
                  "src": "9451:80:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1757,
                    "nodeType": "Block",
                    "src": "9644:34:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1755,
                          "name": "feeHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "9661:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1754,
                        "id": 1756,
                        "nodeType": "Return",
                        "src": "9654:17:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1748,
                    "nodeType": "StructuredDocumentation",
                    "src": "9537:34:11",
                    "text": "@notice Get fee change history"
                  },
                  "functionSelector": "5707ed45",
                  "id": 1758,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFeeHistory",
                  "nameLocation": "9585:13:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1749,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9598:2:11"
                  },
                  "returnParameters": {
                    "id": 1754,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1753,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1758,
                        "src": "9624:18:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.FeeChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1751,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1750,
                              "name": "FeeChange",
                              "nameLocations": [
                                "9624:9:11"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1080,
                              "src": "9624:9:11"
                            },
                            "referencedDeclaration": 1080,
                            "src": "9624:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FeeChange_$1080_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.FeeChange"
                            }
                          },
                          "id": 1752,
                          "nodeType": "ArrayTypeName",
                          "src": "9624:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.FeeChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9623:20:11"
                  },
                  "scope": 1983,
                  "src": "9576:102:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1768,
                    "nodeType": "Block",
                    "src": "9806:39:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1766,
                          "name": "treasuryHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1097,
                          "src": "9823:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1765,
                        "id": 1767,
                        "nodeType": "Return",
                        "src": "9816:22:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1759,
                    "nodeType": "StructuredDocumentation",
                    "src": "9684:39:11",
                    "text": "@notice Get treasury change history"
                  },
                  "functionSelector": "492adaa8",
                  "id": 1769,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTreasuryHistory",
                  "nameLocation": "9737:18:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1760,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9755:2:11"
                  },
                  "returnParameters": {
                    "id": 1765,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1764,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1769,
                        "src": "9781:23:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1762,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1761,
                              "name": "TreasuryChange",
                              "nameLocations": [
                                "9781:14:11"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1093,
                              "src": "9781:14:11"
                            },
                            "referencedDeclaration": 1093,
                            "src": "9781:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TreasuryChange_$1093_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.TreasuryChange"
                            }
                          },
                          "id": 1763,
                          "nodeType": "ArrayTypeName",
                          "src": "9781:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9780:25:11"
                  },
                  "scope": 1983,
                  "src": "9728:117:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1779,
                    "nodeType": "Block",
                    "src": "9980:41:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1777,
                          "name": "hostingFeeHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1110,
                          "src": "9997:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1776,
                        "id": 1778,
                        "nodeType": "Return",
                        "src": "9990:24:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1770,
                    "nodeType": "StructuredDocumentation",
                    "src": "9851:42:11",
                    "text": "@notice Get hosting fee change history"
                  },
                  "functionSelector": "d4ab4b40",
                  "id": 1780,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostingFeeHistory",
                  "nameLocation": "9907:20:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1771,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9927:2:11"
                  },
                  "returnParameters": {
                    "id": 1776,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1775,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1780,
                        "src": "9953:25:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1773,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1772,
                              "name": "HostingFeeChange",
                              "nameLocations": [
                                "9953:16:11"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1106,
                              "src": "9953:16:11"
                            },
                            "referencedDeclaration": 1106,
                            "src": "9953:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HostingFeeChange_$1106_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                            }
                          },
                          "id": 1774,
                          "nodeType": "ArrayTypeName",
                          "src": "9953:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9952:27:11"
                  },
                  "scope": 1983,
                  "src": "9898:123:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1790,
                    "nodeType": "Block",
                    "src": "10176:86:11",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1786,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "10193:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10214:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "10193:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1785,
                        "id": 1789,
                        "nodeType": "Return",
                        "src": "10186:31:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1781,
                    "nodeType": "StructuredDocumentation",
                    "src": "10027:75:11",
                    "text": "@notice Get current fee in basis points (for more precise calculations)"
                  },
                  "functionSelector": "7a9b93c6",
                  "id": 1791,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPlatformFeeBasisPoints",
                  "nameLocation": "10116:25:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1782,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10141:2:11"
                  },
                  "returnParameters": {
                    "id": 1785,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1784,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "10167:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1783,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10167:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10166:9:11"
                  },
                  "scope": 1983,
                  "src": "10107:155:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1806,
                    "nodeType": "Block",
                    "src": "10407:59:11",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1799,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1794,
                                  "src": "10425:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1800,
                                  "name": "platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "10434:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10425:27:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1802,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10424:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10456:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "10424:35:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1798,
                        "id": 1805,
                        "nodeType": "Return",
                        "src": "10417:42:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1792,
                    "nodeType": "StructuredDocumentation",
                    "src": "10271:53:11",
                    "text": "@notice Calculate platform fee for a given amount"
                  },
                  "functionSelector": "0cbab4f7",
                  "id": 1807,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculatePlatformFee",
                  "nameLocation": "10338:20:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1795,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1794,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "10367:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1807,
                        "src": "10359:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1793,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10359:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10358:16:11"
                  },
                  "returnParameters": {
                    "id": 1798,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1797,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1807,
                        "src": "10398:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1796,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10398:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10397:9:11"
                  },
                  "scope": 1983,
                  "src": "10329:137:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1856,
                    "nodeType": "Block",
                    "src": "10822:339:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1825,
                            "name": "totalFeeChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1811,
                            "src": "10832:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1826,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "10850:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10861:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10850:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10832:35:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1829,
                        "nodeType": "ExpressionStatement",
                        "src": "10832:35:11"
                      },
                      {
                        "expression": {
                          "id": 1833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1830,
                            "name": "totalTreasuryChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1813,
                            "src": "10877:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1831,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1097,
                              "src": "10900:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 1832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10916:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10900:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10877:45:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1834,
                        "nodeType": "ExpressionStatement",
                        "src": "10877:45:11"
                      },
                      {
                        "expression": {
                          "id": 1838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1835,
                            "name": "totalHostingFeeChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1815,
                            "src": "10932:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1836,
                              "name": "hostingFeeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1110,
                              "src": "10957:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10975:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10957:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10932:49:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1839,
                        "nodeType": "ExpressionStatement",
                        "src": "10932:49:11"
                      },
                      {
                        "expression": {
                          "id": 1842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1840,
                            "name": "isEmergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "10991:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1841,
                            "name": "emergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "11009:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10991:31:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1843,
                        "nodeType": "ExpressionStatement",
                        "src": "10991:31:11"
                      },
                      {
                        "expression": {
                          "id": 1846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1844,
                            "name": "currentPlatformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1819,
                            "src": "11032:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1845,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "11053:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11032:39:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1847,
                        "nodeType": "ExpressionStatement",
                        "src": "11032:39:11"
                      },
                      {
                        "expression": {
                          "id": 1850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1848,
                            "name": "currentHostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1821,
                            "src": "11081:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1849,
                            "name": "hostingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "11101:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11081:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1851,
                        "nodeType": "ExpressionStatement",
                        "src": "11081:30:11"
                      },
                      {
                        "expression": {
                          "id": 1854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1852,
                            "name": "currentTreasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1823,
                            "src": "11121:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1853,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "11139:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11121:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1855,
                        "nodeType": "ExpressionStatement",
                        "src": "11121:33:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1808,
                    "nodeType": "StructuredDocumentation",
                    "src": "10472:46:11",
                    "text": "@notice Get comprehensive admin statistics"
                  },
                  "functionSelector": "c116d936",
                  "id": 1857,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAdminStats",
                  "nameLocation": "10532:13:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1809,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10545:2:11"
                  },
                  "returnParameters": {
                    "id": 1824,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1811,
                        "mutability": "mutable",
                        "name": "totalFeeChanges",
                        "nameLocation": "10588:15:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1857,
                        "src": "10580:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1810,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10580:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1813,
                        "mutability": "mutable",
                        "name": "totalTreasuryChanges",
                        "nameLocation": "10621:20:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1857,
                        "src": "10613:28:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1812,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10613:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1815,
                        "mutability": "mutable",
                        "name": "totalHostingFeeChanges",
                        "nameLocation": "10659:22:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1857,
                        "src": "10651:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1814,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10651:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1817,
                        "mutability": "mutable",
                        "name": "isEmergencyMode",
                        "nameLocation": "10696:15:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1857,
                        "src": "10691:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1816,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10691:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1819,
                        "mutability": "mutable",
                        "name": "currentPlatformFee",
                        "nameLocation": "10729:18:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1857,
                        "src": "10721:26:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1818,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10721:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1821,
                        "mutability": "mutable",
                        "name": "currentHostingFee",
                        "nameLocation": "10765:17:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1857,
                        "src": "10757:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1820,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10757:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1823,
                        "mutability": "mutable",
                        "name": "currentTreasury",
                        "nameLocation": "10800:15:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1857,
                        "src": "10792:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1822,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10792:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10570:251:11"
                  },
                  "scope": 1983,
                  "src": "10523:638:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1869,
                    "nodeType": "Block",
                    "src": "11298:52:11",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1865,
                            "name": "emergencyOperators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1071,
                            "src": "11315:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1867,
                          "indexExpression": {
                            "id": 1866,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1860,
                            "src": "11334:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11315:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1864,
                        "id": 1868,
                        "nodeType": "Return",
                        "src": "11308:35:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1858,
                    "nodeType": "StructuredDocumentation",
                    "src": "11167:50:11",
                    "text": "@notice Check if address is emergency operator"
                  },
                  "functionSelector": "a10eb354",
                  "id": 1870,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isEmergencyOperator",
                  "nameLocation": "11231:19:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1861,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1860,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "11259:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1870,
                        "src": "11251:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1859,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11251:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11250:18:11"
                  },
                  "returnParameters": {
                    "id": 1864,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1863,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1870,
                        "src": "11292:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1862,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11292:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11291:6:11"
                  },
                  "scope": 1983,
                  "src": "11222:128:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1892,
                    "nodeType": "Block",
                    "src": "11473:124:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1878,
                                  "name": "feeHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1084,
                                  "src": "11491:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11502:6:11",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11491:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11511:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11491:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20666565206368616e676573207265636f72646564",
                              "id": 1882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11514:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc8db7d8e1ea43532de30b244d617a8938afdef51027bcacf4eb88002a8b30fe",
                                "typeString": "literal_string \"No fee changes recorded\""
                              },
                              "value": "No fee changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc8db7d8e1ea43532de30b244d617a8938afdef51027bcacf4eb88002a8b30fe",
                                "typeString": "literal_string \"No fee changes recorded\""
                              }
                            ],
                            "id": 1877,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11483:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11483:57:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1884,
                        "nodeType": "ExpressionStatement",
                        "src": "11483:57:11"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1885,
                            "name": "feeHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1084,
                            "src": "11557:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                            }
                          },
                          "id": 1890,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1886,
                                "name": "feeHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1084,
                                "src": "11568:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_FeeChange_$1080_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                                }
                              },
                              "id": 1887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11579:6:11",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "11568:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11588:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11568:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11557:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeChange_$1080_storage",
                            "typeString": "struct ZaaNetAdmin.FeeChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1876,
                        "id": 1891,
                        "nodeType": "Return",
                        "src": "11550:40:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1871,
                    "nodeType": "StructuredDocumentation",
                    "src": "11356:41:11",
                    "text": "@notice Get latest fee change details"
                  },
                  "functionSelector": "5071f27b",
                  "id": 1893,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestFeeChange",
                  "nameLocation": "11411:18:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1872,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11429:2:11"
                  },
                  "returnParameters": {
                    "id": 1876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1875,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1893,
                        "src": "11455:16:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeChange_$1080_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.FeeChange"
                        },
                        "typeName": {
                          "id": 1874,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1873,
                            "name": "FeeChange",
                            "nameLocations": [
                              "11455:9:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1080,
                            "src": "11455:9:11"
                          },
                          "referencedDeclaration": 1080,
                          "src": "11455:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeChange_$1080_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.FeeChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11454:18:11"
                  },
                  "scope": 1983,
                  "src": "11402:195:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1915,
                    "nodeType": "Block",
                    "src": "11735:144:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1901,
                                  "name": "treasuryHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1097,
                                  "src": "11753:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11769:6:11",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11753:22:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11778:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11753:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207472656173757279206368616e676573207265636f72646564",
                              "id": 1905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11781:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4e47ca2bca752e588b170d4c5b1a1d7e303331d2c70d184100b710867b7893e3",
                                "typeString": "literal_string \"No treasury changes recorded\""
                              },
                              "value": "No treasury changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4e47ca2bca752e588b170d4c5b1a1d7e303331d2c70d184100b710867b7893e3",
                                "typeString": "literal_string \"No treasury changes recorded\""
                              }
                            ],
                            "id": 1900,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11745:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11745:67:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1907,
                        "nodeType": "ExpressionStatement",
                        "src": "11745:67:11"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1908,
                            "name": "treasuryHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1097,
                            "src": "11829:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                            }
                          },
                          "id": 1913,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1909,
                                "name": "treasuryHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1097,
                                "src": "11845:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1093_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                                }
                              },
                              "id": 1910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11861:6:11",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "11845:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11870:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11845:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11829:43:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TreasuryChange_$1093_storage",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1899,
                        "id": 1914,
                        "nodeType": "Return",
                        "src": "11822:50:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1894,
                    "nodeType": "StructuredDocumentation",
                    "src": "11603:46:11",
                    "text": "@notice Get latest treasury change details"
                  },
                  "functionSelector": "4863687e",
                  "id": 1916,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestTreasuryChange",
                  "nameLocation": "11663:23:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1895,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11686:2:11"
                  },
                  "returnParameters": {
                    "id": 1899,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1898,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1916,
                        "src": "11712:21:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TreasuryChange_$1093_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.TreasuryChange"
                        },
                        "typeName": {
                          "id": 1897,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1896,
                            "name": "TreasuryChange",
                            "nameLocations": [
                              "11712:14:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1093,
                            "src": "11712:14:11"
                          },
                          "referencedDeclaration": 1093,
                          "src": "11712:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TreasuryChange_$1093_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11711:23:11"
                  },
                  "scope": 1983,
                  "src": "11654:225:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1938,
                    "nodeType": "Block",
                    "src": "12024:153:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1924,
                                  "name": "hostingFeeHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1110,
                                  "src": "12042:17:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12060:6:11",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "12042:24:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12069:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12042:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20686f7374696e6720666565206368616e676573207265636f72646564",
                              "id": 1928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12072:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9af9622cb5b2e7f4b710ca9ca133f0a5ff6daec5b81316fe6395f1ec6a3a5be0",
                                "typeString": "literal_string \"No hosting fee changes recorded\""
                              },
                              "value": "No hosting fee changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9af9622cb5b2e7f4b710ca9ca133f0a5ff6daec5b81316fe6395f1ec6a3a5be0",
                                "typeString": "literal_string \"No hosting fee changes recorded\""
                              }
                            ],
                            "id": 1923,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12034:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12034:72:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1930,
                        "nodeType": "ExpressionStatement",
                        "src": "12034:72:11"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1931,
                            "name": "hostingFeeHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1110,
                            "src": "12123:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                            }
                          },
                          "id": 1936,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1932,
                                "name": "hostingFeeHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1110,
                                "src": "12141:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_HostingFeeChange_$1106_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref[] storage ref"
                                }
                              },
                              "id": 1933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12159:6:11",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "12141:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12168:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12141:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12123:47:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HostingFeeChange_$1106_storage",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1922,
                        "id": 1937,
                        "nodeType": "Return",
                        "src": "12116:54:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1917,
                    "nodeType": "StructuredDocumentation",
                    "src": "11885:49:11",
                    "text": "@notice Get latest hosting fee change details"
                  },
                  "functionSelector": "d2643f1d",
                  "id": 1939,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestHostingFeeChange",
                  "nameLocation": "11948:25:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1918,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11973:2:11"
                  },
                  "returnParameters": {
                    "id": 1922,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1921,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1939,
                        "src": "11999:23:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HostingFeeChange_$1106_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                        },
                        "typeName": {
                          "id": 1920,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1919,
                            "name": "HostingFeeChange",
                            "nameLocations": [
                              "11999:16:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1106,
                            "src": "11999:16:11"
                          },
                          "referencedDeclaration": 1106,
                          "src": "11999:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HostingFeeChange_$1106_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.HostingFeeChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11998:25:11"
                  },
                  "scope": 1983,
                  "src": "11939:238:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1951,
                    "nodeType": "Block",
                    "src": "12376:56:11",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1947,
                              "name": "platformFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "12394:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1948,
                              "name": "hostingFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1047,
                              "src": "12414:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1949,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12393:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 1946,
                        "id": 1950,
                        "nodeType": "Return",
                        "src": "12386:39:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1940,
                    "nodeType": "StructuredDocumentation",
                    "src": "12183:60:11",
                    "text": "@notice Get all current fees in one call (gas efficient)"
                  },
                  "functionSelector": "71908a03",
                  "id": 1952,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentFees",
                  "nameLocation": "12257:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1941,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12271:2:11"
                  },
                  "returnParameters": {
                    "id": 1946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1943,
                        "mutability": "mutable",
                        "name": "platformFeePercentage",
                        "nameLocation": "12314:21:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1952,
                        "src": "12306:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1942,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12306:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1945,
                        "mutability": "mutable",
                        "name": "hostingFeeAmount",
                        "nameLocation": "12353:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1952,
                        "src": "12345:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1944,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12345:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12296:79:11"
                  },
                  "scope": 1983,
                  "src": "12248:184:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1960,
                    "nodeType": "Block",
                    "src": "12636:39:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1958,
                          "name": "treasuryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "12653:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1957,
                        "id": 1959,
                        "nodeType": "Return",
                        "src": "12646:22:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1953,
                    "nodeType": "StructuredDocumentation",
                    "src": "12504:75:11",
                    "text": "@notice Alternative name for treasury address (interface compatibility)"
                  },
                  "functionSelector": "61d027b3",
                  "id": 1961,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "treasury",
                  "nameLocation": "12593:8:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1954,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12601:2:11"
                  },
                  "returnParameters": {
                    "id": 1957,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1956,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1961,
                        "src": "12627:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1955,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12627:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12626:9:11"
                  },
                  "scope": 1983,
                  "src": "12584:91:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1969,
                    "nodeType": "Block",
                    "src": "12811:38:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1967,
                          "name": "paymentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1043,
                          "src": "12828:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1966,
                        "id": 1968,
                        "nodeType": "Return",
                        "src": "12821:21:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1962,
                    "nodeType": "StructuredDocumentation",
                    "src": "12681:74:11",
                    "text": "@notice Alternative name for payment address (interface compatibility)"
                  },
                  "functionSelector": "42f6487a",
                  "id": 1970,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "payment",
                  "nameLocation": "12769:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1963,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12776:2:11"
                  },
                  "returnParameters": {
                    "id": 1966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1965,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1970,
                        "src": "12802:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1964,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12802:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12801:9:11"
                  },
                  "scope": 1983,
                  "src": "12760:89:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    885
                  ],
                  "body": {
                    "id": 1981,
                    "nodeType": "Block",
                    "src": "12979:38:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1977,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "12996:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ZaaNetAdmin_$1983_$",
                                "typeString": "type(contract super ZaaNetAdmin)"
                              }
                            },
                            "id": 1978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13002:6:11",
                            "memberName": "paused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 885,
                            "src": "12996:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12996:14:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1976,
                        "id": 1980,
                        "nodeType": "Return",
                        "src": "12989:21:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1971,
                    "nodeType": "StructuredDocumentation",
                    "src": "12855:65:11",
                    "text": "@notice Check if contract is paused (interface compatibility)"
                  },
                  "functionSelector": "5c975abb",
                  "id": 1982,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "12934:6:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1973,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "12955:8:11"
                  },
                  "parameters": {
                    "id": 1972,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12940:2:11"
                  },
                  "returnParameters": {
                    "id": 1976,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1975,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1982,
                        "src": "12973:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1974,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12973:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12972:6:11"
                  },
                  "scope": 1983,
                  "src": "12925:92:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1984,
              "src": "255:12764:11",
              "usedErrors": [
                13,
                18,
                857,
                860,
                957
              ],
              "usedEvents": [
                24,
                849,
                854,
                1118,
                1126,
                1134,
                1138,
                1142,
                1148,
                1156,
                1162
              ]
            }
          ],
          "src": "32:12987:11"
        },
        "id": 11
      },
      "contracts/ZaaNetNetwork.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetNetwork.sol",
          "exportedSymbols": {
            "Context": [
              835
            ],
            "IERC1363": [
              229
            ],
            "IERC20": [
              315
            ],
            "IZaaNetAdmin": [
              2002
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              943
            ],
            "ReentrancyGuard": [
              1012
            ],
            "SafeERC20": [
              805
            ],
            "ZaaNetNetwork": [
              2998
            ],
            "ZaaNetStorage": [
              4702
            ]
          },
          "id": 2999,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1985,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:12"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1986,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2999,
              "sourceUnit": 148,
              "src": "58:52:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1987,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2999,
              "sourceUnit": 944,
              "src": "111:52:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1988,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2999,
              "sourceUnit": 1013,
              "src": "164:59:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 1989,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2999,
              "sourceUnit": 806,
              "src": "224:65:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1990,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2999,
              "sourceUnit": 316,
              "src": "290:56:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "./ZaaNetStorage.sol",
              "id": 1991,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2999,
              "sourceUnit": 4703,
              "src": "347:29:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IZaaNetAdmin",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2002,
              "linearizedBaseContracts": [
                2002
              ],
              "name": "IZaaNetAdmin",
              "nameLocation": "388:12:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "ebe7fdaa",
                  "id": 1996,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hostingFee",
                  "nameLocation": "416:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1992,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "426:2:12"
                  },
                  "returnParameters": {
                    "id": 1995,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1994,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1996,
                        "src": "452:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1993,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "452:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "451:9:12"
                  },
                  "scope": 2002,
                  "src": "407:54:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c5f956af",
                  "id": 2001,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "treasuryAddress",
                  "nameLocation": "476:15:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "491:2:12"
                  },
                  "returnParameters": {
                    "id": 2000,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1999,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2001,
                        "src": "517:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1998,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "517:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "516:9:12"
                  },
                  "scope": 2002,
                  "src": "467:59:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2999,
              "src": "378:150:12",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2003,
                    "name": "Ownable",
                    "nameLocations": [
                      "556:7:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "556:7:12"
                  },
                  "id": 2004,
                  "nodeType": "InheritanceSpecifier",
                  "src": "556:7:12"
                },
                {
                  "baseName": {
                    "id": 2005,
                    "name": "Pausable",
                    "nameLocations": [
                      "565:8:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 943,
                    "src": "565:8:12"
                  },
                  "id": 2006,
                  "nodeType": "InheritanceSpecifier",
                  "src": "565:8:12"
                },
                {
                  "baseName": {
                    "id": 2007,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "575:15:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1012,
                    "src": "575:15:12"
                  },
                  "id": 2008,
                  "nodeType": "InheritanceSpecifier",
                  "src": "575:15:12"
                }
              ],
              "canonicalName": "ZaaNetNetwork",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2998,
              "linearizedBaseContracts": [
                2998,
                1012,
                943,
                147,
                835
              ],
              "name": "ZaaNetNetwork",
              "nameLocation": "539:13:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 2012,
                  "libraryName": {
                    "id": 2009,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "603:9:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 805,
                    "src": "603:9:12"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "597:27:12",
                  "typeName": {
                    "id": 2011,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2010,
                      "name": "IERC20",
                      "nameLocations": [
                        "617:6:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 315,
                      "src": "617:6:12"
                    },
                    "referencedDeclaration": 315,
                    "src": "617:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$315",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "11ce0267",
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "storageContract",
                  "nameLocation": "651:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "630:36:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                    "typeString": "contract ZaaNetStorage"
                  },
                  "typeName": {
                    "id": 2014,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2013,
                      "name": "ZaaNetStorage",
                      "nameLocations": [
                        "630:13:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4702,
                      "src": "630:13:12"
                    },
                    "referencedDeclaration": 4702,
                    "src": "630:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                      "typeString": "contract ZaaNetStorage"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c05c5e94",
                  "id": 2018,
                  "mutability": "mutable",
                  "name": "adminContract",
                  "nameLocation": "692:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "672:33:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                    "typeString": "contract IZaaNetAdmin"
                  },
                  "typeName": {
                    "id": 2017,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2016,
                      "name": "IZaaNetAdmin",
                      "nameLocations": [
                        "672:12:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2002,
                      "src": "672:12:12"
                    },
                    "referencedDeclaration": 2002,
                    "src": "672:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                      "typeString": "contract IZaaNetAdmin"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2f48ab7d",
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "usdt",
                  "nameLocation": "725:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "711:18:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$315",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2020,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2019,
                      "name": "IERC20",
                      "nameLocations": [
                        "711:6:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 315,
                      "src": "711:6:12"
                    },
                    "referencedDeclaration": 315,
                    "src": "711:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$315",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "09115e97",
                  "id": 2024,
                  "mutability": "constant",
                  "name": "MIN_PRICE_PER_SESSION",
                  "nameLocation": "821:21:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "797:53:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130303030",
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "845:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d4f38d04",
                  "id": 2027,
                  "mutability": "constant",
                  "name": "MAX_PRICE_PER_SESSION",
                  "nameLocation": "906:21:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "882:56:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3530303030303030",
                    "id": 2026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "930:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000_by_1",
                      "typeString": "int_const 50000000"
                    },
                    "value": "50000000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "e67d86f1",
                  "id": 2030,
                  "mutability": "constant",
                  "name": "MAX_MONGO_DATA_LENGTH",
                  "nameLocation": "992:21:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "968:51:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323030",
                    "id": 2029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1016:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200_by_1",
                      "typeString": "int_const 200"
                    },
                    "value": "200"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "eb2931b7",
                  "id": 2034,
                  "mutability": "mutable",
                  "name": "isHost",
                  "nameLocation": "1090:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "1058:38:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 2033,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2031,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1066:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1058:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2032,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1077:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2039,
                  "mutability": "mutable",
                  "name": "hostNetworks",
                  "nameLocation": "1140:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "1102:50:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 2038,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2035,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1110:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1102:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 2036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1121:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2037,
                      "nodeType": "ArrayTypeName",
                      "src": "1121:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "43355214",
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "networkToHost",
                  "nameLocation": "1193:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "1158:48:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "typeName": {
                    "id": 2042,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2040,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1166:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1158:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                      "typeString": "mapping(uint256 => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2041,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1177:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7f6e8cbf",
                  "id": 2047,
                  "mutability": "mutable",
                  "name": "lastRegistrationTime",
                  "nameLocation": "1290:20:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "1255:55:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 2046,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2044,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1263:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1255:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2045,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1274:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "b0ff6383",
                  "id": 2050,
                  "mutability": "constant",
                  "name": "REGISTRATION_COOLDOWN",
                  "nameLocation": "1340:21:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "1316:57:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1364:9:12",
                    "subdenomination": "minutes",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d93f4aea01982a4687b0d757a8314f57b6a77742cf98d21bc9bdb24ef543a4dc",
                  "id": 2066,
                  "name": "NetworkRegistered",
                  "nameLocation": "1409:17:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2052,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "1452:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2066,
                        "src": "1436:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2051,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1436:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2054,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1487:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2066,
                        "src": "1471:27:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2053,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1471:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2056,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mongoDataId",
                        "nameLocation": "1515:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2066,
                        "src": "1508:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2055,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1508:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2058,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pricePerSession",
                        "nameLocation": "1544:15:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2066,
                        "src": "1536:23:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1536:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2060,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "1574:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2066,
                        "src": "1569:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2059,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1569:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2062,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "hostingFeePaid",
                        "nameLocation": "1600:14:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2066,
                        "src": "1592:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2061,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1592:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2064,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1632:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2066,
                        "src": "1624:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2063,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1624:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1426:221:12"
                  },
                  "src": "1403:245:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ac5b35db873b0c878683cbeac0fc736acd48ea6480742bafd3ba483dd7158824",
                  "id": 2074,
                  "name": "HostingFeePaid",
                  "nameLocation": "1660:14:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2073,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2068,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "host",
                        "nameLocation": "1700:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2074,
                        "src": "1684:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2070,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1722:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2074,
                        "src": "1714:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1714:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2072,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1746:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2074,
                        "src": "1738:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2071,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1738:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1674:87:12"
                  },
                  "src": "1654:108:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d",
                  "id": 2086,
                  "name": "NetworkUpdated",
                  "nameLocation": "1774:14:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2085,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2076,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "1814:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2086,
                        "src": "1798:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2075,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1798:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2078,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1849:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2086,
                        "src": "1833:27:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2077,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1833:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2080,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pricePerSession",
                        "nameLocation": "1878:15:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2086,
                        "src": "1870:23:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2079,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1870:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2082,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mongoDataId",
                        "nameLocation": "1910:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2086,
                        "src": "1903:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2081,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1903:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2084,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "1936:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2086,
                        "src": "1931:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2083,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1931:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1788:162:12"
                  },
                  "src": "1768:183:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f01",
                  "id": 2094,
                  "name": "NetworkPriceUpdated",
                  "nameLocation": "1963:19:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2088,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "2008:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "1992:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2087,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1992:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2090,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldPrice",
                        "nameLocation": "2035:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "2027:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2092,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newPrice",
                        "nameLocation": "2061:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "2053:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2091,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2053:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1982:93:12"
                  },
                  "src": "1957:119:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b",
                  "id": 2102,
                  "name": "NetworkStatusChanged",
                  "nameLocation": "2088:20:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2101,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2096,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "2134:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2102,
                        "src": "2118:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2095,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2118:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2098,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldStatus",
                        "nameLocation": "2158:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2102,
                        "src": "2153:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2097,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2100,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newStatus",
                        "nameLocation": "2182:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2102,
                        "src": "2177:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2099,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2177:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2108:89:12"
                  },
                  "src": "2082:116:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8ff9310abede1de3c5d3fdbb7cf09c40bc8258ca75c0f949ad92f964deac98b3",
                  "id": 2106,
                  "name": "HostAdded",
                  "nameLocation": "2210:9:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2104,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "host",
                        "nameLocation": "2236:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2106,
                        "src": "2220:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2220:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2219:22:12"
                  },
                  "src": "2204:38:12"
                },
                {
                  "body": {
                    "id": 2167,
                    "nodeType": "Block",
                    "src": "2375:422:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2120,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2108,
                                "src": "2406:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2123,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2434:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2426:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2121,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2426:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2426:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2406:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642073746f7261676520636f6e74726163742061646472657373",
                              "id": 2126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2450:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4a830ce972982ee3de82e9ad79878c0e45747d502806a2b710d19be6639ee91b",
                                "typeString": "literal_string \"Invalid storage contract address\""
                              },
                              "value": "Invalid storage contract address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4a830ce972982ee3de82e9ad79878c0e45747d502806a2b710d19be6639ee91b",
                                "typeString": "literal_string \"Invalid storage contract address\""
                              }
                            ],
                            "id": 2119,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2385:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2385:109:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2128,
                        "nodeType": "ExpressionStatement",
                        "src": "2385:109:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2130,
                                "name": "_adminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2110,
                                "src": "2512:14:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2133,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2538:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2530:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2131,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2530:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2530:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2512:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646d696e20636f6e74726163742061646472657373",
                              "id": 2136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2542:32:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a0386bf5c5703018ccc953d0e2cb376a4e3402fbe2218551a557b67ef808d30f",
                                "typeString": "literal_string \"Invalid admin contract address\""
                              },
                              "value": "Invalid admin contract address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a0386bf5c5703018ccc953d0e2cb376a4e3402fbe2218551a557b67ef808d30f",
                                "typeString": "literal_string \"Invalid admin contract address\""
                              }
                            ],
                            "id": 2129,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2504:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2504:71:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2138,
                        "nodeType": "ExpressionStatement",
                        "src": "2504:71:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2140,
                                "name": "_usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2112,
                                "src": "2593:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2143,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2610:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2142,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2602:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2141,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2602:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2602:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2593:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964205553445420636f6e74726163742061646472657373",
                              "id": 2146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2614:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af6b8306cf9f58de4b550620f08638d9074f4d8438206602a6df11b38a562da4",
                                "typeString": "literal_string \"Invalid USDT contract address\""
                              },
                              "value": "Invalid USDT contract address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af6b8306cf9f58de4b550620f08638d9074f4d8438206602a6df11b38a562da4",
                                "typeString": "literal_string \"Invalid USDT contract address\""
                              }
                            ],
                            "id": 2139,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2585:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2585:61:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2148,
                        "nodeType": "ExpressionStatement",
                        "src": "2585:61:12"
                      },
                      {
                        "expression": {
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2149,
                            "name": "storageContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2015,
                            "src": "2657:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2151,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2108,
                                "src": "2689:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2150,
                              "name": "ZaaNetStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4702,
                              "src": "2675:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$4702_$",
                                "typeString": "type(contract ZaaNetStorage)"
                              }
                            },
                            "id": 2152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2675:31:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "src": "2657:49:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                            "typeString": "contract ZaaNetStorage"
                          }
                        },
                        "id": 2154,
                        "nodeType": "ExpressionStatement",
                        "src": "2657:49:12"
                      },
                      {
                        "expression": {
                          "id": 2159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2155,
                            "name": "adminContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2018,
                            "src": "2716:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                              "typeString": "contract IZaaNetAdmin"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2157,
                                "name": "_adminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2110,
                                "src": "2745:14:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2156,
                              "name": "IZaaNetAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2002,
                              "src": "2732:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IZaaNetAdmin_$2002_$",
                                "typeString": "type(contract IZaaNetAdmin)"
                              }
                            },
                            "id": 2158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2732:28:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                              "typeString": "contract IZaaNetAdmin"
                            }
                          },
                          "src": "2716:44:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                            "typeString": "contract IZaaNetAdmin"
                          }
                        },
                        "id": 2160,
                        "nodeType": "ExpressionStatement",
                        "src": "2716:44:12"
                      },
                      {
                        "expression": {
                          "id": 2165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2161,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2021,
                            "src": "2770:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$315",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2163,
                                "name": "_usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2112,
                                "src": "2784:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2162,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "2777:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2777:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$315",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2770:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2166,
                        "nodeType": "ExpressionStatement",
                        "src": "2770:20:12"
                      }
                    ]
                  },
                  "id": 2168,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2363:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2367:6:12",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2363:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2117,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2114,
                        "name": "Ownable",
                        "nameLocations": [
                          "2355:7:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2355:7:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2355:19:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2108,
                        "mutability": "mutable",
                        "name": "_storageContract",
                        "nameLocation": "2277:16:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "2269:24:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2269:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2110,
                        "mutability": "mutable",
                        "name": "_adminContract",
                        "nameLocation": "2311:14:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "2303:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2303:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2112,
                        "mutability": "mutable",
                        "name": "_usdt",
                        "nameLocation": "2343:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "2335:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2335:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2259:95:12"
                  },
                  "returnParameters": {
                    "id": 2118,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2375:0:12"
                  },
                  "scope": 2998,
                  "src": "2248:549:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2383,
                    "nodeType": "Block",
                    "src": "3040:2683:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2183,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3071:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3077:9:12",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3071:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2185,
                                    "name": "lastRegistrationTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2047,
                                    "src": "3106:20:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2188,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2186,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3127:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2187,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3131:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3127:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3106:32:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2189,
                                  "name": "REGISTRATION_COOLDOWN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2050,
                                  "src": "3141:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3106:56:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3071:91:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526567697374726174696f6e20636f6f6c646f776e20616374697665",
                              "id": 2192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3176:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b3928d3829a766243016fa669b9ece86bf23c83eaec126e54d328bddced3f2cb",
                                "typeString": "literal_string \"Registration cooldown active\""
                              },
                              "value": "Registration cooldown active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b3928d3829a766243016fa669b9ece86bf23c83eaec126e54d328bddced3f2cb",
                                "typeString": "literal_string \"Registration cooldown active\""
                              }
                            ],
                            "id": 2182,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3050:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3050:166:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2194,
                        "nodeType": "ExpressionStatement",
                        "src": "3050:166:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2196,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2171,
                                  "src": "3247:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 2197,
                                  "name": "MIN_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2024,
                                  "src": "3267:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3247:41:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2199,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2171,
                                  "src": "3308:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2200,
                                  "name": "MAX_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2027,
                                  "src": "3328:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3308:41:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3247:102:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206f7574206f6620616c6c6f7765642072616e6765",
                              "id": 2203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3363:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              },
                              "value": "Price out of allowed range"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              }
                            ],
                            "id": 2195,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3226:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3226:175:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2205,
                        "nodeType": "ExpressionStatement",
                        "src": "3226:175:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2209,
                                        "name": "_mongoDataId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2173,
                                        "src": "3438:12:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 2208,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3432:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 2207,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3432:5:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3432:19:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 2211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3452:6:12",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3432:26:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3461:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3432:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2216,
                                        "name": "_mongoDataId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2173,
                                        "src": "3488:12:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 2215,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3482:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 2214,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3482:5:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2217,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3482:19:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 2218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3502:6:12",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3482:26:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2219,
                                  "name": "MAX_MONGO_DATA_LENGTH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2030,
                                  "src": "3512:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3482:51:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3432:101:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964204d6f6e676f446174614944206c656e677468",
                              "id": 2222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3547:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_325aca93e8a7c7b2b7298dc6a52067a69714ff93e8ce01e9ad81313b11951b0c",
                                "typeString": "literal_string \"Invalid MongoDataID length\""
                              },
                              "value": "Invalid MongoDataID length"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_325aca93e8a7c7b2b7298dc6a52067a69714ff93e8ce01e9ad81313b11951b0c",
                                "typeString": "literal_string \"Invalid MongoDataID length\""
                              }
                            ],
                            "id": 2206,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3411:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3411:174:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2224,
                        "nodeType": "ExpressionStatement",
                        "src": "3411:174:12"
                      },
                      {
                        "assignments": [
                          2226
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2226,
                            "mutability": "mutable",
                            "name": "hostingFee",
                            "nameLocation": "3651:10:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2383,
                            "src": "3643:18:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2225,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3643:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2230,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2227,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2018,
                              "src": "3664:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 2228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3678:10:12",
                            "memberName": "hostingFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1996,
                            "src": "3664:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3664:26:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3643:47:12"
                      },
                      {
                        "assignments": [
                          2232
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2232,
                            "mutability": "mutable",
                            "name": "treasuryAddress",
                            "nameLocation": "3708:15:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2383,
                            "src": "3700:23:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2231,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3700:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2236,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2233,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2018,
                              "src": "3726:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 2234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3740:15:12",
                            "memberName": "treasuryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2001,
                            "src": "3726:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3726:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3700:57:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2237,
                              "name": "hostingFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2226,
                              "src": "3815:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3828:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3815:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2240,
                              "name": "treasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2232,
                              "src": "3833:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3860:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3852:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2241,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3852:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3852:10:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3833:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3815:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2303,
                        "nodeType": "IfStatement",
                        "src": "3811:777:12",
                        "trueBody": {
                          "id": 2302,
                          "nodeType": "Block",
                          "src": "3864:724:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2254,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2250,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "3918:3:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 2251,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3922:6:12",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "3918:10:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2248,
                                          "name": "usdt",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2021,
                                          "src": "3903:4:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$315",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2249,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3908:9:12",
                                        "memberName": "balanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 272,
                                        "src": "3903:14:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 2252,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3903:26:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 2253,
                                      "name": "hostingFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2226,
                                      "src": "3933:10:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3903:40:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e7420555344542062616c616e636520666f7220686f7374696e6720666565",
                                    "id": 2255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3961:43:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_561eac9e47a76b348894b40d5fdc3f1e9c495cd63c8905ff58a29c3647dbb714",
                                      "typeString": "literal_string \"Insufficient USDT balance for hosting fee\""
                                    },
                                    "value": "Insufficient USDT balance for hosting fee"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_561eac9e47a76b348894b40d5fdc3f1e9c495cd63c8905ff58a29c3647dbb714",
                                      "typeString": "literal_string \"Insufficient USDT balance for hosting fee\""
                                    }
                                  ],
                                  "id": 2247,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3878:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3878:140:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2257,
                              "nodeType": "ExpressionStatement",
                              "src": "3878:140:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2269,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2261,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "4072:3:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 2262,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4076:6:12",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "4072:10:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 2265,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "4092:4:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ZaaNetNetwork_$2998",
                                                "typeString": "contract ZaaNetNetwork"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ZaaNetNetwork_$2998",
                                                "typeString": "contract ZaaNetNetwork"
                                              }
                                            ],
                                            "id": 2264,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4084:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 2263,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4084:7:12",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2266,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4084:13:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2259,
                                          "name": "usdt",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2021,
                                          "src": "4057:4:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$315",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2260,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4062:9:12",
                                        "memberName": "allowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 292,
                                        "src": "4057:14:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address,address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 2267,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4057:41:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 2268,
                                      "name": "hostingFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2226,
                                      "src": "4102:10:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4057:55:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "486f7374696e6720666565206e6f7420617070726f766564",
                                    "id": 2270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4130:26:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_90fdc434f985b64e1b78ec4de94d22951ef22182c59743455f9ff1f99c54e5ce",
                                      "typeString": "literal_string \"Hosting fee not approved\""
                                    },
                                    "value": "Hosting fee not approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_90fdc434f985b64e1b78ec4de94d22951ef22182c59743455f9ff1f99c54e5ce",
                                      "typeString": "literal_string \"Hosting fee not approved\""
                                    }
                                  ],
                                  "id": 2258,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4032:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4032:138:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2272,
                              "nodeType": "ExpressionStatement",
                              "src": "4032:138:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2276,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4255:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4259:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4255:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2278,
                                    "name": "treasuryAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2232,
                                    "src": "4267:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2279,
                                    "name": "hostingFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2226,
                                    "src": "4284:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2273,
                                    "name": "usdt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2021,
                                    "src": "4233:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4238:16:12",
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 413,
                                  "src": "4233:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 2280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4233:62:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2281,
                              "nodeType": "ExpressionStatement",
                              "src": "4233:62:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2285,
                                    "name": "hostingFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2226,
                                    "src": "4425:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2282,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2015,
                                    "src": "4386:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4402:22:12",
                                  "memberName": "increaseZaaNetEarnings",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4592,
                                  "src": "4386:38:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 2286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4386:50:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2287,
                              "nodeType": "ExpressionStatement",
                              "src": "4386:50:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2291,
                                    "name": "hostingFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2226,
                                    "src": "4491:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2288,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2015,
                                    "src": "4450:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4466:24:12",
                                  "memberName": "updateTotalHostingAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4663,
                                  "src": "4450:40:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 2292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4450:52:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2293,
                              "nodeType": "ExpressionStatement",
                              "src": "4450:52:12"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2295,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4537:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4541:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4537:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2297,
                                    "name": "hostingFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2226,
                                    "src": "4549:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2298,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "4561:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2299,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4567:9:12",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "4561:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2294,
                                  "name": "HostingFeePaid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2074,
                                  "src": "4522:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 2300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4522:55:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2301,
                              "nodeType": "EmitStatement",
                              "src": "4517:60:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2305
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2305,
                            "mutability": "mutable",
                            "name": "networkId",
                            "nameLocation": "4647:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2383,
                            "src": "4639:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2304,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4639:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2309,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2306,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2015,
                              "src": "4659:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4675:18:12",
                            "memberName": "incrementNetworkId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4280,
                            "src": "4659:34:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 2308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4659:36:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4639:56:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2313,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "4795:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2316,
                                  "name": "networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2305,
                                  "src": "4862:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2317,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4902:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2318,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4906:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4902:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2319,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2171,
                                  "src": "4947:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2320,
                                  "name": "_mongoDataId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2173,
                                  "src": "4994:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 2321,
                                  "name": "_isActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2175,
                                  "src": "5034:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2322,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5072:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5078:9:12",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5072:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2324,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5116:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5122:9:12",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5116:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2314,
                                  "name": "ZaaNetStorage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4702,
                                  "src": "4818:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$4702_$",
                                    "typeString": "type(contract ZaaNetStorage)"
                                  }
                                },
                                "id": 2315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4832:7:12",
                                "memberName": "Network",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4083,
                                "src": "4818:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Network_$4083_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetStorage.Network storage pointer)"
                                }
                              },
                              "id": 2326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "4858:2:12",
                                "4889:11:12",
                                "4930:15:12",
                                "4981:11:12",
                                "5024:8:12",
                                "5061:9:12",
                                "5105:9:12"
                              ],
                              "names": [
                                "id",
                                "hostAddress",
                                "pricePerSession",
                                "mongoDataId",
                                "isActive",
                                "createdAt",
                                "updatedAt"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4818:328:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            ],
                            "expression": {
                              "id": 2310,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2015,
                              "src": "4755:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4771:10:12",
                            "memberName": "setNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4395,
                            "src": "4755:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Network_$4083_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct ZaaNetStorage.Network memory) external"
                            }
                          },
                          "id": 2327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4755:401:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2328,
                        "nodeType": "ExpressionStatement",
                        "src": "4755:401:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2334,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "5197:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2329,
                                "name": "hostNetworks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2039,
                                "src": "5167:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 2332,
                              "indexExpression": {
                                "expression": {
                                  "id": 2330,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5180:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5184:6:12",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5180:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5167:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5192:4:12",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5167:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 2335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5167:40:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2336,
                        "nodeType": "ExpressionStatement",
                        "src": "5167:40:12"
                      },
                      {
                        "expression": {
                          "id": 2342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2337,
                              "name": "networkToHost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2043,
                              "src": "5217:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 2339,
                            "indexExpression": {
                              "id": 2338,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "5231:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5217:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2340,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5244:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5248:6:12",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5244:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5217:37:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2343,
                        "nodeType": "ExpressionStatement",
                        "src": "5217:37:12"
                      },
                      {
                        "expression": {
                          "id": 2350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2344,
                              "name": "lastRegistrationTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2047,
                              "src": "5264:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2347,
                            "indexExpression": {
                              "expression": {
                                "id": 2345,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5285:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5289:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5285:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5264:32:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2348,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5299:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5305:9:12",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5299:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5264:50:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2351,
                        "nodeType": "ExpressionStatement",
                        "src": "5264:50:12"
                      },
                      {
                        "condition": {
                          "id": 2356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5329:19:12",
                          "subExpression": {
                            "baseExpression": {
                              "id": 2352,
                              "name": "isHost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2034,
                              "src": "5330:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2355,
                            "indexExpression": {
                              "expression": {
                                "id": 2353,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5337:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5341:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5337:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5330:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2370,
                        "nodeType": "IfStatement",
                        "src": "5325:115:12",
                        "trueBody": {
                          "id": 2369,
                          "nodeType": "Block",
                          "src": "5350:90:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2357,
                                    "name": "isHost",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2034,
                                    "src": "5364:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 2360,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2358,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5371:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2359,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5375:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5371:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5364:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5385:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5364:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2363,
                              "nodeType": "ExpressionStatement",
                              "src": "5364:25:12"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2365,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5418:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5422:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5418:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2364,
                                  "name": "HostAdded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2106,
                                  "src": "5408:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 2367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5408:21:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2368,
                              "nodeType": "EmitStatement",
                              "src": "5403:26:12"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2372,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "5541:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2373,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5564:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5568:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5564:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2375,
                              "name": "_mongoDataId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2173,
                              "src": "5588:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 2376,
                              "name": "_pricePerSession",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2171,
                              "src": "5614:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2377,
                              "name": "_isActive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "5644:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 2378,
                              "name": "hostingFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2226,
                              "src": "5667:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2379,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5691:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5697:9:12",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5691:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2371,
                            "name": "NetworkRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2066,
                            "src": "5510:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,string memory,uint256,bool,uint256,uint256)"
                            }
                          },
                          "id": 2381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5510:206:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2382,
                        "nodeType": "EmitStatement",
                        "src": "5505:211:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2169,
                    "nodeType": "StructuredDocumentation",
                    "src": "2803:71:12",
                    "text": "@notice Register a new network with mongoDataID and pay hosting fee"
                  },
                  "functionSelector": "900e41b1",
                  "id": 2384,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2178,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2177,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "3013:13:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 868,
                        "src": "3013:13:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3013:13:12"
                    },
                    {
                      "id": 2180,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2179,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "3027:12:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 976,
                        "src": "3027:12:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3027:12:12"
                    }
                  ],
                  "name": "registerNetwork",
                  "nameLocation": "2888:15:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2171,
                        "mutability": "mutable",
                        "name": "_pricePerSession",
                        "nameLocation": "2921:16:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2384,
                        "src": "2913:24:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2913:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2173,
                        "mutability": "mutable",
                        "name": "_mongoDataId",
                        "nameLocation": "2961:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2384,
                        "src": "2947:26:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2172,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2947:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2175,
                        "mutability": "mutable",
                        "name": "_isActive",
                        "nameLocation": "2988:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2384,
                        "src": "2983:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2174,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2983:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2903:100:12"
                  },
                  "returnParameters": {
                    "id": 2181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3040:0:12"
                  },
                  "scope": 2998,
                  "src": "2879:2844:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2485,
                    "nodeType": "Block",
                    "src": "5938:1460:12",
                    "statements": [
                      {
                        "assignments": [
                          2400
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2400,
                            "mutability": "mutable",
                            "name": "network",
                            "nameLocation": "5977:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2485,
                            "src": "5948:36:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            },
                            "typeName": {
                              "id": 2399,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2398,
                                "name": "ZaaNetStorage.Network",
                                "nameLocations": [
                                  "5948:13:12",
                                  "5962:7:12"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4083,
                                "src": "5948:21:12"
                              },
                              "referencedDeclaration": 4083,
                              "src": "5948:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2405,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2403,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2387,
                              "src": "6027:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2401,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2015,
                              "src": "5987:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6003:10:12",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4415,
                            "src": "5987:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$4083_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 2404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5987:60:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5948:99:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2407,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2400,
                                  "src": "6065:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2408,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6073:11:12",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4072,
                                "src": "6065:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2409,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2393,
                                "src": "6088:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6065:29:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920686f73742063616e20757064617465",
                              "id": 2411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6096:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc9bc8e6ce8339eecedb81ad5feb02e8994fb2c38504449806f1c2f5a392ba8c",
                                "typeString": "literal_string \"Only host can update\""
                              },
                              "value": "Only host can update"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc9bc8e6ce8339eecedb81ad5feb02e8994fb2c38504449806f1c2f5a392ba8c",
                                "typeString": "literal_string \"Only host can update\""
                              }
                            ],
                            "id": 2406,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6057:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6057:62:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2413,
                        "nodeType": "ExpressionStatement",
                        "src": "6057:62:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2415,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2389,
                                  "src": "6150:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 2416,
                                  "name": "MIN_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2024,
                                  "src": "6170:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6150:41:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2418,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2389,
                                  "src": "6211:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2419,
                                  "name": "MAX_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2027,
                                  "src": "6231:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6211:41:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6150:102:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206f7574206f6620616c6c6f7765642072616e6765",
                              "id": 2422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6266:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              },
                              "value": "Price out of allowed range"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              }
                            ],
                            "id": 2414,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6129:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6129:175:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2424,
                        "nodeType": "ExpressionStatement",
                        "src": "6129:175:12"
                      },
                      {
                        "assignments": [
                          2426
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2426,
                            "mutability": "mutable",
                            "name": "oldPrice",
                            "nameLocation": "6362:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2485,
                            "src": "6354:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2425,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6354:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2429,
                        "initialValue": {
                          "expression": {
                            "id": 2427,
                            "name": "network",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2400,
                            "src": "6373:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network memory"
                            }
                          },
                          "id": 2428,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6381:15:12",
                          "memberName": "pricePerSession",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4074,
                          "src": "6373:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6354:42:12"
                      },
                      {
                        "assignments": [
                          2431
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2431,
                            "mutability": "mutable",
                            "name": "oldStatus",
                            "nameLocation": "6411:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2485,
                            "src": "6406:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2430,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6406:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2434,
                        "initialValue": {
                          "expression": {
                            "id": 2432,
                            "name": "network",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2400,
                            "src": "6423:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network memory"
                            }
                          },
                          "id": 2433,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6431:8:12",
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4078,
                          "src": "6423:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6406:33:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2438,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2387,
                              "src": "6490:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2441,
                                  "name": "_networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2387,
                                  "src": "6558:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2442,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2393,
                                  "src": "6599:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2443,
                                  "name": "_pricePerSession",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2389,
                                  "src": "6640:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2444,
                                    "name": "network",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2400,
                                    "src": "6687:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory"
                                    }
                                  },
                                  "id": 2445,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6695:11:12",
                                  "memberName": "mongoDataId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4076,
                                  "src": "6687:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 2446,
                                  "name": "_isActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2391,
                                  "src": "6760:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2447,
                                    "name": "network",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2400,
                                    "src": "6798:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory"
                                    }
                                  },
                                  "id": 2448,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6806:9:12",
                                  "memberName": "createdAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4080,
                                  "src": "6798:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2449,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6875:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6881:9:12",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6875:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2439,
                                  "name": "ZaaNetStorage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4702,
                                  "src": "6514:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$4702_$",
                                    "typeString": "type(contract ZaaNetStorage)"
                                  }
                                },
                                "id": 2440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6528:7:12",
                                "memberName": "Network",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4083,
                                "src": "6514:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Network_$4083_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetStorage.Network storage pointer)"
                                }
                              },
                              "id": 2451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "6554:2:12",
                                "6586:11:12",
                                "6623:15:12",
                                "6674:11:12",
                                "6750:8:12",
                                "6787:9:12",
                                "6864:9:12"
                              ],
                              "names": [
                                "id",
                                "hostAddress",
                                "pricePerSession",
                                "mongoDataId",
                                "isActive",
                                "createdAt",
                                "updatedAt"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "6514:391:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            ],
                            "expression": {
                              "id": 2435,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2015,
                              "src": "6450:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6466:10:12",
                            "memberName": "setNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4395,
                            "src": "6450:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Network_$4083_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct ZaaNetStorage.Network memory) external"
                            }
                          },
                          "id": 2452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6450:465:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2453,
                        "nodeType": "ExpressionStatement",
                        "src": "6450:465:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2454,
                            "name": "oldPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2426,
                            "src": "6982:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2455,
                            "name": "_pricePerSession",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2389,
                            "src": "6994:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6982:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2464,
                        "nodeType": "IfStatement",
                        "src": "6978:123:12",
                        "trueBody": {
                          "id": 2463,
                          "nodeType": "Block",
                          "src": "7012:89:12",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2458,
                                    "name": "_networkId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2387,
                                    "src": "7051:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2459,
                                    "name": "oldPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2426,
                                    "src": "7063:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2460,
                                    "name": "_pricePerSession",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2389,
                                    "src": "7073:16:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2457,
                                  "name": "NetworkPriceUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2094,
                                  "src": "7031:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256)"
                                  }
                                },
                                "id": 2461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7031:59:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2462,
                              "nodeType": "EmitStatement",
                              "src": "7026:64:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2465,
                            "name": "oldStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2431,
                            "src": "7114:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2466,
                            "name": "_isActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2391,
                            "src": "7127:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7114:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2475,
                        "nodeType": "IfStatement",
                        "src": "7110:112:12",
                        "trueBody": {
                          "id": 2474,
                          "nodeType": "Block",
                          "src": "7138:84:12",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2469,
                                    "name": "_networkId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2387,
                                    "src": "7178:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2470,
                                    "name": "oldStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2431,
                                    "src": "7190:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "id": 2471,
                                    "name": "_isActive",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2391,
                                    "src": "7201:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 2468,
                                  "name": "NetworkStatusChanged",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2102,
                                  "src": "7157:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_bool_$returns$__$",
                                    "typeString": "function (uint256,bool,bool)"
                                  }
                                },
                                "id": 2472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7157:54:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2473,
                              "nodeType": "EmitStatement",
                              "src": "7152:59:12"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2477,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2387,
                              "src": "7265:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2478,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2393,
                              "src": "7289:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2479,
                              "name": "_pricePerSession",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2389,
                              "src": "7309:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2480,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2400,
                                "src": "7339:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2481,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7347:11:12",
                              "memberName": "mongoDataId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4076,
                              "src": "7339:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 2482,
                              "name": "_isActive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2391,
                              "src": "7372:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2476,
                            "name": "NetworkUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2086,
                            "src": "7237:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,address,uint256,string memory,bool)"
                            }
                          },
                          "id": 2483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7237:154:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2484,
                        "nodeType": "EmitStatement",
                        "src": "7232:159:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2385,
                    "nodeType": "StructuredDocumentation",
                    "src": "5729:55:12",
                    "text": "@notice Internal function to update network details"
                  },
                  "id": 2486,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_updateNetwork",
                  "nameLocation": "5798:14:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2387,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "5830:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2486,
                        "src": "5822:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2386,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5822:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2389,
                        "mutability": "mutable",
                        "name": "_pricePerSession",
                        "nameLocation": "5858:16:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2486,
                        "src": "5850:24:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2388,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5850:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2391,
                        "mutability": "mutable",
                        "name": "_isActive",
                        "nameLocation": "5889:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2486,
                        "src": "5884:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2390,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5884:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2393,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5916:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2486,
                        "src": "5908:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5908:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5812:116:12"
                  },
                  "returnParameters": {
                    "id": 2395,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5938:0:12"
                  },
                  "scope": 2998,
                  "src": "5789:1609:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2508,
                    "nodeType": "Block",
                    "src": "7612:84:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2501,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2489,
                              "src": "7637:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2502,
                              "name": "_pricePerSession",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2491,
                              "src": "7649:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2503,
                              "name": "_isActive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2493,
                              "src": "7667:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2504,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7678:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7682:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7678:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2500,
                            "name": "_updateNetwork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2486,
                            "src": "7622:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,bool,address)"
                            }
                          },
                          "id": 2506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7622:67:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2507,
                        "nodeType": "ExpressionStatement",
                        "src": "7622:67:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2487,
                    "nodeType": "StructuredDocumentation",
                    "src": "7404:52:12",
                    "text": "@notice Update existing network with new details"
                  },
                  "functionSelector": "1b63fe67",
                  "id": 2509,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2496,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2495,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "7585:13:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 868,
                        "src": "7585:13:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7585:13:12"
                    },
                    {
                      "id": 2498,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2497,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "7599:12:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 976,
                        "src": "7599:12:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7599:12:12"
                    }
                  ],
                  "name": "updateNetwork",
                  "nameLocation": "7470:13:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2489,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "7501:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2509,
                        "src": "7493:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7493:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2491,
                        "mutability": "mutable",
                        "name": "_pricePerSession",
                        "nameLocation": "7529:16:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2509,
                        "src": "7521:24:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2490,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7521:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2493,
                        "mutability": "mutable",
                        "name": "_isActive",
                        "nameLocation": "7560:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2509,
                        "src": "7555:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2492,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7555:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7483:92:12"
                  },
                  "returnParameters": {
                    "id": 2499,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7612:0:12"
                  },
                  "scope": 2998,
                  "src": "7461:235:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2551,
                    "nodeType": "Block",
                    "src": "7823:340:12",
                    "statements": [
                      {
                        "assignments": [
                          2521
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2521,
                            "mutability": "mutable",
                            "name": "network",
                            "nameLocation": "7862:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2551,
                            "src": "7833:36:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            },
                            "typeName": {
                              "id": 2520,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2519,
                                "name": "ZaaNetStorage.Network",
                                "nameLocations": [
                                  "7833:13:12",
                                  "7847:7:12"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4083,
                                "src": "7833:21:12"
                              },
                              "referencedDeclaration": 4083,
                              "src": "7833:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2526,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2524,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2512,
                              "src": "7912:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2522,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2015,
                              "src": "7872:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7888:10:12",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4415,
                            "src": "7872:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$4083_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 2525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7872:60:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7833:99:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2528,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2521,
                                  "src": "7950:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2529,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7958:11:12",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4072,
                                "src": "7950:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2530,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7973:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7977:6:12",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7973:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7950:33:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920686f73742063616e2064656163746976617465",
                              "id": 2533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7985:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2336c29a223fb08cb5cc0d43975e601887f454478cfb59ae5ff308746390bb36",
                                "typeString": "literal_string \"Only host can deactivate\""
                              },
                              "value": "Only host can deactivate"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2336c29a223fb08cb5cc0d43975e601887f454478cfb59ae5ff308746390bb36",
                                "typeString": "literal_string \"Only host can deactivate\""
                              }
                            ],
                            "id": 2527,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7942:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7942:70:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2535,
                        "nodeType": "ExpressionStatement",
                        "src": "7942:70:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2537,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2521,
                                "src": "8030:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2538,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8038:8:12",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4078,
                              "src": "8030:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20616c726561647920696e616374697665",
                              "id": 2539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8048:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3414eedb2ccbca8bce504953e4d1eced8c7392291620164aa9c8b9c994f60537",
                                "typeString": "literal_string \"Network already inactive\""
                              },
                              "value": "Network already inactive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3414eedb2ccbca8bce504953e4d1eced8c7392291620164aa9c8b9c994f60537",
                                "typeString": "literal_string \"Network already inactive\""
                              }
                            ],
                            "id": 2536,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8022:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8022:53:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2541,
                        "nodeType": "ExpressionStatement",
                        "src": "8022:53:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2543,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2512,
                              "src": "8101:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2544,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2521,
                                "src": "8113:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2545,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8121:15:12",
                              "memberName": "pricePerSession",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4074,
                              "src": "8113:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 2546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8138:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "expression": {
                                "id": 2547,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8145:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8149:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8145:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2542,
                            "name": "_updateNetwork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2486,
                            "src": "8086:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,bool,address)"
                            }
                          },
                          "id": 2549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8086:70:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2550,
                        "nodeType": "ExpressionStatement",
                        "src": "8086:70:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2510,
                    "nodeType": "StructuredDocumentation",
                    "src": "7702:46:12",
                    "text": "@notice Deactivate a network (soft delete)"
                  },
                  "functionSelector": "4b9791e8",
                  "id": 2552,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2515,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2514,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "7809:13:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 868,
                        "src": "7809:13:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7809:13:12"
                    }
                  ],
                  "name": "deactivateNetwork",
                  "nameLocation": "7762:17:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2512,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "7788:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2552,
                        "src": "7780:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7780:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7779:20:12"
                  },
                  "returnParameters": {
                    "id": 2516,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7823:0:12"
                  },
                  "scope": 2998,
                  "src": "7753:410:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2566,
                    "nodeType": "Block",
                    "src": "8340:62:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2563,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2555,
                              "src": "8384:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2561,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2015,
                              "src": "8357:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8373:10:12",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4415,
                            "src": "8357:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$4083_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 2564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8357:38:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "functionReturnParameters": 2560,
                        "id": 2565,
                        "nodeType": "Return",
                        "src": "8350:45:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2553,
                    "nodeType": "StructuredDocumentation",
                    "src": "8169:49:12",
                    "text": "@notice Get full network details from storage"
                  },
                  "functionSelector": "cd83fb9a",
                  "id": 2567,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostedNetworkById",
                  "nameLocation": "8232:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2555,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "8270:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2567,
                        "src": "8262:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2554,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8262:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8252:34:12"
                  },
                  "returnParameters": {
                    "id": 2560,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2559,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2567,
                        "src": "8310:28:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 2558,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2557,
                            "name": "ZaaNetStorage.Network",
                            "nameLocations": [
                              "8310:13:12",
                              "8324:7:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4083,
                            "src": "8310:21:12"
                          },
                          "referencedDeclaration": 4083,
                          "src": "8310:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8309:30:12"
                  },
                  "scope": 2998,
                  "src": "8223:179:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2580,
                    "nodeType": "Block",
                    "src": "8566:49:12",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2576,
                            "name": "hostNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "8583:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 2578,
                          "indexExpression": {
                            "id": 2577,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2570,
                            "src": "8596:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8583:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 2575,
                        "id": 2579,
                        "nodeType": "Return",
                        "src": "8576:32:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2568,
                    "nodeType": "StructuredDocumentation",
                    "src": "8408:52:12",
                    "text": "@notice Get all network IDs registered by a host"
                  },
                  "functionSelector": "79f0dc57",
                  "id": 2581,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostNetworks",
                  "nameLocation": "8474:15:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2571,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2570,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "8507:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2581,
                        "src": "8499:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2569,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8499:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8489:35:12"
                  },
                  "returnParameters": {
                    "id": 2575,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2574,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2581,
                        "src": "8548:16:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2572,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8548:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2573,
                          "nodeType": "ArrayTypeName",
                          "src": "8548:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8547:18:12"
                  },
                  "scope": 2998,
                  "src": "8465:150:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2693,
                    "nodeType": "Block",
                    "src": "8789:959:12",
                    "statements": [
                      {
                        "assignments": [
                          2595
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2595,
                            "mutability": "mutable",
                            "name": "networkIds",
                            "nameLocation": "8816:10:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2693,
                            "src": "8799:27:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2593,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8799:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2594,
                              "nodeType": "ArrayTypeName",
                              "src": "8799:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2599,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2596,
                            "name": "hostNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "8829:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 2598,
                          "indexExpression": {
                            "id": 2597,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "8842:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8829:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8799:55:12"
                      },
                      {
                        "assignments": [
                          2601
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2601,
                            "mutability": "mutable",
                            "name": "activeCount",
                            "nameLocation": "8872:11:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2693,
                            "src": "8864:19:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2600,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8864:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2603,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8886:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8864:23:12"
                      },
                      {
                        "body": {
                          "id": 2634,
                          "nodeType": "Block",
                          "src": "8991:216:12",
                          "statements": [
                            {
                              "assignments": [
                                2619
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2619,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "9034:7:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2634,
                                  "src": "9005:36:12",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 2618,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2617,
                                      "name": "ZaaNetStorage.Network",
                                      "nameLocations": [
                                        "9005:13:12",
                                        "9019:7:12"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 4083,
                                      "src": "9005:21:12"
                                    },
                                    "referencedDeclaration": 4083,
                                    "src": "9005:21:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                      "typeString": "struct ZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2626,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2622,
                                      "name": "networkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2595,
                                      "src": "9088:10:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2624,
                                    "indexExpression": {
                                      "id": 2623,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2605,
                                      "src": "9099:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9088:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2620,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2015,
                                    "src": "9044:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2621,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9060:10:12",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4415,
                                  "src": "9044:26:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$4083_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 2625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9044:71:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9005:110:12"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "id": 2627,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2619,
                                  "src": "9133:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2628,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9141:8:12",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4078,
                                "src": "9133:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2633,
                              "nodeType": "IfStatement",
                              "src": "9129:68:12",
                              "trueBody": {
                                "id": 2632,
                                "nodeType": "Block",
                                "src": "9151:46:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2630,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "9169:13:12",
                                      "subExpression": {
                                        "id": 2629,
                                        "name": "activeCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2601,
                                        "src": "9169:11:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2631,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9169:13:12"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2608,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2605,
                            "src": "8963:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2609,
                              "name": "networkIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2595,
                              "src": "8967:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8978:6:12",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8967:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8963:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2635,
                        "initializationExpression": {
                          "assignments": [
                            2605
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2605,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8956:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 2635,
                              "src": "8948:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2604,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8948:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2607,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8960:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8948:13:12"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8986:3:12",
                            "subExpression": {
                              "id": 2612,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2605,
                              "src": "8986:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2614,
                          "nodeType": "ExpressionStatement",
                          "src": "8986:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "8943:264:12"
                      },
                      {
                        "assignments": [
                          2641
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2641,
                            "mutability": "mutable",
                            "name": "activeNetworks",
                            "nameLocation": "9309:14:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2693,
                            "src": "9266:57:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2639,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2638,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "9266:13:12",
                                    "9280:7:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4083,
                                  "src": "9266:21:12"
                                },
                                "referencedDeclaration": 4083,
                                "src": "9266:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2640,
                              "nodeType": "ArrayTypeName",
                              "src": "9266:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2648,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2646,
                              "name": "activeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2601,
                              "src": "9354:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9326:27:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2643,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2642,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "9330:13:12",
                                    "9344:7:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4083,
                                  "src": "9330:21:12"
                                },
                                "referencedDeclaration": 4083,
                                "src": "9330:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2644,
                              "nodeType": "ArrayTypeName",
                              "src": "9330:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            }
                          },
                          "id": 2647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9326:40:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9266:100:12"
                      },
                      {
                        "assignments": [
                          2650
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2650,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "9384:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2693,
                            "src": "9376:13:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2649,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9376:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2652,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9392:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9376:17:12"
                      },
                      {
                        "body": {
                          "id": 2689,
                          "nodeType": "Block",
                          "src": "9451:259:12",
                          "statements": [
                            {
                              "assignments": [
                                2668
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2668,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "9494:7:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2689,
                                  "src": "9465:36:12",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 2667,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2666,
                                      "name": "ZaaNetStorage.Network",
                                      "nameLocations": [
                                        "9465:13:12",
                                        "9479:7:12"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 4083,
                                      "src": "9465:21:12"
                                    },
                                    "referencedDeclaration": 4083,
                                    "src": "9465:21:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                      "typeString": "struct ZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2675,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2671,
                                      "name": "networkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2595,
                                      "src": "9548:10:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2673,
                                    "indexExpression": {
                                      "id": 2672,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2654,
                                      "src": "9559:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9548:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2669,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2015,
                                    "src": "9504:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9520:10:12",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4415,
                                  "src": "9504:26:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$4083_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 2674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9504:71:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9465:110:12"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "id": 2676,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2668,
                                  "src": "9593:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2677,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9601:8:12",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4078,
                                "src": "9593:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2688,
                              "nodeType": "IfStatement",
                              "src": "9589:111:12",
                              "trueBody": {
                                "id": 2687,
                                "nodeType": "Block",
                                "src": "9611:89:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2682,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2678,
                                          "name": "activeNetworks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2641,
                                          "src": "9629:14:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                          }
                                        },
                                        "id": 2680,
                                        "indexExpression": {
                                          "id": 2679,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2650,
                                          "src": "9644:5:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "9629:21:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2681,
                                        "name": "network",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2668,
                                        "src": "9653:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "src": "9629:31:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                        "typeString": "struct ZaaNetStorage.Network memory"
                                      }
                                    },
                                    "id": 2683,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9629:31:12"
                                  },
                                  {
                                    "expression": {
                                      "id": 2685,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "9678:7:12",
                                      "subExpression": {
                                        "id": 2684,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2650,
                                        "src": "9678:5:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2686,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9678:7:12"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2657,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2654,
                            "src": "9423:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2658,
                              "name": "networkIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2595,
                              "src": "9427:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9438:6:12",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9427:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9423:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2690,
                        "initializationExpression": {
                          "assignments": [
                            2654
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2654,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9416:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 2690,
                              "src": "9408:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2653,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9408:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2656,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9420:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9408:13:12"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9446:3:12",
                            "subExpression": {
                              "id": 2661,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2654,
                              "src": "9446:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2663,
                          "nodeType": "ExpressionStatement",
                          "src": "9446:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "9403:307:12"
                      },
                      {
                        "expression": {
                          "id": 2691,
                          "name": "activeNetworks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2641,
                          "src": "9727:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2590,
                        "id": 2692,
                        "nodeType": "Return",
                        "src": "9720:21:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2582,
                    "nodeType": "StructuredDocumentation",
                    "src": "8621:42:12",
                    "text": "@notice Get active networks for a host"
                  },
                  "functionSelector": "2b2a748c",
                  "id": 2694,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getActiveHostNetworks",
                  "nameLocation": "8677:21:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2584,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "8716:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2694,
                        "src": "8708:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2583,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8708:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8698:35:12"
                  },
                  "returnParameters": {
                    "id": 2590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2589,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2694,
                        "src": "8757:30:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2587,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2586,
                              "name": "ZaaNetStorage.Network",
                              "nameLocations": [
                                "8757:13:12",
                                "8771:7:12"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 4083,
                              "src": "8757:21:12"
                            },
                            "referencedDeclaration": 4083,
                            "src": "8757:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 2588,
                          "nodeType": "ArrayTypeName",
                          "src": "8757:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8756:32:12"
                  },
                  "scope": 2998,
                  "src": "8668:1080:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2706,
                    "nodeType": "Block",
                    "src": "9918:43:12",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2702,
                            "name": "isHost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2034,
                            "src": "9935:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2704,
                          "indexExpression": {
                            "id": 2703,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2697,
                            "src": "9942:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9935:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2701,
                        "id": 2705,
                        "nodeType": "Return",
                        "src": "9928:26:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2695,
                    "nodeType": "StructuredDocumentation",
                    "src": "9754:69:12",
                    "text": "@notice Public method to check if an address is a registered host"
                  },
                  "functionSelector": "867f1a09",
                  "id": 2707,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isRegisteredHost",
                  "nameLocation": "9837:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2698,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2697,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "9871:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2707,
                        "src": "9863:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9863:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9853:35:12"
                  },
                  "returnParameters": {
                    "id": 2701,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2700,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2707,
                        "src": "9912:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2699,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9912:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9911:6:12"
                  },
                  "scope": 2998,
                  "src": "9828:133:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2774,
                    "nodeType": "Block",
                    "src": "10227:510:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2719,
                            "name": "totalNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2713,
                            "src": "10237:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2720,
                                "name": "hostNetworks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2039,
                                "src": "10253:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 2722,
                              "indexExpression": {
                                "id": 2721,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2710,
                                "src": "10266:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10253:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10279:6:12",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10253:32:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10237:48:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2725,
                        "nodeType": "ExpressionStatement",
                        "src": "10237:48:12"
                      },
                      {
                        "expression": {
                          "id": 2731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2726,
                            "name": "totalEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2717,
                            "src": "10295:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2729,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2710,
                                "src": "10343:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 2727,
                                "name": "storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2015,
                                "src": "10311:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                  "typeString": "contract ZaaNetStorage"
                                }
                              },
                              "id": 2728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10327:15:12",
                              "memberName": "getHostEarnings",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4571,
                              "src": "10311:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 2730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10311:44:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10295:60:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2732,
                        "nodeType": "ExpressionStatement",
                        "src": "10295:60:12"
                      },
                      {
                        "assignments": [
                          2737
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2737,
                            "mutability": "mutable",
                            "name": "networkIds",
                            "nameLocation": "10416:10:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2774,
                            "src": "10399:27:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2735,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10399:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2736,
                              "nodeType": "ArrayTypeName",
                              "src": "10399:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2741,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2738,
                            "name": "hostNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "10429:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 2740,
                          "indexExpression": {
                            "id": 2739,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2710,
                            "src": "10442:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10429:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10399:55:12"
                      },
                      {
                        "body": {
                          "id": 2772,
                          "nodeType": "Block",
                          "src": "10512:219:12",
                          "statements": [
                            {
                              "assignments": [
                                2757
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2757,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "10555:7:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2772,
                                  "src": "10526:36:12",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 2756,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2755,
                                      "name": "ZaaNetStorage.Network",
                                      "nameLocations": [
                                        "10526:13:12",
                                        "10540:7:12"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 4083,
                                      "src": "10526:21:12"
                                    },
                                    "referencedDeclaration": 4083,
                                    "src": "10526:21:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                      "typeString": "struct ZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2764,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2760,
                                      "name": "networkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2737,
                                      "src": "10609:10:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2762,
                                    "indexExpression": {
                                      "id": 2761,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2743,
                                      "src": "10620:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10609:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2758,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2015,
                                    "src": "10565:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2759,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10581:10:12",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4415,
                                  "src": "10565:26:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$4083_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 2763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10565:71:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10526:110:12"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "id": 2765,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2757,
                                  "src": "10654:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2766,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10662:8:12",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4078,
                                "src": "10654:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2771,
                              "nodeType": "IfStatement",
                              "src": "10650:71:12",
                              "trueBody": {
                                "id": 2770,
                                "nodeType": "Block",
                                "src": "10672:49:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2768,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "10690:16:12",
                                      "subExpression": {
                                        "id": 2767,
                                        "name": "activeNetworks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2715,
                                        "src": "10690:14:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2769,
                                    "nodeType": "ExpressionStatement",
                                    "src": "10690:16:12"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2746,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2743,
                            "src": "10484:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2747,
                              "name": "networkIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2737,
                              "src": "10488:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10499:6:12",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10488:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10484:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2773,
                        "initializationExpression": {
                          "assignments": [
                            2743
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2743,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "10477:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 2773,
                              "src": "10469:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2742,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10469:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2745,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10481:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10469:13:12"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10507:3:12",
                            "subExpression": {
                              "id": 2750,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2743,
                              "src": "10507:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2752,
                          "nodeType": "ExpressionStatement",
                          "src": "10507:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "10464:267:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2708,
                    "nodeType": "StructuredDocumentation",
                    "src": "9967:31:12",
                    "text": "@notice Get host statistics"
                  },
                  "functionSelector": "764ac734",
                  "id": 2775,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostStats",
                  "nameLocation": "10012:12:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2710,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "10042:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2775,
                        "src": "10034:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2709,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10034:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10024:35:12"
                  },
                  "returnParameters": {
                    "id": 2718,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2713,
                        "mutability": "mutable",
                        "name": "totalNetworks",
                        "nameLocation": "10128:13:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2775,
                        "src": "10120:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2712,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10120:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2715,
                        "mutability": "mutable",
                        "name": "activeNetworks",
                        "nameLocation": "10163:14:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2775,
                        "src": "10155:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2714,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10155:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2717,
                        "mutability": "mutable",
                        "name": "totalEarnings",
                        "nameLocation": "10199:13:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2775,
                        "src": "10191:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2716,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10191:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10106:116:12"
                  },
                  "scope": 2998,
                  "src": "10003:734:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2795,
                    "nodeType": "Block",
                    "src": "11004:75:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2791,
                              "name": "offset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2778,
                              "src": "11058:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2792,
                              "name": "limit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2780,
                              "src": "11066:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2789,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2015,
                              "src": "11021:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11037:20:12",
                            "memberName": "getNetworksPaginated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4504,
                            "src": "11021:36:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view external returns (struct ZaaNetStorage.Network memory[] memory,uint256)"
                            }
                          },
                          "id": 2793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11021:51:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                          }
                        },
                        "functionReturnParameters": 2788,
                        "id": 2794,
                        "nodeType": "Return",
                        "src": "11014:58:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2776,
                    "nodeType": "StructuredDocumentation",
                    "src": "10743:61:12",
                    "text": "@notice Retrieve networks with pagination (gas-optimized)"
                  },
                  "functionSelector": "fa9c81a4",
                  "id": 2796,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetworksPaginated",
                  "nameLocation": "10818:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2778,
                        "mutability": "mutable",
                        "name": "offset",
                        "nameLocation": "10856:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2796,
                        "src": "10848:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2777,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10848:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2780,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "10880:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2796,
                        "src": "10872:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2779,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10872:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10838:53:12"
                  },
                  "returnParameters": {
                    "id": 2788,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2785,
                        "mutability": "mutable",
                        "name": "networks",
                        "nameLocation": "10970:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2796,
                        "src": "10939:39:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2783,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2782,
                              "name": "ZaaNetStorage.Network",
                              "nameLocations": [
                                "10939:13:12",
                                "10953:7:12"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 4083,
                              "src": "10939:21:12"
                            },
                            "referencedDeclaration": 4083,
                            "src": "10939:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 2784,
                          "nodeType": "ArrayTypeName",
                          "src": "10939:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2787,
                        "mutability": "mutable",
                        "name": "totalCount",
                        "nameLocation": "10988:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2796,
                        "src": "10980:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2786,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10980:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10938:61:12"
                  },
                  "scope": 2998,
                  "src": "10809:270:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2891,
                    "nodeType": "Block",
                    "src": "11272:803:12",
                    "statements": [
                      {
                        "assignments": [
                          2809,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2809,
                            "mutability": "mutable",
                            "name": "allNetworks",
                            "nameLocation": "11314:11:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2891,
                            "src": "11283:42:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2807,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2806,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "11283:13:12",
                                    "11297:7:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4083,
                                  "src": "11283:21:12"
                                },
                                "referencedDeclaration": 4083,
                                "src": "11283:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2808,
                              "nodeType": "ArrayTypeName",
                              "src": "11283:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2815,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11381:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "313030",
                              "id": 2813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11384:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "expression": {
                              "id": 2810,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2015,
                              "src": "11331:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11360:20:12",
                            "memberName": "getNetworksPaginated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4504,
                            "src": "11331:49:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view external returns (struct ZaaNetStorage.Network memory[] memory,uint256)"
                            }
                          },
                          "id": 2814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11331:57:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11282:106:12"
                      },
                      {
                        "assignments": [
                          2817
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2817,
                            "mutability": "mutable",
                            "name": "activeCount",
                            "nameLocation": "11406:11:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2891,
                            "src": "11398:19:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2816,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11398:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2819,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11420:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11398:23:12"
                      },
                      {
                        "body": {
                          "id": 2840,
                          "nodeType": "Block",
                          "src": "11520:99:12",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2831,
                                    "name": "allNetworks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2809,
                                    "src": "11538:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  "id": 2833,
                                  "indexExpression": {
                                    "id": 2832,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2821,
                                    "src": "11550:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11538:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2834,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11553:8:12",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4078,
                                "src": "11538:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2839,
                              "nodeType": "IfStatement",
                              "src": "11534:75:12",
                              "trueBody": {
                                "id": 2838,
                                "nodeType": "Block",
                                "src": "11563:46:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2836,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "11581:13:12",
                                      "subExpression": {
                                        "id": 2835,
                                        "name": "activeCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2817,
                                        "src": "11581:11:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2837,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11581:13:12"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2824,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2821,
                            "src": "11491:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2825,
                              "name": "allNetworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2809,
                              "src": "11495:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory[] memory"
                              }
                            },
                            "id": 2826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11507:6:12",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11495:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11491:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2841,
                        "initializationExpression": {
                          "assignments": [
                            2821
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2821,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11484:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 2841,
                              "src": "11476:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2820,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11476:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2823,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11488:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11476:13:12"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "11515:3:12",
                            "subExpression": {
                              "id": 2828,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "11515:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2830,
                          "nodeType": "ExpressionStatement",
                          "src": "11515:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "11471:148:12"
                      },
                      {
                        "assignments": [
                          2847
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2847,
                            "mutability": "mutable",
                            "name": "activeNetworks",
                            "nameLocation": "11745:14:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2891,
                            "src": "11702:57:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2845,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2844,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "11702:13:12",
                                    "11716:7:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4083,
                                  "src": "11702:21:12"
                                },
                                "referencedDeclaration": 4083,
                                "src": "11702:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2846,
                              "nodeType": "ArrayTypeName",
                              "src": "11702:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2854,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2852,
                              "name": "activeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2817,
                              "src": "11790:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "11762:27:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2849,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2848,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "11766:13:12",
                                    "11780:7:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4083,
                                  "src": "11766:21:12"
                                },
                                "referencedDeclaration": 4083,
                                "src": "11766:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2850,
                              "nodeType": "ArrayTypeName",
                              "src": "11766:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            }
                          },
                          "id": 2853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11762:40:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11702:100:12"
                      },
                      {
                        "assignments": [
                          2856
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2856,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "11820:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2891,
                            "src": "11812:13:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2855,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11812:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2858,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11828:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11812:17:12"
                      },
                      {
                        "body": {
                          "id": 2887,
                          "nodeType": "Block",
                          "src": "11888:149:12",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2870,
                                    "name": "allNetworks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2809,
                                    "src": "11906:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  "id": 2872,
                                  "indexExpression": {
                                    "id": 2871,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2860,
                                    "src": "11918:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11906:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2873,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11921:8:12",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4078,
                                "src": "11906:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2886,
                              "nodeType": "IfStatement",
                              "src": "11902:125:12",
                              "trueBody": {
                                "id": 2885,
                                "nodeType": "Block",
                                "src": "11931:96:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2880,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2874,
                                          "name": "activeNetworks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2847,
                                          "src": "11949:14:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                          }
                                        },
                                        "id": 2876,
                                        "indexExpression": {
                                          "id": 2875,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2856,
                                          "src": "11964:5:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "11949:21:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 2877,
                                          "name": "allNetworks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2809,
                                          "src": "11973:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                          }
                                        },
                                        "id": 2879,
                                        "indexExpression": {
                                          "id": 2878,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2860,
                                          "src": "11985:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "11973:14:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "src": "11949:38:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                        "typeString": "struct ZaaNetStorage.Network memory"
                                      }
                                    },
                                    "id": 2881,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11949:38:12"
                                  },
                                  {
                                    "expression": {
                                      "id": 2883,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "12005:7:12",
                                      "subExpression": {
                                        "id": 2882,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2856,
                                        "src": "12005:5:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2884,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12005:7:12"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2863,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2860,
                            "src": "11859:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2864,
                              "name": "allNetworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2809,
                              "src": "11863:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory[] memory"
                              }
                            },
                            "id": 2865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11875:6:12",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11863:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11859:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2888,
                        "initializationExpression": {
                          "assignments": [
                            2860
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2860,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11852:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 2888,
                              "src": "11844:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2859,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11844:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2862,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11856:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11844:13:12"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "11883:3:12",
                            "subExpression": {
                              "id": 2867,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2860,
                              "src": "11883:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2869,
                          "nodeType": "ExpressionStatement",
                          "src": "11883:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "11839:198:12"
                      },
                      {
                        "expression": {
                          "id": 2889,
                          "name": "activeNetworks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2847,
                          "src": "12054:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2803,
                        "id": 2890,
                        "nodeType": "Return",
                        "src": "12047:21:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2797,
                    "nodeType": "StructuredDocumentation",
                    "src": "11085:67:12",
                    "text": "@notice Get all active networks (limited to prevent gas issues)"
                  },
                  "functionSelector": "16cb6eff",
                  "id": 2892,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllActiveNetworks",
                  "nameLocation": "11166:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2798,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11186:2:12"
                  },
                  "returnParameters": {
                    "id": 2803,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2802,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2892,
                        "src": "11236:30:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2800,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2799,
                              "name": "ZaaNetStorage.Network",
                              "nameLocations": [
                                "11236:13:12",
                                "11250:7:12"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 4083,
                              "src": "11236:21:12"
                            },
                            "referencedDeclaration": 4083,
                            "src": "11236:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 2801,
                          "nodeType": "ArrayTypeName",
                          "src": "11236:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11235:32:12"
                  },
                  "scope": 2998,
                  "src": "11157:918:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2902,
                    "nodeType": "Block",
                    "src": "12185:50:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2898,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2018,
                              "src": "12202:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 2899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12216:10:12",
                            "memberName": "hostingFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1996,
                            "src": "12202:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12202:26:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2897,
                        "id": 2901,
                        "nodeType": "Return",
                        "src": "12195:33:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2893,
                    "nodeType": "StructuredDocumentation",
                    "src": "12081:35:12",
                    "text": "@notice Get current hosting fee"
                  },
                  "functionSelector": "89ea28d9",
                  "id": 2903,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentHostingFee",
                  "nameLocation": "12130:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2894,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12150:2:12"
                  },
                  "returnParameters": {
                    "id": 2897,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2896,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2903,
                        "src": "12176:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2895,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12176:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12175:9:12"
                  },
                  "scope": 2998,
                  "src": "12121:114:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2913,
                    "nodeType": "Block",
                    "src": "12340:55:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2909,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2018,
                              "src": "12357:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 2910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12371:15:12",
                            "memberName": "treasuryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2001,
                            "src": "12357:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12357:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2908,
                        "id": 2912,
                        "nodeType": "Return",
                        "src": "12350:38:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2904,
                    "nodeType": "StructuredDocumentation",
                    "src": "12241:32:12",
                    "text": "@notice Get treasury address"
                  },
                  "functionSelector": "e0024604",
                  "id": 2914,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTreasuryAddress",
                  "nameLocation": "12287:18:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2905,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12305:2:12"
                  },
                  "returnParameters": {
                    "id": 2908,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2907,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2914,
                        "src": "12331:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2906,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12331:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12330:9:12"
                  },
                  "scope": 2998,
                  "src": "12278:117:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2938,
                    "nodeType": "Block",
                    "src": "12564:140:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2923,
                                "name": "_newAdminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2917,
                                "src": "12582:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2926,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12611:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2925,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12603:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2924,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12603:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12603:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "12582:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646d696e20636f6e7472616374",
                              "id": 2929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12615:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d11132973dcd3e92a5086d2fabb209be9780a2534dd0d27f0920e3c0af86aa58",
                                "typeString": "literal_string \"Invalid admin contract\""
                              },
                              "value": "Invalid admin contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d11132973dcd3e92a5086d2fabb209be9780a2534dd0d27f0920e3c0af86aa58",
                                "typeString": "literal_string \"Invalid admin contract\""
                              }
                            ],
                            "id": 2922,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12574:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12574:66:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2931,
                        "nodeType": "ExpressionStatement",
                        "src": "12574:66:12"
                      },
                      {
                        "expression": {
                          "id": 2936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2932,
                            "name": "adminContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2018,
                            "src": "12650:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                              "typeString": "contract IZaaNetAdmin"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2934,
                                "name": "_newAdminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2917,
                                "src": "12679:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2933,
                              "name": "IZaaNetAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2002,
                              "src": "12666:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IZaaNetAdmin_$2002_$",
                                "typeString": "type(contract IZaaNetAdmin)"
                              }
                            },
                            "id": 2935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12666:31:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                              "typeString": "contract IZaaNetAdmin"
                            }
                          },
                          "src": "12650:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IZaaNetAdmin_$2002",
                            "typeString": "contract IZaaNetAdmin"
                          }
                        },
                        "id": 2937,
                        "nodeType": "ExpressionStatement",
                        "src": "12650:47:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2915,
                    "nodeType": "StructuredDocumentation",
                    "src": "12433:54:12",
                    "text": "@notice Update admin contract address (owner only)"
                  },
                  "functionSelector": "63a812f9",
                  "id": 2939,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2920,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2919,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "12554:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "12554:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12554:9:12"
                    }
                  ],
                  "name": "setAdminContract",
                  "nameLocation": "12501:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2917,
                        "mutability": "mutable",
                        "name": "_newAdminContract",
                        "nameLocation": "12526:17:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2939,
                        "src": "12518:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2916,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12518:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12517:27:12"
                  },
                  "returnParameters": {
                    "id": 2921,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12564:0:12"
                  },
                  "scope": 2998,
                  "src": "12492:212:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2963,
                    "nodeType": "Block",
                    "src": "12830:106:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2948,
                                "name": "_newUsdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2942,
                                "src": "12848:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2951,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12868:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2950,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12860:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2949,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12860:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12860:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "12848:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964205553445420636f6e7472616374",
                              "id": 2954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12872:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd562cff041cb65c9cc71cd1fe6a4e99162c66c6e1a294e61396c13e4153d7a4",
                                "typeString": "literal_string \"Invalid USDT contract\""
                              },
                              "value": "Invalid USDT contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd562cff041cb65c9cc71cd1fe6a4e99162c66c6e1a294e61396c13e4153d7a4",
                                "typeString": "literal_string \"Invalid USDT contract\""
                              }
                            ],
                            "id": 2947,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12840:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12840:56:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2956,
                        "nodeType": "ExpressionStatement",
                        "src": "12840:56:12"
                      },
                      {
                        "expression": {
                          "id": 2961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2957,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2021,
                            "src": "12906:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$315",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2959,
                                "name": "_newUsdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2942,
                                "src": "12920:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2958,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "12913:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12913:16:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$315",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "12906:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2962,
                        "nodeType": "ExpressionStatement",
                        "src": "12906:23:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2940,
                    "nodeType": "StructuredDocumentation",
                    "src": "12710:53:12",
                    "text": "@notice Update USDT contract address (owner only)"
                  },
                  "functionSelector": "576338a5",
                  "id": 2964,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2945,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2944,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "12820:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "12820:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12820:9:12"
                    }
                  ],
                  "name": "setUsdtContract",
                  "nameLocation": "12777:15:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2943,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2942,
                        "mutability": "mutable",
                        "name": "_newUsdt",
                        "nameLocation": "12801:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2964,
                        "src": "12793:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12793:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12792:18:12"
                  },
                  "returnParameters": {
                    "id": 2946,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12830:0:12"
                  },
                  "scope": 2998,
                  "src": "12768:168:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2973,
                    "nodeType": "Block",
                    "src": "13023:25:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2970,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "13033:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13033:8:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2972,
                        "nodeType": "ExpressionStatement",
                        "src": "13033:8:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2965,
                    "nodeType": "StructuredDocumentation",
                    "src": "12942:40:12",
                    "text": "@notice Emergency pause (only owner)"
                  },
                  "functionSelector": "8456cb59",
                  "id": 2974,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2968,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2967,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13013:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13013:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13013:9:12"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "12996:5:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2966,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13001:2:12"
                  },
                  "returnParameters": {
                    "id": 2969,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13023:0:12"
                  },
                  "scope": 2998,
                  "src": "12987:61:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2983,
                    "nodeType": "Block",
                    "src": "13129:27:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2980,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "13139:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13139:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2982,
                        "nodeType": "ExpressionStatement",
                        "src": "13139:10:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2975,
                    "nodeType": "StructuredDocumentation",
                    "src": "13054:32:12",
                    "text": "@notice Unpause (only owner)"
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 2984,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2978,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2977,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13119:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13119:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13119:9:12"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "13100:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2976,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13107:2:12"
                  },
                  "returnParameters": {
                    "id": 2979,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13129:0:12"
                  },
                  "scope": 2998,
                  "src": "13091:65:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2996,
                    "nodeType": "Block",
                    "src": "13276:67:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2990,
                            "name": "totalNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2988,
                            "src": "13286:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2991,
                                "name": "storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2015,
                                "src": "13302:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZaaNetStorage_$4702",
                                  "typeString": "contract ZaaNetStorage"
                                }
                              },
                              "id": 2992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13318:16:12",
                              "memberName": "networkIdCounter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4089,
                              "src": "13302:32:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 2993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13302:34:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13286:50:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2995,
                        "nodeType": "ExpressionStatement",
                        "src": "13286:50:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2985,
                    "nodeType": "StructuredDocumentation",
                    "src": "13162:35:12",
                    "text": "@notice Get contract statistics"
                  },
                  "functionSelector": "dfe6b5d6",
                  "id": 2997,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getContractStats",
                  "nameLocation": "13211:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2986,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13227:2:12"
                  },
                  "returnParameters": {
                    "id": 2989,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2988,
                        "mutability": "mutable",
                        "name": "totalNetworks",
                        "nameLocation": "13261:13:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2997,
                        "src": "13253:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2987,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13253:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13252:23:12"
                  },
                  "scope": 2998,
                  "src": "13202:141:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2999,
              "src": "530:12815:12",
              "usedErrors": [
                13,
                18,
                353,
                857,
                860,
                957
              ],
              "usedEvents": [
                24,
                849,
                854,
                2066,
                2074,
                2086,
                2094,
                2102,
                2106
              ]
            }
          ],
          "src": "32:13314:12"
        },
        "id": 12
      },
      "contracts/ZaaNetPayment.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetPayment.sol",
          "exportedSymbols": {
            "Context": [
              835
            ],
            "IERC1363": [
              229
            ],
            "IERC20": [
              315
            ],
            "IERC20Metadata": [
              341
            ],
            "IZaaNetAdmin": [
              3073
            ],
            "IZaaNetStorage": [
              3057
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              943
            ],
            "ReentrancyGuard": [
              1012
            ],
            "SafeERC20": [
              805
            ],
            "ZaaNetPayment": [
              4060
            ]
          },
          "id": 4061,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3000,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:13"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 3001,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4061,
              "sourceUnit": 148,
              "src": "58:52:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 3002,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4061,
              "sourceUnit": 944,
              "src": "111:52:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 3003,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4061,
              "sourceUnit": 1013,
              "src": "164:59:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 3004,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4061,
              "sourceUnit": 806,
              "src": "224:65:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 3005,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4061,
              "sourceUnit": 316,
              "src": "290:56:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 3006,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4061,
              "sourceUnit": 342,
              "src": "347:75:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IZaaNetStorage",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3057,
              "linearizedBaseContracts": [
                3057
              ],
              "name": "IZaaNetStorage",
              "nameLocation": "434:14:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IZaaNetStorage.Network",
                  "id": 3021,
                  "members": [
                    {
                      "constant": false,
                      "id": 3008,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "488:2:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3021,
                      "src": "480:10:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3007,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "480:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3010,
                      "mutability": "mutable",
                      "name": "hostAddress",
                      "nameLocation": "508:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3021,
                      "src": "500:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3009,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "500:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3012,
                      "mutability": "mutable",
                      "name": "pricePerSession",
                      "nameLocation": "537:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3021,
                      "src": "529:23:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3011,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "529:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3014,
                      "mutability": "mutable",
                      "name": "mongoDataId",
                      "nameLocation": "569:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3021,
                      "src": "562:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3013,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "562:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3016,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "595:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3021,
                      "src": "590:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3015,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "590:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3018,
                      "mutability": "mutable",
                      "name": "createdAt",
                      "nameLocation": "621:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3021,
                      "src": "613:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "613:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3020,
                      "mutability": "mutable",
                      "name": "updatedAt",
                      "nameLocation": "648:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3021,
                      "src": "640:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3019,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "640:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Network",
                  "nameLocation": "462:7:13",
                  "nodeType": "StructDefinition",
                  "scope": 3057,
                  "src": "455:209:13",
                  "visibility": "public"
                },
                {
                  "functionSelector": "95ea5717",
                  "id": 3029,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetwork",
                  "nameLocation": "679:10:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3024,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3023,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "707:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3029,
                        "src": "699:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3022,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "689:33:13"
                  },
                  "returnParameters": {
                    "id": 3028,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3027,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3029,
                        "src": "746:14:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                          "typeString": "struct IZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 3026,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3025,
                            "name": "Network",
                            "nameLocations": [
                              "746:7:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3021,
                            "src": "746:7:13"
                          },
                          "referencedDeclaration": 3021,
                          "src": "746:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3021_storage_ptr",
                            "typeString": "struct IZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "745:16:13"
                  },
                  "scope": 3057,
                  "src": "670:92:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e1c7a8aa",
                  "id": 3036,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseHostEarnings",
                  "nameLocation": "777:20:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3031,
                        "mutability": "mutable",
                        "name": "host",
                        "nameLocation": "806:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3036,
                        "src": "798:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3030,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "798:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3033,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "820:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3036,
                        "src": "812:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3032,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "812:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "797:30:13"
                  },
                  "returnParameters": {
                    "id": 3035,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "836:0:13"
                  },
                  "scope": 3057,
                  "src": "768:69:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "69009a13",
                  "id": 3041,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseZaaNetEarnings",
                  "nameLocation": "852:22:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3039,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3038,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "883:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3041,
                        "src": "875:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3037,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "875:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "874:16:13"
                  },
                  "returnParameters": {
                    "id": 3040,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "899:0:13"
                  },
                  "scope": 3057,
                  "src": "843:57:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "13a7dd1d",
                  "id": 3046,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateTotalPaymentsAmount",
                  "nameLocation": "914:25:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3044,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3043,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "948:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3046,
                        "src": "940:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3042,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:16:13"
                  },
                  "returnParameters": {
                    "id": 3045,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "964:0:13"
                  },
                  "scope": 3057,
                  "src": "905:60:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bed31654",
                  "id": 3051,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateTotalWithdrawalsAmount",
                  "nameLocation": "980:28:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3048,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1017:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3051,
                        "src": "1009:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3047,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1009:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1008:16:13"
                  },
                  "returnParameters": {
                    "id": 3050,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1033:0:13"
                  },
                  "scope": 3057,
                  "src": "971:63:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1190defd",
                  "id": 3056,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateTotalHostingAmount",
                  "nameLocation": "1049:24:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3054,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3053,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1082:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3056,
                        "src": "1074:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3052,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1074:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1073:16:13"
                  },
                  "returnParameters": {
                    "id": 3055,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1098:0:13"
                  },
                  "scope": 3057,
                  "src": "1040:59:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4061,
              "src": "424:677:13",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IZaaNetAdmin",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3073,
              "linearizedBaseContracts": [
                3073
              ],
              "name": "IZaaNetAdmin",
              "nameLocation": "1113:12:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "8c639a85",
                  "id": 3062,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "platformFeePercent",
                  "nameLocation": "1141:18:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3058,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1159:2:13"
                  },
                  "returnParameters": {
                    "id": 3061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3060,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3062,
                        "src": "1185:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3059,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1185:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1184:9:13"
                  },
                  "scope": 3073,
                  "src": "1132:62:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c5f956af",
                  "id": 3067,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "treasuryAddress",
                  "nameLocation": "1209:15:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3063,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1224:2:13"
                  },
                  "returnParameters": {
                    "id": 3066,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3065,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3067,
                        "src": "1250:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3064,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1250:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1249:9:13"
                  },
                  "scope": 3073,
                  "src": "1200:59:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "633423be",
                  "id": 3072,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paymentAddress",
                  "nameLocation": "1274:14:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3068,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1288:2:13"
                  },
                  "returnParameters": {
                    "id": 3071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3070,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3072,
                        "src": "1314:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3069,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1314:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1313:9:13"
                  },
                  "scope": 3073,
                  "src": "1265:58:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4061,
              "src": "1103:222:13",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3074,
                    "name": "Ownable",
                    "nameLocations": [
                      "1353:7:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "1353:7:13"
                  },
                  "id": 3075,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1353:7:13"
                },
                {
                  "baseName": {
                    "id": 3076,
                    "name": "Pausable",
                    "nameLocations": [
                      "1362:8:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 943,
                    "src": "1362:8:13"
                  },
                  "id": 3077,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1362:8:13"
                },
                {
                  "baseName": {
                    "id": 3078,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "1372:15:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1012,
                    "src": "1372:15:13"
                  },
                  "id": 3079,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1372:15:13"
                }
              ],
              "canonicalName": "ZaaNetPayment",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 4060,
              "linearizedBaseContracts": [
                4060,
                1012,
                943,
                147,
                835
              ],
              "name": "ZaaNetPayment",
              "nameLocation": "1336:13:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 3083,
                  "libraryName": {
                    "id": 3080,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "1400:9:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 805,
                    "src": "1400:9:13"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "1394:27:13",
                  "typeName": {
                    "id": 3082,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3081,
                      "name": "IERC20",
                      "nameLocations": [
                        "1414:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 315,
                      "src": "1414:6:13"
                    },
                    "referencedDeclaration": 315,
                    "src": "1414:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$315",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "2f48ab7d",
                  "id": 3086,
                  "mutability": "mutable",
                  "name": "usdt",
                  "nameLocation": "1441:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4060,
                  "src": "1427:18:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$315",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3085,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3084,
                      "name": "IERC20",
                      "nameLocations": [
                        "1427:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 315,
                      "src": "1427:6:13"
                    },
                    "referencedDeclaration": 315,
                    "src": "1427:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$315",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3b97e856",
                  "id": 3088,
                  "mutability": "mutable",
                  "name": "tokenDecimals",
                  "nameLocation": "1464:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4060,
                  "src": "1451:26:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3087,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "11ce0267",
                  "id": 3091,
                  "mutability": "mutable",
                  "name": "storageContract",
                  "nameLocation": "1506:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4060,
                  "src": "1484:37:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                    "typeString": "contract IZaaNetStorage"
                  },
                  "typeName": {
                    "id": 3090,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3089,
                      "name": "IZaaNetStorage",
                      "nameLocations": [
                        "1484:14:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3057,
                      "src": "1484:14:13"
                    },
                    "referencedDeclaration": 3057,
                    "src": "1484:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                      "typeString": "contract IZaaNetStorage"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c05c5e94",
                  "id": 3094,
                  "mutability": "mutable",
                  "name": "adminContract",
                  "nameLocation": "1547:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4060,
                  "src": "1527:33:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                    "typeString": "contract IZaaNetAdmin"
                  },
                  "typeName": {
                    "id": 3093,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3092,
                      "name": "IZaaNetAdmin",
                      "nameLocations": [
                        "1527:12:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3073,
                      "src": "1527:12:13"
                    },
                    "referencedDeclaration": 3073,
                    "src": "1527:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                      "typeString": "contract IZaaNetAdmin"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetPayment.BatchPayment",
                  "id": 3101,
                  "members": [
                    {
                      "constant": false,
                      "id": 3096,
                      "mutability": "mutable",
                      "name": "contractId",
                      "nameLocation": "1605:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3101,
                      "src": "1597:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3095,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1597:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3098,
                      "mutability": "mutable",
                      "name": "grossAmount",
                      "nameLocation": "1633:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3101,
                      "src": "1625:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3097,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1625:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3100,
                      "mutability": "mutable",
                      "name": "voucherId",
                      "nameLocation": "1662:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3101,
                      "src": "1654:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3099,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1654:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BatchPayment",
                  "nameLocation": "1574:12:13",
                  "nodeType": "StructDefinition",
                  "scope": 4060,
                  "src": "1567:111:13",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "4cf4caa5",
                  "id": 3109,
                  "mutability": "constant",
                  "name": "MAX_INDIVIDUAL_PAYMENT",
                  "nameLocation": "1733:22:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4060,
                  "src": "1709:63:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_50000000_by_1",
                      "typeString": "int_const 50000000"
                    },
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3530",
                      "id": 3103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1758:2:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 3104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1764:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 3105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1770:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "1764:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        }
                      ],
                      "id": 3107,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1763:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "1758:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000_by_1",
                      "typeString": "int_const 50000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "5b3c0528",
                  "id": 3112,
                  "mutability": "constant",
                  "name": "MAX_FEERATE_PERCENT",
                  "nameLocation": "1814:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4060,
                  "src": "1790:48:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1790:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 3111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1836:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7620843a",
                  "id": 3120,
                  "mutability": "mutable",
                  "name": "dailyWithdrawalLimit",
                  "nameLocation": "1906:20:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4060,
                  "src": "1891:55:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_10000000000_by_1",
                      "typeString": "int_const 10000000000"
                    },
                    "id": 3119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130303030",
                      "id": 3114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1929:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 3117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 3115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1938:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 3116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1944:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "1938:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        }
                      ],
                      "id": 3118,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1937:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "1929:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000_by_1",
                      "typeString": "int_const 10000000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "33770245",
                  "id": 3124,
                  "mutability": "mutable",
                  "name": "dailyWithdrawals",
                  "nameLocation": "1999:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4060,
                  "src": "1964:51:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "typeName": {
                    "id": 3123,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3121,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1972:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1964:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                      "typeString": "mapping(uint256 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3122,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1983:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b9a24544",
                  "id": 3128,
                  "mutability": "mutable",
                  "name": "processedVouchers",
                  "nameLocation": "2107:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4060,
                  "src": "2075:49:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "typeName": {
                    "id": 3127,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3125,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2083:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2075:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                      "typeString": "mapping(bytes32 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3126,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2094:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "daec0156f045fe9bffcc686bd77361f536743020f757603c9f1888937cdfc521",
                  "id": 3146,
                  "name": "PaymentProcessed",
                  "nameLocation": "2180:16:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3130,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "voucherId",
                        "nameLocation": "2222:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3146,
                        "src": "2206:25:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3129,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2206:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3132,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "contractId",
                        "nameLocation": "2257:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3146,
                        "src": "2241:26:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3131,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2241:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3134,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "host",
                        "nameLocation": "2293:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3146,
                        "src": "2277:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2277:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3136,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "payer",
                        "nameLocation": "2315:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3146,
                        "src": "2307:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2307:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3138,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "grossAmount",
                        "nameLocation": "2338:11:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3146,
                        "src": "2330:19:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3140,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "platformFee",
                        "nameLocation": "2367:11:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3146,
                        "src": "2359:19:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3139,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2359:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3142,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "hostAmount",
                        "nameLocation": "2396:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3146,
                        "src": "2388:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3141,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2388:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3144,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2424:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3146,
                        "src": "2416:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2416:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2196:243:13"
                  },
                  "src": "2174:266:13"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ef6aa729d47e0c1661366cdf3d3e7bc905d9ef1ff95f7b5a9da45090f6ca88f3",
                  "id": 3156,
                  "name": "DailyLimitExceeded",
                  "nameLocation": "2452:18:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3148,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "treasury",
                        "nameLocation": "2496:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3156,
                        "src": "2480:24:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2480:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3150,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "attemptedAmount",
                        "nameLocation": "2522:15:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3156,
                        "src": "2514:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2514:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3152,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "dailyLimit",
                        "nameLocation": "2555:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3156,
                        "src": "2547:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3151,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2547:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3154,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "alreadyWithdrawn",
                        "nameLocation": "2583:16:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3156,
                        "src": "2575:24:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2575:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2470:135:13"
                  },
                  "src": "2446:160:13"
                },
                {
                  "anonymous": false,
                  "eventSelector": "20eb9f3aebb74816a1325a7477cfa6f6ab692b692cd5930db98bd2d0343b70ca",
                  "id": 3164,
                  "name": "BatchPaymentProcessed",
                  "nameLocation": "2618:21:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3158,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "batchSize",
                        "nameLocation": "2657:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3164,
                        "src": "2649:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3157,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2649:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3160,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalAmount",
                        "nameLocation": "2684:11:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3164,
                        "src": "2676:19:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3159,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2676:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3162,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalPlatformFee",
                        "nameLocation": "2713:16:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3164,
                        "src": "2705:24:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3161,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2705:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2639:96:13"
                  },
                  "src": "2612:124:13"
                },
                {
                  "body": {
                    "id": 3195,
                    "nodeType": "Block",
                    "src": "2790:240:13",
                    "statements": [
                      {
                        "assignments": [
                          3167
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3167,
                            "mutability": "mutable",
                            "name": "treasury",
                            "nameLocation": "2808:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3195,
                            "src": "2800:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3166,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2800:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3171,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3168,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3094,
                              "src": "2819:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 3169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2833:15:13",
                            "memberName": "treasuryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3067,
                            "src": "2819:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2819:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2800:50:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3173,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2881:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3174,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2885:6:13",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2881:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3175,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "2895:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 3176,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2895:7:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2881:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 3188,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 3183,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3178,
                                        "name": "treasury",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3167,
                                        "src": "2923:8:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 3181,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2943:1:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 3180,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2935:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 3179,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2935:7:13",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 3182,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2935:10:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "2923:22:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 3187,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3184,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "2949:3:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 3185,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2953:6:13",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "2949:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "id": 3186,
                                        "name": "treasury",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3167,
                                        "src": "2963:8:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "2949:22:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "2923:48:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 3189,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2922:50:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2881:91:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a6564",
                              "id": 3191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2986:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              },
                              "value": "Not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              }
                            ],
                            "id": 3172,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2860:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2860:152:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3193,
                        "nodeType": "ExpressionStatement",
                        "src": "2860:152:13"
                      },
                      {
                        "id": 3194,
                        "nodeType": "PlaceholderStatement",
                        "src": "3022:1:13"
                      }
                    ]
                  },
                  "id": 3196,
                  "name": "onlyTreasuryOrOwner",
                  "nameLocation": "2768:19:13",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 3165,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2787:2:13"
                  },
                  "src": "2759:271:13",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3242,
                    "nodeType": "Block",
                    "src": "3078:492:13",
                    "statements": [
                      {
                        "assignments": [
                          3201
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3201,
                            "mutability": "mutable",
                            "name": "today",
                            "nameLocation": "3096:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3242,
                            "src": "3088:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3200,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3088:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3206,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3202,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3104:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3110:9:13",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3104:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 3204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3122:6:13",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "3104:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3088:40:13"
                      },
                      {
                        "assignments": [
                          3208
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3208,
                            "mutability": "mutable",
                            "name": "newDailyTotal",
                            "nameLocation": "3146:13:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3242,
                            "src": "3138:21:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3207,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3138:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3214,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 3209,
                              "name": "dailyWithdrawals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3124,
                              "src": "3162:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 3211,
                            "indexExpression": {
                              "id": 3210,
                              "name": "today",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3201,
                              "src": "3179:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3162:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3212,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3198,
                            "src": "3188:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3162:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3138:56:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3215,
                            "name": "newDailyTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3208,
                            "src": "3209:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3216,
                            "name": "dailyWithdrawalLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3120,
                            "src": "3225:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3209:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3234,
                        "nodeType": "IfStatement",
                        "src": "3205:298:13",
                        "trueBody": {
                          "id": 3233,
                          "nodeType": "Block",
                          "src": "3247:256:13",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3219,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3302:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3220,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3306:6:13",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3302:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3221,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3198,
                                    "src": "3330:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3222,
                                    "name": "dailyWithdrawalLimit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3120,
                                    "src": "3354:20:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 3223,
                                      "name": "dailyWithdrawals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3124,
                                      "src": "3392:16:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 3225,
                                    "indexExpression": {
                                      "id": 3224,
                                      "name": "today",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3201,
                                      "src": "3409:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3392:23:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3218,
                                  "name": "DailyLimitExceeded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3156,
                                  "src": "3266:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 3226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3266:163:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3227,
                              "nodeType": "EmitStatement",
                              "src": "3261:168:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 3229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3451:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "4461696c79207769746864726177616c206c696d6974206578636565646564",
                                    "id": 3230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3458:33:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c3b91ac4569c8b8eeecaacc1d8110fa8a68cf528e317b6c18470fb2604b74c77",
                                      "typeString": "literal_string \"Daily withdrawal limit exceeded\""
                                    },
                                    "value": "Daily withdrawal limit exceeded"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c3b91ac4569c8b8eeecaacc1d8110fa8a68cf528e317b6c18470fb2604b74c77",
                                      "typeString": "literal_string \"Daily withdrawal limit exceeded\""
                                    }
                                  ],
                                  "id": 3228,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3443:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3443:49:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3232,
                              "nodeType": "ExpressionStatement",
                              "src": "3443:49:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 3239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3235,
                              "name": "dailyWithdrawals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3124,
                              "src": "3513:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 3237,
                            "indexExpression": {
                              "id": 3236,
                              "name": "today",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3201,
                              "src": "3530:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3513:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3238,
                            "name": "newDailyTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3208,
                            "src": "3539:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3513:39:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3240,
                        "nodeType": "ExpressionStatement",
                        "src": "3513:39:13"
                      },
                      {
                        "id": 3241,
                        "nodeType": "PlaceholderStatement",
                        "src": "3562:1:13"
                      }
                    ]
                  },
                  "id": 3243,
                  "name": "withinDailyLimit",
                  "nameLocation": "3045:16:13",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 3199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3198,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3070:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3243,
                        "src": "3062:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3062:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3061:16:13"
                  },
                  "src": "3036:534:13",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3312,
                    "nodeType": "Block",
                    "src": "3703:389:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3257,
                                "name": "_usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3245,
                                "src": "3721:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3260,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3738:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3730:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3258,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3730:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3730:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3721:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "746f6b656e207a65726f",
                              "id": 3263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3742:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dbcc5842481ed39bd923fb8b547f88078eb109724198f40ba30aa4529d99efdd",
                                "typeString": "literal_string \"token zero\""
                              },
                              "value": "token zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dbcc5842481ed39bd923fb8b547f88078eb109724198f40ba30aa4529d99efdd",
                                "typeString": "literal_string \"token zero\""
                              }
                            ],
                            "id": 3256,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3713:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3713:42:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3265,
                        "nodeType": "ExpressionStatement",
                        "src": "3713:42:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3267,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3247,
                                "src": "3773:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3801:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3793:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3268,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3793:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3793:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3773:30:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "73746f72616765207a65726f",
                              "id": 3273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3805:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d8b5deec4f75c896626f2350603a4630fb16ea2ec853c28d6f98e1da1a8bb0d0",
                                "typeString": "literal_string \"storage zero\""
                              },
                              "value": "storage zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d8b5deec4f75c896626f2350603a4630fb16ea2ec853c28d6f98e1da1a8bb0d0",
                                "typeString": "literal_string \"storage zero\""
                              }
                            ],
                            "id": 3266,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3765:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3765:55:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3275,
                        "nodeType": "ExpressionStatement",
                        "src": "3765:55:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3277,
                                "name": "_adminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3249,
                                "src": "3838:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3864:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3856:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3278,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3856:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3856:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3838:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "61646d696e207a65726f",
                              "id": 3283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3868:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e0bec4099d1a1b5330c84a81641ccf70304add830f98caf2d8ca81d02401dc1c",
                                "typeString": "literal_string \"admin zero\""
                              },
                              "value": "admin zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e0bec4099d1a1b5330c84a81641ccf70304add830f98caf2d8ca81d02401dc1c",
                                "typeString": "literal_string \"admin zero\""
                              }
                            ],
                            "id": 3276,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3830:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3830:51:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3285,
                        "nodeType": "ExpressionStatement",
                        "src": "3830:51:13"
                      },
                      {
                        "expression": {
                          "id": 3290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3286,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3086,
                            "src": "3892:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$315",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3288,
                                "name": "_usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3245,
                                "src": "3906:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3287,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "3899:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 3289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3899:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$315",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3892:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$315",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 3291,
                        "nodeType": "ExpressionStatement",
                        "src": "3892:20:13"
                      },
                      {
                        "expression": {
                          "id": 3298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3292,
                            "name": "tokenDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3088,
                            "src": "3922:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3294,
                                    "name": "_usdt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3245,
                                    "src": "3953:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3293,
                                  "name": "IERC20Metadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 341,
                                  "src": "3938:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$341_$",
                                    "typeString": "type(contract IERC20Metadata)"
                                  }
                                },
                                "id": 3295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3938:21:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$341",
                                  "typeString": "contract IERC20Metadata"
                                }
                              },
                              "id": 3296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3960:8:13",
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 340,
                              "src": "3938:30:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 3297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3938:32:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3922:48:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 3299,
                        "nodeType": "ExpressionStatement",
                        "src": "3922:48:13"
                      },
                      {
                        "expression": {
                          "id": 3304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3300,
                            "name": "storageContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3091,
                            "src": "3981:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                              "typeString": "contract IZaaNetStorage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3302,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3247,
                                "src": "4014:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3301,
                              "name": "IZaaNetStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3057,
                              "src": "3999:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IZaaNetStorage_$3057_$",
                                "typeString": "type(contract IZaaNetStorage)"
                              }
                            },
                            "id": 3303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3999:32:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                              "typeString": "contract IZaaNetStorage"
                            }
                          },
                          "src": "3981:50:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                            "typeString": "contract IZaaNetStorage"
                          }
                        },
                        "id": 3305,
                        "nodeType": "ExpressionStatement",
                        "src": "3981:50:13"
                      },
                      {
                        "expression": {
                          "id": 3310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3306,
                            "name": "adminContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3094,
                            "src": "4041:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                              "typeString": "contract IZaaNetAdmin"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3308,
                                "name": "_adminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3249,
                                "src": "4070:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3307,
                              "name": "IZaaNetAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3073,
                              "src": "4057:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IZaaNetAdmin_$3073_$",
                                "typeString": "type(contract IZaaNetAdmin)"
                              }
                            },
                            "id": 3309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4057:28:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                              "typeString": "contract IZaaNetAdmin"
                            }
                          },
                          "src": "4041:44:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                            "typeString": "contract IZaaNetAdmin"
                          }
                        },
                        "id": 3311,
                        "nodeType": "ExpressionStatement",
                        "src": "4041:44:13"
                      }
                    ]
                  },
                  "id": 3313,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3691:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3695:6:13",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3691:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3254,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 3251,
                        "name": "Ownable",
                        "nameLocations": [
                          "3683:7:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "3683:7:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3683:19:13"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3245,
                        "mutability": "mutable",
                        "name": "_usdt",
                        "nameLocation": "3605:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3313,
                        "src": "3597:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3597:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3247,
                        "mutability": "mutable",
                        "name": "_storageContract",
                        "nameLocation": "3628:16:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3313,
                        "src": "3620:24:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3246,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3620:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3249,
                        "mutability": "mutable",
                        "name": "_adminContract",
                        "nameLocation": "3662:14:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3313,
                        "src": "3654:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3654:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3587:95:13"
                  },
                  "returnParameters": {
                    "id": 3255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3703:0:13"
                  },
                  "scope": 4060,
                  "src": "3576:516:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3445,
                    "nodeType": "Block",
                    "src": "4679:1538:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3331,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4756:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4760:6:13",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4756:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 3333,
                                    "name": "adminContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3094,
                                    "src": "4770:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                                      "typeString": "contract IZaaNetAdmin"
                                    }
                                  },
                                  "id": 3334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4784:14:13",
                                  "memberName": "paymentAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3072,
                                  "src": "4770:28:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 3335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4770:30:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4756:44:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74207061796d656e742061646472657373",
                              "id": 3337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4814:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70adf423568aade5dc087c5175acc5a1cd72cf9f8eeda5f5e563e00eb146ab0c",
                                "typeString": "literal_string \"Not payment address\""
                              },
                              "value": "Not payment address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70adf423568aade5dc087c5175acc5a1cd72cf9f8eeda5f5e563e00eb146ab0c",
                                "typeString": "literal_string \"Not payment address\""
                              }
                            ],
                            "id": 3330,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4735:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4735:110:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3339,
                        "nodeType": "ExpressionStatement",
                        "src": "4735:110:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4901:30:13",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 3341,
                                  "name": "processedVouchers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3128,
                                  "src": "4902:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 3343,
                                "indexExpression": {
                                  "id": 3342,
                                  "name": "_voucherId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3320,
                                  "src": "4920:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4902:29:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f756368657220616c72656164792070726f636573736564",
                              "id": 3345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4933:27:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d935bd18e941c2a1dafebdbcf88b71185007880c58d325595ceb139a9bc6f07e",
                                "typeString": "literal_string \"Voucher already processed\""
                              },
                              "value": "Voucher already processed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d935bd18e941c2a1dafebdbcf88b71185007880c58d325595ceb139a9bc6f07e",
                                "typeString": "literal_string \"Voucher already processed\""
                              }
                            ],
                            "id": 3340,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4893:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4893:68:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3347,
                        "nodeType": "ExpressionStatement",
                        "src": "4893:68:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3349,
                                  "name": "_grossAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3318,
                                  "src": "5063:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5078:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5063:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3352,
                                  "name": "_grossAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3318,
                                  "src": "5083:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 3353,
                                  "name": "MAX_INDIVIDUAL_PAYMENT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3109,
                                  "src": "5099:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5083:38:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5063:58:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420616d6f756e74",
                              "id": 3356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5135:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              },
                              "value": "Invalid amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              }
                            ],
                            "id": 3348,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5042:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5042:119:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3358,
                        "nodeType": "ExpressionStatement",
                        "src": "5042:119:13"
                      },
                      {
                        "assignments": [
                          3363
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3363,
                            "mutability": "mutable",
                            "name": "network",
                            "nameLocation": "5230:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3445,
                            "src": "5200:37:13",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                              "typeString": "struct IZaaNetStorage.Network"
                            },
                            "typeName": {
                              "id": 3362,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3361,
                                "name": "IZaaNetStorage.Network",
                                "nameLocations": [
                                  "5200:14:13",
                                  "5215:7:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3021,
                                "src": "5200:22:13"
                              },
                              "referencedDeclaration": 3021,
                              "src": "5200:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$3021_storage_ptr",
                                "typeString": "struct IZaaNetStorage.Network"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3368,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3366,
                              "name": "_contractId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3316,
                              "src": "5280:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3364,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3091,
                              "src": "5240:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                                "typeString": "contract IZaaNetStorage"
                              }
                            },
                            "id": 3365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5256:10:13",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3029,
                            "src": "5240:26:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3021_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct IZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 3367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5240:61:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                            "typeString": "struct IZaaNetStorage.Network memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5200:101:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3370,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3363,
                                "src": "5319:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                  "typeString": "struct IZaaNetStorage.Network memory"
                                }
                              },
                              "id": 3371,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5327:8:13",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3016,
                              "src": "5319:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b206e6f7420616374697665",
                              "id": 3372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5337:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7d1e24f2521c55bb8fa4e630288aff3b2c7e97895f972c3981db062dea8c3eb6",
                                "typeString": "literal_string \"Network not active\""
                              },
                              "value": "Network not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7d1e24f2521c55bb8fa4e630288aff3b2c7e97895f972c3981db062dea8c3eb6",
                                "typeString": "literal_string \"Network not active\""
                              }
                            ],
                            "id": 3369,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5311:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5311:47:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3374,
                        "nodeType": "ExpressionStatement",
                        "src": "5311:47:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3376,
                                "name": "_grossAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3318,
                                "src": "5376:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 3377,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3363,
                                  "src": "5392:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                    "typeString": "struct IZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 3378,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5400:15:13",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3012,
                                "src": "5392:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5376:39:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e7420746f6f206c6f77",
                              "id": 3380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5417:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110",
                                "typeString": "literal_string \"Amount too low\""
                              },
                              "value": "Amount too low"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110",
                                "typeString": "literal_string \"Amount too low\""
                              }
                            ],
                            "id": 3375,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5368:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5368:66:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3382,
                        "nodeType": "ExpressionStatement",
                        "src": "5368:66:13"
                      },
                      {
                        "assignments": [
                          3384
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3384,
                            "mutability": "mutable",
                            "name": "feePercent",
                            "nameLocation": "5481:10:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3445,
                            "src": "5473:18:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3383,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5473:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3388,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3385,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3094,
                              "src": "5494:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 3386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5508:18:13",
                            "memberName": "platformFeePercent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3062,
                            "src": "5494:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 3387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5494:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5473:55:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3390,
                                "name": "feePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3384,
                                "src": "5546:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 3391,
                                "name": "MAX_FEERATE_PERCENT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3112,
                                "src": "5560:19:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5546:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46656520746f6f2068696768",
                              "id": 3393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5581:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
                                "typeString": "literal_string \"Fee too high\""
                              },
                              "value": "Fee too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
                                "typeString": "literal_string \"Fee too high\""
                              }
                            ],
                            "id": 3389,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5538:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5538:58:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3395,
                        "nodeType": "ExpressionStatement",
                        "src": "5538:58:13"
                      },
                      {
                        "assignments": [
                          3397
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3397,
                            "mutability": "mutable",
                            "name": "treasuryWallet",
                            "nameLocation": "5647:14:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3445,
                            "src": "5639:22:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3396,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5639:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3401,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3398,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3094,
                              "src": "5664:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 3399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5678:15:13",
                            "memberName": "treasuryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3067,
                            "src": "5664:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5664:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5639:56:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3403,
                                "name": "treasuryWallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3397,
                                "src": "5713:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5739:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3405,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5731:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3404,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5731:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5731:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5713:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207472656173757279",
                              "id": 3409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5743:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
                                "typeString": "literal_string \"Invalid treasury\""
                              },
                              "value": "Invalid treasury"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
                                "typeString": "literal_string \"Invalid treasury\""
                              }
                            ],
                            "id": 3402,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5705:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5705:57:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3411,
                        "nodeType": "ExpressionStatement",
                        "src": "5705:57:13"
                      },
                      {
                        "assignments": [
                          3413
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3413,
                            "mutability": "mutable",
                            "name": "paymentWallet",
                            "nameLocation": "5812:13:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3445,
                            "src": "5804:21:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3412,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5804:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3417,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3414,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3094,
                              "src": "5828:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 3415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5842:14:13",
                            "memberName": "paymentAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3072,
                            "src": "5828:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5828:30:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5804:54:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3419,
                                "name": "paymentWallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3413,
                                "src": "5876:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3422,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5901:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5893:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3420,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5893:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5893:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5876:27:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207061796d656e74",
                              "id": 3425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5905:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bf42f9fbe7a15eca816af9fb3bc9d99ae12f8f71ea616a4d2b604a9f310d52fb",
                                "typeString": "literal_string \"Invalid payment\""
                              },
                              "value": "Invalid payment"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bf42f9fbe7a15eca816af9fb3bc9d99ae12f8f71ea616a4d2b604a9f310d52fb",
                                "typeString": "literal_string \"Invalid payment\""
                              }
                            ],
                            "id": 3418,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5868:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5868:55:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3427,
                        "nodeType": "ExpressionStatement",
                        "src": "5868:55:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3429,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5941:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5945:6:13",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5941:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 3431,
                                "name": "paymentWallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3413,
                                "src": "5955:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5941:27:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74207061796d656e742061646472657373",
                              "id": 3433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5970:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70adf423568aade5dc087c5175acc5a1cd72cf9f8eeda5f5e563e00eb146ab0c",
                                "typeString": "literal_string \"Not payment address\""
                              },
                              "value": "Not payment address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70adf423568aade5dc087c5175acc5a1cd72cf9f8eeda5f5e563e00eb146ab0c",
                                "typeString": "literal_string \"Not payment address\""
                              }
                            ],
                            "id": 3428,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5933:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5933:59:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3435,
                        "nodeType": "ExpressionStatement",
                        "src": "5933:59:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3437,
                              "name": "_contractId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3316,
                              "src": "6066:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3438,
                              "name": "_grossAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3318,
                              "src": "6091:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3439,
                              "name": "_voucherId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3320,
                              "src": "6117:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 3440,
                              "name": "network",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3363,
                              "src": "6141:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                "typeString": "struct IZaaNetStorage.Network memory"
                              }
                            },
                            {
                              "id": 3441,
                              "name": "feePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3384,
                              "src": "6162:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3442,
                              "name": "treasuryWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3397,
                              "src": "6186:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                "typeString": "struct IZaaNetStorage.Network memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3436,
                            "name": "_executePayment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3862,
                            "src": "6037:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_struct$_Network_$3021_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,bytes32,struct IZaaNetStorage.Network memory,uint256,address)"
                            }
                          },
                          "id": 3443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6037:173:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3444,
                        "nodeType": "ExpressionStatement",
                        "src": "6037:173:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3314,
                    "nodeType": "StructuredDocumentation",
                    "src": "4098:392:13",
                    "text": " @notice Process a payment for a voucher with enhanced security controls\n @param _contractId The ID of the network contract\n @param _grossAmount The total amount paid by the user (in USDT, 6 decimals)\n @param _voucherId Unique voucher ID to prevent double processing\n @dev Enforces max individual payment, daily limits, and prevents double processing"
                  },
                  "functionSelector": "4342482d",
                  "id": 3446,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3323,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3322,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "4621:13:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 868,
                        "src": "4621:13:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4621:13:13"
                    },
                    {
                      "id": 3325,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3324,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4635:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 976,
                        "src": "4635:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4635:12:13"
                    },
                    {
                      "arguments": [
                        {
                          "id": 3327,
                          "name": "_grossAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3318,
                          "src": "4665:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3328,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3326,
                        "name": "withinDailyLimit",
                        "nameLocations": [
                          "4648:16:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3243,
                        "src": "4648:16:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4648:30:13"
                    }
                  ],
                  "name": "processPayment",
                  "nameLocation": "4504:14:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3321,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3316,
                        "mutability": "mutable",
                        "name": "_contractId",
                        "nameLocation": "4536:11:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3446,
                        "src": "4528:19:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3315,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4528:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3318,
                        "mutability": "mutable",
                        "name": "_grossAmount",
                        "nameLocation": "4565:12:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3446,
                        "src": "4557:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4557:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3320,
                        "mutability": "mutable",
                        "name": "_voucherId",
                        "nameLocation": "4595:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3446,
                        "src": "4587:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3319,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4587:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4518:93:13"
                  },
                  "returnParameters": {
                    "id": 3329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4679:0:13"
                  },
                  "scope": 4060,
                  "src": "4495:1722:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3748,
                    "nodeType": "Block",
                    "src": "6588:3687:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3459,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6665:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6669:6:13",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6665:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 3461,
                                    "name": "adminContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3094,
                                    "src": "6679:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                                      "typeString": "contract IZaaNetAdmin"
                                    }
                                  },
                                  "id": 3462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6693:14:13",
                                  "memberName": "paymentAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3072,
                                  "src": "6679:28:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 3463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6679:30:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6665:44:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74207061796d656e742061646472657373",
                              "id": 3465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6723:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70adf423568aade5dc087c5175acc5a1cd72cf9f8eeda5f5e563e00eb146ab0c",
                                "typeString": "literal_string \"Not payment address\""
                              },
                              "value": "Not payment address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70adf423568aade5dc087c5175acc5a1cd72cf9f8eeda5f5e563e00eb146ab0c",
                                "typeString": "literal_string \"Not payment address\""
                              }
                            ],
                            "id": 3458,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6644:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6644:110:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3467,
                        "nodeType": "ExpressionStatement",
                        "src": "6644:110:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3469,
                                    "name": "payments",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3451,
                                    "src": "6785:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_BatchPayment_$3101_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct ZaaNetPayment.BatchPayment calldata[] calldata"
                                    }
                                  },
                                  "id": 3470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6794:6:13",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "6785:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3471,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6803:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6785:19:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3473,
                                    "name": "payments",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3451,
                                    "src": "6808:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_BatchPayment_$3101_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct ZaaNetPayment.BatchPayment calldata[] calldata"
                                    }
                                  },
                                  "id": 3474,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6817:6:13",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "6808:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3530",
                                  "id": 3475,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6827:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_50_by_1",
                                    "typeString": "int_const 50"
                                  },
                                  "value": "50"
                                },
                                "src": "6808:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6785:44:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642062617463682073697a65",
                              "id": 3478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6843:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6a6f98e7a1ffb791da69252865c9f1ade19e677b977d0d5024fe33790eb8a782",
                                "typeString": "literal_string \"Invalid batch size\""
                              },
                              "value": "Invalid batch size"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6a6f98e7a1ffb791da69252865c9f1ade19e677b977d0d5024fe33790eb8a782",
                                "typeString": "literal_string \"Invalid batch size\""
                              }
                            ],
                            "id": 3468,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6764:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6764:109:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3480,
                        "nodeType": "ExpressionStatement",
                        "src": "6764:109:13"
                      },
                      {
                        "assignments": [
                          3482
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3482,
                            "mutability": "mutable",
                            "name": "totalAmount",
                            "nameLocation": "6892:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3748,
                            "src": "6884:19:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3481,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6884:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3484,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6906:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6884:23:13"
                      },
                      {
                        "assignments": [
                          3486
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3486,
                            "mutability": "mutable",
                            "name": "feePercent",
                            "nameLocation": "6925:10:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3748,
                            "src": "6917:18:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3485,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6917:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3490,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3487,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3094,
                              "src": "6938:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 3488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6952:18:13",
                            "memberName": "platformFeePercent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3062,
                            "src": "6938:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 3489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6938:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6917:55:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3492,
                                "name": "feePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3486,
                                "src": "6990:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 3493,
                                "name": "MAX_FEERATE_PERCENT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3112,
                                "src": "7004:19:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6990:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46656520746f6f2068696768",
                              "id": 3495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7025:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
                                "typeString": "literal_string \"Fee too high\""
                              },
                              "value": "Fee too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
                                "typeString": "literal_string \"Fee too high\""
                              }
                            ],
                            "id": 3491,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6982:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6982:58:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3497,
                        "nodeType": "ExpressionStatement",
                        "src": "6982:58:13"
                      },
                      {
                        "assignments": [
                          3499
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3499,
                            "mutability": "mutable",
                            "name": "treasuryWallet",
                            "nameLocation": "7059:14:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3748,
                            "src": "7051:22:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3498,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7051:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3503,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3500,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3094,
                              "src": "7076:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetAdmin_$3073",
                                "typeString": "contract IZaaNetAdmin"
                              }
                            },
                            "id": 3501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7090:15:13",
                            "memberName": "treasuryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3067,
                            "src": "7076:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7076:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7051:56:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3505,
                                "name": "treasuryWallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3499,
                                "src": "7125:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3508,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7151:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7143:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3506,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7143:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7143:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7125:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207472656173757279",
                              "id": 3511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7155:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
                                "typeString": "literal_string \"Invalid treasury\""
                              },
                              "value": "Invalid treasury"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
                                "typeString": "literal_string \"Invalid treasury\""
                              }
                            ],
                            "id": 3504,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7117:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7117:57:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3513,
                        "nodeType": "ExpressionStatement",
                        "src": "7117:57:13"
                      },
                      {
                        "body": {
                          "id": 3585,
                          "nodeType": "Block",
                          "src": "7296:820:13",
                          "statements": [
                            {
                              "assignments": [
                                3527
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3527,
                                  "mutability": "mutable",
                                  "name": "payment",
                                  "nameLocation": "7330:7:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3585,
                                  "src": "7310:27:13",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                    "typeString": "struct ZaaNetPayment.BatchPayment"
                                  },
                                  "typeName": {
                                    "id": 3526,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3525,
                                      "name": "BatchPayment",
                                      "nameLocations": [
                                        "7310:12:13"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3101,
                                      "src": "7310:12:13"
                                    },
                                    "referencedDeclaration": 3101,
                                    "src": "7310:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BatchPayment_$3101_storage_ptr",
                                      "typeString": "struct ZaaNetPayment.BatchPayment"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3531,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3528,
                                  "name": "payments",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3451,
                                  "src": "7340:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_BatchPayment_$3101_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct ZaaNetPayment.BatchPayment calldata[] calldata"
                                  }
                                },
                                "id": 3530,
                                "indexExpression": {
                                  "id": 3529,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3515,
                                  "src": "7349:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7340:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BatchPayment_$3101_calldata_ptr",
                                  "typeString": "struct ZaaNetPayment.BatchPayment calldata"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7310:41:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 3541,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3536,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3533,
                                          "name": "payment",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3527,
                                          "src": "7424:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                            "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                          }
                                        },
                                        "id": 3534,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7432:11:13",
                                        "memberName": "grossAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3098,
                                        "src": "7424:19:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 3535,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7446:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "7424:23:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3540,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3537,
                                          "name": "payment",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3527,
                                          "src": "7471:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                            "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                          }
                                        },
                                        "id": 3538,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7479:11:13",
                                        "memberName": "grossAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3098,
                                        "src": "7471:19:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "id": 3539,
                                        "name": "MAX_INDIVIDUAL_PAYMENT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3109,
                                        "src": "7494:22:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7471:45:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "7424:92:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e76616c696420616d6f756e74",
                                    "id": 3542,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7534:16:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                      "typeString": "literal_string \"Invalid amount\""
                                    },
                                    "value": "Invalid amount"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                      "typeString": "literal_string \"Invalid amount\""
                                    }
                                  ],
                                  "id": 3532,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "7399:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7399:165:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3544,
                              "nodeType": "ExpressionStatement",
                              "src": "7399:165:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3550,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "7603:37:13",
                                    "subExpression": {
                                      "baseExpression": {
                                        "id": 3546,
                                        "name": "processedVouchers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3128,
                                        "src": "7604:17:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                          "typeString": "mapping(bytes32 => bool)"
                                        }
                                      },
                                      "id": 3549,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 3547,
                                          "name": "payment",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3527,
                                          "src": "7622:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                            "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                          }
                                        },
                                        "id": 3548,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7630:9:13",
                                        "memberName": "voucherId",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3100,
                                        "src": "7622:17:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7604:36:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "566f756368657220616c72656164792070726f636573736564",
                                    "id": 3551,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7658:27:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d935bd18e941c2a1dafebdbcf88b71185007880c58d325595ceb139a9bc6f07e",
                                      "typeString": "literal_string \"Voucher already processed\""
                                    },
                                    "value": "Voucher already processed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d935bd18e941c2a1dafebdbcf88b71185007880c58d325595ceb139a9bc6f07e",
                                      "typeString": "literal_string \"Voucher already processed\""
                                    }
                                  ],
                                  "id": 3545,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "7578:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7578:121:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3553,
                              "nodeType": "ExpressionStatement",
                              "src": "7578:121:13"
                            },
                            {
                              "assignments": [
                                3558
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3558,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "7776:7:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3585,
                                  "src": "7746:37:13",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                    "typeString": "struct IZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 3557,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3556,
                                      "name": "IZaaNetStorage.Network",
                                      "nameLocations": [
                                        "7746:14:13",
                                        "7761:7:13"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3021,
                                      "src": "7746:22:13"
                                    },
                                    "referencedDeclaration": 3021,
                                    "src": "7746:22:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$3021_storage_ptr",
                                      "typeString": "struct IZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3564,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3561,
                                      "name": "payment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3527,
                                      "src": "7830:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                        "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                      }
                                    },
                                    "id": 3562,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7838:10:13",
                                    "memberName": "contractId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3096,
                                    "src": "7830:18:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3559,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3091,
                                    "src": "7786:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                                      "typeString": "contract IZaaNetStorage"
                                    }
                                  },
                                  "id": 3560,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7802:10:13",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3029,
                                  "src": "7786:26:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3021_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct IZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 3563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7786:76:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                  "typeString": "struct IZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7746:116:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3566,
                                      "name": "network",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3558,
                                      "src": "7884:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                        "typeString": "struct IZaaNetStorage.Network memory"
                                      }
                                    },
                                    "id": 3567,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7892:8:13",
                                    "memberName": "isActive",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3016,
                                    "src": "7884:16:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6574776f726b206e6f7420616374697665",
                                    "id": 3568,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7902:20:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7d1e24f2521c55bb8fa4e630288aff3b2c7e97895f972c3981db062dea8c3eb6",
                                      "typeString": "literal_string \"Network not active\""
                                    },
                                    "value": "Network not active"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_7d1e24f2521c55bb8fa4e630288aff3b2c7e97895f972c3981db062dea8c3eb6",
                                      "typeString": "literal_string \"Network not active\""
                                    }
                                  ],
                                  "id": 3565,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "7876:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7876:47:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3570,
                              "nodeType": "ExpressionStatement",
                              "src": "7876:47:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3576,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 3572,
                                        "name": "payment",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3527,
                                        "src": "7962:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                          "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                        }
                                      },
                                      "id": 3573,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7970:11:13",
                                      "memberName": "grossAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3098,
                                      "src": "7962:19:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 3574,
                                        "name": "network",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3558,
                                        "src": "7985:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                          "typeString": "struct IZaaNetStorage.Network memory"
                                        }
                                      },
                                      "id": 3575,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7993:15:13",
                                      "memberName": "pricePerSession",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3012,
                                      "src": "7985:23:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7962:46:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "416d6f756e7420746f6f206c6f77",
                                    "id": 3577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8026:16:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110",
                                      "typeString": "literal_string \"Amount too low\""
                                    },
                                    "value": "Amount too low"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110",
                                      "typeString": "literal_string \"Amount too low\""
                                    }
                                  ],
                                  "id": 3571,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "7937:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7937:119:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3579,
                              "nodeType": "ExpressionStatement",
                              "src": "7937:119:13"
                            },
                            {
                              "expression": {
                                "id": 3583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3580,
                                  "name": "totalAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3482,
                                  "src": "8071:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 3581,
                                    "name": "payment",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3527,
                                    "src": "8086:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                      "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                    }
                                  },
                                  "id": 3582,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8094:11:13",
                                  "memberName": "grossAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3098,
                                  "src": "8086:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8071:34:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3584,
                              "nodeType": "ExpressionStatement",
                              "src": "8071:34:13"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3518,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3515,
                            "src": "7270:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3519,
                              "name": "payments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3451,
                              "src": "7274:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BatchPayment_$3101_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ZaaNetPayment.BatchPayment calldata[] calldata"
                              }
                            },
                            "id": 3520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7283:6:13",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7274:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7270:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3586,
                        "initializationExpression": {
                          "assignments": [
                            3515
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3515,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7263:1:13",
                              "nodeType": "VariableDeclaration",
                              "scope": 3586,
                              "src": "7255:9:13",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3514,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7255:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3517,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7267:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7255:13:13"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7291:3:13",
                            "subExpression": {
                              "id": 3522,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3515,
                              "src": "7291:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3524,
                          "nodeType": "ExpressionStatement",
                          "src": "7291:3:13"
                        },
                        "nodeType": "ForStatement",
                        "src": "7250:866:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3588,
                                "name": "totalAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3482,
                                "src": "8179:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3589,
                                  "name": "getRemainingDailyLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3942,
                                  "src": "8194:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 3590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8194:24:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8179:39:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45786365656473206461696c79206c696d6974",
                              "id": 3592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8220:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927",
                                "typeString": "literal_string \"Exceeds daily limit\""
                              },
                              "value": "Exceeds daily limit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927",
                                "typeString": "literal_string \"Exceeds daily limit\""
                              }
                            ],
                            "id": 3587,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8171:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8171:71:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3594,
                        "nodeType": "ExpressionStatement",
                        "src": "8171:71:13"
                      },
                      {
                        "assignments": [
                          3596
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3596,
                            "mutability": "mutable",
                            "name": "today",
                            "nameLocation": "8297:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3748,
                            "src": "8289:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3595,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8289:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3601,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3597,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8305:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8311:9:13",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8305:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 3599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8323:6:13",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "8305:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8289:40:13"
                      },
                      {
                        "expression": {
                          "id": 3606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3602,
                              "name": "dailyWithdrawals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3124,
                              "src": "8339:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 3604,
                            "indexExpression": {
                              "id": 3603,
                              "name": "today",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3596,
                              "src": "8356:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8339:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3605,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3482,
                            "src": "8366:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8339:38:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3607,
                        "nodeType": "ExpressionStatement",
                        "src": "8339:38:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3613,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8466:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZaaNetPayment_$4060",
                                          "typeString": "contract ZaaNetPayment"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZaaNetPayment_$4060",
                                          "typeString": "contract ZaaNetPayment"
                                        }
                                      ],
                                      "id": 3612,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8458:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3611,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8458:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3614,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8458:13:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3609,
                                    "name": "usdt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3086,
                                    "src": "8443:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3610,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8448:9:13",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 272,
                                  "src": "8443:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8443:29:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3616,
                                "name": "totalAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3482,
                                "src": "8476:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8443:44:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
                              "id": 3618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8501:31:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                                "typeString": "literal_string \"Insufficient contract balance\""
                              },
                              "value": "Insufficient contract balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                                "typeString": "literal_string \"Insufficient contract balance\""
                              }
                            ],
                            "id": 3608,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8422:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8422:120:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3620,
                        "nodeType": "ExpressionStatement",
                        "src": "8422:120:13"
                      },
                      {
                        "assignments": [
                          3622
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3622,
                            "mutability": "mutable",
                            "name": "totalPlatformFee",
                            "nameLocation": "8606:16:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3748,
                            "src": "8598:24:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3621,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8598:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3624,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8625:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8598:28:13"
                      },
                      {
                        "body": {
                          "id": 3715,
                          "nodeType": "Block",
                          "src": "8683:1117:13",
                          "statements": [
                            {
                              "assignments": [
                                3638
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3638,
                                  "mutability": "mutable",
                                  "name": "payment",
                                  "nameLocation": "8717:7:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3715,
                                  "src": "8697:27:13",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                    "typeString": "struct ZaaNetPayment.BatchPayment"
                                  },
                                  "typeName": {
                                    "id": 3637,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3636,
                                      "name": "BatchPayment",
                                      "nameLocations": [
                                        "8697:12:13"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3101,
                                      "src": "8697:12:13"
                                    },
                                    "referencedDeclaration": 3101,
                                    "src": "8697:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BatchPayment_$3101_storage_ptr",
                                      "typeString": "struct ZaaNetPayment.BatchPayment"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3642,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3639,
                                  "name": "payments",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3451,
                                  "src": "8727:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_BatchPayment_$3101_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct ZaaNetPayment.BatchPayment calldata[] calldata"
                                  }
                                },
                                "id": 3641,
                                "indexExpression": {
                                  "id": 3640,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3626,
                                  "src": "8736:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8727:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BatchPayment_$3101_calldata_ptr",
                                  "typeString": "struct ZaaNetPayment.BatchPayment calldata"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8697:41:13"
                            },
                            {
                              "assignments": [
                                3647
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3647,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "8783:7:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3715,
                                  "src": "8753:37:13",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                    "typeString": "struct IZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 3646,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3645,
                                      "name": "IZaaNetStorage.Network",
                                      "nameLocations": [
                                        "8753:14:13",
                                        "8768:7:13"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3021,
                                      "src": "8753:22:13"
                                    },
                                    "referencedDeclaration": 3021,
                                    "src": "8753:22:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$3021_storage_ptr",
                                      "typeString": "struct IZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3653,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3650,
                                      "name": "payment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3638,
                                      "src": "8837:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                        "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                      }
                                    },
                                    "id": 3651,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8845:10:13",
                                    "memberName": "contractId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3096,
                                    "src": "8837:18:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3648,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3091,
                                    "src": "8793:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                                      "typeString": "contract IZaaNetStorage"
                                    }
                                  },
                                  "id": 3649,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8809:10:13",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3029,
                                  "src": "8793:26:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3021_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct IZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 3652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8793:76:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                  "typeString": "struct IZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8753:116:13"
                            },
                            {
                              "assignments": [
                                3655
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3655,
                                  "mutability": "mutable",
                                  "name": "platformFee",
                                  "nameLocation": "8892:11:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3715,
                                  "src": "8884:19:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3654,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8884:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3663,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3656,
                                          "name": "payment",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3638,
                                          "src": "8907:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                            "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                          }
                                        },
                                        "id": 3657,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8915:11:13",
                                        "memberName": "grossAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3098,
                                        "src": "8907:19:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 3658,
                                        "name": "feePercent",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3486,
                                        "src": "8929:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8907:32:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3660,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8906:34:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 3661,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8943:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "8906:40:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8884:62:13"
                            },
                            {
                              "assignments": [
                                3665
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3665,
                                  "mutability": "mutable",
                                  "name": "hostAmount",
                                  "nameLocation": "8968:10:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3715,
                                  "src": "8960:18:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3664,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8960:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3670,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3666,
                                    "name": "payment",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3638,
                                    "src": "8981:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                      "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                    }
                                  },
                                  "id": 3667,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8989:11:13",
                                  "memberName": "grossAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3098,
                                  "src": "8981:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 3668,
                                  "name": "platformFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3655,
                                  "src": "9003:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8981:33:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8960:54:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3674,
                                      "name": "network",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3647,
                                      "src": "9079:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                        "typeString": "struct IZaaNetStorage.Network memory"
                                      }
                                    },
                                    "id": 3675,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9087:11:13",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3010,
                                    "src": "9079:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3676,
                                    "name": "hostAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3665,
                                    "src": "9100:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3671,
                                    "name": "usdt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3086,
                                    "src": "9061:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9066:12:13",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 386,
                                  "src": "9061:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 3677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9061:50:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3678,
                              "nodeType": "ExpressionStatement",
                              "src": "9061:50:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3682,
                                      "name": "network",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3647,
                                      "src": "9211:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                        "typeString": "struct IZaaNetStorage.Network memory"
                                      }
                                    },
                                    "id": 3683,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9219:11:13",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3010,
                                    "src": "9211:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3684,
                                    "name": "hostAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3665,
                                    "src": "9248:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3679,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3091,
                                    "src": "9157:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                                      "typeString": "contract IZaaNetStorage"
                                    }
                                  },
                                  "id": 3681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9173:20:13",
                                  "memberName": "increaseHostEarnings",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3036,
                                  "src": "9157:36:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 3685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9157:115:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3686,
                              "nodeType": "ExpressionStatement",
                              "src": "9157:115:13"
                            },
                            {
                              "expression": {
                                "id": 3689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3687,
                                  "name": "totalPlatformFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3622,
                                  "src": "9287:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 3688,
                                  "name": "platformFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3655,
                                  "src": "9307:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9287:31:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3690,
                              "nodeType": "ExpressionStatement",
                              "src": "9287:31:13"
                            },
                            {
                              "expression": {
                                "id": 3696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3691,
                                    "name": "processedVouchers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3128,
                                    "src": "9396:17:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                      "typeString": "mapping(bytes32 => bool)"
                                    }
                                  },
                                  "id": 3694,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 3692,
                                      "name": "payment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3638,
                                      "src": "9414:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                        "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                      }
                                    },
                                    "id": 3693,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9422:9:13",
                                    "memberName": "voucherId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3100,
                                    "src": "9414:17:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9396:36:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3695,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9435:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "9396:43:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3697,
                              "nodeType": "ExpressionStatement",
                              "src": "9396:43:13"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3699,
                                      "name": "payment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3638,
                                      "src": "9530:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                        "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                      }
                                    },
                                    "id": 3700,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9538:9:13",
                                    "memberName": "voucherId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3100,
                                    "src": "9530:17:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3701,
                                      "name": "payment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3638,
                                      "src": "9565:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                        "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                      }
                                    },
                                    "id": 3702,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9573:10:13",
                                    "memberName": "contractId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3096,
                                    "src": "9565:18:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3703,
                                      "name": "network",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3647,
                                      "src": "9601:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                        "typeString": "struct IZaaNetStorage.Network memory"
                                      }
                                    },
                                    "id": 3704,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9609:11:13",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3010,
                                    "src": "9601:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3705,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9638:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3706,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9642:6:13",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9638:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3707,
                                      "name": "payment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3638,
                                      "src": "9666:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BatchPayment_$3101_memory_ptr",
                                        "typeString": "struct ZaaNetPayment.BatchPayment memory"
                                      }
                                    },
                                    "id": 3708,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9674:11:13",
                                    "memberName": "grossAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3098,
                                    "src": "9666:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3709,
                                    "name": "platformFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3655,
                                    "src": "9703:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3710,
                                    "name": "hostAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3665,
                                    "src": "9732:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3711,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "9760:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 3712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9766:9:13",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "9760:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3698,
                                  "name": "PaymentProcessed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3146,
                                  "src": "9496:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes32,uint256,address,address,uint256,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 3713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9496:293:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3714,
                              "nodeType": "EmitStatement",
                              "src": "9491:298:13"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3629,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3626,
                            "src": "8657:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3630,
                              "name": "payments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3451,
                              "src": "8661:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BatchPayment_$3101_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ZaaNetPayment.BatchPayment calldata[] calldata"
                              }
                            },
                            "id": 3631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8670:6:13",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8661:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8657:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3716,
                        "initializationExpression": {
                          "assignments": [
                            3626
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3626,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8650:1:13",
                              "nodeType": "VariableDeclaration",
                              "scope": 3716,
                              "src": "8642:9:13",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3625,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8642:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3628,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8654:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8642:13:13"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8678:3:13",
                            "subExpression": {
                              "id": 3633,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3626,
                              "src": "8678:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3635,
                          "nodeType": "ExpressionStatement",
                          "src": "8678:3:13"
                        },
                        "nodeType": "ForStatement",
                        "src": "8637:1163:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3717,
                            "name": "totalPlatformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3622,
                            "src": "9854:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9873:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9854:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3734,
                        "nodeType": "IfStatement",
                        "src": "9850:172:13",
                        "trueBody": {
                          "id": 3733,
                          "nodeType": "Block",
                          "src": "9876:146:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3723,
                                    "name": "treasuryWallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3499,
                                    "src": "9908:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3724,
                                    "name": "totalPlatformFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3622,
                                    "src": "9924:16:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3720,
                                    "name": "usdt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3086,
                                    "src": "9890:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9895:12:13",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 386,
                                  "src": "9890:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 3725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9890:51:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3726,
                              "nodeType": "ExpressionStatement",
                              "src": "9890:51:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3730,
                                    "name": "totalPlatformFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3622,
                                    "src": "9994:16:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3727,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3091,
                                    "src": "9955:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                                      "typeString": "contract IZaaNetStorage"
                                    }
                                  },
                                  "id": 3729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9971:22:13",
                                  "memberName": "increaseZaaNetEarnings",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3041,
                                  "src": "9955:38:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 3731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9955:56:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3732,
                              "nodeType": "ExpressionStatement",
                              "src": "9955:56:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3738,
                              "name": "totalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3482,
                              "src": "10125:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3735,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3091,
                              "src": "10083:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                                "typeString": "contract IZaaNetStorage"
                              }
                            },
                            "id": 3737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10099:25:13",
                            "memberName": "updateTotalPaymentsAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3046,
                            "src": "10083:41:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 3739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10083:54:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3740,
                        "nodeType": "ExpressionStatement",
                        "src": "10083:54:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3742,
                                "name": "payments",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3451,
                                "src": "10188:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_BatchPayment_$3101_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct ZaaNetPayment.BatchPayment calldata[] calldata"
                                }
                              },
                              "id": 3743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10197:6:13",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "10188:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3744,
                              "name": "totalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3482,
                              "src": "10217:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3745,
                              "name": "totalPlatformFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3622,
                              "src": "10242:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3741,
                            "name": "BatchPaymentProcessed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3164,
                            "src": "10153:21:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 3746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10153:115:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3747,
                        "nodeType": "EmitStatement",
                        "src": "10148:120:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3447,
                    "nodeType": "StructuredDocumentation",
                    "src": "6223:246:13",
                    "text": " @notice Process a batch of payments for vouchers with enhanced security controls\n @dev Limits: max 50 payments per batch, total batch amount must not exceed daily limit\n @param payments Array of BatchPayment structs"
                  },
                  "functionSelector": "7ddd23e1",
                  "id": 3749,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3454,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3453,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "6561:13:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 868,
                        "src": "6561:13:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6561:13:13"
                    },
                    {
                      "id": 3456,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3455,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "6575:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 976,
                        "src": "6575:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6575:12:13"
                    }
                  ],
                  "name": "processBatchPayments",
                  "nameLocation": "6483:20:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3451,
                        "mutability": "mutable",
                        "name": "payments",
                        "nameLocation": "6537:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3749,
                        "src": "6513:32:13",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BatchPayment_$3101_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ZaaNetPayment.BatchPayment[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3449,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3448,
                              "name": "BatchPayment",
                              "nameLocations": [
                                "6513:12:13"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3101,
                              "src": "6513:12:13"
                            },
                            "referencedDeclaration": 3101,
                            "src": "6513:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchPayment_$3101_storage_ptr",
                              "typeString": "struct ZaaNetPayment.BatchPayment"
                            }
                          },
                          "id": 3450,
                          "nodeType": "ArrayTypeName",
                          "src": "6513:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchPayment_$3101_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetPayment.BatchPayment[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6503:48:13"
                  },
                  "returnParameters": {
                    "id": 3457,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6588:0:13"
                  },
                  "scope": 4060,
                  "src": "6474:3801:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3861,
                    "nodeType": "Block",
                    "src": "11036:1250:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 3770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3766,
                              "name": "processedVouchers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3128,
                              "src": "11083:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 3768,
                            "indexExpression": {
                              "id": 3767,
                              "name": "_voucherId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3756,
                              "src": "11101:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11083:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11115:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "11083:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3771,
                        "nodeType": "ExpressionStatement",
                        "src": "11083:36:13"
                      },
                      {
                        "assignments": [
                          3773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3773,
                            "mutability": "mutable",
                            "name": "platformFee",
                            "nameLocation": "11178:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3861,
                            "src": "11170:19:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3772,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11170:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3780,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3774,
                                  "name": "_grossAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3754,
                                  "src": "11193:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 3775,
                                  "name": "feePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3761,
                                  "src": "11208:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11193:25:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3777,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11192:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 3778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11222:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "11192:33:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11170:55:13"
                      },
                      {
                        "assignments": [
                          3782
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3782,
                            "mutability": "mutable",
                            "name": "hostAmount",
                            "nameLocation": "11243:10:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3861,
                            "src": "11235:18:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3781,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11235:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3786,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3783,
                            "name": "_grossAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3754,
                            "src": "11256:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 3784,
                            "name": "platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3773,
                            "src": "11271:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11256:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11235:47:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3792,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "11368:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZaaNetPayment_$4060",
                                          "typeString": "contract ZaaNetPayment"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZaaNetPayment_$4060",
                                          "typeString": "contract ZaaNetPayment"
                                        }
                                      ],
                                      "id": 3791,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11360:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3790,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11360:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3793,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11360:13:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3788,
                                    "name": "usdt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3086,
                                    "src": "11345:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11350:9:13",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 272,
                                  "src": "11345:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11345:29:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3795,
                                  "name": "hostAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3782,
                                  "src": "11378:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 3796,
                                  "name": "platformFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3773,
                                  "src": "11391:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11378:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11345:57:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e636520666f72207061796d656e74",
                              "id": 3799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11416:43:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8499ac418f68c13db7a6830b467237a442636c33338443c8e3bacc919f6c8668",
                                "typeString": "literal_string \"Insufficient contract balance for payment\""
                              },
                              "value": "Insufficient contract balance for payment"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8499ac418f68c13db7a6830b467237a442636c33338443c8e3bacc919f6c8668",
                                "typeString": "literal_string \"Insufficient contract balance for payment\""
                              }
                            ],
                            "id": 3787,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11324:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11324:145:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3801,
                        "nodeType": "ExpressionStatement",
                        "src": "11324:145:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3805,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3759,
                                "src": "11531:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                  "typeString": "struct IZaaNetStorage.Network memory"
                                }
                              },
                              "id": 3806,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11539:11:13",
                              "memberName": "hostAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3010,
                              "src": "11531:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3807,
                              "name": "hostAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3782,
                              "src": "11552:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3802,
                              "name": "usdt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3086,
                              "src": "11513:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11518:12:13",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 386,
                            "src": "11513:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11513:50:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3809,
                        "nodeType": "ExpressionStatement",
                        "src": "11513:50:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3810,
                            "name": "platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3773,
                            "src": "11611:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11625:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11611:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3821,
                        "nodeType": "IfStatement",
                        "src": "11607:92:13",
                        "trueBody": {
                          "id": 3820,
                          "nodeType": "Block",
                          "src": "11628:71:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3816,
                                    "name": "treasuryWallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3763,
                                    "src": "11660:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3817,
                                    "name": "platformFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3773,
                                    "src": "11676:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3813,
                                    "name": "usdt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3086,
                                    "src": "11642:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11647:12:13",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 386,
                                  "src": "11642:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 3818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11642:46:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3819,
                              "nodeType": "ExpressionStatement",
                              "src": "11642:46:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3825,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3759,
                                "src": "11772:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                  "typeString": "struct IZaaNetStorage.Network memory"
                                }
                              },
                              "id": 3826,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11780:11:13",
                              "memberName": "hostAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3010,
                              "src": "11772:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3827,
                              "name": "hostAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3782,
                              "src": "11793:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3822,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3091,
                              "src": "11735:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                                "typeString": "contract IZaaNetStorage"
                              }
                            },
                            "id": 3824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11751:20:13",
                            "memberName": "increaseHostEarnings",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3036,
                            "src": "11735:36:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 3828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11735:69:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3829,
                        "nodeType": "ExpressionStatement",
                        "src": "11735:69:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3830,
                            "name": "platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3773,
                            "src": "11818:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11832:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11818:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3840,
                        "nodeType": "IfStatement",
                        "src": "11814:97:13",
                        "trueBody": {
                          "id": 3839,
                          "nodeType": "Block",
                          "src": "11835:76:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3836,
                                    "name": "platformFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3773,
                                    "src": "11888:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3833,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3091,
                                    "src": "11849:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                                      "typeString": "contract IZaaNetStorage"
                                    }
                                  },
                                  "id": 3835,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11865:22:13",
                                  "memberName": "increaseZaaNetEarnings",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3041,
                                  "src": "11849:38:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 3837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11849:51:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3838,
                              "nodeType": "ExpressionStatement",
                              "src": "11849:51:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3844,
                              "name": "_grossAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3754,
                              "src": "12014:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3841,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3091,
                              "src": "11972:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZaaNetStorage_$3057",
                                "typeString": "contract IZaaNetStorage"
                              }
                            },
                            "id": 3843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11988:25:13",
                            "memberName": "updateTotalPaymentsAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3046,
                            "src": "11972:41:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 3845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11972:55:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3846,
                        "nodeType": "ExpressionStatement",
                        "src": "11972:55:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3848,
                              "name": "_voucherId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3756,
                              "src": "12073:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 3849,
                              "name": "_contractId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3752,
                              "src": "12097:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3850,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3759,
                                "src": "12122:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                                  "typeString": "struct IZaaNetStorage.Network memory"
                                }
                              },
                              "id": 3851,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12130:11:13",
                              "memberName": "hostAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3010,
                              "src": "12122:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3852,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12155:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12159:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12155:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3854,
                              "name": "_grossAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3754,
                              "src": "12179:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3855,
                              "name": "platformFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3773,
                              "src": "12205:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3856,
                              "name": "hostAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3782,
                              "src": "12230:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3857,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12254:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12260:9:13",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12254:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3847,
                            "name": "PaymentProcessed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3146,
                            "src": "12043:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256,address,address,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 3859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12043:236:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3860,
                        "nodeType": "EmitStatement",
                        "src": "12038:241:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3750,
                    "nodeType": "StructuredDocumentation",
                    "src": "10281:516:13",
                    "text": " @notice Internal function to execute payment\n @param _contractId The ID of the network contract\n @param _grossAmount The total amount paid by the user (in USDT, 6 decimals)\n @param _voucherId Unique voucher ID to prevent double processing\n @param network The network details from storage\n @param feePercent The platform fee percentage\n @param treasuryWallet The treasury wallet address\n @dev Assumes all validations are done prior to calling this function"
                  },
                  "id": 3862,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_executePayment",
                  "nameLocation": "10811:15:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3764,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3752,
                        "mutability": "mutable",
                        "name": "_contractId",
                        "nameLocation": "10844:11:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3862,
                        "src": "10836:19:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3751,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10836:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3754,
                        "mutability": "mutable",
                        "name": "_grossAmount",
                        "nameLocation": "10873:12:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3862,
                        "src": "10865:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3753,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10865:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3756,
                        "mutability": "mutable",
                        "name": "_voucherId",
                        "nameLocation": "10903:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3862,
                        "src": "10895:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3755,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10895:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3759,
                        "mutability": "mutable",
                        "name": "network",
                        "nameLocation": "10953:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3862,
                        "src": "10923:37:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$3021_memory_ptr",
                          "typeString": "struct IZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 3758,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3757,
                            "name": "IZaaNetStorage.Network",
                            "nameLocations": [
                              "10923:14:13",
                              "10938:7:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3021,
                            "src": "10923:22:13"
                          },
                          "referencedDeclaration": 3021,
                          "src": "10923:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3021_storage_ptr",
                            "typeString": "struct IZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3761,
                        "mutability": "mutable",
                        "name": "feePercent",
                        "nameLocation": "10978:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3862,
                        "src": "10970:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3760,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10970:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3763,
                        "mutability": "mutable",
                        "name": "treasuryWallet",
                        "nameLocation": "11006:14:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3862,
                        "src": "10998:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10998:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10826:200:13"
                  },
                  "returnParameters": {
                    "id": 3765,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11036:0:13"
                  },
                  "scope": 4060,
                  "src": "10802:1484:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3881,
                    "nodeType": "Block",
                    "src": "12434:98:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3871,
                                "name": "_newLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3865,
                                "src": "12452:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12464:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12452:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206c696d6974",
                              "id": 3874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12467:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6044de2950ce6ad2459094142dd41555f45de09d475ae362b11eb41664805d2b",
                                "typeString": "literal_string \"Invalid limit\""
                              },
                              "value": "Invalid limit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6044de2950ce6ad2459094142dd41555f45de09d475ae362b11eb41664805d2b",
                                "typeString": "literal_string \"Invalid limit\""
                              }
                            ],
                            "id": 3870,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12444:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12444:39:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3876,
                        "nodeType": "ExpressionStatement",
                        "src": "12444:39:13"
                      },
                      {
                        "expression": {
                          "id": 3879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3877,
                            "name": "dailyWithdrawalLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3120,
                            "src": "12493:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3878,
                            "name": "_newLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3865,
                            "src": "12516:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12493:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3880,
                        "nodeType": "ExpressionStatement",
                        "src": "12493:32:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3863,
                    "nodeType": "StructuredDocumentation",
                    "src": "12292:66:13",
                    "text": " @notice Set daily withdrawal limit (owner only)"
                  },
                  "functionSelector": "05483a15",
                  "id": 3882,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3868,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3867,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "12424:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "12424:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12424:9:13"
                    }
                  ],
                  "name": "setDailyWithdrawalLimit",
                  "nameLocation": "12372:23:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3866,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3865,
                        "mutability": "mutable",
                        "name": "_newLimit",
                        "nameLocation": "12404:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3882,
                        "src": "12396:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3864,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12396:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12395:19:13"
                  },
                  "returnParameters": {
                    "id": 3869,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12434:0:13"
                  },
                  "scope": 4060,
                  "src": "12363:169:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3899,
                    "nodeType": "Block",
                    "src": "12662:97:13",
                    "statements": [
                      {
                        "assignments": [
                          3889
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3889,
                            "mutability": "mutable",
                            "name": "today",
                            "nameLocation": "12680:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3899,
                            "src": "12672:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3888,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12672:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3894,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3890,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12688:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12694:9:13",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12688:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 3892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12706:6:13",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "12688:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12672:40:13"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 3895,
                            "name": "dailyWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3124,
                            "src": "12729:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 3897,
                          "indexExpression": {
                            "id": 3896,
                            "name": "today",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3889,
                            "src": "12746:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12729:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3887,
                        "id": 3898,
                        "nodeType": "Return",
                        "src": "12722:30:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3883,
                    "nodeType": "StructuredDocumentation",
                    "src": "12538:56:13",
                    "text": " @notice Get today's withdrawal amount"
                  },
                  "functionSelector": "c4d276bc",
                  "id": 3900,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTodayWithdrawals",
                  "nameLocation": "12608:19:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3884,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12627:2:13"
                  },
                  "returnParameters": {
                    "id": 3887,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3886,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3900,
                        "src": "12653:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12653:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12652:9:13"
                  },
                  "scope": 4060,
                  "src": "12599:160:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3912,
                    "nodeType": "Block",
                    "src": "12923:53:13",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 3908,
                            "name": "processedVouchers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3128,
                            "src": "12940:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 3910,
                          "indexExpression": {
                            "id": 3909,
                            "name": "_voucherId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3903,
                            "src": "12958:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12940:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3907,
                        "id": 3911,
                        "nodeType": "Return",
                        "src": "12933:36:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3901,
                    "nodeType": "StructuredDocumentation",
                    "src": "12765:62:13",
                    "text": " @notice Check if voucher has been processed"
                  },
                  "functionSelector": "0604bfa4",
                  "id": 3913,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isVoucherProcessed",
                  "nameLocation": "12841:18:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3903,
                        "mutability": "mutable",
                        "name": "_voucherId",
                        "nameLocation": "12877:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3913,
                        "src": "12869:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3902,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12869:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12859:34:13"
                  },
                  "returnParameters": {
                    "id": 3907,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3906,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3913,
                        "src": "12917:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3905,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12917:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12916:6:13"
                  },
                  "scope": 4060,
                  "src": "12832:144:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3941,
                    "nodeType": "Block",
                    "src": "13103:184:13",
                    "statements": [
                      {
                        "assignments": [
                          3920
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3920,
                            "mutability": "mutable",
                            "name": "today",
                            "nameLocation": "13121:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3941,
                            "src": "13113:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3919,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13113:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3925,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3921,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "13129:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13135:9:13",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "13129:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 3923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13147:6:13",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "13129:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13113:40:13"
                      },
                      {
                        "assignments": [
                          3927
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3927,
                            "mutability": "mutable",
                            "name": "used",
                            "nameLocation": "13171:4:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3941,
                            "src": "13163:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3926,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13163:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3931,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3928,
                            "name": "dailyWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3124,
                            "src": "13178:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 3930,
                          "indexExpression": {
                            "id": 3929,
                            "name": "today",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3920,
                            "src": "13195:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13178:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13163:38:13"
                      },
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3932,
                              "name": "used",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3927,
                              "src": "13218:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 3933,
                              "name": "dailyWithdrawalLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3120,
                              "src": "13226:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13218:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3936,
                              "name": "dailyWithdrawalLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3120,
                              "src": "13253:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 3937,
                              "name": "used",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3927,
                              "src": "13276:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13253:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "13218:62:13",
                          "trueExpression": {
                            "hexValue": "30",
                            "id": 3935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13249:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3918,
                        "id": 3940,
                        "nodeType": "Return",
                        "src": "13211:69:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3914,
                    "nodeType": "StructuredDocumentation",
                    "src": "12982:52:13",
                    "text": " @notice Get remaining daily limit"
                  },
                  "functionSelector": "a15f39e8",
                  "id": 3942,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRemainingDailyLimit",
                  "nameLocation": "13048:22:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3915,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13070:2:13"
                  },
                  "returnParameters": {
                    "id": 3918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3917,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3942,
                        "src": "13094:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3916,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13094:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13093:9:13"
                  },
                  "scope": 4060,
                  "src": "13039:248:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3996,
                    "nodeType": "Block",
                    "src": "13410:359:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3952,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3944,
                                "src": "13428:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3955,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13443:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3954,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13435:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3953,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13435:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13435:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "13428:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420726563697069656e742061646472657373",
                              "id": 3958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13447:27:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
                                "typeString": "literal_string \"Invalid recipient address\""
                              },
                              "value": "Invalid recipient address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
                                "typeString": "literal_string \"Invalid recipient address\""
                              }
                            ],
                            "id": 3951,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13420:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13420:55:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3960,
                        "nodeType": "ExpressionStatement",
                        "src": "13420:55:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3962,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3946,
                                "src": "13493:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13503:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "13493:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 3965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13506:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 3961,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13485:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13485:56:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3967,
                        "nodeType": "ExpressionStatement",
                        "src": "13485:56:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3973,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "13582:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZaaNetPayment_$4060",
                                          "typeString": "contract ZaaNetPayment"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZaaNetPayment_$4060",
                                          "typeString": "contract ZaaNetPayment"
                                        }
                                      ],
                                      "id": 3972,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "13574:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3971,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "13574:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3974,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13574:13:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3969,
                                    "name": "usdt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3086,
                                    "src": "13559:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$315",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3970,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13564:9:13",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 272,
                                  "src": "13559:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13559:29:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3976,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3946,
                                "src": "13592:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13559:40:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
                              "id": 3978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13601:31:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                                "typeString": "literal_string \"Insufficient contract balance\""
                              },
                              "value": "Insufficient contract balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                                "typeString": "literal_string \"Insufficient contract balance\""
                              }
                            ],
                            "id": 3968,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13551:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13551:82:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3980,
                        "nodeType": "ExpressionStatement",
                        "src": "13551:82:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3982,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3946,
                                "src": "13651:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3983,
                                  "name": "getRemainingDailyLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3942,
                                  "src": "13662:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 3984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13662:24:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13651:35:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45786365656473206461696c79207769746864726177616c206c696d6974",
                              "id": 3986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13688:32:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6b0e2023d4c1fb29f451c65754d18d67aad169c2359a2a0eb77157e5dc21422e",
                                "typeString": "literal_string \"Exceeds daily withdrawal limit\""
                              },
                              "value": "Exceeds daily withdrawal limit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6b0e2023d4c1fb29f451c65754d18d67aad169c2359a2a0eb77157e5dc21422e",
                                "typeString": "literal_string \"Exceeds daily withdrawal limit\""
                              }
                            ],
                            "id": 3981,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13643:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13643:78:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3988,
                        "nodeType": "ExpressionStatement",
                        "src": "13643:78:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3992,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3944,
                              "src": "13749:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3993,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3946,
                              "src": "13754:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3989,
                              "name": "usdt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3086,
                              "src": "13731:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13736:12:13",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 386,
                            "src": "13731:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13731:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3995,
                        "nodeType": "ExpressionStatement",
                        "src": "13731:31:13"
                      }
                    ]
                  },
                  "functionSelector": "9e281a98",
                  "id": 3997,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3949,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3948,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13400:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13400:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13400:9:13"
                    }
                  ],
                  "name": "withdrawToken",
                  "nameLocation": "13347:13:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3944,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "13369:3:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3997,
                        "src": "13361:11:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3943,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13361:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3946,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "13382:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3997,
                        "src": "13374:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3945,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13374:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13360:30:13"
                  },
                  "returnParameters": {
                    "id": 3950,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13410:0:13"
                  },
                  "scope": 4060,
                  "src": "13338:431:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4005,
                    "nodeType": "Block",
                    "src": "13811:25:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4002,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "13821:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13821:8:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4004,
                        "nodeType": "ExpressionStatement",
                        "src": "13821:8:13"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 4006,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4000,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3999,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13801:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13801:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13801:9:13"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "13784:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3998,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13789:2:13"
                  },
                  "returnParameters": {
                    "id": 4001,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13811:0:13"
                  },
                  "scope": 4060,
                  "src": "13775:61:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4014,
                    "nodeType": "Block",
                    "src": "13880:27:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4011,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "13890:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13890:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4013,
                        "nodeType": "ExpressionStatement",
                        "src": "13890:10:13"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 4015,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4009,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4008,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13870:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13870:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13870:9:13"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "13851:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4007,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13858:2:13"
                  },
                  "returnParameters": {
                    "id": 4010,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13880:0:13"
                  },
                  "scope": 4060,
                  "src": "13842:65:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4044,
                    "nodeType": "Block",
                    "src": "14029:105:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4027,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4019,
                                "src": "14047:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 4030,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14062:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 4029,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14054:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4028,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14054:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14054:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14047:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7a65726f20746f",
                              "id": 4033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14066:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_65b9e6717f546f9752556c92a806ef59362c90b7cd67e411df4b477a3ae693c1",
                                "typeString": "literal_string \"zero to\""
                              },
                              "value": "zero to"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_65b9e6717f546f9752556c92a806ef59362c90b7cd67e411df4b477a3ae693c1",
                                "typeString": "literal_string \"zero to\""
                              }
                            ],
                            "id": 4026,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14039:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14039:37:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4035,
                        "nodeType": "ExpressionStatement",
                        "src": "14039:37:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4040,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4019,
                              "src": "14114:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4041,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4021,
                              "src": "14119:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4037,
                                  "name": "_erc20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4017,
                                  "src": "14093:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4036,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 315,
                                "src": "14086:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14086:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14101:12:13",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 386,
                            "src": "14086:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14086:41:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4043,
                        "nodeType": "ExpressionStatement",
                        "src": "14086:41:13"
                      }
                    ]
                  },
                  "functionSelector": "b2118a8d",
                  "id": 4045,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4024,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4023,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "14019:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "14019:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14019:9:13"
                    }
                  ],
                  "name": "rescueERC20",
                  "nameLocation": "13922:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4022,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4017,
                        "mutability": "mutable",
                        "name": "_erc20",
                        "nameLocation": "13951:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 4045,
                        "src": "13943:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4016,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13943:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4019,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "13975:3:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 4045,
                        "src": "13967:11:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4018,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13967:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4021,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "13996:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 4045,
                        "src": "13988:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4020,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13988:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13933:76:13"
                  },
                  "returnParameters": {
                    "id": 4025,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14029:0:13"
                  },
                  "scope": 4060,
                  "src": "13913:221:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4058,
                    "nodeType": "Block",
                    "src": "14204:53:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4054,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14244:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ZaaNetPayment_$4060",
                                    "typeString": "contract ZaaNetPayment"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ZaaNetPayment_$4060",
                                    "typeString": "contract ZaaNetPayment"
                                  }
                                ],
                                "id": 4053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14236:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4052,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14236:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14236:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4050,
                              "name": "usdt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3086,
                              "src": "14221:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$315",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14226:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 272,
                            "src": "14221:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14221:29:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4049,
                        "id": 4057,
                        "nodeType": "Return",
                        "src": "14214:36:13"
                      }
                    ]
                  },
                  "functionSelector": "9e9aed62",
                  "id": 4059,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "contractTokenBalance",
                  "nameLocation": "14149:20:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4046,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14169:2:13"
                  },
                  "returnParameters": {
                    "id": 4049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4048,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4059,
                        "src": "14195:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4047,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14195:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14194:9:13"
                  },
                  "scope": 4060,
                  "src": "14140:117:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4061,
              "src": "1327:12932:13",
              "usedErrors": [
                13,
                18,
                353,
                857,
                860,
                957
              ],
              "usedEvents": [
                24,
                849,
                854,
                3146,
                3156,
                3164
              ]
            }
          ],
          "src": "32:14228:13"
        },
        "id": 13
      },
      "contracts/ZaaNetStorage.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetStorage.sol",
          "exportedSymbols": {
            "Context": [
              835
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              1012
            ],
            "ZaaNetStorage": [
              4702
            ]
          },
          "id": 4703,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4062,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:14"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 4063,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4703,
              "sourceUnit": 148,
              "src": "58:52:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 4064,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4703,
              "sourceUnit": 1013,
              "src": "111:59:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4065,
                    "name": "Ownable",
                    "nameLocations": [
                      "198:7:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "198:7:14"
                  },
                  "id": 4066,
                  "nodeType": "InheritanceSpecifier",
                  "src": "198:7:14"
                },
                {
                  "baseName": {
                    "id": 4067,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "207:15:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1012,
                    "src": "207:15:14"
                  },
                  "id": 4068,
                  "nodeType": "InheritanceSpecifier",
                  "src": "207:15:14"
                }
              ],
              "canonicalName": "ZaaNetStorage",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 4702,
              "linearizedBaseContracts": [
                4702,
                1012,
                147,
                835
              ],
              "name": "ZaaNetStorage",
              "nameLocation": "181:13:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ZaaNetStorage.Network",
                  "id": 4083,
                  "members": [
                    {
                      "constant": false,
                      "id": 4070,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "262:2:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4083,
                      "src": "254:10:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4069,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "254:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4072,
                      "mutability": "mutable",
                      "name": "hostAddress",
                      "nameLocation": "282:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4083,
                      "src": "274:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4071,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "274:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4074,
                      "mutability": "mutable",
                      "name": "pricePerSession",
                      "nameLocation": "311:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4083,
                      "src": "303:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4073,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "303:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4076,
                      "mutability": "mutable",
                      "name": "mongoDataId",
                      "nameLocation": "343:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4083,
                      "src": "336:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 4075,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "336:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4078,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "369:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4083,
                      "src": "364:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4077,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "364:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4080,
                      "mutability": "mutable",
                      "name": "createdAt",
                      "nameLocation": "395:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4083,
                      "src": "387:17:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4079,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "387:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4082,
                      "mutability": "mutable",
                      "name": "updatedAt",
                      "nameLocation": "422:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4083,
                      "src": "414:17:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4081,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "414:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Network",
                  "nameLocation": "236:7:14",
                  "nodeType": "StructDefinition",
                  "scope": 4702,
                  "src": "229:209:14",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7b334154",
                  "id": 4087,
                  "mutability": "mutable",
                  "name": "allowedCallers",
                  "nameLocation": "476:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "444:46:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 4086,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 4084,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "452:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "444:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 4085,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "463:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "217c682d",
                  "id": 4089,
                  "mutability": "mutable",
                  "name": "networkIdCounter",
                  "nameLocation": "558:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "543:31:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7ee3b6fc",
                  "id": 4092,
                  "mutability": "mutable",
                  "name": "totalPaymentsAmount",
                  "nameLocation": "622:19:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "607:38:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 4091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "644:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ad2c30b1",
                  "id": 4095,
                  "mutability": "mutable",
                  "name": "totalWithdrawalsAmount",
                  "nameLocation": "709:22:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "694:41:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 4094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "734:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "242d30bc",
                  "id": 4098,
                  "mutability": "mutable",
                  "name": "totalHostingAmount",
                  "nameLocation": "802:18:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "787:37:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 4097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "823:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4ce083be",
                  "id": 4101,
                  "mutability": "mutable",
                  "name": "zaanetEarnings",
                  "nameLocation": "887:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "872:33:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 4100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "904:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8bb0a17c",
                  "id": 4106,
                  "mutability": "mutable",
                  "name": "networks",
                  "nameLocation": "984:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "949:43:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$4083_storage_$",
                    "typeString": "mapping(uint256 => struct ZaaNetStorage.Network)"
                  },
                  "typeName": {
                    "id": 4105,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 4102,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "957:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "949:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$4083_storage_$",
                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Network)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 4104,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4103,
                        "name": "Network",
                        "nameLocations": [
                          "968:7:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4083,
                        "src": "968:7:14"
                      },
                      "referencedDeclaration": 4083,
                      "src": "968:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                        "typeString": "struct ZaaNetStorage.Network"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "29c718b5",
                  "id": 4110,
                  "mutability": "mutable",
                  "name": "hostEarnings",
                  "nameLocation": "1033:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "998:47:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 4109,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 4107,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1006:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "998:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 4108,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1017:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7bae8f5e",
                  "id": 4115,
                  "mutability": "mutable",
                  "name": "hostNetworkIds",
                  "nameLocation": "1141:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "1104:51:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 4114,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 4111,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1112:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1104:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 4112,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1123:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4113,
                      "nodeType": "ArrayTypeName",
                      "src": "1123:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ec13f2a1",
                  "id": 4119,
                  "mutability": "mutable",
                  "name": "networkExists",
                  "nameLocation": "1193:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "1161:45:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 4118,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 4116,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1169:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1161:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 4117,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1180:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "879ecf10",
                  "id": 4123,
                  "mutability": "mutable",
                  "name": "sessionExists",
                  "nameLocation": "1244:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4702,
                  "src": "1212:45:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 4122,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 4120,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1220:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1212:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 4121,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1231:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 4140,
                    "nodeType": "Block",
                    "src": "1287:140:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 4135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 4126,
                                  "name": "allowedCallers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4087,
                                  "src": "1318:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 4129,
                                "indexExpression": {
                                  "expression": {
                                    "id": 4127,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1333:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 4128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1337:6:14",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1333:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1318:26:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4130,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1348:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 4131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1352:6:14",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1348:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 4132,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "1362:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 4133,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1362:7:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1348:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1318:51:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a6564",
                              "id": 4136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1383:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              },
                              "value": "Not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              }
                            ],
                            "id": 4125,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1297:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1297:112:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4138,
                        "nodeType": "ExpressionStatement",
                        "src": "1297:112:14"
                      },
                      {
                        "id": 4139,
                        "nodeType": "PlaceholderStatement",
                        "src": "1419:1:14"
                      }
                    ]
                  },
                  "id": 4141,
                  "name": "onlyAllowed",
                  "nameLocation": "1273:11:14",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 4124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1284:2:14"
                  },
                  "src": "1264:163:14",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f",
                  "id": 4147,
                  "name": "AllowedCallerUpdated",
                  "nameLocation": "1439:20:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4146,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4143,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "1476:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4147,
                        "src": "1460:22:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4142,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1460:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4145,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "1489:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4147,
                        "src": "1484:11:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4144,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1484:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1459:37:14"
                  },
                  "src": "1433:64:14"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e",
                  "id": 4155,
                  "name": "NetworkStored",
                  "nameLocation": "1508:13:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4149,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1547:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4155,
                        "src": "1531:18:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1531:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4151,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1575:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4155,
                        "src": "1559:27:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4150,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1559:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4153,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pricePerSession",
                        "nameLocation": "1604:15:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4155,
                        "src": "1596:23:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4152,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1596:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1521:104:14"
                  },
                  "src": "1502:124:14"
                },
                {
                  "anonymous": false,
                  "eventSelector": "14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c",
                  "id": 4161,
                  "name": "NetworkUpdated",
                  "nameLocation": "1637:14:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4157,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1668:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4161,
                        "src": "1652:18:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1652:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4159,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1688:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4161,
                        "src": "1672:27:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1672:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1651:49:14"
                  },
                  "src": "1631:70:14"
                },
                {
                  "anonymous": false,
                  "eventSelector": "6d8d8fde140edbf6c26881f091850cb55bae733f801e9e4f9b7d123b88b620c8",
                  "id": 4169,
                  "name": "SessionStored",
                  "nameLocation": "1712:13:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4163,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "1751:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4169,
                        "src": "1735:25:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1735:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4165,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "paymentAddress",
                        "nameLocation": "1786:14:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4169,
                        "src": "1770:30:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1770:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4167,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1818:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4169,
                        "src": "1810:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1810:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1725:105:14"
                  },
                  "src": "1706:125:14"
                },
                {
                  "anonymous": false,
                  "eventSelector": "61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be0",
                  "id": 4175,
                  "name": "HostEarningsUpdated",
                  "nameLocation": "1842:19:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4171,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1878:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4175,
                        "src": "1862:27:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1862:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4173,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalEarned",
                        "nameLocation": "1899:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4175,
                        "src": "1891:19:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1891:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1861:50:14"
                  },
                  "src": "1836:76:14"
                },
                {
                  "anonymous": false,
                  "eventSelector": "fd8145cfa93546227f9e46c710867061751c942a1b2c1aca58c7cdcea165f847",
                  "id": 4179,
                  "name": "ZaaNetEarningsUpdated",
                  "nameLocation": "1923:21:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4177,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalEarned",
                        "nameLocation": "1953:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4179,
                        "src": "1945:19:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4176,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1945:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1944:21:14"
                  },
                  "src": "1917:49:14"
                },
                {
                  "body": {
                    "id": 4186,
                    "nodeType": "Block",
                    "src": "2033:2:14",
                    "statements": []
                  },
                  "id": 4187,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 4182,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2021:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2025:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2021:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 4184,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 4181,
                        "name": "Ownable",
                        "nameLocations": [
                          "2013:7:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2013:7:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2013:19:14"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2010:2:14"
                  },
                  "returnParameters": {
                    "id": 4185,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2033:0:14"
                  },
                  "scope": 4702,
                  "src": "1999:36:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 4217,
                    "nodeType": "Block",
                    "src": "2149:167:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4197,
                                "name": "_caller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4189,
                                "src": "2167:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 4200,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2186:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 4199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2178:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4198,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2178:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2178:10:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2167:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642063616c6c65722061646472657373",
                              "id": 4203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2190:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                "typeString": "literal_string \"Invalid caller address\""
                              },
                              "value": "Invalid caller address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                "typeString": "literal_string \"Invalid caller address\""
                              }
                            ],
                            "id": 4196,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2159:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2159:56:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4205,
                        "nodeType": "ExpressionStatement",
                        "src": "2159:56:14"
                      },
                      {
                        "expression": {
                          "id": 4210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4206,
                              "name": "allowedCallers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4087,
                              "src": "2225:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 4208,
                            "indexExpression": {
                              "id": 4207,
                              "name": "_caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4189,
                              "src": "2240:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2225:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4209,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4191,
                            "src": "2251:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2225:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4211,
                        "nodeType": "ExpressionStatement",
                        "src": "2225:32:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 4213,
                              "name": "_caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4189,
                              "src": "2293:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4214,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4191,
                              "src": "2302:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 4212,
                            "name": "AllowedCallerUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4147,
                            "src": "2272:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 4215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2272:37:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4216,
                        "nodeType": "EmitStatement",
                        "src": "2267:42:14"
                      }
                    ]
                  },
                  "functionSelector": "d8b0e716",
                  "id": 4218,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4194,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4193,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2139:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2139:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2139:9:14"
                    }
                  ],
                  "name": "setAllowedCaller",
                  "nameLocation": "2083:16:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4192,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4189,
                        "mutability": "mutable",
                        "name": "_caller",
                        "nameLocation": "2108:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4218,
                        "src": "2100:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4191,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "2122:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4218,
                        "src": "2117:11:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4190,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2117:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2099:30:14"
                  },
                  "returnParameters": {
                    "id": 4195,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2149:0:14"
                  },
                  "scope": 4702,
                  "src": "2074:242:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4268,
                    "nodeType": "Block",
                    "src": "2483:257:14",
                    "statements": [
                      {
                        "body": {
                          "id": 4266,
                          "nodeType": "Block",
                          "src": "2539:195:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 4247,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 4240,
                                        "name": "_callers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4221,
                                        "src": "2561:8:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 4242,
                                      "indexExpression": {
                                        "id": 4241,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4229,
                                        "src": "2570:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2561:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 4245,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2584:1:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 4244,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2576:7:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 4243,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2576:7:14",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 4246,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2576:10:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "2561:25:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e76616c69642063616c6c65722061646472657373",
                                    "id": 4248,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2588:24:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                      "typeString": "literal_string \"Invalid caller address\""
                                    },
                                    "value": "Invalid caller address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                      "typeString": "literal_string \"Invalid caller address\""
                                    }
                                  ],
                                  "id": 4239,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2553:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 4249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2553:60:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4250,
                              "nodeType": "ExpressionStatement",
                              "src": "2553:60:14"
                            },
                            {
                              "expression": {
                                "id": 4257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 4251,
                                    "name": "allowedCallers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4087,
                                    "src": "2627:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 4255,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 4252,
                                      "name": "_callers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4221,
                                      "src": "2642:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 4254,
                                    "indexExpression": {
                                      "id": 4253,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4229,
                                      "src": "2651:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2642:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2627:27:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 4256,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4223,
                                  "src": "2657:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2627:36:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4258,
                              "nodeType": "ExpressionStatement",
                              "src": "2627:36:14"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 4260,
                                      "name": "_callers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4221,
                                      "src": "2703:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 4262,
                                    "indexExpression": {
                                      "id": 4261,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4229,
                                      "src": "2712:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2703:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4263,
                                    "name": "status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4223,
                                    "src": "2716:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 4259,
                                  "name": "AllowedCallerUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4147,
                                  "src": "2682:20:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 4264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2682:41:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4265,
                              "nodeType": "EmitStatement",
                              "src": "2677:46:14"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4232,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4229,
                            "src": "2513:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 4233,
                              "name": "_callers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4221,
                              "src": "2517:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 4234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2526:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2517:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2513:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4267,
                        "initializationExpression": {
                          "assignments": [
                            4229
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4229,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2506:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 4267,
                              "src": "2498:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4228,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2498:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4231,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 4230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2510:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2498:13:14"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 4237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2534:3:14",
                            "subExpression": {
                              "id": 4236,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4229,
                              "src": "2534:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4238,
                          "nodeType": "ExpressionStatement",
                          "src": "2534:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "2493:241:14"
                      }
                    ]
                  },
                  "functionSelector": "73f9a5d7",
                  "id": 4269,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4226,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4225,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2473:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2473:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2473:9:14"
                    }
                  ],
                  "name": "setAllowedCallers",
                  "nameLocation": "2382:17:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4221,
                        "mutability": "mutable",
                        "name": "_callers",
                        "nameLocation": "2428:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4269,
                        "src": "2409:27:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2409:7:14",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4220,
                          "nodeType": "ArrayTypeName",
                          "src": "2409:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4223,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "2451:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4269,
                        "src": "2446:11:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4222,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2446:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2399:64:14"
                  },
                  "returnParameters": {
                    "id": 4227,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2483:0:14"
                  },
                  "scope": 4702,
                  "src": "2373:367:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4279,
                    "nodeType": "Block",
                    "src": "2848:42:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 4277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "2865:18:14",
                          "subExpression": {
                            "id": 4276,
                            "name": "networkIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4089,
                            "src": "2867:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4275,
                        "id": 4278,
                        "nodeType": "Return",
                        "src": "2858:25:14"
                      }
                    ]
                  },
                  "functionSelector": "5290ffc6",
                  "id": 4280,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4272,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4271,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "2818:11:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4141,
                        "src": "2818:11:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2818:11:14"
                    }
                  ],
                  "name": "incrementNetworkId",
                  "nameLocation": "2788:18:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2806:2:14"
                  },
                  "returnParameters": {
                    "id": 4275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4274,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4280,
                        "src": "2839:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4273,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2839:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2838:9:14"
                  },
                  "scope": 4702,
                  "src": "2779:111:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4394,
                    "nodeType": "Block",
                    "src": "2971:960:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4291,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4282,
                                "src": "2989:2:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 4292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2994:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2989:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206e6574776f726b204944",
                              "id": 4294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2997:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1e0378fd91276cf2d1eb2c93fd43f1222cc240c032c3dc15352aeace0c1cd550",
                                "typeString": "literal_string \"Invalid network ID\""
                              },
                              "value": "Invalid network ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1e0378fd91276cf2d1eb2c93fd43f1222cc240c032c3dc15352aeace0c1cd550",
                                "typeString": "literal_string \"Invalid network ID\""
                              }
                            ],
                            "id": 4290,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2981:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2981:37:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4296,
                        "nodeType": "ExpressionStatement",
                        "src": "2981:37:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4298,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4285,
                                  "src": "3036:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 4299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3040:11:14",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4072,
                                "src": "3036:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 4302,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3063:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 4301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3055:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4300,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3055:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3055:10:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3036:29:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420686f73742061646472657373",
                              "id": 4305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3067:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              },
                              "value": "Invalid host address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              }
                            ],
                            "id": 4297,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3028:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3028:62:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4307,
                        "nodeType": "ExpressionStatement",
                        "src": "3028:62:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4309,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4285,
                                  "src": "3108:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 4310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3112:15:14",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4074,
                                "src": "3108:19:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 4311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3130:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3108:23:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
                              "id": 4313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3133:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              },
                              "value": "Price must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              }
                            ],
                            "id": 4308,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3100:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3100:64:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4315,
                        "nodeType": "ExpressionStatement",
                        "src": "3100:64:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 4319,
                                        "name": "net",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4285,
                                        "src": "3188:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                          "typeString": "struct ZaaNetStorage.Network calldata"
                                        }
                                      },
                                      "id": 4320,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3192:11:14",
                                      "memberName": "mongoDataId",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4076,
                                      "src": "3188:15:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 4318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3182:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 4317,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3182:5:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 4321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3182:22:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 4322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3205:6:14",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3182:29:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 4323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3214:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3182:33:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d6f6e676f446174614944207265717569726564",
                              "id": 4325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3217:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_63e0a91235b82882ae36fd20b4e9aa5277bcaaee4744335f869888bfb6cf38a6",
                                "typeString": "literal_string \"MongoDataID required\""
                              },
                              "value": "MongoDataID required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_63e0a91235b82882ae36fd20b4e9aa5277bcaaee4744335f869888bfb6cf38a6",
                                "typeString": "literal_string \"MongoDataID required\""
                              }
                            ],
                            "id": 4316,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3174:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3174:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4327,
                        "nodeType": "ExpressionStatement",
                        "src": "3174:66:14"
                      },
                      {
                        "assignments": [
                          4329
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4329,
                            "mutability": "mutable",
                            "name": "isNewNetwork",
                            "nameLocation": "3256:12:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 4394,
                            "src": "3251:17:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 4328,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3251:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4334,
                        "initialValue": {
                          "id": 4333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3271:18:14",
                          "subExpression": {
                            "baseExpression": {
                              "id": 4330,
                              "name": "networkExists",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4119,
                              "src": "3272:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 4332,
                            "indexExpression": {
                              "id": 4331,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4282,
                              "src": "3286:2:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3272:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3251:38:14"
                      },
                      {
                        "expression": {
                          "id": 4360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4335,
                              "name": "networks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4106,
                              "src": "3300:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$4083_storage_$",
                                "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                              }
                            },
                            "id": 4337,
                            "indexExpression": {
                              "id": 4336,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4282,
                              "src": "3309:2:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3300:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$4083_storage",
                              "typeString": "struct ZaaNetStorage.Network storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4339,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4285,
                                  "src": "3341:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 4340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3345:2:14",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4070,
                                "src": "3341:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4341,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4285,
                                  "src": "3374:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 4342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3378:11:14",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4072,
                                "src": "3374:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4343,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4285,
                                  "src": "3420:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 4344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3424:15:14",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4074,
                                "src": "3420:19:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4345,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4285,
                                  "src": "3466:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 4346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3470:11:14",
                                "memberName": "mongoDataId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4076,
                                "src": "3466:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4347,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4285,
                                  "src": "3505:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 4348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3509:8:14",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4078,
                                "src": "3505:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "condition": {
                                  "id": 4349,
                                  "name": "isNewNetwork",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4329,
                                  "src": "3542:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 4352,
                                      "name": "networks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4106,
                                      "src": "3575:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$4083_storage_$",
                                        "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                      }
                                    },
                                    "id": 4354,
                                    "indexExpression": {
                                      "id": 4353,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4282,
                                      "src": "3584:2:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3575:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$4083_storage",
                                      "typeString": "struct ZaaNetStorage.Network storage ref"
                                    }
                                  },
                                  "id": 4355,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3588:9:14",
                                  "memberName": "createdAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4080,
                                  "src": "3575:22:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "3542:55:14",
                                "trueExpression": {
                                  "expression": {
                                    "id": 4350,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3557:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 4351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3563:9:14",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3557:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4357,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3622:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 4358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3628:9:14",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3622:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4338,
                              "name": "Network",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4083,
                              "src": "3315:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Network_$4083_storage_ptr_$",
                                "typeString": "type(struct ZaaNetStorage.Network storage pointer)"
                              }
                            },
                            "id": 4359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "3337:2:14",
                              "3361:11:14",
                              "3403:15:14",
                              "3453:11:14",
                              "3495:8:14",
                              "3531:9:14",
                              "3611:9:14"
                            ],
                            "names": [
                              "id",
                              "hostAddress",
                              "pricePerSession",
                              "mongoDataId",
                              "isActive",
                              "createdAt",
                              "updatedAt"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "3315:333:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network memory"
                            }
                          },
                          "src": "3300:348:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$4083_storage",
                            "typeString": "struct ZaaNetStorage.Network storage ref"
                          }
                        },
                        "id": 4361,
                        "nodeType": "ExpressionStatement",
                        "src": "3300:348:14"
                      },
                      {
                        "condition": {
                          "id": 4362,
                          "name": "isNewNetwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4329,
                          "src": "3663:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4392,
                          "nodeType": "Block",
                          "src": "3860:65:14",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 4387,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4282,
                                    "src": "3894:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 4388,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4285,
                                      "src": "3898:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 4389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3902:11:14",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4072,
                                    "src": "3898:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4386,
                                  "name": "NetworkUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4161,
                                  "src": "3879:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
                                "id": 4390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3879:35:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4391,
                              "nodeType": "EmitStatement",
                              "src": "3874:40:14"
                            }
                          ]
                        },
                        "id": 4393,
                        "nodeType": "IfStatement",
                        "src": "3659:266:14",
                        "trueBody": {
                          "id": 4385,
                          "nodeType": "Block",
                          "src": "3677:177:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 4367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 4363,
                                    "name": "networkExists",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4119,
                                    "src": "3691:13:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                      "typeString": "mapping(uint256 => bool)"
                                    }
                                  },
                                  "id": 4365,
                                  "indexExpression": {
                                    "id": 4364,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4282,
                                    "src": "3705:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3691:17:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 4366,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3711:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3691:24:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4368,
                              "nodeType": "ExpressionStatement",
                              "src": "3691:24:14"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4374,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4282,
                                    "src": "3766:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 4369,
                                      "name": "hostNetworkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4115,
                                      "src": "3729:14:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                        "typeString": "mapping(address => uint256[] storage ref)"
                                      }
                                    },
                                    "id": 4372,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 4370,
                                        "name": "net",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4285,
                                        "src": "3744:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                          "typeString": "struct ZaaNetStorage.Network calldata"
                                        }
                                      },
                                      "id": 4371,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3748:11:14",
                                      "memberName": "hostAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4072,
                                      "src": "3744:15:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3729:31:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 4373,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3761:4:14",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "3729:36:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer,uint256)"
                                  }
                                },
                                "id": 4375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3729:40:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4376,
                              "nodeType": "ExpressionStatement",
                              "src": "3729:40:14"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 4378,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4282,
                                    "src": "3802:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 4379,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4285,
                                      "src": "3806:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 4380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3810:11:14",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4072,
                                    "src": "3806:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 4381,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4285,
                                      "src": "3823:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 4382,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3827:15:14",
                                    "memberName": "pricePerSession",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4074,
                                    "src": "3823:19:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4377,
                                  "name": "NetworkStored",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4155,
                                  "src": "3788:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,address,uint256)"
                                  }
                                },
                                "id": 4383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3788:55:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4384,
                              "nodeType": "EmitStatement",
                              "src": "3783:60:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "50c0d41c",
                  "id": 4395,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4288,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4287,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "2959:11:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4141,
                        "src": "2959:11:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2959:11:14"
                    }
                  ],
                  "name": "setNetwork",
                  "nameLocation": "2905:10:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4282,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "2924:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4395,
                        "src": "2916:10:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2916:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4285,
                        "mutability": "mutable",
                        "name": "net",
                        "nameLocation": "2945:3:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4395,
                        "src": "2928:20:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$4083_calldata_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 4284,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4283,
                            "name": "Network",
                            "nameLocations": [
                              "2928:7:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4083,
                            "src": "2928:7:14"
                          },
                          "referencedDeclaration": 4083,
                          "src": "2928:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2915:34:14"
                  },
                  "returnParameters": {
                    "id": 4289,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2971:0:14"
                  },
                  "scope": 4702,
                  "src": "2896:1035:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4414,
                    "nodeType": "Block",
                    "src": "4008:98:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 4404,
                                "name": "networkExists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4119,
                                "src": "4026:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 4406,
                              "indexExpression": {
                                "id": 4405,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4397,
                                "src": "4040:2:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4026:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20646f6573206e6f74206578697374",
                              "id": 4407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4045:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              },
                              "value": "Network does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              }
                            ],
                            "id": 4403,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4018:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4018:52:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4409,
                        "nodeType": "ExpressionStatement",
                        "src": "4018:52:14"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4410,
                            "name": "networks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4106,
                            "src": "4087:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$4083_storage_$",
                              "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                            }
                          },
                          "id": 4412,
                          "indexExpression": {
                            "id": 4411,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4397,
                            "src": "4096:2:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4087:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$4083_storage",
                            "typeString": "struct ZaaNetStorage.Network storage ref"
                          }
                        },
                        "functionReturnParameters": 4402,
                        "id": 4413,
                        "nodeType": "Return",
                        "src": "4080:19:14"
                      }
                    ]
                  },
                  "functionSelector": "95ea5717",
                  "id": 4415,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetwork",
                  "nameLocation": "3946:10:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4397,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3965:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4415,
                        "src": "3957:10:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3957:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3956:12:14"
                  },
                  "returnParameters": {
                    "id": 4402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4401,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4415,
                        "src": "3992:14:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 4400,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4399,
                            "name": "Network",
                            "nameLocations": [
                              "3992:7:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4083,
                            "src": "3992:7:14"
                          },
                          "referencedDeclaration": 4083,
                          "src": "3992:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3991:16:14"
                  },
                  "scope": 4702,
                  "src": "3937:169:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4503,
                    "nodeType": "Block",
                    "src": "4251:461:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 4430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4428,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4426,
                            "src": "4261:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4429,
                            "name": "networkIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4089,
                            "src": "4269:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4261:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4431,
                        "nodeType": "ExpressionStatement",
                        "src": "4261:24:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4432,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4417,
                            "src": "4299:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 4433,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4426,
                            "src": "4309:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4299:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4445,
                        "nodeType": "IfStatement",
                        "src": "4295:78:14",
                        "trueBody": {
                          "id": 4444,
                          "nodeType": "Block",
                          "src": "4316:57:14",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 4439,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4352:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 4438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "4338:13:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                                      },
                                      "typeName": {
                                        "baseType": {
                                          "id": 4436,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 4435,
                                            "name": "Network",
                                            "nameLocations": [
                                              "4342:7:14"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 4083,
                                            "src": "4342:7:14"
                                          },
                                          "referencedDeclaration": 4083,
                                          "src": "4342:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                            "typeString": "struct ZaaNetStorage.Network"
                                          }
                                        },
                                        "id": 4437,
                                        "nodeType": "ArrayTypeName",
                                        "src": "4342:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                                          "typeString": "struct ZaaNetStorage.Network[]"
                                        }
                                      }
                                    },
                                    "id": 4440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4338:16:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  {
                                    "id": 4441,
                                    "name": "total",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4426,
                                    "src": "4356:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4442,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4337:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                                  "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                                }
                              },
                              "functionReturnParameters": 4427,
                              "id": 4443,
                              "nodeType": "Return",
                              "src": "4330:32:14"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4447
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4447,
                            "mutability": "mutable",
                            "name": "end",
                            "nameLocation": "4391:3:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 4503,
                            "src": "4383:11:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4446,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4383:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4451,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4448,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4417,
                            "src": "4397:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 4449,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4419,
                            "src": "4406:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4397:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4383:28:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4452,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4447,
                            "src": "4425:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 4453,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4426,
                            "src": "4431:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4425:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4460,
                        "nodeType": "IfStatement",
                        "src": "4421:53:14",
                        "trueBody": {
                          "id": 4459,
                          "nodeType": "Block",
                          "src": "4438:36:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 4457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4455,
                                  "name": "end",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4447,
                                  "src": "4452:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 4456,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4426,
                                  "src": "4458:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4452:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4458,
                              "nodeType": "ExpressionStatement",
                              "src": "4452:11:14"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4465
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4465,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "4501:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 4503,
                            "src": "4484:23:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 4463,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 4462,
                                  "name": "Network",
                                  "nameLocations": [
                                    "4484:7:14"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4083,
                                  "src": "4484:7:14"
                                },
                                "referencedDeclaration": 4083,
                                "src": "4484:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 4464,
                              "nodeType": "ArrayTypeName",
                              "src": "4484:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4474,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4470,
                                "name": "end",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4447,
                                "src": "4524:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 4471,
                                "name": "offset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4417,
                                "src": "4530:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4524:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4510:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 4467,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 4466,
                                  "name": "Network",
                                  "nameLocations": [
                                    "4514:7:14"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4083,
                                  "src": "4514:7:14"
                                },
                                "referencedDeclaration": 4083,
                                "src": "4514:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 4468,
                              "nodeType": "ArrayTypeName",
                              "src": "4514:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            }
                          },
                          "id": 4473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4510:27:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4484:53:14"
                      },
                      {
                        "body": {
                          "id": 4497,
                          "nodeType": "Block",
                          "src": "4586:87:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 4495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 4485,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4465,
                                    "src": "4600:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  "id": 4489,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4486,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4476,
                                      "src": "4607:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 4487,
                                      "name": "offset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4417,
                                      "src": "4611:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4607:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4600:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 4490,
                                    "name": "networks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4106,
                                    "src": "4621:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$4083_storage_$",
                                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                    }
                                  },
                                  "id": 4494,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4493,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4491,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4476,
                                      "src": "4630:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 4492,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4634:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4630:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4621:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$4083_storage",
                                    "typeString": "struct ZaaNetStorage.Network storage ref"
                                  }
                                },
                                "src": "4600:36:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 4496,
                              "nodeType": "ExpressionStatement",
                              "src": "4600:36:14"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4479,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4476,
                            "src": "4572:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 4480,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4447,
                            "src": "4576:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4572:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4498,
                        "initializationExpression": {
                          "assignments": [
                            4476
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4476,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4560:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 4498,
                              "src": "4552:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4475,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4552:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4478,
                          "initialValue": {
                            "id": 4477,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4417,
                            "src": "4564:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4552:18:14"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 4483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4581:3:14",
                            "subExpression": {
                              "id": 4482,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4476,
                              "src": "4581:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4484,
                          "nodeType": "ExpressionStatement",
                          "src": "4581:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "4547:126:14"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 4499,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4465,
                              "src": "4691:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory[] memory"
                              }
                            },
                            {
                              "id": 4500,
                              "name": "total",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4426,
                              "src": "4699:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4501,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4690:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                          }
                        },
                        "functionReturnParameters": 4427,
                        "id": 4502,
                        "nodeType": "Return",
                        "src": "4683:22:14"
                      }
                    ]
                  },
                  "functionSelector": "fa9c81a4",
                  "id": 4504,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetworksPaginated",
                  "nameLocation": "4121:20:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4420,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4417,
                        "mutability": "mutable",
                        "name": "offset",
                        "nameLocation": "4159:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4504,
                        "src": "4151:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4151:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4419,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "4183:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4504,
                        "src": "4175:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4418,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4175:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4141:53:14"
                  },
                  "returnParameters": {
                    "id": 4427,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4424,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4504,
                        "src": "4218:16:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$4083_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4422,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 4421,
                              "name": "Network",
                              "nameLocations": [
                                "4218:7:14"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 4083,
                              "src": "4218:7:14"
                            },
                            "referencedDeclaration": 4083,
                            "src": "4218:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$4083_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 4423,
                          "nodeType": "ArrayTypeName",
                          "src": "4218:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$4083_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4426,
                        "mutability": "mutable",
                        "name": "total",
                        "nameLocation": "4244:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4504,
                        "src": "4236:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4425,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4236:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4217:33:14"
                  },
                  "scope": 4702,
                  "src": "4112:600:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4516,
                    "nodeType": "Block",
                    "src": "4819:51:14",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4512,
                            "name": "hostNetworkIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4115,
                            "src": "4836:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 4514,
                          "indexExpression": {
                            "id": 4513,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4506,
                            "src": "4851:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4836:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 4511,
                        "id": 4515,
                        "nodeType": "Return",
                        "src": "4829:34:14"
                      }
                    ]
                  },
                  "functionSelector": "79f0dc57",
                  "id": 4517,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostNetworks",
                  "nameLocation": "4727:15:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4506,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "4760:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4517,
                        "src": "4752:19:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4505,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4752:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4742:35:14"
                  },
                  "returnParameters": {
                    "id": 4511,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4510,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4517,
                        "src": "4801:16:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4508,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4801:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4509,
                          "nodeType": "ArrayTypeName",
                          "src": "4801:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4800:18:14"
                  },
                  "scope": 4702,
                  "src": "4718:152:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4558,
                    "nodeType": "Block",
                    "src": "5023:257:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4529,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4519,
                                "src": "5041:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 4532,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5064:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 4531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5056:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4530,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5056:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5056:10:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5041:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420686f73742061646472657373",
                              "id": 4535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5068:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              },
                              "value": "Invalid host address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              }
                            ],
                            "id": 4528,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5033:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5033:58:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4537,
                        "nodeType": "ExpressionStatement",
                        "src": "5033:58:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4539,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4521,
                                "src": "5109:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 4540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5118:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5109:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 4542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5121:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 4538,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5101:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5101:52:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4544,
                        "nodeType": "ExpressionStatement",
                        "src": "5101:52:14"
                      },
                      {
                        "expression": {
                          "id": 4549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4545,
                              "name": "hostEarnings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4110,
                              "src": "5164:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 4547,
                            "indexExpression": {
                              "id": 4546,
                              "name": "hostAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4519,
                              "src": "5177:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5164:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4548,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4521,
                            "src": "5193:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5164:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4550,
                        "nodeType": "ExpressionStatement",
                        "src": "5164:35:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 4552,
                              "name": "hostAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4519,
                              "src": "5234:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 4553,
                                "name": "hostEarnings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4110,
                                "src": "5247:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 4555,
                              "indexExpression": {
                                "id": 4554,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4519,
                                "src": "5260:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5247:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4551,
                            "name": "HostEarningsUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4175,
                            "src": "5214:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5214:59:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4557,
                        "nodeType": "EmitStatement",
                        "src": "5209:64:14"
                      }
                    ]
                  },
                  "functionSelector": "e1c7a8aa",
                  "id": 4559,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4524,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4523,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "4998:11:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4141,
                        "src": "4998:11:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4998:11:14"
                    },
                    {
                      "id": 4526,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4525,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "5010:12:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 976,
                        "src": "5010:12:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5010:12:14"
                    }
                  ],
                  "name": "increaseHostEarnings",
                  "nameLocation": "4909:20:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4522,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4519,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "4947:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4559,
                        "src": "4939:19:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4939:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4521,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4976:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4559,
                        "src": "4968:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4520,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4968:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4929:59:14"
                  },
                  "returnParameters": {
                    "id": 4527,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5023:0:14"
                  },
                  "scope": 4702,
                  "src": "4900:380:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4570,
                    "nodeType": "Block",
                    "src": "5378:49:14",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4566,
                            "name": "hostEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4110,
                            "src": "5395:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4568,
                          "indexExpression": {
                            "id": 4567,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4561,
                            "src": "5408:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5395:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4565,
                        "id": 4569,
                        "nodeType": "Return",
                        "src": "5388:32:14"
                      }
                    ]
                  },
                  "functionSelector": "6d65573f",
                  "id": 4571,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostEarnings",
                  "nameLocation": "5295:15:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4562,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4561,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "5328:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4571,
                        "src": "5320:19:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4560,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5320:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5310:35:14"
                  },
                  "returnParameters": {
                    "id": 4565,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4564,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4571,
                        "src": "5369:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4563,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5369:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5368:9:14"
                  },
                  "scope": 4702,
                  "src": "5286:141:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4591,
                    "nodeType": "Block",
                    "src": "5529:103:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4581,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4573,
                                "src": "5547:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 4582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5556:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5547:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 4584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5559:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 4580,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5539:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5539:52:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4586,
                        "nodeType": "ExpressionStatement",
                        "src": "5539:52:14"
                      },
                      {
                        "expression": {
                          "id": 4589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4587,
                            "name": "zaanetEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4101,
                            "src": "5601:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4588,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4573,
                            "src": "5619:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5601:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4590,
                        "nodeType": "ExpressionStatement",
                        "src": "5601:24:14"
                      }
                    ]
                  },
                  "functionSelector": "69009a13",
                  "id": 4592,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4576,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4575,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "5504:11:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4141,
                        "src": "5504:11:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5504:11:14"
                    },
                    {
                      "id": 4578,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4577,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "5516:12:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 976,
                        "src": "5516:12:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5516:12:14"
                    }
                  ],
                  "name": "increaseZaaNetEarnings",
                  "nameLocation": "5442:22:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4574,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4573,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5482:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4592,
                        "src": "5474:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4572,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5474:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5464:30:14"
                  },
                  "returnParameters": {
                    "id": 4579,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5529:0:14"
                  },
                  "scope": 4702,
                  "src": "5433:199:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4599,
                    "nodeType": "Block",
                    "src": "5699:38:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 4597,
                          "name": "zaanetEarnings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4101,
                          "src": "5716:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4596,
                        "id": 4598,
                        "nodeType": "Return",
                        "src": "5709:21:14"
                      }
                    ]
                  },
                  "functionSelector": "22a4808b",
                  "id": 4600,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getZaaNetEarnings",
                  "nameLocation": "5647:17:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4593,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5664:2:14"
                  },
                  "returnParameters": {
                    "id": 4596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4595,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4600,
                        "src": "5690:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4594,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5690:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5689:9:14"
                  },
                  "scope": 4702,
                  "src": "5638:99:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4620,
                    "nodeType": "Block",
                    "src": "5842:108:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4610,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4602,
                                "src": "5860:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 4611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5869:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5860:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 4613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5872:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 4609,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5852:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5852:52:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4615,
                        "nodeType": "ExpressionStatement",
                        "src": "5852:52:14"
                      },
                      {
                        "expression": {
                          "id": 4618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4616,
                            "name": "totalPaymentsAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4092,
                            "src": "5914:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4617,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4602,
                            "src": "5937:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5914:29:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4619,
                        "nodeType": "ExpressionStatement",
                        "src": "5914:29:14"
                      }
                    ]
                  },
                  "functionSelector": "13a7dd1d",
                  "id": 4621,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4605,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4604,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "5817:11:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4141,
                        "src": "5817:11:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5817:11:14"
                    },
                    {
                      "id": 4607,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4606,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "5829:12:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 976,
                        "src": "5829:12:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5829:12:14"
                    }
                  ],
                  "name": "updateTotalPaymentsAmount",
                  "nameLocation": "5752:25:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4602,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5795:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4621,
                        "src": "5787:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5787:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5777:30:14"
                  },
                  "returnParameters": {
                    "id": 4608,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5842:0:14"
                  },
                  "scope": 4702,
                  "src": "5743:207:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4641,
                    "nodeType": "Block",
                    "src": "6057:111:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4631,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4623,
                                "src": "6075:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 4632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6084:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6075:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 4634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6087:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 4630,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6067:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6067:52:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4636,
                        "nodeType": "ExpressionStatement",
                        "src": "6067:52:14"
                      },
                      {
                        "expression": {
                          "id": 4639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4637,
                            "name": "totalWithdrawalsAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4095,
                            "src": "6129:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4638,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4623,
                            "src": "6155:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6129:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4640,
                        "nodeType": "ExpressionStatement",
                        "src": "6129:32:14"
                      }
                    ]
                  },
                  "functionSelector": "bed31654",
                  "id": 4642,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4626,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4625,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "6032:11:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4141,
                        "src": "6032:11:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6032:11:14"
                    },
                    {
                      "id": 4628,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4627,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "6044:12:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 976,
                        "src": "6044:12:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6044:12:14"
                    }
                  ],
                  "name": "updateTotalWithdrawalsAmount",
                  "nameLocation": "5964:28:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4624,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4623,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6010:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4642,
                        "src": "6002:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4622,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6002:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5992:30:14"
                  },
                  "returnParameters": {
                    "id": 4629,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6057:0:14"
                  },
                  "scope": 4702,
                  "src": "5955:213:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4662,
                    "nodeType": "Block",
                    "src": "6271:107:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4652,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4644,
                                "src": "6289:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 4653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6298:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6289:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 4655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6301:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 4651,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6281:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6281:52:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4657,
                        "nodeType": "ExpressionStatement",
                        "src": "6281:52:14"
                      },
                      {
                        "expression": {
                          "id": 4660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4658,
                            "name": "totalHostingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4098,
                            "src": "6343:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4659,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4644,
                            "src": "6365:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6343:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4661,
                        "nodeType": "ExpressionStatement",
                        "src": "6343:28:14"
                      }
                    ]
                  },
                  "functionSelector": "1190defd",
                  "id": 4663,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4647,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4646,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "6246:11:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4141,
                        "src": "6246:11:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6246:11:14"
                    },
                    {
                      "id": 4649,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4648,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "6258:12:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 976,
                        "src": "6258:12:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6258:12:14"
                    }
                  ],
                  "name": "updateTotalHostingAmount",
                  "nameLocation": "6182:24:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4644,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6224:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4663,
                        "src": "6216:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6216:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6206:30:14"
                  },
                  "returnParameters": {
                    "id": 4650,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6271:0:14"
                  },
                  "scope": 4702,
                  "src": "6173:205:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4700,
                    "nodeType": "Block",
                    "src": "6507:252:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 4671,
                                "name": "networkExists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4119,
                                "src": "6525:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 4673,
                              "indexExpression": {
                                "id": 4672,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4665,
                                "src": "6539:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6525:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20646f6573206e6f74206578697374",
                              "id": 4674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6551:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              },
                              "value": "Network does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              }
                            ],
                            "id": 4670,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6517:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6517:59:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4676,
                        "nodeType": "ExpressionStatement",
                        "src": "6517:59:14"
                      },
                      {
                        "expression": {
                          "id": 4682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 4677,
                                "name": "networks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4106,
                                "src": "6586:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$4083_storage_$",
                                  "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                }
                              },
                              "id": 4679,
                              "indexExpression": {
                                "id": 4678,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4665,
                                "src": "6595:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6586:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$4083_storage",
                                "typeString": "struct ZaaNetStorage.Network storage ref"
                              }
                            },
                            "id": 4680,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6606:8:14",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4078,
                            "src": "6586:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 4681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6617:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6586:36:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4683,
                        "nodeType": "ExpressionStatement",
                        "src": "6586:36:14"
                      },
                      {
                        "expression": {
                          "id": 4690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 4684,
                                "name": "networks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4106,
                                "src": "6632:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$4083_storage_$",
                                  "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                }
                              },
                              "id": 4686,
                              "indexExpression": {
                                "id": 4685,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4665,
                                "src": "6641:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6632:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$4083_storage",
                                "typeString": "struct ZaaNetStorage.Network storage ref"
                              }
                            },
                            "id": 4687,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6652:9:14",
                            "memberName": "updatedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4082,
                            "src": "6632:29:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4688,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6664:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 4689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6670:9:14",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6664:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6632:47:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4691,
                        "nodeType": "ExpressionStatement",
                        "src": "6632:47:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 4693,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4665,
                              "src": "6709:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 4694,
                                  "name": "networks",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4106,
                                  "src": "6720:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$4083_storage_$",
                                    "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                  }
                                },
                                "id": 4696,
                                "indexExpression": {
                                  "id": 4695,
                                  "name": "networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4665,
                                  "src": "6729:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6720:19:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$4083_storage",
                                  "typeString": "struct ZaaNetStorage.Network storage ref"
                                }
                              },
                              "id": 4697,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6740:11:14",
                              "memberName": "hostAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4072,
                              "src": "6720:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4692,
                            "name": "NetworkUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4161,
                            "src": "6694:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 4698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6694:58:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4699,
                        "nodeType": "EmitStatement",
                        "src": "6689:63:14"
                      }
                    ]
                  },
                  "functionSelector": "5a2f406f",
                  "id": 4701,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4668,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4667,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6497:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6497:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6497:9:14"
                    }
                  ],
                  "name": "emergencyDeactivateNetwork",
                  "nameLocation": "6442:26:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4665,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "6477:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4701,
                        "src": "6469:17:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4664,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6469:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6468:19:14"
                  },
                  "returnParameters": {
                    "id": 4669,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6507:0:14"
                  },
                  "scope": 4702,
                  "src": "6433:326:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4703,
              "src": "172:6589:14",
              "usedErrors": [
                13,
                18,
                957
              ],
              "usedEvents": [
                24,
                4147,
                4155,
                4161,
                4169,
                4175,
                4179
              ]
            }
          ],
          "src": "32:6730:14"
        },
        "id": 14
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "IERC1363": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveAndCall(address,uint256)": "3177029f",
              "approveAndCall(address,uint256,bytes)": "cae9ca51",
              "balanceOf(address)": "70a08231",
              "supportsInterface(bytes4)": "01ffc9a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAndCall(address,uint256)": "1296ee62",
              "transferAndCall(address,uint256,bytes)": "4000aea0",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferFromAndCall(address,address,uint256)": "d8fbe994",
              "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "currentAllowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "requestedDecrease",
                  "type": "uint256"
                }
              ],
              "name": "SafeERC20FailedDecreaseAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202a38e2ba0e96d24fc9346d91fe6e3d5b705f0fe8568de88adb2c4ecd037057e164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A CODESIZE 0xE2 0xBA 0xE SWAP7 0xD2 0x4F 0xC9 CALLVALUE PUSH14 0x91FE6E3D5B705F0FE8568DE88ADB 0x2C 0x4E 0xCD SUB PUSH17 0x57E164736F6C634300081C003300000000 ",
              "sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea26469706673582212202a38e2ba0e96d24fc9346d91fe6e3d5b705f0fe8568de88adb2c4ecd037057e164736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A CODESIZE 0xE2 0xBA 0xE SWAP7 0xD2 0x4F 0xC9 CALLVALUE PUSH14 0x91FE6E3D5B705F0FE8568DE88ADB 0x2C 0x4E 0xCD SUB PUSH17 0x57E164736F6C634300081C003300000000 ",
              "sourceMap": "698:9376:6:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetAdmin.sol": {
        "ZaaNetAdmin": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_storageContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_treasuryAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_paymentAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_platformFeePercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_hostingFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "AdminPaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "AdminUnpaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "storageContract",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "ContractsInitialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "EmergencyModeToggled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "updatedBy",
                  "type": "address"
                }
              ],
              "name": "EmergencyOperatorUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "HostingFeeUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "PlatformFeeUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldTreasury",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newTreasury",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "TreasuryUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_HOSTING_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_PLATFORM_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_HOSTING_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_PLATFORM_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "calculatePlatformFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "emergencyDeactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyMode",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "emergencyOperators",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFee",
                  "type": "uint256"
                }
              ],
              "name": "emergencySetHostingFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFeePercent",
                  "type": "uint256"
                }
              ],
              "name": "emergencySetPlatformFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "feeHistory",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAdminStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalFeeChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalTreasuryChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalHostingFeeChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isEmergencyMode",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "currentPlatformFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentHostingFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currentTreasury",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentFees",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "platformFeePercentage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "hostingFeeAmount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFeeHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.FeeChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHostingFeeHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.HostingFeeChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestFeeChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.FeeChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestHostingFeeChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.HostingFeeChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestTreasuryChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "oldTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "newTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.TreasuryChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPlatformFeeBasisPoints",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTreasuryHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "oldTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "newTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.TreasuryChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "hostingFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "hostingFeeHistory",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isEmergencyOperator",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "payment",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paymentAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "platformFeePercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setEmergencyOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFee",
                  "type": "uint256"
                }
              ],
              "name": "setHostingFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newPaymentAddress",
                  "type": "address"
                }
              ],
              "name": "setPaymentAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFeePercent",
                  "type": "uint256"
                }
              ],
              "name": "setPlatformFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newTreasuryAddress",
                  "type": "address"
                }
              ],
              "name": "setTreasuryAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storageContract",
              "outputs": [
                {
                  "internalType": "contract ZaaNetStorage",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "toggleEmergencyMode",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasury",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "treasuryHistory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "oldTreasury",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newTreasury",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 1525,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 1494,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "update_storage_value_struct_FeeChange_to_struct_FeeChange": {
                  "entryPoint": 1545,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346105d1576040516000611ee73881900390601f8201601f191684016001600160401b038111858210176105bd579180859260a0946040528339810103126105ba5761004f826105f5565b9061005c602084016105f5565b92610069604082016105f5565b92608060608301519201519333156105a6578354336001600160a01b031982168117865560405197916001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3600180556007805460ff191690556001600160a01b03169586156105645750600183101580610559575b15610504576001600160a01b03169081156104b0576305f5e1008511610458576001600160a01b031680610414575b508460018060a01b0319600354161760035560018060a01b03196004541617600455806005558260065561014a6105d6565b9082825260208201524260408201523360608201526009546801000000000000000081101561040057600181016009556009548110156103ae57600983526101b99190839060021b7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af01610609565b6101c16105d6565b9281845260208401908152604084014281526060850191338352600a5495680100000000000000008710156103ec5760018701600a55600a548710156103d857600a909452925160029590951b7fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8810180546001600160a01b03199081166001600160a01b039889161790915593517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a982018054861691881691909117905590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa82015590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ab90910180549092169316929092179091556102e26105d6565b90600082526020820152426040820152336060820152600b5490680100000000000000008210156103c25760018201600b55600091600b548110156103ae57600b9092526103579160009060021b7f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901610609565b3360005260086020526040600020600160ff198254161790556040516001815233907f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce60203392a360405161187f90816106688239f35b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b83526041600452602483fd5b600280546001600160a01b031916821790556040514281527f7f7d6e7886dca58922d0593a44928fb5066cd0e04369c371d72eb96e61368fa890602090a238610118565b60405162461bcd60e51b815260206004820152602a60248201527f486f7374696e6720666565206d757374206265206265747765656e203020616e60448201526919080c4c0c081554d11560b21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f5061796d656e7420616464726573732063616e6e6f74206265207a65726f206160448201526564647265737360d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f506c6174666f726d20666565206d757374206265206265747765656e20312520604482015266616e642032302560c81b6064820152608490fd5b5060148311156100e9565b62461bcd60e51b815260206004820152601f60248201527f54726561737572792063616e6e6f74206265207a65726f2061646472657373006044820152606490fd5b631e4fbdf760e01b84526004849052602484fd5b80fd5b634e487b7160e01b84526041600452602484fd5b600080fd5b60405190608082016001600160401b038111838210176103c257604052565b51906001600160a01b03821682036105d157565b9190610651578051825560208101516001830155604081015160028301556060015160039190910180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052600060045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c806302e88899146113cf5780630905f560146113ac57806309705de81461075d5780630cbab4f7146113755780630d35a1671461134d57806311ce02671461132457806312e8e2c31461127557806318b4f23b146111c65780633998a681146111aa5780633f4ba83a1461111757806342f6487a14610b135780634863687e14611052578063492adaa814610f5c5780634c17b53014610ed35780635071f27b14610e5057806354d7494114610e345780635707ed4514610d3f5780635a2f406f14610c4f5780635c975abb14610c2a5780635e1e100414610b3c57806361d027b3146105e2578063633423be14610b135780636605bfda146109475780636f04d9941461092b578063715018a6146108d157806371908a03146108ac5780637a9b93c6146108795780638456cb59146107e15780638c639a85146107c35780638da5cb5b1461079c578063a10eb3541461075d578063a380b86b146106f7578063bb8f0b65146106d8578063bbeecdf014610669578063c116d9361461060b578063c5f956af146105e2578063d2643f1d1461050f578063d4ab4b401461041a578063e53377eb146103b0578063ebe7fdaa14610392578063edfbf4f1146102a5578063f2fde38b1461021f5763f851a440146101f657600080fd5b3461021c578060031936011261021c57546040516001600160a01b039091168152602090f35b80fd5b503461021c57602036600319011261021c5761023961149f565b610241611820565b6001600160a01b031680156102915781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b503461021c57602036600319011261021c576004356102c2611820565b6102d160ff6007541615611549565b6305f5e100811161034257600654906102ec82821415611595565b806006556103196040516102ff816115d1565b8381528260208201524260408201523360608201526117fb565b33917feb710718efc8ce303613ea1c9fb97a21bd1154a827cdb5ed5607eadd10e8cf968480a480f35b60405162461bcd60e51b815260206004820152602260248201527f466565206d757374206265206265747765656e203020616e6420313030205553604482015261111560f21b6064820152608490fd5b503461021c578060031936011261021c576020600654604051908152f35b503461021c57602036600319011261021c57600435600b54811015610416576103d89061150e565b50805460018201546002830154600390930154604080519384526020840192909252908201929092526001600160a01b039091166060820152608090f35b5080fd5b503461021c578060031936011261021c57600b54610437816117a8565b6104446040519182611603565b818152600b83526020810191837f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9845b8383106104f157868587604051928392602084019060208552518091526040840192915b8181106104a6575050500390f35b9193509160206080826104e360019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b019401910191849392610498565b60046020600192610501856117c0565b815201920192019190610474565b503461021c578060031936011261021c57610528611741565b50600b5490811561059d57600019820191821161058957608061055361054d8461150e565b506117c0565b61058760405180926060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565bf35b634e487b7160e01b81526011600452602490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4e6f20686f7374696e6720666565206368616e676573207265636f72646564006044820152606490fd5b503461021c578060031936011261021c576003546040516001600160a01b039091168152602090f35b503461021c578060031936011261021c5760e0600954600a54600b5460ff60075416600554906006549260018060a01b0360035416946040519687526020870152604086015215156060850152608084015260a083015260c0820152f35b503461021c57602036600319011261021c57600435338252600860205260ff60408320541680156106c5575b61069e906116b0565b6106ae6305f5e1008211156116f5565b60065490806006556103196040516102ff816115d1565b5081546001600160a01b03163314610695565b503461021c578060031936011261021c5760206040516305f5e1008152f35b503461021c57602036600319011261021c5760043590600a5482101561021c576080610722836114ef565b50805460018201546002830154600390930154604080516001600160a01b039485168152928416602084015282019390935291166060820152f35b503461021c57602036600319011261021c5760209060ff906040906001600160a01b0361078861149f565b168152600884522054166040519015158152f35b503461021c578060031936011261021c57546040516001600160a01b039091168152602090f35b503461021c578060031936011261021c576020600554604051908152f35b503461021c578060031936011261021c576107fa611820565b805460ff8160a01c1661086a5760ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1337ff9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f01402908280a280f35b63d93c066560e01b8252600482fd5b503461021c578060031936011261021c576005549060648202918083046064149015171561058957602082604051908152f35b503461021c578060031936011261021c57604060055460065482519182526020820152f35b503461021c578060031936011261021c576108ea611820565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461021c578060031936011261021c57602060405160018152f35b503461021c57602036600319011261021c5761096161149f565b610969611820565b61097860ff6007541615611549565b6001600160a01b03168015610ace576003546001600160a01b0381169190828214610a94576001600160a01b03191681176003556040516109b8816115d1565b82815260208101828152604082014281526060830191338352600a54600160401b811015610a80578060016109f09201600a556114ef565b949094610a6c575184546001600160a01b03199081166001600160a01b03928316178655915160018601805484169183169190911790559151600285015591516003939093018054909216921691909117905533917f23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa138480a480f35b634e487b7160e01b88526004889052602488fd5b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b8152602060048201526012602482015271151c99585cdd5c9e481d5b98da185b99d95960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b503461021c578060031936011261021c576004546040516001600160a01b039091168152602090f35b503461021c57602036600319011261021c57610b5661149f565b610b5e611820565b610b6d60ff6007541615611549565b6001600160a01b03168015610be5576004546001600160a01b0381168214610ba0576001600160a01b0319161760045580f35b60405162461bcd60e51b815260206004820152601960248201527f5061796d656e74206164647265737320756e6368616e676564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796d656e7420616464726573730000000000000000006044820152606490fd5b503461021c578060031936011261021c5760ff6020915460a01c166040519015158152f35b503461021c57602036600319011261021c57338152600860205260ff6040822054168015610d2c575b610c81906116b0565b6002546001600160a01b03168015610ce7578082913b15610ce457818091602460405180958193635a2f406f60e01b835260043560048401525af18015610cd757610cc95780f35b610cd291611603565b388180f35b50604051903d90823e3d90fd5b50fd5b60405162461bcd60e51b815260206004820152601760248201527f53746f72616765206e6f7420696e697469616c697a65640000000000000000006044820152606490fd5b5080546001600160a01b03163314610c78565b503461021c578060031936011261021c57600954610d5c816117a8565b610d696040519182611603565b818152600983526020810191837f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af845b838310610e1657868587604051928392602084019060208552518091526040840192915b818110610dcb575050500390f35b919350916020608082610e0860019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b019401910191849392610dbd565b60046020600192610e26856117c0565b815201920192019190610d99565b503461021c578060031936011261021c57602090604051908152f35b503461021c578060031936011261021c57610e69611741565b50600954908115610e8e57600019820191821161058957608061055361054d846114ba565b60405162461bcd60e51b815260206004820152601760248201527f4e6f20666565206368616e676573207265636f726465640000000000000000006044820152606490fd5b503461021c578060031936011261021c57338152600860205260ff6040822054168015610f49575b610f04906116b0565b60075460ff8082161516809160ff19161760075560405190151581527fc35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa4060203392a280f35b5080546001600160a01b03163314610efb565b503461021c578060031936011261021c57600a54610f79816117a8565b610f866040519182611603565b818152600a83526020810191837fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8845b83831061103457868587604051928392602084019060208552518091526040840192915b818110610fe8575050500390f35b825180516001600160a01b039081168652602080830151821681880152604080840151908801526060928301519091169186019190915286955060809094019390920191600101610fda565b6004602060019261104485611766565b815201920192019190610fb6565b503461021c578060031936011261021c5761106b611741565b50600a549081156110d2576000198201918211610589576080611096611090846114ef565b50611766565b6040805182516001600160a01b039081168252602080850151821690830152838301519282019290925260609283015190911691810191909152f35b60405162461bcd60e51b815260206004820152601c60248201527f4e6f207472656173757279206368616e676573207265636f72646564000000006044820152606490fd5b503461021c578060031936011261021c57611130611820565b805460ff8160a01c161561119b5760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1337fcc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c6348280a280f35b638dfc202b60e01b8252600482fd5b503461021c578060031936011261021c57602060405160148152f35b503461021c57602036600319011261021c57600435338252600860205260ff6040832054168015611262575b6111fb906116b0565b61120860148211156116f5565b600554908060055561123960405161121f816115d1565b838152826020820152426040820152336060820152611683565b33917f9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb998480a480f35b5081546001600160a01b031633146111f2565b503461021c57602036600319011261021c57600435611292611820565b6112a160ff6007541615611549565b600181101580611319575b156112d457600554906112c182821415611595565b8060055561123960405161121f816115d1565b60405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265206265747765656e20312520616e642032302500006044820152606490fd5b5060148111156112ac565b503461021c578060031936011261021c576002546040516001600160a01b039091168152602090f35b503461021c57602036600319011261021c57600435600954811015610416576103d8906114ba565b503461021c57602036600319011261021c576005546004358181029291811591840414171561058957602082606460405191048152f35b503461021c578060031936011261021c57602060ff600754166040519015158152f35b503461021c57604036600319011261021c576113e961149f565b6024359081151580920361149b576113ff611820565b6001600160a01b031680156114565780835260086020526040832060ff1981541660ff84161790556040519182527f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce60203393a380f35b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206f70657261746f72206164647265737300000000000000006044820152606490fd5b8280fd5b600435906001600160a01b03821682036114b557565b600080fd5b6009548110156114d957600960005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b600a548110156114d957600a60005260206000209060021b0190600090565b600b548110156114d957600b60005260206000209060021b0190600090565b80548210156114d95760005260206000209060021b0190600090565b1561155057565b60405162461bcd60e51b815260206004820152601860248201527f53797374656d20696e20656d657267656e6379206d6f646500000000000000006044820152606490fd5b1561159c57565b60405162461bcd60e51b815260206004820152600d60248201526c119959481d5b98da185b99d959609a1b6044820152606490fd5b6080810190811067ffffffffffffffff8211176115ed57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176115ed57604052565b919061166d578051825560208101516001830155604081015160028301556060015160039190910180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052600060045260246000fd5b60095490600160401b8210156115ed576116a88260016116ae9401600955600961152d565b90611625565b565b156116b757565b60405162461bcd60e51b81526020600482015260166024820152752737ba1032b6b2b933b2b731bc9037b832b930ba37b960511b6044820152606490fd5b156116fc57565b60405162461bcd60e51b815260206004820152601960248201527f4665652063616e6e6f7420657863656564206d6178696d756d000000000000006044820152606490fd5b6040519061174e826115d1565b60006060838281528260208201528260408201520152565b90604051611773816115d1565b82546001600160a01b039081168252600184015481166020830152600284015460408301526003909301549092166060830152565b67ffffffffffffffff81116115ed5760051b60200190565b906040516117cd816115d1565b8254815260018301546020820152600283015460408201526003909201546001600160a01b03166060830152565b600b5490600160401b8210156115ed576116a88260016116ae9401600b55600b61152d565b6000546001600160a01b0316330361183457565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220539c33fc38db905eb3ef87fc0944d8df450f45295a2f7939cf6191904a7e79a364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1EE7 CODESIZE DUP2 SWAP1 SUB SWAP1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP5 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP6 DUP3 LT OR PUSH2 0x5BD JUMPI SWAP2 DUP1 DUP6 SWAP3 PUSH1 0xA0 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x5BA JUMPI PUSH2 0x4F DUP3 PUSH2 0x5F5 JUMP JUMPDEST SWAP1 PUSH2 0x5C PUSH1 0x20 DUP5 ADD PUSH2 0x5F5 JUMP JUMPDEST SWAP3 PUSH2 0x69 PUSH1 0x40 DUP3 ADD PUSH2 0x5F5 JUMP JUMPDEST SWAP3 PUSH1 0x80 PUSH1 0x60 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP4 CALLER ISZERO PUSH2 0x5A6 JUMPI DUP4 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP7 SSTORE PUSH1 0x40 MLOAD SWAP8 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP8 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP7 ISZERO PUSH2 0x564 JUMPI POP PUSH1 0x1 DUP4 LT ISZERO DUP1 PUSH2 0x559 JUMPI JUMPDEST ISZERO PUSH2 0x504 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x4B0 JUMPI PUSH4 0x5F5E100 DUP6 GT PUSH2 0x458 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x414 JUMPI JUMPDEST POP DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP1 PUSH1 0x5 SSTORE DUP3 PUSH1 0x6 SSTORE PUSH2 0x14A PUSH2 0x5D6 JUMP JUMPDEST SWAP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x9 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x400 JUMPI PUSH1 0x1 DUP2 ADD PUSH1 0x9 SSTORE PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x3AE JUMPI PUSH1 0x9 DUP4 MSTORE PUSH2 0x1B9 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x2 SHL PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD PUSH2 0x609 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x5D6 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0xA SLOAD SWAP6 PUSH9 0x10000000000000000 DUP8 LT ISZERO PUSH2 0x3EC JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0xA SSTORE PUSH1 0xA SLOAD DUP8 LT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0xA SWAP1 SWAP5 MSTORE SWAP3 MLOAD PUSH1 0x2 SWAP6 SWAP1 SWAP6 SHL PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND OR SWAP1 SWAP2 SSTORE SWAP4 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9 DUP3 ADD DUP1 SLOAD DUP7 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AB SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x2E2 PUSH2 0x5D6 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x1 DUP3 ADD PUSH1 0xB SSTORE PUSH1 0x0 SWAP2 PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x3AE JUMPI PUSH1 0xB SWAP1 SWAP3 MSTORE PUSH2 0x357 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x2 SHL PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH2 0x609 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x40 MLOAD PUSH2 0x187F SWAP1 DUP2 PUSH2 0x668 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x7F7D6E7886DCA58922D0593A44928FB5066CD0E04369C371D72EB96E61368FA8 SWAP1 PUSH1 0x20 SWAP1 LOG2 CODESIZE PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F7374696E6720666565206D757374206265206265747765656E203020616E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x19080C4C0C081554D115 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420616464726573732063616E6E6F74206265207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6174666F726D20666565206D757374206265206265747765656E20312520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616E6420323025 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP4 GT ISZERO PUSH2 0xE9 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792063616E6E6F74206265207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x3C2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5D1 JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x651 JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E88899 EQ PUSH2 0x13CF JUMPI DUP1 PUSH4 0x905F560 EQ PUSH2 0x13AC JUMPI DUP1 PUSH4 0x9705DE8 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0xCBAB4F7 EQ PUSH2 0x1375 JUMPI DUP1 PUSH4 0xD35A167 EQ PUSH2 0x134D JUMPI DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x1324 JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0x1275 JUMPI DUP1 PUSH4 0x18B4F23B EQ PUSH2 0x11C6 JUMPI DUP1 PUSH4 0x3998A681 EQ PUSH2 0x11AA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1117 JUMPI DUP1 PUSH4 0x42F6487A EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0x4863687E EQ PUSH2 0x1052 JUMPI DUP1 PUSH4 0x492ADAA8 EQ PUSH2 0xF5C JUMPI DUP1 PUSH4 0x4C17B530 EQ PUSH2 0xED3 JUMPI DUP1 PUSH4 0x5071F27B EQ PUSH2 0xE50 JUMPI DUP1 PUSH4 0x54D74941 EQ PUSH2 0xE34 JUMPI DUP1 PUSH4 0x5707ED45 EQ PUSH2 0xD3F JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0xC4F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC2A JUMPI DUP1 PUSH4 0x5E1E1004 EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0x633423BE EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x947 JUMPI DUP1 PUSH4 0x6F04D994 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8D1 JUMPI DUP1 PUSH4 0x71908A03 EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0x7A9B93C6 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x7E1 JUMPI DUP1 PUSH4 0x8C639A85 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0xA10EB354 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0xA380B86B EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xBB8F0B65 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0xBBEECDF0 EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xC116D936 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xD2643F1D EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xD4AB4B40 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE53377EB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xEBE7FDAA EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xEDFBF4F1 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21F JUMPI PUSH4 0xF851A440 EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x239 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x241 PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x291 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2C2 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x2D1 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 GT PUSH2 0x342 JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH2 0x2EC DUP3 DUP3 EQ ISZERO PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x6 SSTORE PUSH2 0x319 PUSH1 0x40 MLOAD PUSH2 0x2FF DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x17FB JUMP JUMPDEST CALLER SWAP2 PUSH32 0xEB710718EFC8CE303613EA1C9FB97A21BD1154A827CDB5ED5607EADD10E8CF96 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E203020616E6420313030205553 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1115 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH2 0x3D8 SWAP1 PUSH2 0x150E JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xB SLOAD PUSH2 0x437 DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x444 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xB DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x4F1 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x4A6 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0x4E3 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x501 DUP6 PUSH2 0x17C0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x474 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x528 PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0xB SLOAD SWAP1 DUP2 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x553 PUSH2 0x54D DUP5 PUSH2 0x150E JUMP JUMPDEST POP PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x587 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20686F7374696E6720666565206368616E676573207265636F7264656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xE0 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x5 SLOAD SWAP1 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x6C5 JUMPI JUMPDEST PUSH2 0x69E SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x6AE PUSH4 0x5F5E100 DUP3 GT ISZERO PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 DUP1 PUSH1 0x6 SSTORE PUSH2 0x319 PUSH1 0x40 MLOAD PUSH2 0x2FF DUP2 PUSH2 0x15D1 JUMP JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x695 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xA SLOAD DUP3 LT ISZERO PUSH2 0x21C JUMPI PUSH1 0x80 PUSH2 0x722 DUP4 PUSH2 0x14EF JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x788 PUSH2 0x149F JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x7FA PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH2 0x86A JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xF9C91E483CE8BC4CC31645E7CC0F01A3371813E76469A71104841507F0140290 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x589 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x40 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x8EA PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x961 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x969 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x978 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xACE JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 DUP3 EQ PUSH2 0xA94 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x9B8 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x40 DUP3 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xA80 JUMPI DUP1 PUSH1 0x1 PUSH2 0x9F0 SWAP3 ADD PUSH1 0xA SSTORE PUSH2 0x14EF JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0xA6C JUMPI MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x23C12D5579081C5F1077C04A6B1C114D0F3DE239E81A436836D30ECB099FFA13 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 SWAP1 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C99585CDD5C9E481D5B98DA185B99D959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0xB56 PUSH2 0x149F JUMP JUMPDEST PUSH2 0xB5E PUSH2 0x1820 JUMP JUMPDEST PUSH2 0xB6D PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 EQ PUSH2 0xBA0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74206164647265737320756E6368616E67656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xD2C JUMPI JUMPDEST PUSH2 0xC81 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xCE7 JUMPI DUP1 DUP3 SWAP2 EXTCODESIZE ISZERO PUSH2 0xCE4 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0x5A2F406F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCC9 JUMPI DUP1 RETURN JUMPDEST PUSH2 0xCD2 SWAP2 PUSH2 0x1603 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F72616765206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC78 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x9 SLOAD PUSH2 0xD5C DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0xD69 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0xE16 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xDCB JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0xE08 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0xE26 DUP6 PUSH2 0x17C0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0xE69 PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x553 PUSH2 0x54D DUP5 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20666565206368616E676573207265636F72646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xF49 JUMPI JUMPDEST PUSH2 0xF04 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 SWAP2 PUSH1 0xFF NOT AND OR PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0xC35ED978E97C366B3A5F9375508BCFBCA850FCA66BF334B9477118918E6EAA40 PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEFB JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xA SLOAD PUSH2 0xF79 DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0xF86 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x1034 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xFE8 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 SWAP6 POP PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x1044 DUP6 PUSH2 0x1766 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x106B PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 DUP2 ISZERO PUSH2 0x10D2 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x1096 PUSH2 0x1090 DUP5 PUSH2 0x14EF JUMP JUMPDEST POP PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE DUP4 DUP4 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207472656173757279206368616E676573207265636F7264656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x1130 PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x119B JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xCC2B689B01792CCC45F7D02099E9EF3FFD7058E45803395690C61EFDD0F0C634 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1262 JUMPI JUMPDEST PUSH2 0x11FB SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x1208 PUSH1 0x14 DUP3 GT ISZERO PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 DUP1 PUSH1 0x5 SSTORE PUSH2 0x1239 PUSH1 0x40 MLOAD PUSH2 0x121F DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1683 JUMP JUMPDEST CALLER SWAP2 PUSH32 0x9E74D2175D1604CA094D3C60971771FB54AA1A0ADBADCEDCB69C48CFBD4FEB99 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1292 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x12A1 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 PUSH2 0x1319 JUMPI JUMPDEST ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH2 0x12C1 DUP3 DUP3 EQ ISZERO PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x5 SSTORE PUSH2 0x1239 PUSH1 0x40 MLOAD PUSH2 0x121F DUP2 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20312520616E64203230250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x12AC JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH2 0x3D8 SWAP1 PUSH2 0x14BA JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 CALLDATALOAD DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x589 JUMPI PUSH1 0x20 DUP3 PUSH1 0x64 PUSH1 0x40 MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x13E9 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x149B JUMPI PUSH2 0x13FF PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1456 JUMPI DUP1 DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x14B5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1550 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53797374656D20696E20656D657267656E6379206D6F64650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x159C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x119959481D5B98DA185B99D959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x166D JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x16A8 DUP3 PUSH1 0x1 PUSH2 0x16AE SWAP5 ADD PUSH1 0x9 SSTORE PUSH1 0x9 PUSH2 0x152D JUMP JUMPDEST SWAP1 PUSH2 0x1625 JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x16B7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1032B6B2B933B2B731BC9037B832B930BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x16FC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616E6E6F7420657863656564206D6178696D756D00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x174E DUP3 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1773 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15ED JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x17CD DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x16A8 DUP3 PUSH1 0x1 PUSH2 0x16AE SWAP5 ADD PUSH1 0xB SSTORE PUSH1 0xB PUSH2 0x152D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1834 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 SWAP13 CALLER 0xFC CODESIZE 0xDB SWAP1 MCOPY 0xB3 0xEF DUP8 0xFC MULMOD PREVRANDAO 0xD8 0xDF GASLIMIT 0xF GASLIMIT 0x29 GAS 0x2F PUSH26 0x39CF6191904A7E79A364736F6C634300081C0033000000000000 ",
              "sourceMap": "255:12764:11:-:0;;;;;;;;-1:-1:-1;255:12764:11;;;;;;;;;-1:-1:-1;;255:12764:11;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;2957:10;;1273:26:0;1269:95;;255:12764:11;;2957:10;-1:-1:-1;;;;;;860:15:11;;;;;;255:12764;;;;-1:-1:-1;;;;;255:12764:11;3052:40:0;255:12764:11;;3052:40:0;255:12764:11;860:15;;1061:5;255:12764;;-1:-1:-1;;255:12764:11;;;-1:-1:-1;;;;;255:12764:11;;2987:30;;255:12764;;3084:39;255:12764;3084:39;;;:82;;;-1:-1:-1;722:2:11;;;-1:-1:-1;;;;;255:12764:11;;3250:29;;722:2;;860:15;3387:30;;860:15;;-1:-1:-1;;;;;255:12764:11;;3496:184;;-1:-1:-1;860:15:11;;255:12764;860:15;;;;;3698:34;860:15;;;3698:34;860:15;255:12764;860:15;;;;;3742:32;860:15;;;3742:32;860:15;;3784:40;860:15;;3834:24;860:15;;;:::i;:::-;;;;;255:12764;3920:160;;860:15;4019;255:12764;3920:160;;860:15;2957:10;255:12764;3920:160;;860:15;3904:10;860:15;;;;;;;255:12764;860:15;;3904:10;860:15;3904:10;860:15;;;;;;3904:10;860:15;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;255:12764;4113:181;;860:15;;;255:12764;4113:181;;4019:15;860;;255:12764;4113:181;;2957:10;;860:15;;4092;860;;;;;;;;255:12764;860:15;;4092;860;4092;860;;;;;;4092;860;;;;;;;;;;;;;;;-1:-1:-1;;;;;;860:15:11;;;-1:-1:-1;;;;;255:12764:11;;;860:15;;;;;;;;;;;;;255:12764;;;860:15;;;;;;;;;;;;;;;;;;;;;;;255:12764;;860:15;;;;;;;;;:::i;:::-;;-1:-1:-1;860:15:11;;255:12764;4329:159;;860:15;4019;255:12764;4329:159;;860:15;2957:10;255:12764;4329:159;;860:15;4306:17;860:15;;;;;;;;255:12764;860:15;;4306:17;860:15;-1:-1:-1;860:15:11;4306:17;860:15;;;;;;4306:17;860:15;;;;;-1:-1:-1;;860:15:11;;;;;:::i;:::-;2957:10;-1:-1:-1;860:15:11;4543:18;255:12764;860:15;255:12764;-1:-1:-1;860:15:11;255:12764;;;;;;;;;;;;860:15;;2957:10;;4595:54;255:12764;2957:10;4595:54;;255:12764;;;;;;;;;860:15;-1:-1:-1;;;860:15:11;;;3742:32;860:15;;255:12764;860:15;;255:12764;;;-1:-1:-1;255:12764:11;;3742:32;255:12764;;-1:-1:-1;255:12764:11;860:15;-1:-1:-1;;;860:15:11;;;3742:32;860:15;;255:12764;860:15;;-1:-1:-1;;;255:12764:11;;;3742:32;255:12764;;;;860:15;-1:-1:-1;;;255:12764:11;;;3742:32;255:12764;;;;3496:184;3546:49;860:15;;-1:-1:-1;;;;;;860:15:11;;;;;255:12764;;3653:15;860;;3614:55;;255:12764;;3614:55;3496:184;;;860:15;255:12764;;-1:-1:-1;;;860:15:11;;255:12764;860:15;;;;;;;;255:12764;860:15;255:12764;;;860:15;-1:-1:-1;;;860:15:11;;;;;;;722:2;255:12764;;-1:-1:-1;;;722:2:11;;255:12764;722:2;;;;;;;;255:12764;722:2;255:12764;;;722:2;-1:-1:-1;;;722:2:11;;;;;;;;255:12764;;-1:-1:-1;;;722:2:11;;255:12764;722:2;;;;;;;;255:12764;722:2;255:12764;;;722:2;-1:-1:-1;;;722:2:11;;;;;;;3084:82;3127:39;722:2;3127:39;;;3084:82;;255:12764;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;1269:95:0;-1:-1:-1;;;1322:31:0;;;255:12764:11;;;;1322:31:0;;255:12764:11;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;255:12764:11;;;;;;:::o;860:15::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;860:15:11;-1:-1:-1;;;;;255:12764:11;;;;860:15;;;;;;:::o;:::-;255:12764;;;860:15;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 5279,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_struct_FeeChange": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_struct_TreasuryChange": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256_uint256_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_struct_struct_TreasuryChange": {
                  "entryPoint": 5953,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_TreasuryChange_dyn": {
                  "entryPoint": 6056,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_push_from_struct_FeeChange_to_array_struct_FeeChange_storage_dyn_ptr": {
                  "entryPoint": 5763,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "array_push_from_struct_HostingFeeChange_to_array_struct_HostingFeeChange_storage_dyn_ptr": {
                  "entryPoint": 6139,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 5635,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_18471": {
                  "entryPoint": 5585,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 6176,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_reference_type_struct_FeeChange": {
                  "entryPoint": 6080,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_reference_type_struct_TreasuryChange": {
                  "entryPoint": 5990,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_6aa0": {
                  "entryPoint": 5449,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_6d20": {
                  "entryPoint": 5877,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c5b9": {
                  "entryPoint": 5525,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_dc1b": {
                  "entryPoint": 5808,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_struct_FeeChange__dyn": {
                  "entryPoint": 5421,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_FeeChange__dyn_18470": {
                  "entryPoint": 5306,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_FeeChange__dyn_18475": {
                  "entryPoint": 5359,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_FeeChange__dyn_18486": {
                  "entryPoint": 5390,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_struct_FeeChange_to_struct_FeeChange": {
                  "entryPoint": 5669,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b6000803560e01c806302e88899146113cf5780630905f560146113ac57806309705de81461075d5780630cbab4f7146113755780630d35a1671461134d57806311ce02671461132457806312e8e2c31461127557806318b4f23b146111c65780633998a681146111aa5780633f4ba83a1461111757806342f6487a14610b135780634863687e14611052578063492adaa814610f5c5780634c17b53014610ed35780635071f27b14610e5057806354d7494114610e345780635707ed4514610d3f5780635a2f406f14610c4f5780635c975abb14610c2a5780635e1e100414610b3c57806361d027b3146105e2578063633423be14610b135780636605bfda146109475780636f04d9941461092b578063715018a6146108d157806371908a03146108ac5780637a9b93c6146108795780638456cb59146107e15780638c639a85146107c35780638da5cb5b1461079c578063a10eb3541461075d578063a380b86b146106f7578063bb8f0b65146106d8578063bbeecdf014610669578063c116d9361461060b578063c5f956af146105e2578063d2643f1d1461050f578063d4ab4b401461041a578063e53377eb146103b0578063ebe7fdaa14610392578063edfbf4f1146102a5578063f2fde38b1461021f5763f851a440146101f657600080fd5b3461021c578060031936011261021c57546040516001600160a01b039091168152602090f35b80fd5b503461021c57602036600319011261021c5761023961149f565b610241611820565b6001600160a01b031680156102915781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b503461021c57602036600319011261021c576004356102c2611820565b6102d160ff6007541615611549565b6305f5e100811161034257600654906102ec82821415611595565b806006556103196040516102ff816115d1565b8381528260208201524260408201523360608201526117fb565b33917feb710718efc8ce303613ea1c9fb97a21bd1154a827cdb5ed5607eadd10e8cf968480a480f35b60405162461bcd60e51b815260206004820152602260248201527f466565206d757374206265206265747765656e203020616e6420313030205553604482015261111560f21b6064820152608490fd5b503461021c578060031936011261021c576020600654604051908152f35b503461021c57602036600319011261021c57600435600b54811015610416576103d89061150e565b50805460018201546002830154600390930154604080519384526020840192909252908201929092526001600160a01b039091166060820152608090f35b5080fd5b503461021c578060031936011261021c57600b54610437816117a8565b6104446040519182611603565b818152600b83526020810191837f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9845b8383106104f157868587604051928392602084019060208552518091526040840192915b8181106104a6575050500390f35b9193509160206080826104e360019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b019401910191849392610498565b60046020600192610501856117c0565b815201920192019190610474565b503461021c578060031936011261021c57610528611741565b50600b5490811561059d57600019820191821161058957608061055361054d8461150e565b506117c0565b61058760405180926060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565bf35b634e487b7160e01b81526011600452602490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4e6f20686f7374696e6720666565206368616e676573207265636f72646564006044820152606490fd5b503461021c578060031936011261021c576003546040516001600160a01b039091168152602090f35b503461021c578060031936011261021c5760e0600954600a54600b5460ff60075416600554906006549260018060a01b0360035416946040519687526020870152604086015215156060850152608084015260a083015260c0820152f35b503461021c57602036600319011261021c57600435338252600860205260ff60408320541680156106c5575b61069e906116b0565b6106ae6305f5e1008211156116f5565b60065490806006556103196040516102ff816115d1565b5081546001600160a01b03163314610695565b503461021c578060031936011261021c5760206040516305f5e1008152f35b503461021c57602036600319011261021c5760043590600a5482101561021c576080610722836114ef565b50805460018201546002830154600390930154604080516001600160a01b039485168152928416602084015282019390935291166060820152f35b503461021c57602036600319011261021c5760209060ff906040906001600160a01b0361078861149f565b168152600884522054166040519015158152f35b503461021c578060031936011261021c57546040516001600160a01b039091168152602090f35b503461021c578060031936011261021c576020600554604051908152f35b503461021c578060031936011261021c576107fa611820565b805460ff8160a01c1661086a5760ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1337ff9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f01402908280a280f35b63d93c066560e01b8252600482fd5b503461021c578060031936011261021c576005549060648202918083046064149015171561058957602082604051908152f35b503461021c578060031936011261021c57604060055460065482519182526020820152f35b503461021c578060031936011261021c576108ea611820565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461021c578060031936011261021c57602060405160018152f35b503461021c57602036600319011261021c5761096161149f565b610969611820565b61097860ff6007541615611549565b6001600160a01b03168015610ace576003546001600160a01b0381169190828214610a94576001600160a01b03191681176003556040516109b8816115d1565b82815260208101828152604082014281526060830191338352600a54600160401b811015610a80578060016109f09201600a556114ef565b949094610a6c575184546001600160a01b03199081166001600160a01b03928316178655915160018601805484169183169190911790559151600285015591516003939093018054909216921691909117905533917f23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa138480a480f35b634e487b7160e01b88526004889052602488fd5b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b8152602060048201526012602482015271151c99585cdd5c9e481d5b98da185b99d95960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b503461021c578060031936011261021c576004546040516001600160a01b039091168152602090f35b503461021c57602036600319011261021c57610b5661149f565b610b5e611820565b610b6d60ff6007541615611549565b6001600160a01b03168015610be5576004546001600160a01b0381168214610ba0576001600160a01b0319161760045580f35b60405162461bcd60e51b815260206004820152601960248201527f5061796d656e74206164647265737320756e6368616e676564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796d656e7420616464726573730000000000000000006044820152606490fd5b503461021c578060031936011261021c5760ff6020915460a01c166040519015158152f35b503461021c57602036600319011261021c57338152600860205260ff6040822054168015610d2c575b610c81906116b0565b6002546001600160a01b03168015610ce7578082913b15610ce457818091602460405180958193635a2f406f60e01b835260043560048401525af18015610cd757610cc95780f35b610cd291611603565b388180f35b50604051903d90823e3d90fd5b50fd5b60405162461bcd60e51b815260206004820152601760248201527f53746f72616765206e6f7420696e697469616c697a65640000000000000000006044820152606490fd5b5080546001600160a01b03163314610c78565b503461021c578060031936011261021c57600954610d5c816117a8565b610d696040519182611603565b818152600983526020810191837f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af845b838310610e1657868587604051928392602084019060208552518091526040840192915b818110610dcb575050500390f35b919350916020608082610e0860019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b019401910191849392610dbd565b60046020600192610e26856117c0565b815201920192019190610d99565b503461021c578060031936011261021c57602090604051908152f35b503461021c578060031936011261021c57610e69611741565b50600954908115610e8e57600019820191821161058957608061055361054d846114ba565b60405162461bcd60e51b815260206004820152601760248201527f4e6f20666565206368616e676573207265636f726465640000000000000000006044820152606490fd5b503461021c578060031936011261021c57338152600860205260ff6040822054168015610f49575b610f04906116b0565b60075460ff8082161516809160ff19161760075560405190151581527fc35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa4060203392a280f35b5080546001600160a01b03163314610efb565b503461021c578060031936011261021c57600a54610f79816117a8565b610f866040519182611603565b818152600a83526020810191837fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8845b83831061103457868587604051928392602084019060208552518091526040840192915b818110610fe8575050500390f35b825180516001600160a01b039081168652602080830151821681880152604080840151908801526060928301519091169186019190915286955060809094019390920191600101610fda565b6004602060019261104485611766565b815201920192019190610fb6565b503461021c578060031936011261021c5761106b611741565b50600a549081156110d2576000198201918211610589576080611096611090846114ef565b50611766565b6040805182516001600160a01b039081168252602080850151821690830152838301519282019290925260609283015190911691810191909152f35b60405162461bcd60e51b815260206004820152601c60248201527f4e6f207472656173757279206368616e676573207265636f72646564000000006044820152606490fd5b503461021c578060031936011261021c57611130611820565b805460ff8160a01c161561119b5760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1337fcc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c6348280a280f35b638dfc202b60e01b8252600482fd5b503461021c578060031936011261021c57602060405160148152f35b503461021c57602036600319011261021c57600435338252600860205260ff6040832054168015611262575b6111fb906116b0565b61120860148211156116f5565b600554908060055561123960405161121f816115d1565b838152826020820152426040820152336060820152611683565b33917f9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb998480a480f35b5081546001600160a01b031633146111f2565b503461021c57602036600319011261021c57600435611292611820565b6112a160ff6007541615611549565b600181101580611319575b156112d457600554906112c182821415611595565b8060055561123960405161121f816115d1565b60405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265206265747765656e20312520616e642032302500006044820152606490fd5b5060148111156112ac565b503461021c578060031936011261021c576002546040516001600160a01b039091168152602090f35b503461021c57602036600319011261021c57600435600954811015610416576103d8906114ba565b503461021c57602036600319011261021c576005546004358181029291811591840414171561058957602082606460405191048152f35b503461021c578060031936011261021c57602060ff600754166040519015158152f35b503461021c57604036600319011261021c576113e961149f565b6024359081151580920361149b576113ff611820565b6001600160a01b031680156114565780835260086020526040832060ff1981541660ff84161790556040519182527f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce60203393a380f35b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206f70657261746f72206164647265737300000000000000006044820152606490fd5b8280fd5b600435906001600160a01b03821682036114b557565b600080fd5b6009548110156114d957600960005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b600a548110156114d957600a60005260206000209060021b0190600090565b600b548110156114d957600b60005260206000209060021b0190600090565b80548210156114d95760005260206000209060021b0190600090565b1561155057565b60405162461bcd60e51b815260206004820152601860248201527f53797374656d20696e20656d657267656e6379206d6f646500000000000000006044820152606490fd5b1561159c57565b60405162461bcd60e51b815260206004820152600d60248201526c119959481d5b98da185b99d959609a1b6044820152606490fd5b6080810190811067ffffffffffffffff8211176115ed57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176115ed57604052565b919061166d578051825560208101516001830155604081015160028301556060015160039190910180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052600060045260246000fd5b60095490600160401b8210156115ed576116a88260016116ae9401600955600961152d565b90611625565b565b156116b757565b60405162461bcd60e51b81526020600482015260166024820152752737ba1032b6b2b933b2b731bc9037b832b930ba37b960511b6044820152606490fd5b156116fc57565b60405162461bcd60e51b815260206004820152601960248201527f4665652063616e6e6f7420657863656564206d6178696d756d000000000000006044820152606490fd5b6040519061174e826115d1565b60006060838281528260208201528260408201520152565b90604051611773816115d1565b82546001600160a01b039081168252600184015481166020830152600284015460408301526003909301549092166060830152565b67ffffffffffffffff81116115ed5760051b60200190565b906040516117cd816115d1565b8254815260018301546020820152600283015460408201526003909201546001600160a01b03166060830152565b600b5490600160401b8210156115ed576116a88260016116ae9401600b55600b61152d565b6000546001600160a01b0316330361183457565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220539c33fc38db905eb3ef87fc0944d8df450f45295a2f7939cf6191904a7e79a364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E88899 EQ PUSH2 0x13CF JUMPI DUP1 PUSH4 0x905F560 EQ PUSH2 0x13AC JUMPI DUP1 PUSH4 0x9705DE8 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0xCBAB4F7 EQ PUSH2 0x1375 JUMPI DUP1 PUSH4 0xD35A167 EQ PUSH2 0x134D JUMPI DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x1324 JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0x1275 JUMPI DUP1 PUSH4 0x18B4F23B EQ PUSH2 0x11C6 JUMPI DUP1 PUSH4 0x3998A681 EQ PUSH2 0x11AA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1117 JUMPI DUP1 PUSH4 0x42F6487A EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0x4863687E EQ PUSH2 0x1052 JUMPI DUP1 PUSH4 0x492ADAA8 EQ PUSH2 0xF5C JUMPI DUP1 PUSH4 0x4C17B530 EQ PUSH2 0xED3 JUMPI DUP1 PUSH4 0x5071F27B EQ PUSH2 0xE50 JUMPI DUP1 PUSH4 0x54D74941 EQ PUSH2 0xE34 JUMPI DUP1 PUSH4 0x5707ED45 EQ PUSH2 0xD3F JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0xC4F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC2A JUMPI DUP1 PUSH4 0x5E1E1004 EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0x633423BE EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x947 JUMPI DUP1 PUSH4 0x6F04D994 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8D1 JUMPI DUP1 PUSH4 0x71908A03 EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0x7A9B93C6 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x7E1 JUMPI DUP1 PUSH4 0x8C639A85 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0xA10EB354 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0xA380B86B EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xBB8F0B65 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0xBBEECDF0 EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xC116D936 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xD2643F1D EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xD4AB4B40 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE53377EB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xEBE7FDAA EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xEDFBF4F1 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21F JUMPI PUSH4 0xF851A440 EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x239 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x241 PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x291 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2C2 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x2D1 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 GT PUSH2 0x342 JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH2 0x2EC DUP3 DUP3 EQ ISZERO PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x6 SSTORE PUSH2 0x319 PUSH1 0x40 MLOAD PUSH2 0x2FF DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x17FB JUMP JUMPDEST CALLER SWAP2 PUSH32 0xEB710718EFC8CE303613EA1C9FB97A21BD1154A827CDB5ED5607EADD10E8CF96 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E203020616E6420313030205553 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1115 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH2 0x3D8 SWAP1 PUSH2 0x150E JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xB SLOAD PUSH2 0x437 DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x444 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xB DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x4F1 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x4A6 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0x4E3 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x501 DUP6 PUSH2 0x17C0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x474 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x528 PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0xB SLOAD SWAP1 DUP2 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x553 PUSH2 0x54D DUP5 PUSH2 0x150E JUMP JUMPDEST POP PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x587 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20686F7374696E6720666565206368616E676573207265636F7264656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xE0 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x5 SLOAD SWAP1 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x6C5 JUMPI JUMPDEST PUSH2 0x69E SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x6AE PUSH4 0x5F5E100 DUP3 GT ISZERO PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 DUP1 PUSH1 0x6 SSTORE PUSH2 0x319 PUSH1 0x40 MLOAD PUSH2 0x2FF DUP2 PUSH2 0x15D1 JUMP JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x695 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xA SLOAD DUP3 LT ISZERO PUSH2 0x21C JUMPI PUSH1 0x80 PUSH2 0x722 DUP4 PUSH2 0x14EF JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x788 PUSH2 0x149F JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x7FA PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH2 0x86A JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xF9C91E483CE8BC4CC31645E7CC0F01A3371813E76469A71104841507F0140290 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x589 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x40 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x8EA PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x961 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x969 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x978 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xACE JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 DUP3 EQ PUSH2 0xA94 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x9B8 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x40 DUP3 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xA80 JUMPI DUP1 PUSH1 0x1 PUSH2 0x9F0 SWAP3 ADD PUSH1 0xA SSTORE PUSH2 0x14EF JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0xA6C JUMPI MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x23C12D5579081C5F1077C04A6B1C114D0F3DE239E81A436836D30ECB099FFA13 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 SWAP1 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C99585CDD5C9E481D5B98DA185B99D959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0xB56 PUSH2 0x149F JUMP JUMPDEST PUSH2 0xB5E PUSH2 0x1820 JUMP JUMPDEST PUSH2 0xB6D PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 EQ PUSH2 0xBA0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74206164647265737320756E6368616E67656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xD2C JUMPI JUMPDEST PUSH2 0xC81 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xCE7 JUMPI DUP1 DUP3 SWAP2 EXTCODESIZE ISZERO PUSH2 0xCE4 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0x5A2F406F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCC9 JUMPI DUP1 RETURN JUMPDEST PUSH2 0xCD2 SWAP2 PUSH2 0x1603 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F72616765206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC78 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x9 SLOAD PUSH2 0xD5C DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0xD69 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0xE16 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xDCB JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0xE08 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0xE26 DUP6 PUSH2 0x17C0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0xE69 PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x553 PUSH2 0x54D DUP5 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20666565206368616E676573207265636F72646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI CALLER DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xF49 JUMPI JUMPDEST PUSH2 0xF04 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 SWAP2 PUSH1 0xFF NOT AND OR PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0xC35ED978E97C366B3A5F9375508BCFBCA850FCA66BF334B9477118918E6EAA40 PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEFB JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0xA SLOAD PUSH2 0xF79 DUP2 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0xF86 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1603 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x1034 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xFE8 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 SWAP6 POP PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x1044 DUP6 PUSH2 0x1766 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x106B PUSH2 0x1741 JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 DUP2 ISZERO PUSH2 0x10D2 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x80 PUSH2 0x1096 PUSH2 0x1090 DUP5 PUSH2 0x14EF JUMP JUMPDEST POP PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE DUP4 DUP4 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207472656173757279206368616E676573207265636F7264656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH2 0x1130 PUSH2 0x1820 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x119B JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xCC2B689B01792CCC45F7D02099E9EF3FFD7058E45803395690C61EFDD0F0C634 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1262 JUMPI JUMPDEST PUSH2 0x11FB SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x1208 PUSH1 0x14 DUP3 GT ISZERO PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 DUP1 PUSH1 0x5 SSTORE PUSH2 0x1239 PUSH1 0x40 MLOAD PUSH2 0x121F DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1683 JUMP JUMPDEST CALLER SWAP2 PUSH32 0x9E74D2175D1604CA094D3C60971771FB54AA1A0ADBADCEDCB69C48CFBD4FEB99 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1292 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x12A1 PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 PUSH2 0x1319 JUMPI JUMPDEST ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x5 SLOAD SWAP1 PUSH2 0x12C1 DUP3 DUP3 EQ ISZERO PUSH2 0x1595 JUMP JUMPDEST DUP1 PUSH1 0x5 SSTORE PUSH2 0x1239 PUSH1 0x40 MLOAD PUSH2 0x121F DUP2 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20312520616E64203230250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x12AC JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH2 0x3D8 SWAP1 PUSH2 0x14BA JUMP JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 CALLDATALOAD DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x589 JUMPI PUSH1 0x20 DUP3 PUSH1 0x64 PUSH1 0x40 MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21C JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x7 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x21C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21C JUMPI PUSH2 0x13E9 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x149B JUMPI PUSH2 0x13FF PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1456 JUMPI DUP1 DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x14B5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1550 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53797374656D20696E20656D657267656E6379206D6F64650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x159C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x119959481D5B98DA185B99D959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x166D JUMPI DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x16A8 DUP3 PUSH1 0x1 PUSH2 0x16AE SWAP5 ADD PUSH1 0x9 SSTORE PUSH1 0x9 PUSH2 0x152D JUMP JUMPDEST SWAP1 PUSH2 0x1625 JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x16B7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1032B6B2B933B2B731BC9037B832B930BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x16FC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616E6E6F7420657863656564206D6178696D756D00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x174E DUP3 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1773 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15ED JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x17CD DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x16A8 DUP3 PUSH1 0x1 PUSH2 0x16AE SWAP5 ADD PUSH1 0xB SSTORE PUSH1 0xB PUSH2 0x152D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1834 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 SWAP13 CALLER 0xFC CODESIZE 0xDB SWAP1 MCOPY 0xB3 0xEF DUP8 0xFC MULMOD PREVRANDAO 0xD8 0xDF GASLIMIT 0xF GASLIMIT 0x29 GAS 0x2F PUSH26 0x39CF6191904A7E79A364736F6C634300081C0033000000000000 ",
              "sourceMap": "255:12764:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;255:12764:11;2627:22:0;;2623:91;;255:12764:11;;-1:-1:-1;;;;;;255:12764:11;;;;;;-1:-1:-1;;;;;255:12764:11;3052:40:0;255:12764:11;;3052:40:0;255:12764:11;;2623:91:0;-1:-1:-1;;;2672:31:0;;255:12764:11;;;;;2672:31:0;;255:12764:11;;;;;;;-1:-1:-1;;255:12764:11;;;;;;1500:62:0;;:::i;:::-;2689:51:11;255:12764;2698:13;255:12764;;2697:14;2689:51;:::i;:::-;860:15;5510:26;;255:12764;;5625:10;255:12764;5614:21;5606:47;5614:21;;;;5606:47;:::i;:::-;255:12764;5625:10;255:12764;5785:184;255:12764;;;;;:::i;:::-;;;;5808:160;255:12764;5808:160;;255:12764;5907:15;255:12764;5808:160;;255:12764;5947:10;5808:160;;;255:12764;5785:184;:::i;:::-;5947:10;5993:46;;;;;255:12764;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;579:25;255:12764;;;;;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;;;1739:43;255:12764;1739:43;;;;;;;;:::i;:::-;-1:-1:-1;255:12764:11;;;1739:43;;255:12764;1739:43;;;255:12764;1739:43;;;;255:12764;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;1739:43;;255:12764;;;;;;;;;;;;;;;9997:17;255:12764;;;;:::i;:::-;;;;;;;:::i;:::-;;;;9997:17;255:12764;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12042:17;255:12764;12042:28;;;255:12764;;-1:-1:-1;;255:12764:11;;;;;;;;;12123:47;;;:::i;:::-;255:12764;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;362:30;255:12764;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;10850:10;255:12764;10900:15;255:12764;10957:17;255:12764;;11009:13;255:12764;;11053:18;255:12764;;11101:10;255:12764;;;;;;;11139:15;255:12764;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;;;2562:10;255:12764;;2543:18;255:12764;;;;;;;;2543:55;;;;255:12764;2535:90;;;:::i;:::-;8927:64;860:15;8935:26;;;8927:64;:::i;:::-;9027:10;255:12764;;;9027:10;255:12764;9078:184;255:12764;;;;;:::i;2543:55::-;-1:-1:-1;255:12764:11;;-1:-1:-1;;;;;255:12764:11;2562:10;2577:21;2543:55;;255:12764;;;;;;;;;;;;;;;;860:15;255:12764;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;;;;1523:39;255:12764;1523:39;;;;;255:12764;1523:39;;;:::i;:::-;-1:-1:-1;255:12764:11;;;1523:39;;255:12764;1523:39;;;255:12764;1523:39;;;;255:12764;;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;;;;;;;-1:-1:-1;;;;;255:12764:11;;:::i;:::-;;;;11315:18;255:12764;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;505:33;255:12764;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:12764:11;;;;;;;1939:61:8;;-1:-1:-1;;;;255:12764:11;-1:-1:-1;;;255:12764:11;;;;;735:10:7;255:12764:11;;2427:20:8;;255:12764:11;;2427:20:8;735:10:7;7126:23:11;;;;255:12764;;1939:61:8;-1:-1:-1;;;1974:15:8;;255:12764:11;1974:15:8;;255:12764:11;;;;;;;;;;;;;10193:18;255:12764;;10214:3;255:12764;;;;;;10214:3;255:12764;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12394:18;255:12764;12414:10;255:12764;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:12764:11;;-1:-1:-1;;;;;;255:12764:11;;;;;;-1:-1:-1;;;;;255:12764:11;3052:40:0;255:12764:11;;3052:40:0;255:12764:11;;;;;;;;;;;;;;;;;;792:1;255:12764;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;2689:51:11;255:12764;2698:13;255:12764;;2697:14;2689:51;:::i;:::-;-1:-1:-1;;;;;255:12764:11;6165:33;;255:12764;;6268:15;255:12764;-1:-1:-1;;;;;255:12764:11;;;;6245:38;;;255:12764;;-1:-1:-1;;;;;;255:12764:11;;;6268:15;255:12764;;;;;;:::i;:::-;;;;;6467:185;;255:12764;;;;6467:185;;6591:15;255:12764;;6467:185;;;6631:10;;255:12764;;6446:15;255:12764;-1:-1:-1;;;255:12764:11;;;;;;;;;;6446:15;255:12764;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;255:12764:11;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6268:15;255:12764;;;;;;;;;;;;;;;;;6631:10;;6669:61;;;;255:12764;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;2689:51:11;255:12764;2698:13;255:12764;;2697:14;2689:51;:::i;:::-;-1:-1:-1;;;;;255:12764:11;6854:32;;255:12764;;;;-1:-1:-1;;;;;255:12764:11;;6932:36;;255:12764;;-1:-1:-1;;;;;;255:12764:11;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;2562:10;255:12764;;2543:18;255:12764;;;;;;;;2543:55;;;;255:12764;2535:90;;;:::i;:::-;8011:15;255:12764;-1:-1:-1;;;;;255:12764:11;8003:38;;255:12764;;8079:53;;;;;;;255:12764;;;8079:53;255:12764;;;;;;;;;8079:53;;255:12764;;;8079:53;;255:12764;8079:53;;;;;;;;255:12764;;8079:53;;;;:::i;:::-;;;255:12764;;8079:53;255:12764;;;;;;;;;;;8079:53;255:12764;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;2543:55;-1:-1:-1;255:12764:11;;-1:-1:-1;;;;;255:12764:11;2562:10;2577:21;2543:55;;255:12764;;;;;;;;;;;;;9661:10;255:12764;;;;:::i;:::-;;;;;;;:::i;:::-;;;;9661:10;255:12764;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11491:10;255:12764;11491:21;;;255:12764;;-1:-1:-1;;255:12764:11;;;;;;;;;11557:33;;;:::i;255:12764::-;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2562:10;255:12764;;2543:18;255:12764;;;;;;;;2543:55;;;;255:12764;2535:90;;;:::i;:::-;7424:13;255:12764;;;;;7423:14;255:12764;;;;;;;7424:13;255:12764;;;;;;;;7452:47;255:12764;2562:10;7452:47;;255:12764;;2543:55;-1:-1:-1;255:12764:11;;-1:-1:-1;;;;;255:12764:11;2562:10;2577:21;2543:55;;255:12764;;;;;;;;;;;;;9823:15;255:12764;;;;:::i;:::-;;;;;;;:::i;:::-;;;;9823:15;255:12764;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;255:12764:11;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11753:15;255:12764;11753:26;;;255:12764;;-1:-1:-1;;255:12764:11;;;;;;;;;11829:43;;;:::i;:::-;255:12764;;:::i;:::-;;;;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:12764:11;;;;;;;2140:9:8;2136:62;;-1:-1:-1;;;;255:12764:11;;;;;735:10:7;255:12764:11;;2674:22:8;;255:12764:11;;2674:22:8;735:10:7;7235:25:11;;;;255:12764;;2136:62:8;-1:-1:-1;;;2172:15:8;;255:12764:11;2172:15:8;;255:12764:11;;;;;;;;;;;;;;;;722:2;255:12764;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;;;2562:10;255:12764;;2543:18;255:12764;;;;;;;;2543:55;;;;255:12764;2535:90;;;:::i;:::-;8315:72;722:2;8323:34;;;8315:72;:::i;:::-;8423:18;255:12764;;;8423:18;255:12764;8497:177;255:12764;;;;;:::i;:::-;;;;8513:160;255:12764;8513:160;;255:12764;8612:15;255:12764;8513:160;;255:12764;2562:10;8513:160;;;255:12764;8497:177;:::i;:::-;2562:10;8690:54;;;;;255:12764;;2543:55;-1:-1:-1;255:12764:11;;-1:-1:-1;;;;;255:12764:11;2562:10;2577:21;2543:55;;255:12764;;;;;;;-1:-1:-1;;255:12764:11;;;;;;1500:62:0;;:::i;:::-;2689:51:11;255:12764;2698:13;255:12764;;2697:14;2689:51;:::i;:::-;255:12764;4779:34;;;:72;;;255:12764;;;;4944:18;255:12764;4926:36;4918:62;4926:36;;;;4918:62;:::i;:::-;255:12764;4944:18;255:12764;5111:177;255:12764;;;;;:::i;:::-;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;4779:72;4817:34;722:2;4817:34;;;4779:72;;255:12764;;;;;;;;;;;;;320:36;255:12764;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;;;1301:29;255:12764;1301:29;;;;;;;;:::i;255:12764::-;;;;;;;-1:-1:-1;;255:12764:11;;;;10434:18;255:12764;;;;;;;;;;;;;;;;;;;;10456:3;255:12764;;;;;;;;;;;;;;;;;;;;;;1033:33;255:12764;;;;;;;;;;;;;;;;;-1:-1:-1;;255:12764:11;;;;;;:::i;:::-;;;;;;;;;;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;255:12764:11;7660:22;;255:12764;;;;;7721:18;255:12764;;;;;;;;;;;;;;;;;;;;;7773:54;255:12764;7816:10;7773:54;;255:12764;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12764:11;;;;;;:::o;:::-;;;;;1301:29;255:12764;;;;;;1301:29;-1:-1:-1;255:12764:11;;-1:-1:-1;255:12764:11;;;;;;-1:-1:-1;255:12764:11;:::o;:::-;;;;;;;;;;;;;11753:15;255:12764;;;;;;11753:15;-1:-1:-1;255:12764:11;;-1:-1:-1;255:12764:11;;;;;;-1:-1:-1;255:12764:11;:::o;:::-;12042:17;255:12764;;;;;;12042:17;-1:-1:-1;255:12764:11;;-1:-1:-1;255:12764:11;;;;;;-1:-1:-1;255:12764:11;:::o;:::-;;;;;;;;-1:-1:-1;255:12764:11;;-1:-1:-1;255:12764:11;;;;;;-1:-1:-1;255:12764:11;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;255:12764:11;;;;;-1:-1:-1;255:12764:11;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;255:12764:11;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;5111:10;255:12764;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;5111:10;255:12764;5111:10;255:12764;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;255:12764:11;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;255:12764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:12764:11;;;;;:::o;:::-;9078:17;255:12764;;-1:-1:-1;;;255:12764:11;;;;;;;;;;;9078:17;255:12764;9078:17;255:12764;:::i;1796:162:0:-;1710:6;255:12764:11;-1:-1:-1;;;;;255:12764:11;735:10:7;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:7;1901:40:0;255:12764:11;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "MAX_HOSTING_FEE()": "bb8f0b65",
              "MAX_PLATFORM_FEE()": "3998a681",
              "MIN_HOSTING_FEE()": "54d74941",
              "MIN_PLATFORM_FEE()": "6f04d994",
              "admin()": "f851a440",
              "calculatePlatformFee(uint256)": "0cbab4f7",
              "emergencyDeactivateNetwork(uint256)": "5a2f406f",
              "emergencyMode()": "0905f560",
              "emergencyOperators(address)": "09705de8",
              "emergencySetHostingFee(uint256)": "bbeecdf0",
              "emergencySetPlatformFee(uint256)": "18b4f23b",
              "feeHistory(uint256)": "0d35a167",
              "getAdminStats()": "c116d936",
              "getCurrentFees()": "71908a03",
              "getFeeHistory()": "5707ed45",
              "getHostingFeeHistory()": "d4ab4b40",
              "getLatestFeeChange()": "5071f27b",
              "getLatestHostingFeeChange()": "d2643f1d",
              "getLatestTreasuryChange()": "4863687e",
              "getPlatformFeeBasisPoints()": "7a9b93c6",
              "getTreasuryHistory()": "492adaa8",
              "hostingFee()": "ebe7fdaa",
              "hostingFeeHistory(uint256)": "e53377eb",
              "isEmergencyOperator(address)": "a10eb354",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "payment()": "42f6487a",
              "paymentAddress()": "633423be",
              "platformFeePercent()": "8c639a85",
              "renounceOwnership()": "715018a6",
              "setEmergencyOperator(address,bool)": "02e88899",
              "setHostingFee(uint256)": "edfbf4f1",
              "setPaymentAddress(address)": "5e1e1004",
              "setPlatformFee(uint256)": "12e8e2c3",
              "setTreasuryAddress(address)": "6605bfda",
              "storageContract()": "11ce0267",
              "toggleEmergencyMode()": "4c17b530",
              "transferOwnership(address)": "f2fde38b",
              "treasury()": "61d027b3",
              "treasuryAddress()": "c5f956af",
              "treasuryHistory(uint256)": "a380b86b",
              "unpause()": "3f4ba83a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storageContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hostingFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"AdminPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"AdminUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"storageContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ContractsInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"EmergencyModeToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"}],\"name\":\"EmergencyOperatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"HostingFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_HOSTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PLATFORM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_HOSTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PLATFORM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculatePlatformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"emergencyOperators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"emergencySetHostingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"emergencySetPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalFeeChanges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTreasuryChanges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalHostingFeeChanges\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isEmergencyMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"currentPlatformFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentHostingFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currentTreasury\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"platformFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hostingFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.FeeChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHostingFeeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.HostingFeeChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestFeeChange\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.FeeChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestHostingFeeChange\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.HostingFeeChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTreasuryChange\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.TreasuryChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasuryHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.TreasuryChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hostingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hostingFeeHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isEmergencyOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setEmergencyOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setHostingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPaymentAddress\",\"type\":\"address\"}],\"name\":\"setPaymentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasuryAddress\",\"type\":\"address\"}],\"name\":\"setTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"contract ZaaNetStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleEmergencyMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"treasuryHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"Expose admin address for other contracts (interface compatibility)\"},\"calculatePlatformFee(uint256)\":{\"notice\":\"Calculate platform fee for a given amount\"},\"emergencyDeactivateNetwork(uint256)\":{\"notice\":\"Emergency function to deactivate a network\"},\"emergencySetHostingFee(uint256)\":{\"notice\":\"Emergency hosting fee adjustment (bypasses normal restrictions)\"},\"emergencySetPlatformFee(uint256)\":{\"notice\":\"Emergency fee adjustment (bypasses normal restrictions)\"},\"getAdminStats()\":{\"notice\":\"Get comprehensive admin statistics\"},\"getCurrentFees()\":{\"notice\":\"Get all current fees in one call (gas efficient)\"},\"getFeeHistory()\":{\"notice\":\"Get fee change history\"},\"getHostingFeeHistory()\":{\"notice\":\"Get hosting fee change history\"},\"getLatestFeeChange()\":{\"notice\":\"Get latest fee change details\"},\"getLatestHostingFeeChange()\":{\"notice\":\"Get latest hosting fee change details\"},\"getLatestTreasuryChange()\":{\"notice\":\"Get latest treasury change details\"},\"getPlatformFeeBasisPoints()\":{\"notice\":\"Get current fee in basis points (for more precise calculations)\"},\"getTreasuryHistory()\":{\"notice\":\"Get treasury change history\"},\"isEmergencyOperator(address)\":{\"notice\":\"Check if address is emergency operator\"},\"paused()\":{\"notice\":\"Check if contract is paused (interface compatibility)\"},\"payment()\":{\"notice\":\"Alternative name for payment address (interface compatibility)\"},\"setEmergencyOperator(address,bool)\":{\"notice\":\"Add or remove emergency operators\"},\"toggleEmergencyMode()\":{\"notice\":\"Toggle emergency mode (stops most operations)\"},\"treasury()\":{\"notice\":\"Alternative name for treasury address (interface compatibility)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetAdmin.sol\":\"ZaaNetAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetAdmin.sol\":{\"keccak256\":\"0x5c4c3f0fc5ccd21bcf5a631a7355a604e5dc5d00a0d20573aa5bdcfd5f032826\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf3c7fbd32e120e39c3c4ff78a27229da779875457609751578d7b7e54b3c12b\",\"dweb:/ipfs/QmeMaQ8HEGXUxH92rQPSBveqk6pLr5XCTtJL8pmJozkNJP\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x44d8f24b593205bc37acf477ed961f1a8e7f7dfbcea2141ca98f77f22fdfae9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19b4964e5ccf5c0f2e2bc8c33f15bf1437dc9756ccfaf026adb2ffe5225e48e0\",\"dweb:/ipfs/QmUiKZxyg7oduxqwqUKZUfxzpyRowZ9mFbjziQEVoHpcM9\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetNetwork.sol": {
        "IZaaNetAdmin": {
          "abi": [
            {
              "inputs": [],
              "name": "hostingFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "hostingFee()": "ebe7fdaa",
              "treasuryAddress()": "c5f956af"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hostingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetNetwork.sol\":\"IZaaNetAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ZaaNetNetwork.sol\":{\"keccak256\":\"0x625813a8e396071ba28ee2d451a718b8d61594b246d5612a9c5c9baebbd14dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e33657b0e178b9ac30aa08a3d4c89d68012afd08c7623181514477eee2a718f2\",\"dweb:/ipfs/QmPVDKcPkkHFXuJwK7Wn1Aj3q2VBiMtQGXj2AbuZLewPWA\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x44d8f24b593205bc37acf477ed961f1a8e7f7dfbcea2141ca98f77f22fdfae9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19b4964e5ccf5c0f2e2bc8c33f15bf1437dc9756ccfaf026adb2ffe5225e48e0\",\"dweb:/ipfs/QmUiKZxyg7oduxqwqUKZUfxzpyRowZ9mFbjziQEVoHpcM9\"]}},\"version\":1}"
        },
        "ZaaNetNetwork": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_storageContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_adminContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_usdt",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                }
              ],
              "name": "HostAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "HostingFeePaid",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldPrice",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newPrice",
                  "type": "uint256"
                }
              ],
              "name": "NetworkPriceUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "hostingFeePaid",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "NetworkRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "oldStatus",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "newStatus",
                  "type": "bool"
                }
              ],
              "name": "NetworkStatusChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "name": "NetworkUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_MONGO_DATA_LENGTH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_PRICE_PER_SESSION",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_PRICE_PER_SESSION",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "REGISTRATION_COOLDOWN",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "adminContract",
              "outputs": [
                {
                  "internalType": "contract IZaaNetAdmin",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                }
              ],
              "name": "deactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getActiveHostNetworks",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllActiveNetworks",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getContractStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalNetworks",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentHostingFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostNetworks",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalNetworks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeNetworks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalEarnings",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                }
              ],
              "name": "getHostedNetworkById",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "offset",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                }
              ],
              "name": "getNetworksPaginated",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "networks",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "totalCount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTreasuryAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isHost",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "isRegisteredHost",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "lastRegistrationTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networkToHost",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_pricePerSession",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_mongoDataId",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "_isActive",
                  "type": "bool"
                }
              ],
              "name": "registerNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newAdminContract",
                  "type": "address"
                }
              ],
              "name": "setAdminContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newUsdt",
                  "type": "address"
                }
              ],
              "name": "setUsdtContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storageContract",
              "outputs": [
                {
                  "internalType": "contract ZaaNetStorage",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_pricePerSession",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_isActive",
                  "type": "bool"
                }
              ],
              "name": "updateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "usdt",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 545,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803461020657601f6122fd38819003918201601f19168301916001600160401b0383118484101761020b578084926060946040528339810103126102065761004781610221565b90610060604061005960208401610221565b9201610221565b9033156101f05760008054336001600160a01b0319821681178355604051959290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556001600160a01b03169283156101ae57506001600160a01b0316908115610169576001600160a01b03169182156101245760018060a01b0319600254161760025560018060a01b0319600354161760035560018060a01b031960045416176004556040516120c790816102368239f35b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964205553445420636f6e747261637420616464726573730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642061646d696e20636f6e7472616374206164647265737300006044820152606490fd5b62461bcd60e51b815260206004820181905260248201527f496e76616c69642073746f7261676520636f6e747261637420616464726573736044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036102065756fe608080604052600436101561001357600080fd5b600090813560e01c90816309115e9714611b9b5750806311ce026714611b7257806316cb6eff14611a705780631b63fe671461180f5780632b2a748c1461164d5780632f48ab7d146116245780633f4ba83a146115b657806343355214146115835780634b9791e814611213578063576338a51461118b5780635c975abb1461116657806363a812f9146110dd578063715018a614611083578063764ac73414610eee57806379f0dc5714610e355780637f6e8cbf14610df85780638456cb5914610d97578063867f1a09146102b357806389ea28d914610d485780638da5cb5b14610d21578063900e41b114610542578063b0ff638314610526578063c05c5e94146104fd578063cd83fb9a1461045b578063d4f38d041461043c578063dfe6b5d6146103b4578063e002460414610311578063e67d86f1146102f5578063eb2931b7146102b3578063f2fde38b146102255763fa9c81a41461017657600080fd5b3461022257604036600319011261022257600254604051633ea7206960e21b81526004803590820152602480359082015291908190839060449082906001600160a01b03165afa8015610215576101e5928280926101ef575b5050604051928392604084526040840190611c5b565b9060208301520390f35b90915061020e92503d8091833e6102068183611cf5565b810190611e20565b38806101cf565b50604051903d90823e3d90fd5b80fd5b5034610222576020366003190112610222576004356001600160a01b038116908190036102af57610254612068565b801561029b5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b5034610222576020366003190112610222576004356001600160a01b038116908190036102af5760408260ff9260209452600584522054166040519015158152f35b5034610222578060031936011261022257602060405160c88152f35b503461022257806003193601126102225760035460405163c5f956af60e01b81529190602090839060049082906001600160a01b03165afa9081156103a857809161036b575b6040516001600160a01b0383168152602090f35b90506020823d6020116103a0575b8161038660209383611cf5565b81010312610222575061039a602091611d4b565b38610357565b3d9150610379565b604051903d90823e3d90fd5b503461022257806003193601126102225760025460405163217c682d60e01b81529190602090839060049082906001600160a01b03165afa9081156103a85790610404575b602090604051908152f35b506020813d602011610434575b8161041e60209383611cf5565b8101031261042f57602090516103f9565b600080fd5b3d9150610411565b503461022257806003193601126102225760206040516302faf0808152f35b503461022257602036600319011261022257610475611f13565b506002546040516395ea571760e01b81526004803590820152908290829060249082906001600160a01b03165afa9081156104f257826104cb93926104cf575b5050604051918291602083526020830190611bff565b0390f35b6104eb92503d8091833e6104e38183611cf5565b810190611f9a565b38806104b5565b6040513d84823e3d90fd5b50346102225780600319360112610222576003546040516001600160a01b039091168152602090f35b50346102225780600319360112610222576020604051603c8152f35b5034610222576060366003190112610222576024359060043567ffffffffffffffff83116102af57366023840112156102af57826004013561058381611d17565b936105916040519586611cf5565b8185523660248383010111610a835781849260246020930183880137850101526105b9611cb4565b926105c2612026565b6105ca612046565b33835260086020526040832054603c8101809111610d0d574210610cc85761271082101580610cba575b6105fd90611fc3565b80518015159081610cae575b5015610c69576003546040516375f3fed560e11b81526001600160a01b0390911694602082600481895afa918215610a87578592610c32575b5060206004966040519788809263c5f956af60e01b82525afa958615610a87578596610bf6575b5081151580610be4575b6108d2575b6002546040516329487fe360e11b8152959650939493602090859060049082908a906001600160a01b03165af19384156108c7578694610893575b508560018060a01b036002541691604051906106ce82611cc3565b8682523360208301528760408301528560608301521515928360808301524260a08301524260c0830152803b1561088f57604051631430350760e21b81529183918391829084908290610725908d6004840161200f565b03925af180156104f257610876575b505033865260066020526040862080549068010000000000000000821015610862576001820180825582101561084e577fd93f4aea01982a4687b0d757a8314f57b6a77742cf98d21bc9bdb24ef543a4dc9493929186918952602089200155848752600760205260408720336001600160601b0360a01b8254161790553387526008602052426040882055338752600560205260ff6040882054161561080d575b6107ea6040519360a0855260a0850190611bda565b956020840152604083015260608201524260808201528033940390a36001805580f35b33808852600560205260408820805460ff191660011790557f8ff9310abede1de3c5d3fdbb7cf09c40bc8258ca75c0f949ad92f964deac98b38880a26107d5565b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b88526041600452602488fd5b8161088091611cf5565b61088b578538610734565b8580fd5b8280fd5b9093506020813d6020116108bf575b816108af60209383611cf5565b8101031261042f575192386106b3565b3d91506108a2565b6040513d88823e3d90fd5b600480546040516370a0823160e01b815233928101929092526001600160a01b031696906020816024818b5afa908115610b4d579084918891610baf575b5010610b5857604051636eb1769f60e11b81523360048201523060248201526020816044818b5afa908115610b4d579084918891610b18575b5010610ad3576040516323b872dd60e01b60208281019182523360248401526001600160a01b03909316604483015260648083018690528252879161098f608482611cf5565b5190828a5af115610ac85784513d610abf5750853b155b610aab5760025494955092938593906001600160a01b0316803b15610a92578480916024604051809481936369009a1360e01b83528860048401525af1908115610a87578591610a96575b50506002546001600160a01b0316803b15610a9257848091602460405180948193631190defd60e01b83528860048401525af1908115610a87578591610a6e575b50506040518281524260208201527fac5b35db873b0c878683cbeac0fc736acd48ea6480742bafd3ba483dd715882460403392a2939293610678565b81610a7891611cf5565b610a83578338610a32565b8380fd5b6040513d87823e3d90fd5b8480fd5b81610aa091611cf5565b610a835783386109f1565b635274afe760e01b85526004869052602485fd5b600114156109a6565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f486f7374696e6720666565206e6f7420617070726f76656400000000000000006044820152606490fd5b9150506020813d602011610b45575b81610b3460209383611cf5565b8101031261042f5783905138610949565b3d9150610b27565b6040513d89823e3d90fd5b60405162461bcd60e51b815260206004820152602960248201527f496e73756666696369656e7420555344542062616c616e636520666f7220686f6044820152687374696e672066656560b81b6064820152608490fd5b9150506020813d602011610bdc575b81610bcb60209383611cf5565b8101031261042f5783905138610910565b3d9150610bbe565b506001600160a01b0386161515610673565b9095506020813d602011610c2a575b81610c1260209383611cf5565b81010312610a9257610c2390611d4b565b9438610669565b3d9150610c05565b9591506020863d602011610c61575b81610c4e60209383611cf5565b8101031261042f57945190946020610642565b3d9150610c41565b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964204d6f6e676f446174614944206c656e6774680000000000006044820152606490fd5b60c89150111538610609565b506302faf0808211156105f4565b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e20636f6f6c646f776e20616374697665000000006044820152606490fd5b634e487b7160e01b84526011600452602484fd5b5034610222578060031936011261022257546040516001600160a01b039091168152602090f35b50346102225780600319360112610222576003546040516375f3fed560e11b81529190602090839060049082906001600160a01b03165afa9081156103a8579061040457602090604051908152f35b5034610222578060031936011261022257610db0612068565b610db8612026565b805460ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af578160409160209352600883522054604051908152f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af578152600660205260408120604051908160208254918281520190819285526020852090855b818110610ed85750505082610e97910383611cf5565b604051928392602084019060208552518091526040840192915b818110610ebf575050500390f35b8251845285945060209384019390920191600101610eb1565b8254845260209093019260019283019201610e81565b5034610222576020366003190112610222576004356001600160a01b038116908190036102af57818183526006602052604083205460018060a01b03600254169060405193636d65573f60e01b8552806004860152602085602481865afa9485156108c757869561104f575b508552600660205260408520906040518083602082955493848152019089526020892092895b818110611036575050610f9592500383611cf5565b855b825181101561101f57610faa8184611ec4565b51604051906395ea571760e01b825260048201528781602481885afa8015611014576080918991610ffa575b500151610fe6575b600101610f97565b93610ff2600191611eee565b949050610fde565b61100e91503d808b833e6104e38183611cf5565b38610fd6565b6040513d8a823e3d90fd5b606082878760405192835260208301526040820152f35b8454835260019485019487945060209093019201610f80565b9094506020813d60201161107b575b8161106b60209383611cf5565b8101031261042f57519338610f5a565b3d915061105e565b503461022257806003193601126102225761109c612068565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af5761110c612068565b8015611128576001600160601b0360a01b600354161760035580f35b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a590818591b5a5b8818dbdb9d1c9858dd60521b6044820152606490fd5b503461022257806003193601126102225760ff6020915460a01c166040519015158152f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af576111ba612068565b80156111d6576001600160601b0360a01b600454161760045580f35b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081554d1150818dbdb9d1c9858dd605a1b6044820152606490fd5b503461022257602036600319011261022257600435611230612026565b6002546040516395ea571760e01b815260048101839052908390829060249082906001600160a01b03165afa90811561157857839161155e575b5060208101516001600160a01b03163303611519576080810151156114d45760409081015160025491516395ea571760e01b8152600481018490529092916001600160a01b03168482602481845afa918215610a875785926114b8575b506020820151336001600160a01b039091160361147c576127108410158061146e575b6112f390611fc3565b846040830151926080810151151590606081019360a085519201516040519261131b84611cc3565b888452336020850152896040850152606084015284608084015260a08301524260c0830152803b15610a835761136c8492918392604051968780948193631430350760e21b83528d6004840161200f565b03925af1928315610215578693611451575b505090816113d393928286897f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d980361141a575b50506113e3575b505051604051948552606060208601526060850190611bda565b928460408201528033940390a380f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a283386113b9565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f019181519081528b6020820152a282386113b2565b81929493509061146091611cf5565b61088b57908390863861137e565b506302faf0808411156112ea565b60405162461bcd60e51b81526020600482015260146024820152734f6e6c7920686f73742063616e2075706461746560601b6044820152606490fd5b6114cd9192503d8087833e6104e38183611cf5565b90386112c7565b60405162461bcd60e51b815260206004820152601860248201527f4e6574776f726b20616c726561647920696e61637469766500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920686f73742063616e206465616374697661746500000000000000006044820152606490fd5b61157291503d8085833e6104e38183611cf5565b3861126a565b6040513d85823e3d90fd5b503461022257602036600319011261022257602090600435815260078252604060018060a01b0391205416604051908152f35b50346102225780600319360112610222576115cf612068565b805460ff8160a01c16156116155760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b50346102225780600319360112610222576004546040516001600160a01b039091168152602090f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af5781526006602052604081206040518082602082945493848152019085526020852092855b8181106117f65750506116ad92500382611cf5565b60025482906001600160a01b031681805b845181101561173b576116d18186611ec4565b51604051906395ea571760e01b825260048201528281602481875afa8015611578576080918491611721575b50015161170d575b6001016116be565b92611719600191611eee565b939050611705565b61173591503d8086833e6104e38183611cf5565b386116fd565b50509061174790611f4a565b8390845b84518110156117e05761175e8186611ec4565b51604051906395ea571760e01b825260048201528681602481885afa908115610b4d5787916117c6575b50608081015161179c575b5060010161174b565b836117bf916117ae6001949686611ec4565b526117b98185611ec4565b50611eee565b9290611793565b6117da91503d8089833e6104e38183611cf5565b38611788565b604051602080825281906104cb90820185611c5b565b8454835260019485019486945060209093019201611698565b50346102225760603660031901126102225760243560043561182f611cb4565b91611838612026565b611840612046565b6002546040516395ea571760e01b815260048101849052906001600160a01b03168582602481845afa9182156108c7578692611a54575b506020820151336001600160a01b039091160361147c5761271083101580611a46575b6118a390611fc3565b6040820151866080840151151592606085019460a0865191015198604051916118cb83611cc3565b898352336020840152886040840152606083015215159889608083015260a08201524260c0820152813b1561088f57829161191d91604051948580948193631430350760e21b83528d6004840161200f565b03925af1801561101457611a04575b509184611983928185877f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d9897036119cd575b5050878103611996575b505051604051928352606060208401526060830190611bda565b9360408201528033940390a36001805580f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a28438611969565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f01918151908152886020820152a2813861195f565b611983928689611a397f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d9897959b8395611cf5565b999395965050925061192c565b506302faf08083111561189a565b611a699192503d8088833e6104e38183611cf5565b9038611877565b5034610222578060031936011261022257600254604051633ea7206960e21b8152600481018390526064602482015291908190839060449082906001600160a01b03165afa918215610215578192611b55575b5080815b8351811015611b00576080611adc8286611ec4565b510151611aec575b600101611ac7565b90611af8600191611eee565b919050611ae4565b50611b0a90611f4a565b815b83518110156117e0576080611b218286611ec4565b510151611b31575b600101611b0c565b91611b4d600191611b428587611ec4565b516117ae8286611ec4565b929050611b29565b611b6a9192503d8084833e6102068183611cf5565b509038611ac3565b50346102225780600319360112610222576002546040516001600160a01b039091168152602090f35b9050346102af57816003193601126102af578061271060209252f35b60005b838110611bca5750506000910152565b8181015183820152602001611bba565b90602091611bf381518092818552858086019101611bb7565b601f01601f1916010190565b908151815260018060a01b0360208301511660208201526040820151604082015260c080611c3c606085015160e0606086015260e0850190611bda565b9360808101511515608085015260a081015160a0850152015191015290565b9080602083519182815201916020808360051b8301019401926000915b838310611c8757505050505090565b9091929394602080611ca5600193601f198682030187528951611bff565b97019301930191939290611c78565b60443590811515820361042f57565b60e0810190811067ffffffffffffffff821117611cdf57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611cdf57604052565b67ffffffffffffffff8111611cdf57601f01601f191660200190565b67ffffffffffffffff8111611cdf5760051b60200190565b51906001600160a01b038216820361042f57565b91909160e08184031261042f5760405190611d7982611cc3565b819381518352611d8b60208301611d4b565b602084015260408201516040840152606082015167ffffffffffffffff811161042f57820181601f8201121561042f578051611dc681611d17565b92611dd46040519485611cf5565b8184526020828401011161042f57611df29160208085019101611bb7565b60608301526080810151801515810361042f5760c0918291608085015260a081015160a08501520151910152565b919060408382031261042f57825167ffffffffffffffff811161042f5783019080601f8301121561042f578151611e5681611d33565b92611e646040519485611cf5565b81845260208085019260051b8201019183831161042f5760208201905b838210611e9657505050505060209092015190565b815167ffffffffffffffff811161042f57602091611eb987848094880101611d5f565b815201910190611e81565b8051821015611ed85760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b6000198114611efd5760010190565b634e487b7160e01b600052601160045260246000fd5b60405190611f2082611cc3565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b90611f5482611d33565b611f616040519182611cf5565b8281528092611f72601f1991611d33565b019060005b828110611f8357505050565b602090611f8e611f13565b82828501015201611f77565b9060208282031261042f57815167ffffffffffffffff811161042f57611fc09201611d5f565b90565b15611fca57565b60405162461bcd60e51b815260206004820152601a60248201527f5072696365206f7574206f6620616c6c6f7765642072616e67650000000000006044820152606490fd5b604090611fc0939281528160208201520190611bff565b60ff60005460a01c1661203557565b63d93c066560e01b60005260046000fd5b600260015414612057576002600155565b633ee5aeb560e01b60005260046000fd5b6000546001600160a01b0316330361207c57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220af11b012e53024a1bab258678f70f2524fc8267300a7f385320564cfefed053064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x1F PUSH2 0x22FD CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x20B JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x206 JUMPI PUSH2 0x47 DUP2 PUSH2 0x221 JUMP JUMPDEST SWAP1 PUSH2 0x60 PUSH1 0x40 PUSH2 0x59 PUSH1 0x20 DUP5 ADD PUSH2 0x221 JUMP JUMPDEST SWAP3 ADD PUSH2 0x221 JUMP JUMPDEST SWAP1 CALLER ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP6 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x1AE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x169 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x124 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD PUSH2 0x20C7 SWAP1 DUP2 PUSH2 0x236 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205553445420636F6E74726163742061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642061646D696E20636F6E747261637420616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073746F7261676520636F6E74726163742061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x206 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x9115E97 EQ PUSH2 0x1B9B JUMPI POP DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x1B72 JUMPI DUP1 PUSH4 0x16CB6EFF EQ PUSH2 0x1A70 JUMPI DUP1 PUSH4 0x1B63FE67 EQ PUSH2 0x180F JUMPI DUP1 PUSH4 0x2B2A748C EQ PUSH2 0x164D JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1624 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x15B6 JUMPI DUP1 PUSH4 0x43355214 EQ PUSH2 0x1583 JUMPI DUP1 PUSH4 0x4B9791E8 EQ PUSH2 0x1213 JUMPI DUP1 PUSH4 0x576338A5 EQ PUSH2 0x118B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1166 JUMPI DUP1 PUSH4 0x63A812F9 EQ PUSH2 0x10DD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1083 JUMPI DUP1 PUSH4 0x764AC734 EQ PUSH2 0xEEE JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0xE35 JUMPI DUP1 PUSH4 0x7F6E8CBF EQ PUSH2 0xDF8 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xD97 JUMPI DUP1 PUSH4 0x867F1A09 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x89EA28D9 EQ PUSH2 0xD48 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD21 JUMPI DUP1 PUSH4 0x900E41B1 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xB0FF6383 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xC05C5E94 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xCD83FB9A EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xD4F38D04 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xE0024604 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xE67D86F1 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xEB2931B7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x225 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x215 JUMPI PUSH2 0x1E5 SWAP3 DUP3 DUP1 SWAP3 PUSH2 0x1EF JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1C5B JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 POP PUSH2 0x20E SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x206 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1E20 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1CF JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x254 PUSH2 0x2068 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29B JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xC8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI DUP1 SWAP2 PUSH2 0x36B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3A0 JUMPI JUMPDEST DUP2 PUSH2 0x386 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x222 JUMPI POP PUSH2 0x39A PUSH1 0x20 SWAP2 PUSH2 0x1D4B JUMP JUMPDEST CODESIZE PUSH2 0x357 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x217C682D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI SWAP1 PUSH2 0x404 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x434 JUMPI JUMPDEST DUP2 PUSH2 0x41E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x411 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2FAF080 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH2 0x475 PUSH2 0x1F13 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x4CB SWAP4 SWAP3 PUSH2 0x4CF JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1BFF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EB SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F9A JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x2AF JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x2AF JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x583 DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP4 PUSH2 0x591 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xA83 JUMPI DUP2 DUP5 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH2 0x5B9 PUSH2 0x1CB4 JUMP JUMPDEST SWAP3 PUSH2 0x5C2 PUSH2 0x2026 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x2046 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0x3C DUP2 ADD DUP1 SWAP2 GT PUSH2 0xD0D JUMPI TIMESTAMP LT PUSH2 0xCC8 JUMPI PUSH2 0x2710 DUP3 LT ISZERO DUP1 PUSH2 0xCBA JUMPI JUMPDEST PUSH2 0x5FD SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xCAE JUMPI JUMPDEST POP ISZERO PUSH2 0xC69 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x75F3FED5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP5 PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA87 JUMPI DUP6 SWAP3 PUSH2 0xC32 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xA87 JUMPI DUP6 SWAP7 PUSH2 0xBF6 JUMPI JUMPDEST POP DUP2 ISZERO ISZERO DUP1 PUSH2 0xBE4 JUMPI JUMPDEST PUSH2 0x8D2 JUMPI JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x29487FE3 PUSH1 0xE1 SHL DUP2 MSTORE SWAP6 SWAP7 POP SWAP4 SWAP5 SWAP4 PUSH1 0x20 SWAP1 DUP6 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP11 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP5 PUSH2 0x893 JUMPI JUMPDEST POP DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x6CE DUP3 PUSH2 0x1CC3 JUMP JUMPDEST DUP7 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE DUP8 PUSH1 0x40 DUP4 ADD MSTORE DUP6 PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO SWAP3 DUP4 PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH4 0x14303507 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH2 0x725 SWAP1 DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x200F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x876 JUMPI JUMPDEST POP POP CALLER DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x862 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x84E JUMPI PUSH32 0xD93F4AEA01982A4687B0D757A8314F57B6A77742CF98D21BC9BDB24EF543A4DC SWAP5 SWAP4 SWAP3 SWAP2 DUP7 SWAP2 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 ADD SSTORE DUP5 DUP8 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP8 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP9 KECCAK256 SSTORE CALLER DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x80D JUMPI JUMPDEST PUSH2 0x7EA PUSH1 0x40 MLOAD SWAP4 PUSH1 0xA0 DUP6 MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1BDA JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST CALLER DUP1 DUP9 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x8FF9310ABEDE1DE3C5D3FDBB7CF09C40BC8258CA75C0F949AD92F964DEAC98B3 DUP9 DUP1 LOG2 PUSH2 0x7D5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP2 PUSH2 0x880 SWAP2 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0x88B JUMPI DUP6 CODESIZE PUSH2 0x734 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x8BF JUMPI JUMPDEST DUP2 PUSH2 0x8AF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD SWAP3 CODESIZE PUSH2 0x6B3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB4D JUMPI SWAP1 DUP5 SWAP2 DUP9 SWAP2 PUSH2 0xBAF JUMPI JUMPDEST POP LT PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB4D JUMPI SWAP1 DUP5 SWAP2 DUP9 SWAP2 PUSH2 0xB18 JUMPI JUMPDEST POP LT PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 DUP2 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MSTORE DUP8 SWAP2 PUSH2 0x98F PUSH1 0x84 DUP3 PUSH2 0x1CF5 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP11 GAS CALL ISZERO PUSH2 0xAC8 JUMPI DUP5 MLOAD RETURNDATASIZE PUSH2 0xABF JUMPI POP DUP6 EXTCODESIZE ISZERO JUMPDEST PUSH2 0xAAB JUMPI PUSH1 0x2 SLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 DUP6 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA92 JUMPI DUP5 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x69009A13 PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA87 JUMPI DUP6 SWAP2 PUSH2 0xA96 JUMPI JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA92 JUMPI DUP5 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1190DEFD PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA87 JUMPI DUP6 SWAP2 PUSH2 0xA6E JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xAC5B35DB873B0C878683CBEAC0FC736ACD48EA6480742BAFD3BA483DD7158824 PUSH1 0x40 CALLER SWAP3 LOG2 SWAP4 SWAP3 SWAP4 PUSH2 0x678 JUMP JUMPDEST DUP2 PUSH2 0xA78 SWAP2 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0xA83 JUMPI DUP4 CODESIZE PUSH2 0xA32 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP2 PUSH2 0xAA0 SWAP2 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0xA83 JUMPI DUP4 CODESIZE PUSH2 0x9F1 JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP7 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F7374696E6720666565206E6F7420617070726F7665640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB45 JUMPI JUMPDEST DUP2 PUSH2 0xB34 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x949 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420555344542062616C616E636520666F7220686F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7374696E6720666565 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBDC JUMPI JUMPDEST DUP2 PUSH2 0xBCB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x910 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBBE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO ISZERO PUSH2 0x673 JUMP JUMPDEST SWAP1 SWAP6 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC2A JUMPI JUMPDEST DUP2 PUSH2 0xC12 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA92 JUMPI PUSH2 0xC23 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST SWAP5 CODESIZE PUSH2 0x669 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC05 JUMP JUMPDEST SWAP6 SWAP2 POP PUSH1 0x20 DUP7 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC61 JUMPI JUMPDEST DUP2 PUSH2 0xC4E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI SWAP5 MLOAD SWAP1 SWAP5 PUSH1 0x20 PUSH2 0x642 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204D6F6E676F446174614944206C656E677468000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC8 SWAP2 POP GT ISZERO CODESIZE PUSH2 0x609 JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP3 GT ISZERO PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20636F6F6C646F776E2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x75F3FED5 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI SWAP1 PUSH2 0x404 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0xDB0 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0xDB8 PUSH2 0x2026 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x8 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0xED8 JUMPI POP POP POP DUP3 PUSH2 0xE97 SWAP2 SUB DUP4 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xEBF JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xEB1 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xE81 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 DUP2 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x6D65573F PUSH1 0xE0 SHL DUP6 MSTORE DUP1 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x20 DUP6 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP6 PUSH2 0x104F JUMPI JUMPDEST POP DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x20 DUP3 SWAP6 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x1036 JUMPI POP POP PUSH2 0xF95 SWAP3 POP SUB DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x101F JUMPI PUSH2 0xFAA DUP2 DUP5 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x1014 JUMPI PUSH1 0x80 SWAP2 DUP10 SWAP2 PUSH2 0xFFA JUMPI JUMPDEST POP ADD MLOAD PUSH2 0xFE6 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xF97 JUMP JUMPDEST SWAP4 PUSH2 0xFF2 PUSH1 0x1 SWAP2 PUSH2 0x1EEE JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0xFDE JUMP JUMPDEST PUSH2 0x100E SWAP2 POP RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST CODESIZE PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 DUP8 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xF80 JUMP JUMPDEST SWAP1 SWAP5 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x107B JUMPI JUMPDEST DUP2 PUSH2 0x106B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD SWAP4 CODESIZE PUSH2 0xF5A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x105E JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0x109C PUSH2 0x2068 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x110C PUSH2 0x2068 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1128 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A590818591B5A5B8818DBDB9D1C9858DD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x11BA PUSH2 0x2068 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081554D1150818DBDB9D1C9858DD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1230 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1578 JUMPI DUP4 SWAP2 PUSH2 0x155E JUMPI JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1519 JUMPI PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0x14D4 JUMPI PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA87 JUMPI DUP6 SWAP3 PUSH2 0x14B8 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x147C JUMPI PUSH2 0x2710 DUP5 LT ISZERO DUP1 PUSH2 0x146E JUMPI JUMPDEST PUSH2 0x12F3 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH1 0x60 DUP2 ADD SWAP4 PUSH1 0xA0 DUP6 MLOAD SWAP3 ADD MLOAD PUSH1 0x40 MLOAD SWAP3 PUSH2 0x131B DUP5 PUSH2 0x1CC3 JUMP JUMPDEST DUP9 DUP5 MSTORE CALLER PUSH1 0x20 DUP6 ADD MSTORE DUP10 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xA83 JUMPI PUSH2 0x136C DUP5 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x200F JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x215 JUMPI DUP7 SWAP4 PUSH2 0x1451 JUMPI JUMPDEST POP POP SWAP1 DUP2 PUSH2 0x13D3 SWAP4 SWAP3 DUP3 DUP7 DUP10 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SUB PUSH2 0x141A JUMPI JUMPDEST POP POP PUSH2 0x13E3 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x60 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1BDA JUMP JUMPDEST SWAP3 DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP4 CODESIZE PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP12 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP3 CODESIZE PUSH2 0x13B2 JUMP JUMPDEST DUP2 SWAP3 SWAP5 SWAP4 POP SWAP1 PUSH2 0x1460 SWAP2 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0x88B JUMPI SWAP1 DUP4 SWAP1 DUP7 CODESIZE PUSH2 0x137E JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP5 GT ISZERO PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4F6E6C7920686F73742063616E20757064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x14CD SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6574776F726B20616C726561647920696E6163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920686F73742063616E20646561637469766174650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1572 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST CODESIZE PUSH2 0x126A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0x15CF PUSH2 0x2068 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1615 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP3 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x17F6 JUMPI POP POP PUSH2 0x16AD SWAP3 POP SUB DUP3 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x173B JUMPI PUSH2 0x16D1 DUP2 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x1578 JUMPI PUSH1 0x80 SWAP2 DUP5 SWAP2 PUSH2 0x1721 JUMPI JUMPDEST POP ADD MLOAD PUSH2 0x170D JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x16BE JUMP JUMPDEST SWAP3 PUSH2 0x1719 PUSH1 0x1 SWAP2 PUSH2 0x1EEE JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x1735 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST CODESIZE PUSH2 0x16FD JUMP JUMPDEST POP POP SWAP1 PUSH2 0x1747 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST DUP4 SWAP1 DUP5 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x17E0 JUMPI PUSH2 0x175E DUP2 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB4D JUMPI DUP8 SWAP2 PUSH2 0x17C6 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x179C JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x174B JUMP JUMPDEST DUP4 PUSH2 0x17BF SWAP2 PUSH2 0x17AE PUSH1 0x1 SWAP5 SWAP7 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST MSTORE PUSH2 0x17B9 DUP2 DUP6 PUSH2 0x1EC4 JUMP JUMPDEST POP PUSH2 0x1EEE JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0x17DA SWAP2 POP RETURNDATASIZE DUP1 DUP10 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST CODESIZE PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4CB SWAP1 DUP3 ADD DUP6 PUSH2 0x1C5B JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1698 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x182F PUSH2 0x1CB4 JUMP JUMPDEST SWAP2 PUSH2 0x1838 PUSH2 0x2026 JUMP JUMPDEST PUSH2 0x1840 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP3 PUSH2 0x1A54 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x147C JUMPI PUSH2 0x2710 DUP4 LT ISZERO DUP1 PUSH2 0x1A46 JUMPI JUMPDEST PUSH2 0x18A3 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD DUP7 PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO SWAP3 PUSH1 0x60 DUP6 ADD SWAP5 PUSH1 0xA0 DUP7 MLOAD SWAP2 ADD MLOAD SWAP9 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x18CB DUP4 PUSH2 0x1CC3 JUMP JUMPDEST DUP10 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE DUP9 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO SWAP9 DUP10 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x88F JUMPI DUP3 SWAP2 PUSH2 0x191D SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x200F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1014 JUMPI PUSH2 0x1A04 JUMPI JUMPDEST POP SWAP2 DUP5 PUSH2 0x1983 SWAP3 DUP2 DUP6 DUP8 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SUB PUSH2 0x19CD JUMPI JUMPDEST POP POP DUP8 DUP2 SUB PUSH2 0x1996 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x1BDA JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP5 CODESIZE PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP9 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP2 CODESIZE PUSH2 0x195F JUMP JUMPDEST PUSH2 0x1983 SWAP3 DUP7 DUP10 PUSH2 0x1A39 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SWAP6 SWAP12 DUP4 SWAP6 PUSH2 0x1CF5 JUMP JUMPDEST SWAP10 SWAP4 SWAP6 SWAP7 POP POP SWAP3 POP PUSH2 0x192C JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP4 GT ISZERO PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1A69 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1877 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x215 JUMPI DUP2 SWAP3 PUSH2 0x1B55 JUMPI JUMPDEST POP DUP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x80 PUSH2 0x1ADC DUP3 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x1AEC JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 PUSH2 0x1AF8 PUSH1 0x1 SWAP2 PUSH2 0x1EEE JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x1AE4 JUMP JUMPDEST POP PUSH2 0x1B0A SWAP1 PUSH2 0x1F4A JUMP JUMPDEST DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x17E0 JUMPI PUSH1 0x80 PUSH2 0x1B21 DUP3 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x1B31 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B0C JUMP JUMPDEST SWAP2 PUSH2 0x1B4D PUSH1 0x1 SWAP2 PUSH2 0x1B42 DUP6 DUP8 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD PUSH2 0x17AE DUP3 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x1B29 JUMP JUMPDEST PUSH2 0x1B6A SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x206 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST POP SWAP1 CODESIZE PUSH2 0x1AC3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2AF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AF JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1BCA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BBA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1BF3 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x1C3C PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1BDA JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C87 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x1CA5 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x1BFF JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1CDF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1CDF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1CDF JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1CDF JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1D79 DUP3 PUSH2 0x1CC3 JUMP JUMPDEST DUP2 SWAP4 DUP2 MLOAD DUP4 MSTORE PUSH2 0x1D8B PUSH1 0x20 DUP4 ADD PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI DUP3 ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP1 MLOAD PUSH2 0x1DC6 DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP3 PUSH2 0x1DD4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x42F JUMPI PUSH2 0x1DF2 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x42F JUMPI PUSH1 0xC0 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x42F JUMPI DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI DUP4 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP2 MLOAD PUSH2 0x1E56 DUP2 PUSH2 0x1D33 JUMP JUMPDEST SWAP3 PUSH2 0x1E64 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x42F JUMPI PUSH1 0x20 DUP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x1E96 JUMPI POP POP POP POP POP PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1EB9 DUP8 DUP5 DUP1 SWAP5 DUP9 ADD ADD PUSH2 0x1D5F JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1E81 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1ED8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1EFD JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F20 DUP3 PUSH2 0x1CC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1F54 DUP3 PUSH2 0x1D33 JUMP JUMPDEST PUSH2 0x1F61 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1CF5 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1F72 PUSH1 0x1F NOT SWAP2 PUSH2 0x1D33 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F83 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1F8E PUSH2 0x1F13 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x1F77 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x42F JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH2 0x1FC0 SWAP3 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1FCA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206F7574206F6620616C6C6F7765642072616E6765000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1FC0 SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x2035 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x2057 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x207C JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF GT 0xB0 SLT 0xE5 ADDRESS 0x24 LOG1 0xBA 0xB2 PC PUSH8 0x8F70F2524FC82673 STOP 0xA7 RETURN DUP6 ORIGIN SDIV PUSH5 0xCFEFED0530 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "530:12815:12:-:0;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;2363:10;;1273:26:0;1269:95;;-1:-1:-1;530:12815:12;;2363:10;-1:-1:-1;;;;;;530:12815:12;;;;;;;;;;2363:10;;-1:-1:-1;;;;;530:12815:12;;3052:40:0;;-1:-1:-1;3052:40:0;1857:1:9;;;-1:-1:-1;;;;;530:12815:12;;2406:30;;530:12815;;-1:-1:-1;;;;;;530:12815:12;;2512:28;;530:12815;;-1:-1:-1;;;;;530:12815:12;;2593:19;;530:12815;;;;;;;;2657:49;530:12815;;;2657:49;530:12815;;;;;;;2716:44;530:12815;;;2716:44;530:12815;;;;;;;2770:20;530:12815;;;2770:20;530:12815;;;;;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;530:12815:12;;-1:-1:-1;1322:31:0;530:12815:12;-1:-1:-1;530:12815:12;;;;;;-1:-1:-1;530:12815:12;;;;;-1:-1:-1;530:12815:12;;;;-1:-1:-1;;;;;530:12815:12;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 7499,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_array_struct_Network_dynt_uint256_fromMemory": {
                  "entryPoint": 7712,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bool": {
                  "entryPoint": 7348,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_struct_Network_fromMemory": {
                  "entryPoint": 8090,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_Network_memory_ptr_fromMemory": {
                  "entryPoint": 7519,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_struct_Network_dyn": {
                  "entryPoint": 7259,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 7130,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_Network": {
                  "entryPoint": 7167,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_struct_Network": {
                  "entryPoint": 8207,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_array_array_struct_Network_dyn": {
                  "entryPoint": 8010,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_struct_struct_Network": {
                  "entryPoint": 7955,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_Network_dyn": {
                  "entryPoint": 7475,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 7447,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 7095,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 7413,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_21820": {
                  "entryPoint": 7363,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 8296,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 8262,
                  "id": 992,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 8230,
                  "id": 897,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 7918,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_struct_Network_dyn": {
                  "entryPoint": 7876,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_bfd3": {
                  "entryPoint": 8131,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b600090813560e01c90816309115e9714611b9b5750806311ce026714611b7257806316cb6eff14611a705780631b63fe671461180f5780632b2a748c1461164d5780632f48ab7d146116245780633f4ba83a146115b657806343355214146115835780634b9791e814611213578063576338a51461118b5780635c975abb1461116657806363a812f9146110dd578063715018a614611083578063764ac73414610eee57806379f0dc5714610e355780637f6e8cbf14610df85780638456cb5914610d97578063867f1a09146102b357806389ea28d914610d485780638da5cb5b14610d21578063900e41b114610542578063b0ff638314610526578063c05c5e94146104fd578063cd83fb9a1461045b578063d4f38d041461043c578063dfe6b5d6146103b4578063e002460414610311578063e67d86f1146102f5578063eb2931b7146102b3578063f2fde38b146102255763fa9c81a41461017657600080fd5b3461022257604036600319011261022257600254604051633ea7206960e21b81526004803590820152602480359082015291908190839060449082906001600160a01b03165afa8015610215576101e5928280926101ef575b5050604051928392604084526040840190611c5b565b9060208301520390f35b90915061020e92503d8091833e6102068183611cf5565b810190611e20565b38806101cf565b50604051903d90823e3d90fd5b80fd5b5034610222576020366003190112610222576004356001600160a01b038116908190036102af57610254612068565b801561029b5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b5034610222576020366003190112610222576004356001600160a01b038116908190036102af5760408260ff9260209452600584522054166040519015158152f35b5034610222578060031936011261022257602060405160c88152f35b503461022257806003193601126102225760035460405163c5f956af60e01b81529190602090839060049082906001600160a01b03165afa9081156103a857809161036b575b6040516001600160a01b0383168152602090f35b90506020823d6020116103a0575b8161038660209383611cf5565b81010312610222575061039a602091611d4b565b38610357565b3d9150610379565b604051903d90823e3d90fd5b503461022257806003193601126102225760025460405163217c682d60e01b81529190602090839060049082906001600160a01b03165afa9081156103a85790610404575b602090604051908152f35b506020813d602011610434575b8161041e60209383611cf5565b8101031261042f57602090516103f9565b600080fd5b3d9150610411565b503461022257806003193601126102225760206040516302faf0808152f35b503461022257602036600319011261022257610475611f13565b506002546040516395ea571760e01b81526004803590820152908290829060249082906001600160a01b03165afa9081156104f257826104cb93926104cf575b5050604051918291602083526020830190611bff565b0390f35b6104eb92503d8091833e6104e38183611cf5565b810190611f9a565b38806104b5565b6040513d84823e3d90fd5b50346102225780600319360112610222576003546040516001600160a01b039091168152602090f35b50346102225780600319360112610222576020604051603c8152f35b5034610222576060366003190112610222576024359060043567ffffffffffffffff83116102af57366023840112156102af57826004013561058381611d17565b936105916040519586611cf5565b8185523660248383010111610a835781849260246020930183880137850101526105b9611cb4565b926105c2612026565b6105ca612046565b33835260086020526040832054603c8101809111610d0d574210610cc85761271082101580610cba575b6105fd90611fc3565b80518015159081610cae575b5015610c69576003546040516375f3fed560e11b81526001600160a01b0390911694602082600481895afa918215610a87578592610c32575b5060206004966040519788809263c5f956af60e01b82525afa958615610a87578596610bf6575b5081151580610be4575b6108d2575b6002546040516329487fe360e11b8152959650939493602090859060049082908a906001600160a01b03165af19384156108c7578694610893575b508560018060a01b036002541691604051906106ce82611cc3565b8682523360208301528760408301528560608301521515928360808301524260a08301524260c0830152803b1561088f57604051631430350760e21b81529183918391829084908290610725908d6004840161200f565b03925af180156104f257610876575b505033865260066020526040862080549068010000000000000000821015610862576001820180825582101561084e577fd93f4aea01982a4687b0d757a8314f57b6a77742cf98d21bc9bdb24ef543a4dc9493929186918952602089200155848752600760205260408720336001600160601b0360a01b8254161790553387526008602052426040882055338752600560205260ff6040882054161561080d575b6107ea6040519360a0855260a0850190611bda565b956020840152604083015260608201524260808201528033940390a36001805580f35b33808852600560205260408820805460ff191660011790557f8ff9310abede1de3c5d3fdbb7cf09c40bc8258ca75c0f949ad92f964deac98b38880a26107d5565b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b88526041600452602488fd5b8161088091611cf5565b61088b578538610734565b8580fd5b8280fd5b9093506020813d6020116108bf575b816108af60209383611cf5565b8101031261042f575192386106b3565b3d91506108a2565b6040513d88823e3d90fd5b600480546040516370a0823160e01b815233928101929092526001600160a01b031696906020816024818b5afa908115610b4d579084918891610baf575b5010610b5857604051636eb1769f60e11b81523360048201523060248201526020816044818b5afa908115610b4d579084918891610b18575b5010610ad3576040516323b872dd60e01b60208281019182523360248401526001600160a01b03909316604483015260648083018690528252879161098f608482611cf5565b5190828a5af115610ac85784513d610abf5750853b155b610aab5760025494955092938593906001600160a01b0316803b15610a92578480916024604051809481936369009a1360e01b83528860048401525af1908115610a87578591610a96575b50506002546001600160a01b0316803b15610a9257848091602460405180948193631190defd60e01b83528860048401525af1908115610a87578591610a6e575b50506040518281524260208201527fac5b35db873b0c878683cbeac0fc736acd48ea6480742bafd3ba483dd715882460403392a2939293610678565b81610a7891611cf5565b610a83578338610a32565b8380fd5b6040513d87823e3d90fd5b8480fd5b81610aa091611cf5565b610a835783386109f1565b635274afe760e01b85526004869052602485fd5b600114156109a6565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f486f7374696e6720666565206e6f7420617070726f76656400000000000000006044820152606490fd5b9150506020813d602011610b45575b81610b3460209383611cf5565b8101031261042f5783905138610949565b3d9150610b27565b6040513d89823e3d90fd5b60405162461bcd60e51b815260206004820152602960248201527f496e73756666696369656e7420555344542062616c616e636520666f7220686f6044820152687374696e672066656560b81b6064820152608490fd5b9150506020813d602011610bdc575b81610bcb60209383611cf5565b8101031261042f5783905138610910565b3d9150610bbe565b506001600160a01b0386161515610673565b9095506020813d602011610c2a575b81610c1260209383611cf5565b81010312610a9257610c2390611d4b565b9438610669565b3d9150610c05565b9591506020863d602011610c61575b81610c4e60209383611cf5565b8101031261042f57945190946020610642565b3d9150610c41565b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964204d6f6e676f446174614944206c656e6774680000000000006044820152606490fd5b60c89150111538610609565b506302faf0808211156105f4565b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e20636f6f6c646f776e20616374697665000000006044820152606490fd5b634e487b7160e01b84526011600452602484fd5b5034610222578060031936011261022257546040516001600160a01b039091168152602090f35b50346102225780600319360112610222576003546040516375f3fed560e11b81529190602090839060049082906001600160a01b03165afa9081156103a8579061040457602090604051908152f35b5034610222578060031936011261022257610db0612068565b610db8612026565b805460ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af578160409160209352600883522054604051908152f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af578152600660205260408120604051908160208254918281520190819285526020852090855b818110610ed85750505082610e97910383611cf5565b604051928392602084019060208552518091526040840192915b818110610ebf575050500390f35b8251845285945060209384019390920191600101610eb1565b8254845260209093019260019283019201610e81565b5034610222576020366003190112610222576004356001600160a01b038116908190036102af57818183526006602052604083205460018060a01b03600254169060405193636d65573f60e01b8552806004860152602085602481865afa9485156108c757869561104f575b508552600660205260408520906040518083602082955493848152019089526020892092895b818110611036575050610f9592500383611cf5565b855b825181101561101f57610faa8184611ec4565b51604051906395ea571760e01b825260048201528781602481885afa8015611014576080918991610ffa575b500151610fe6575b600101610f97565b93610ff2600191611eee565b949050610fde565b61100e91503d808b833e6104e38183611cf5565b38610fd6565b6040513d8a823e3d90fd5b606082878760405192835260208301526040820152f35b8454835260019485019487945060209093019201610f80565b9094506020813d60201161107b575b8161106b60209383611cf5565b8101031261042f57519338610f5a565b3d915061105e565b503461022257806003193601126102225761109c612068565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af5761110c612068565b8015611128576001600160601b0360a01b600354161760035580f35b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a590818591b5a5b8818dbdb9d1c9858dd60521b6044820152606490fd5b503461022257806003193601126102225760ff6020915460a01c166040519015158152f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af576111ba612068565b80156111d6576001600160601b0360a01b600454161760045580f35b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081554d1150818dbdb9d1c9858dd605a1b6044820152606490fd5b503461022257602036600319011261022257600435611230612026565b6002546040516395ea571760e01b815260048101839052908390829060249082906001600160a01b03165afa90811561157857839161155e575b5060208101516001600160a01b03163303611519576080810151156114d45760409081015160025491516395ea571760e01b8152600481018490529092916001600160a01b03168482602481845afa918215610a875785926114b8575b506020820151336001600160a01b039091160361147c576127108410158061146e575b6112f390611fc3565b846040830151926080810151151590606081019360a085519201516040519261131b84611cc3565b888452336020850152896040850152606084015284608084015260a08301524260c0830152803b15610a835761136c8492918392604051968780948193631430350760e21b83528d6004840161200f565b03925af1928315610215578693611451575b505090816113d393928286897f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d980361141a575b50506113e3575b505051604051948552606060208601526060850190611bda565b928460408201528033940390a380f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a283386113b9565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f019181519081528b6020820152a282386113b2565b81929493509061146091611cf5565b61088b57908390863861137e565b506302faf0808411156112ea565b60405162461bcd60e51b81526020600482015260146024820152734f6e6c7920686f73742063616e2075706461746560601b6044820152606490fd5b6114cd9192503d8087833e6104e38183611cf5565b90386112c7565b60405162461bcd60e51b815260206004820152601860248201527f4e6574776f726b20616c726561647920696e61637469766500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920686f73742063616e206465616374697661746500000000000000006044820152606490fd5b61157291503d8085833e6104e38183611cf5565b3861126a565b6040513d85823e3d90fd5b503461022257602036600319011261022257602090600435815260078252604060018060a01b0391205416604051908152f35b50346102225780600319360112610222576115cf612068565b805460ff8160a01c16156116155760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b50346102225780600319360112610222576004546040516001600160a01b039091168152602090f35b5034610222576020366003190112610222576004356001600160a01b038116908190036102af5781526006602052604081206040518082602082945493848152019085526020852092855b8181106117f65750506116ad92500382611cf5565b60025482906001600160a01b031681805b845181101561173b576116d18186611ec4565b51604051906395ea571760e01b825260048201528281602481875afa8015611578576080918491611721575b50015161170d575b6001016116be565b92611719600191611eee565b939050611705565b61173591503d8086833e6104e38183611cf5565b386116fd565b50509061174790611f4a565b8390845b84518110156117e05761175e8186611ec4565b51604051906395ea571760e01b825260048201528681602481885afa908115610b4d5787916117c6575b50608081015161179c575b5060010161174b565b836117bf916117ae6001949686611ec4565b526117b98185611ec4565b50611eee565b9290611793565b6117da91503d8089833e6104e38183611cf5565b38611788565b604051602080825281906104cb90820185611c5b565b8454835260019485019486945060209093019201611698565b50346102225760603660031901126102225760243560043561182f611cb4565b91611838612026565b611840612046565b6002546040516395ea571760e01b815260048101849052906001600160a01b03168582602481845afa9182156108c7578692611a54575b506020820151336001600160a01b039091160361147c5761271083101580611a46575b6118a390611fc3565b6040820151866080840151151592606085019460a0865191015198604051916118cb83611cc3565b898352336020840152886040840152606083015215159889608083015260a08201524260c0820152813b1561088f57829161191d91604051948580948193631430350760e21b83528d6004840161200f565b03925af1801561101457611a04575b509184611983928185877f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d9897036119cd575b5050878103611996575b505051604051928352606060208401526060830190611bda565b9360408201528033940390a36001805580f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a28438611969565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f01918151908152886020820152a2813861195f565b611983928689611a397f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d9897959b8395611cf5565b999395965050925061192c565b506302faf08083111561189a565b611a699192503d8088833e6104e38183611cf5565b9038611877565b5034610222578060031936011261022257600254604051633ea7206960e21b8152600481018390526064602482015291908190839060449082906001600160a01b03165afa918215610215578192611b55575b5080815b8351811015611b00576080611adc8286611ec4565b510151611aec575b600101611ac7565b90611af8600191611eee565b919050611ae4565b50611b0a90611f4a565b815b83518110156117e0576080611b218286611ec4565b510151611b31575b600101611b0c565b91611b4d600191611b428587611ec4565b516117ae8286611ec4565b929050611b29565b611b6a9192503d8084833e6102068183611cf5565b509038611ac3565b50346102225780600319360112610222576002546040516001600160a01b039091168152602090f35b9050346102af57816003193601126102af578061271060209252f35b60005b838110611bca5750506000910152565b8181015183820152602001611bba565b90602091611bf381518092818552858086019101611bb7565b601f01601f1916010190565b908151815260018060a01b0360208301511660208201526040820151604082015260c080611c3c606085015160e0606086015260e0850190611bda565b9360808101511515608085015260a081015160a0850152015191015290565b9080602083519182815201916020808360051b8301019401926000915b838310611c8757505050505090565b9091929394602080611ca5600193601f198682030187528951611bff565b97019301930191939290611c78565b60443590811515820361042f57565b60e0810190811067ffffffffffffffff821117611cdf57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611cdf57604052565b67ffffffffffffffff8111611cdf57601f01601f191660200190565b67ffffffffffffffff8111611cdf5760051b60200190565b51906001600160a01b038216820361042f57565b91909160e08184031261042f5760405190611d7982611cc3565b819381518352611d8b60208301611d4b565b602084015260408201516040840152606082015167ffffffffffffffff811161042f57820181601f8201121561042f578051611dc681611d17565b92611dd46040519485611cf5565b8184526020828401011161042f57611df29160208085019101611bb7565b60608301526080810151801515810361042f5760c0918291608085015260a081015160a08501520151910152565b919060408382031261042f57825167ffffffffffffffff811161042f5783019080601f8301121561042f578151611e5681611d33565b92611e646040519485611cf5565b81845260208085019260051b8201019183831161042f5760208201905b838210611e9657505050505060209092015190565b815167ffffffffffffffff811161042f57602091611eb987848094880101611d5f565b815201910190611e81565b8051821015611ed85760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b6000198114611efd5760010190565b634e487b7160e01b600052601160045260246000fd5b60405190611f2082611cc3565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b90611f5482611d33565b611f616040519182611cf5565b8281528092611f72601f1991611d33565b019060005b828110611f8357505050565b602090611f8e611f13565b82828501015201611f77565b9060208282031261042f57815167ffffffffffffffff811161042f57611fc09201611d5f565b90565b15611fca57565b60405162461bcd60e51b815260206004820152601a60248201527f5072696365206f7574206f6620616c6c6f7765642072616e67650000000000006044820152606490fd5b604090611fc0939281528160208201520190611bff565b60ff60005460a01c1661203557565b63d93c066560e01b60005260046000fd5b600260015414612057576002600155565b633ee5aeb560e01b60005260046000fd5b6000546001600160a01b0316330361207c57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220af11b012e53024a1bab258678f70f2524fc8267300a7f385320564cfefed053064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x9115E97 EQ PUSH2 0x1B9B JUMPI POP DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x1B72 JUMPI DUP1 PUSH4 0x16CB6EFF EQ PUSH2 0x1A70 JUMPI DUP1 PUSH4 0x1B63FE67 EQ PUSH2 0x180F JUMPI DUP1 PUSH4 0x2B2A748C EQ PUSH2 0x164D JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1624 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x15B6 JUMPI DUP1 PUSH4 0x43355214 EQ PUSH2 0x1583 JUMPI DUP1 PUSH4 0x4B9791E8 EQ PUSH2 0x1213 JUMPI DUP1 PUSH4 0x576338A5 EQ PUSH2 0x118B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1166 JUMPI DUP1 PUSH4 0x63A812F9 EQ PUSH2 0x10DD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1083 JUMPI DUP1 PUSH4 0x764AC734 EQ PUSH2 0xEEE JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0xE35 JUMPI DUP1 PUSH4 0x7F6E8CBF EQ PUSH2 0xDF8 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xD97 JUMPI DUP1 PUSH4 0x867F1A09 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x89EA28D9 EQ PUSH2 0xD48 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD21 JUMPI DUP1 PUSH4 0x900E41B1 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xB0FF6383 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xC05C5E94 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xCD83FB9A EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xD4F38D04 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xE0024604 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xE67D86F1 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xEB2931B7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x225 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x215 JUMPI PUSH2 0x1E5 SWAP3 DUP3 DUP1 SWAP3 PUSH2 0x1EF JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1C5B JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 POP PUSH2 0x20E SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x206 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1E20 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1CF JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x254 PUSH2 0x2068 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29B JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xC8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI DUP1 SWAP2 PUSH2 0x36B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3A0 JUMPI JUMPDEST DUP2 PUSH2 0x386 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x222 JUMPI POP PUSH2 0x39A PUSH1 0x20 SWAP2 PUSH2 0x1D4B JUMP JUMPDEST CODESIZE PUSH2 0x357 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x217C682D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI SWAP1 PUSH2 0x404 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x434 JUMPI JUMPDEST DUP2 PUSH2 0x41E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x411 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2FAF080 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH2 0x475 PUSH2 0x1F13 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x4CB SWAP4 SWAP3 PUSH2 0x4CF JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1BFF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EB SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F9A JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x2AF JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x2AF JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x583 DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP4 PUSH2 0x591 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xA83 JUMPI DUP2 DUP5 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH2 0x5B9 PUSH2 0x1CB4 JUMP JUMPDEST SWAP3 PUSH2 0x5C2 PUSH2 0x2026 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x2046 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0x3C DUP2 ADD DUP1 SWAP2 GT PUSH2 0xD0D JUMPI TIMESTAMP LT PUSH2 0xCC8 JUMPI PUSH2 0x2710 DUP3 LT ISZERO DUP1 PUSH2 0xCBA JUMPI JUMPDEST PUSH2 0x5FD SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xCAE JUMPI JUMPDEST POP ISZERO PUSH2 0xC69 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x75F3FED5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP5 PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA87 JUMPI DUP6 SWAP3 PUSH2 0xC32 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xA87 JUMPI DUP6 SWAP7 PUSH2 0xBF6 JUMPI JUMPDEST POP DUP2 ISZERO ISZERO DUP1 PUSH2 0xBE4 JUMPI JUMPDEST PUSH2 0x8D2 JUMPI JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x29487FE3 PUSH1 0xE1 SHL DUP2 MSTORE SWAP6 SWAP7 POP SWAP4 SWAP5 SWAP4 PUSH1 0x20 SWAP1 DUP6 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP11 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP5 PUSH2 0x893 JUMPI JUMPDEST POP DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x6CE DUP3 PUSH2 0x1CC3 JUMP JUMPDEST DUP7 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE DUP8 PUSH1 0x40 DUP4 ADD MSTORE DUP6 PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO SWAP3 DUP4 PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH4 0x14303507 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH2 0x725 SWAP1 DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x200F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x876 JUMPI JUMPDEST POP POP CALLER DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x862 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x84E JUMPI PUSH32 0xD93F4AEA01982A4687B0D757A8314F57B6A77742CF98D21BC9BDB24EF543A4DC SWAP5 SWAP4 SWAP3 SWAP2 DUP7 SWAP2 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 ADD SSTORE DUP5 DUP8 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP8 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP9 KECCAK256 SSTORE CALLER DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x80D JUMPI JUMPDEST PUSH2 0x7EA PUSH1 0x40 MLOAD SWAP4 PUSH1 0xA0 DUP6 MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1BDA JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST CALLER DUP1 DUP9 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x8FF9310ABEDE1DE3C5D3FDBB7CF09C40BC8258CA75C0F949AD92F964DEAC98B3 DUP9 DUP1 LOG2 PUSH2 0x7D5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP2 PUSH2 0x880 SWAP2 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0x88B JUMPI DUP6 CODESIZE PUSH2 0x734 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x8BF JUMPI JUMPDEST DUP2 PUSH2 0x8AF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD SWAP3 CODESIZE PUSH2 0x6B3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB4D JUMPI SWAP1 DUP5 SWAP2 DUP9 SWAP2 PUSH2 0xBAF JUMPI JUMPDEST POP LT PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB4D JUMPI SWAP1 DUP5 SWAP2 DUP9 SWAP2 PUSH2 0xB18 JUMPI JUMPDEST POP LT PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 DUP2 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MSTORE DUP8 SWAP2 PUSH2 0x98F PUSH1 0x84 DUP3 PUSH2 0x1CF5 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP11 GAS CALL ISZERO PUSH2 0xAC8 JUMPI DUP5 MLOAD RETURNDATASIZE PUSH2 0xABF JUMPI POP DUP6 EXTCODESIZE ISZERO JUMPDEST PUSH2 0xAAB JUMPI PUSH1 0x2 SLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 DUP6 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA92 JUMPI DUP5 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x69009A13 PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA87 JUMPI DUP6 SWAP2 PUSH2 0xA96 JUMPI JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA92 JUMPI DUP5 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1190DEFD PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA87 JUMPI DUP6 SWAP2 PUSH2 0xA6E JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xAC5B35DB873B0C878683CBEAC0FC736ACD48EA6480742BAFD3BA483DD7158824 PUSH1 0x40 CALLER SWAP3 LOG2 SWAP4 SWAP3 SWAP4 PUSH2 0x678 JUMP JUMPDEST DUP2 PUSH2 0xA78 SWAP2 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0xA83 JUMPI DUP4 CODESIZE PUSH2 0xA32 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP2 PUSH2 0xAA0 SWAP2 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0xA83 JUMPI DUP4 CODESIZE PUSH2 0x9F1 JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP7 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F7374696E6720666565206E6F7420617070726F7665640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB45 JUMPI JUMPDEST DUP2 PUSH2 0xB34 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x949 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420555344542062616C616E636520666F7220686F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7374696E6720666565 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBDC JUMPI JUMPDEST DUP2 PUSH2 0xBCB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x910 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBBE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO ISZERO PUSH2 0x673 JUMP JUMPDEST SWAP1 SWAP6 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC2A JUMPI JUMPDEST DUP2 PUSH2 0xC12 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA92 JUMPI PUSH2 0xC23 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST SWAP5 CODESIZE PUSH2 0x669 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC05 JUMP JUMPDEST SWAP6 SWAP2 POP PUSH1 0x20 DUP7 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC61 JUMPI JUMPDEST DUP2 PUSH2 0xC4E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI SWAP5 MLOAD SWAP1 SWAP5 PUSH1 0x20 PUSH2 0x642 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204D6F6E676F446174614944206C656E677468000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC8 SWAP2 POP GT ISZERO CODESIZE PUSH2 0x609 JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP3 GT ISZERO PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20636F6F6C646F776E2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x75F3FED5 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A8 JUMPI SWAP1 PUSH2 0x404 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0xDB0 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0xDB8 PUSH2 0x2026 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x8 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0xED8 JUMPI POP POP POP DUP3 PUSH2 0xE97 SWAP2 SUB DUP4 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xEBF JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xEB1 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xE81 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 DUP2 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x6D65573F PUSH1 0xE0 SHL DUP6 MSTORE DUP1 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x20 DUP6 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP6 PUSH2 0x104F JUMPI JUMPDEST POP DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x20 DUP3 SWAP6 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x1036 JUMPI POP POP PUSH2 0xF95 SWAP3 POP SUB DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x101F JUMPI PUSH2 0xFAA DUP2 DUP5 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x1014 JUMPI PUSH1 0x80 SWAP2 DUP10 SWAP2 PUSH2 0xFFA JUMPI JUMPDEST POP ADD MLOAD PUSH2 0xFE6 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xF97 JUMP JUMPDEST SWAP4 PUSH2 0xFF2 PUSH1 0x1 SWAP2 PUSH2 0x1EEE JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0xFDE JUMP JUMPDEST PUSH2 0x100E SWAP2 POP RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST CODESIZE PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 DUP8 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xF80 JUMP JUMPDEST SWAP1 SWAP5 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x107B JUMPI JUMPDEST DUP2 PUSH2 0x106B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD SWAP4 CODESIZE PUSH2 0xF5A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x105E JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0x109C PUSH2 0x2068 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x110C PUSH2 0x2068 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1128 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A590818591B5A5B8818DBDB9D1C9858DD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI PUSH2 0x11BA PUSH2 0x2068 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081554D1150818DBDB9D1C9858DD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1230 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1578 JUMPI DUP4 SWAP2 PUSH2 0x155E JUMPI JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1519 JUMPI PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0x14D4 JUMPI PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA87 JUMPI DUP6 SWAP3 PUSH2 0x14B8 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x147C JUMPI PUSH2 0x2710 DUP5 LT ISZERO DUP1 PUSH2 0x146E JUMPI JUMPDEST PUSH2 0x12F3 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH1 0x60 DUP2 ADD SWAP4 PUSH1 0xA0 DUP6 MLOAD SWAP3 ADD MLOAD PUSH1 0x40 MLOAD SWAP3 PUSH2 0x131B DUP5 PUSH2 0x1CC3 JUMP JUMPDEST DUP9 DUP5 MSTORE CALLER PUSH1 0x20 DUP6 ADD MSTORE DUP10 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xA83 JUMPI PUSH2 0x136C DUP5 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x200F JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x215 JUMPI DUP7 SWAP4 PUSH2 0x1451 JUMPI JUMPDEST POP POP SWAP1 DUP2 PUSH2 0x13D3 SWAP4 SWAP3 DUP3 DUP7 DUP10 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SUB PUSH2 0x141A JUMPI JUMPDEST POP POP PUSH2 0x13E3 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x60 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1BDA JUMP JUMPDEST SWAP3 DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP4 CODESIZE PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP12 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP3 CODESIZE PUSH2 0x13B2 JUMP JUMPDEST DUP2 SWAP3 SWAP5 SWAP4 POP SWAP1 PUSH2 0x1460 SWAP2 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0x88B JUMPI SWAP1 DUP4 SWAP1 DUP7 CODESIZE PUSH2 0x137E JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP5 GT ISZERO PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4F6E6C7920686F73742063616E20757064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x14CD SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6574776F726B20616C726561647920696E6163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920686F73742063616E20646561637469766174650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1572 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST CODESIZE PUSH2 0x126A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH2 0x15CF PUSH2 0x2068 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1615 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AF JUMPI DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP3 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x17F6 JUMPI POP POP PUSH2 0x16AD SWAP3 POP SUB DUP3 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x173B JUMPI PUSH2 0x16D1 DUP2 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x1578 JUMPI PUSH1 0x80 SWAP2 DUP5 SWAP2 PUSH2 0x1721 JUMPI JUMPDEST POP ADD MLOAD PUSH2 0x170D JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x16BE JUMP JUMPDEST SWAP3 PUSH2 0x1719 PUSH1 0x1 SWAP2 PUSH2 0x1EEE JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x1735 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST CODESIZE PUSH2 0x16FD JUMP JUMPDEST POP POP SWAP1 PUSH2 0x1747 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST DUP4 SWAP1 DUP5 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x17E0 JUMPI PUSH2 0x175E DUP2 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB4D JUMPI DUP8 SWAP2 PUSH2 0x17C6 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x179C JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x174B JUMP JUMPDEST DUP4 PUSH2 0x17BF SWAP2 PUSH2 0x17AE PUSH1 0x1 SWAP5 SWAP7 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST MSTORE PUSH2 0x17B9 DUP2 DUP6 PUSH2 0x1EC4 JUMP JUMPDEST POP PUSH2 0x1EEE JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0x17DA SWAP2 POP RETURNDATASIZE DUP1 DUP10 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST CODESIZE PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4CB SWAP1 DUP3 ADD DUP6 PUSH2 0x1C5B JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1698 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x222 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x182F PUSH2 0x1CB4 JUMP JUMPDEST SWAP2 PUSH2 0x1838 PUSH2 0x2026 JUMP JUMPDEST PUSH2 0x1840 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8C7 JUMPI DUP7 SWAP3 PUSH2 0x1A54 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x147C JUMPI PUSH2 0x2710 DUP4 LT ISZERO DUP1 PUSH2 0x1A46 JUMPI JUMPDEST PUSH2 0x18A3 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD DUP7 PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO SWAP3 PUSH1 0x60 DUP6 ADD SWAP5 PUSH1 0xA0 DUP7 MLOAD SWAP2 ADD MLOAD SWAP9 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x18CB DUP4 PUSH2 0x1CC3 JUMP JUMPDEST DUP10 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE DUP9 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO SWAP9 DUP10 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x88F JUMPI DUP3 SWAP2 PUSH2 0x191D SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x200F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1014 JUMPI PUSH2 0x1A04 JUMPI JUMPDEST POP SWAP2 DUP5 PUSH2 0x1983 SWAP3 DUP2 DUP6 DUP8 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SUB PUSH2 0x19CD JUMPI JUMPDEST POP POP DUP8 DUP2 SUB PUSH2 0x1996 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x1BDA JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP5 CODESIZE PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP9 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP2 CODESIZE PUSH2 0x195F JUMP JUMPDEST PUSH2 0x1983 SWAP3 DUP7 DUP10 PUSH2 0x1A39 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SWAP6 SWAP12 DUP4 SWAP6 PUSH2 0x1CF5 JUMP JUMPDEST SWAP10 SWAP4 SWAP6 SWAP7 POP POP SWAP3 POP PUSH2 0x192C JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP4 GT ISZERO PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1A69 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0x4E3 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1877 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x215 JUMPI DUP2 SWAP3 PUSH2 0x1B55 JUMPI JUMPDEST POP DUP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x80 PUSH2 0x1ADC DUP3 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x1AEC JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 PUSH2 0x1AF8 PUSH1 0x1 SWAP2 PUSH2 0x1EEE JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x1AE4 JUMP JUMPDEST POP PUSH2 0x1B0A SWAP1 PUSH2 0x1F4A JUMP JUMPDEST DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x17E0 JUMPI PUSH1 0x80 PUSH2 0x1B21 DUP3 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x1B31 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B0C JUMP JUMPDEST SWAP2 PUSH2 0x1B4D PUSH1 0x1 SWAP2 PUSH2 0x1B42 DUP6 DUP8 PUSH2 0x1EC4 JUMP JUMPDEST MLOAD PUSH2 0x17AE DUP3 DUP7 PUSH2 0x1EC4 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x1B29 JUMP JUMPDEST PUSH2 0x1B6A SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x206 DUP2 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST POP SWAP1 CODESIZE PUSH2 0x1AC3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x222 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x222 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2AF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AF JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1BCA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BBA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1BF3 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x1C3C PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1BDA JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C87 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x1CA5 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x1BFF JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1CDF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1CDF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1CDF JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1CDF JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1D79 DUP3 PUSH2 0x1CC3 JUMP JUMPDEST DUP2 SWAP4 DUP2 MLOAD DUP4 MSTORE PUSH2 0x1D8B PUSH1 0x20 DUP4 ADD PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI DUP3 ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP1 MLOAD PUSH2 0x1DC6 DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP3 PUSH2 0x1DD4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x42F JUMPI PUSH2 0x1DF2 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x42F JUMPI PUSH1 0xC0 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x42F JUMPI DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI DUP4 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP2 MLOAD PUSH2 0x1E56 DUP2 PUSH2 0x1D33 JUMP JUMPDEST SWAP3 PUSH2 0x1E64 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x42F JUMPI PUSH1 0x20 DUP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x1E96 JUMPI POP POP POP POP POP PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1EB9 DUP8 DUP5 DUP1 SWAP5 DUP9 ADD ADD PUSH2 0x1D5F JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1E81 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1ED8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1EFD JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F20 DUP3 PUSH2 0x1CC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1F54 DUP3 PUSH2 0x1D33 JUMP JUMPDEST PUSH2 0x1F61 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1CF5 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1F72 PUSH1 0x1F NOT SWAP2 PUSH2 0x1D33 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F83 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1F8E PUSH2 0x1F13 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x1F77 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x42F JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH2 0x1FC0 SWAP3 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1FCA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206F7574206F6620616C6C6F7765642072616E6765000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1FC0 SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x2035 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x2057 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x207C JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF GT 0xB0 SLT 0xE5 ADDRESS 0x24 LOG1 0xBA 0xB2 PC PUSH8 0x8F70F2524FC82673 STOP 0xA7 RETURN DUP6 ORIGIN SDIV PUSH5 0xCFEFED0530 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "530:12815:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12202:26;530:12815;12202:26;;;530:12815;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13302:34;530:12815;13302:34;;;12357:31;530:12815;12357:31;;;530:12815;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;11021:15;530:12815;;;-1:-1:-1;;;11021:51:12;;530:12815;;;11021:51;;;530:12815;;;;;;;;;;;;;;11021:51;;530:12815;;-1:-1:-1;;;;;530:12815:12;11021:51;;;;;;530:12815;11021:51;;530:12815;11021:51;;;530:12815;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;11021:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;530:12815;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;530:12815:12;;-1:-1:-1;;;;;;530:12815:12;;;;;;-1:-1:-1;;;;;530:12815:12;3052:40:0;530:12815:12;;3052:40:0;530:12815:12;;2623:91:0;-1:-1:-1;;;2672:31:0;;530:12815:12;;;;;2672:31:0;;530:12815:12;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;;;;;;1058:38;530:12815;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:3;530:12815;;;;;;;;;;;;;;;;12357:13;530:12815;;;-1:-1:-1;;;12357:31:12;;530:12815;;12357:31;;530:12815;;;;;;-1:-1:-1;;;;;530:12815:12;12357:31;;;;;;;;;;;530:12815;;;-1:-1:-1;;;;;530:12815:12;;;;12357:31;;530:12815;12357:31;;;;;;;;;;;;;;;;;:::i;:::-;;;530:12815;;;;;;12357:31;530:12815;;:::i;:::-;12357:31;;;;;;-1:-1:-1;12357:31:12;;;530:12815;;;;;;;;;;;;;;;;;;;;;;;13302:15;530:12815;;;-1:-1:-1;;;13302:34:12;;530:12815;;13302:34;;530:12815;;;;;;-1:-1:-1;;;;;530:12815:12;13302:34;;;;;;;;;;530:12815;13302:34;530:12815;;;;;;;13302:34;;;;;;;;;;;;530:12815;13302:34;;;:::i;:::-;;;530:12815;;;;13302:34;530:12815;;13302:34;;530:12815;-1:-1:-1;530:12815:12;;13302:34;;;-1:-1:-1;13302:34:12;;530:12815;;;;;;;;;;;;;;;;930:8;530:12815;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;:::i;:::-;-1:-1:-1;8357:15:12;530:12815;;;-1:-1:-1;;;8357:38:12;;530:12815;;;8357:38;;;530:12815;;;;;;8357:38;;530:12815;;-1:-1:-1;;;;;530:12815:12;8357:38;;;;;;;;530:12815;8357:38;;;;530:12815;;;;;;;;;;;;;;;;:::i;:::-;;;;8357:38;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;530:12815;;;;;;;;;;;;;;;;;;;;;;672:33;530:12815;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;;;;1364:9;530:12815;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1315:72:8;;;:::i;:::-;2466:103:9;;:::i;:::-;3127:10:12;530:12815;;3106:20;530:12815;;;;;;1364:9;530:12815;;;;;;;3071:15;:91;530:12815;;845:5;3247:41;;;:102;;;530:12815;3226:175;;;:::i;:::-;530:12815;;3432:30;;;:101;;;;530:12815;;;;;3664:13;530:12815;;;-1:-1:-1;;;3664:26:12;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;3664:26;;;;;;;;;;;530:12815;;;;;;;;;;;;;;3726:31;;;;;;;;;;;;;530:12815;3815:14;;;;:47;;;530:12815;3811:777;;530:12815;4659:15;530:12815;;;-1:-1:-1;;;4659:36:12;;530:12815;;-1:-1:-1;530:12815:12;;;;;;;;;;;;;-1:-1:-1;;;;;530:12815:12;4659:36;;;;;;;;;;;530:12815;;;;;;;;4659:15;530:12815;;;;;;;;;:::i;:::-;;;;3127:10;530:12815;4818:328;;530:12815;4818:328;530:12815;4818:328;;530:12815;4818:328;530:12815;4818:328;;530:12815;;;4818:328;;;;;530:12815;3071:15;4818:328;;;530:12815;3071:15;4818:328;;;530:12815;4755:401;;;;;530:12815;;-1:-1:-1;;;4755:401:12;;530:12815;;;;;;;;;;;4755:401;;;530:12815;4755:401;;;:::i;:::-;;;;;;;;;;;530:12815;3127:10;;;530:12815;;5167:12;530:12815;;;;;;;;;;;;;;;;;;;;;;;;;5510:206;530:12815;;;;;;;;;;;;;;;;5217:13;530:12815;;;;;3127:10;-1:-1:-1;;;;;530:12815:12;;;;;;;;3127:10;530:12815;;3106:20;530:12815;;3071:15;530:12815;;;;3127:10;530:12815;;5330:6;530:12815;;;;;;;;5329:19;5325:115;;530:12815;;;;;4818:328;530:12815;;4818:328;530:12815;;;;:::i;:::-;;;;;;;;;;;;;;3071:15;4818:328;530:12815;;;3127:10;;5510:206;;;;530:12815;;;;;5325:115;3127:10;530:12815;;;5330:6;530:12815;;;;;;;-1:-1:-1;;530:12815:12;;;;;5408:21;530:12815;;5408:21;5325:115;;530:12815;-1:-1:-1;;;530:12815:12;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;4755:401;;;;;:::i;:::-;530:12815;;4755:401;;;;530:12815;;;;4755:401;530:12815;;;4659:36;;;;530:12815;4659:36;;530:12815;4659:36;;;;;;530:12815;4659:36;;;:::i;:::-;;;530:12815;;;;;4659:36;;;;;;;-1:-1:-1;4659:36:12;;;530:12815;;;;;;;;;3811:777;530:12815;;;;;-1:-1:-1;;;3903:26:12;;3127:10;3903:26;;;530:12815;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;3903:26;;;;;;;;;;;;;;3811:777;3903:40;;530:12815;;;;-1:-1:-1;;;4057:41:12;;3127:10;530:12815;4057:41;;530:12815;4092:4;530:12815;;;;;;;;4057:41;;;;;;;;;;;;;;;3811:777;4057:55;;530:12815;;;;-1:-1:-1;;;530:12815:12;1745:53:6;;;;;;3127:10:12;530:12815;1745:53:6;;530:12815:12;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;;;;;1745:53:6;;530:12815:12;;1745:53:6;;530:12815:12;1745:53:6;:::i;:::-;8507:421;;;;;;;;;;;;8942:15;;8960:26;;;:31;8942:68;8938:146;;4386:15:12;530:12815;;;-1:-1:-1;530:12815:12;;;;-1:-1:-1;;;;;;530:12815:12;4386:50;;;;;530:12815;;;;;;;;;;;;;4386:50;;;530:12815;4386:50;;530:12815;4386:50;;;;;;;;;;;8942:68:6;-1:-1:-1;;4386:15:12;530:12815;-1:-1:-1;;;;;530:12815:12;4450:52;;;;;530:12815;;;;;;;;;;;;;4450:52;;;530:12815;4450:52;;530:12815;4450:52;;;;;;;;;;;8942:68:6;530:12815:12;;;;;;;3071:15;530:12815;;;;4522:55;530:12815;3127:10;4522:55;;3811:777;;;;;4450:52;;;;;:::i;:::-;530:12815;;4450:52;;;;530:12815;;;;4450:52;530:12815;;;;;;;;;4450:52;530:12815;;;4386:50;;;;;:::i;:::-;530:12815;;4386:50;;;;8938:146:6;-1:-1:-1;;;9033:40:6;;530:12815:12;;;;;9033:40:6;;8942:68;530:12815:12;8994:16:6;;8942:68;;8507:421;530:12815:12;8507:421:6;;;;;;;;530:12815:12;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;;;;;;;4057:41;;;;530:12815;4057:41;;530:12815;4057:41;;;;;;530:12815;4057:41;;;:::i;:::-;;;530:12815;;;;;;;4057:41;;;;;;-1:-1:-1;4057:41:12;;;530:12815;;;;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;3903:26;;;;530:12815;3903:26;;530:12815;3903:26;;;;;;530:12815;3903:26;;;:::i;:::-;;;530:12815;;;;;;;3903:26;;;;;;-1:-1:-1;3903:26:12;;3815:47;-1:-1:-1;;;;;;530:12815:12;;3833:29;;3815:47;;3726:31;;;;530:12815;3726:31;;530:12815;3726:31;;;;;;530:12815;3726:31;;;:::i;:::-;;;530:12815;;;;;;;:::i;:::-;3726:31;;;;;;;-1:-1:-1;3726:31:12;;3664:26;;;;530:12815;3664:26;;530:12815;3664:26;;;;;;530:12815;3664:26;;;:::i;:::-;;;530:12815;;;;;;3664:26;;530:12815;3664:26;;;;;-1:-1:-1;3664:26:12;;530:12815;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;;;;;;;3432:101;1016:3;3482:51;;;;3432:101;;;3247:102;-1:-1:-1;930:8:12;3308:41;;;3247:102;;530:12815;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;12202:13;530:12815;;;-1:-1:-1;;;12202:26:12;;530:12815;;12202:26;;530:12815;;;;;;-1:-1:-1;;;;;530:12815:12;12202:26;;;;;;;;;;;530:12815;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1315:72:8;;:::i;:::-;530:12815:12;;-1:-1:-1;;;;530:12815:12;-1:-1:-1;;;530:12815:12;;;;;735:10:7;530:12815:12;;2427:20:8;;530:12815:12;;2427:20:8;530:12815:12;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;;;;;1255:55;530:12815;;;;;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;8583:12;530:12815;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;530:12815:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;10155:22;530:12815;;;10253:12;530:12815;;;;;;;;;;;10311:15;530:12815;;;;;;;;;10311:44;;;530:12815;10311:44;;530:12815;;10311:44;;;;;;;;;;;;;;;530:12815;;;;10253:12;530:12815;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10469:13;10507:3;530:12815;;10484:21;;;;;10609:13;;;;:::i;:::-;530:12815;;;;;;;10565:71;;530:12815;10565:71;;530:12815;10565:71;;10311:44;10565:71;;;;;;;;10654:16;10565:71;;;;;10507:3;10654:16;;530:12815;10650:71;;10507:3;530:12815;;10469:13;;10650:71;10690:16;;530:12815;10690:16;;:::i;:::-;10650:71;;;;;10565;;;;;;;;;;;;;:::i;:::-;;;;;530:12815;;;;;;;;;10484:21;530:12815;10484:21;;;530:12815;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;530:12815:12;;;;;;;;10311:44;;;;530:12815;10311:44;;530:12815;10311:44;;;;;;530:12815;10311:44;;;:::i;:::-;;;530:12815;;;;;10311:44;;;;;;;-1:-1:-1;10311:44:12;;530:12815;;;;;;;;;;;;;1500:62:0;;:::i;:::-;530:12815:12;;-1:-1:-1;;;;;;530:12815:12;;;;;;-1:-1:-1;;;;;530:12815:12;3052:40:0;530:12815:12;;3052:40:0;530:12815:12;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;1500:62:0;;:::i;:::-;12582:31:12;;530:12815;;-1:-1:-1;;;;;530:12815:12;;12650:47;530:12815;;;12650:47;530:12815;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;1500:62:0;;:::i;:::-;12848:22:12;;530:12815;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;1315:72:8;;:::i;:::-;7872:15:12;530:12815;;;-1:-1:-1;;;7872:60:12;;530:12815;7872:60;;530:12815;;;;;;;;7872:60;;530:12815;;-1:-1:-1;;;;;530:12815:12;7872:60;;;;;;;;;;;530:12815;-1:-1:-1;530:12815:12;7950:19;;530:12815;-1:-1:-1;;;;;530:12815:12;7973:10;7950:33;530:12815;;8030:16;;;530:12815;;;;;8113:23;;;530:12815;7872:15;530:12815;;;-1:-1:-1;;;5987:60:12;;530:12815;5987:60;;530:12815;;;;;;-1:-1:-1;;;;;530:12815:12;5987:60;530:12815;7872:60;530:12815;;5987:60;;;;;;;;;;;530:12815;-1:-1:-1;530:12815:12;6065:19;;530:12815;7973:10;-1:-1:-1;;;;;530:12815:12;;;6065:29;530:12815;;845:5;6150:41;;;:102;;;530:12815;6129:175;;;:::i;:::-;6373:23;530:12815;6373:23;;530:12815;6423:16;8030;6423;;530:12815;;;6687:19;;;;;6798:17;6687:19;;6798:17;;530:12815;;;;;;;:::i;:::-;;;;7973:10;530:12815;6514:391;;530:12815;6514:391;530:12815;6514:391;;530:12815;6687:19;6514:391;;530:12815;6514:391;8030:16;6514:391;;530:12815;6798:17;6514:391;;530:12815;6875:15;6514:391;;;530:12815;6450:465;;;;;;530:12815;;;;;;;;;;;;;;;;6450:465;;;530:12815;6450:465;;;:::i;:::-;;;;;;;;;;;;;;530:12815;6982:28;;;;530:12815;6982:28;;;;;7237:154;6982:28;;6978:123;;530:12815;7110:112;;;;530:12815;7339:19;;;530:12815;;;;;6687:19;530:12815;;;;6687:19;530:12815;;;;:::i;:::-;;;;;;;7973:10;;7237:154;;;;530:12815;;7110:112;530:12815;7157:54;530:12815;;;;;;;;;;;7157:54;7110:112;;;;6978:123;530:12815;7031:59;530:12815;;;;;;;;;;;7031:59;6978:123;;;;6450:465;;;;;;;;;;:::i;:::-;530:12815;;6450:465;;;;;;;6150:102;-1:-1:-1;930:8:12;6211:41;;;6150:102;;530:12815;;;-1:-1:-1;;;530:12815:12;;;;;;;;7872:60;530:12815;;;-1:-1:-1;;;530:12815:12;;;;;;;5987:60;;;;;;;;;;;;;;:::i;:::-;;;;;530:12815;;;-1:-1:-1;;;530:12815:12;;;;;;;;7872:60;530:12815;;;;;;;;;;;;;;-1:-1:-1;;;530:12815:12;;;;;;;;7872:60;530:12815;;;;;;;;;;;7872:60;;;;;;;;;;;;;:::i;:::-;;;;;530:12815;;;;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;;;;;1158:48;530:12815;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;530:12815:12;;;;;;;2140:9:8;2136:62;;-1:-1:-1;;;;530:12815:12;;;;;735:10:7;530:12815:12;;2674:22:8;;530:12815:12;;2674:22:8;530:12815:12;;2136:62:8;-1:-1:-1;;;2172:15:8;;530:12815:12;2172:15:8;;530:12815:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;8829:12;530:12815;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9044:15;530:12815;8864:23;;-1:-1:-1;;;;;530:12815:12;8864:23;;8986:3;530:12815;;8963:21;;;;;9088:13;;;;:::i;:::-;530:12815;;;;;;;9044:71;;530:12815;9044:71;;530:12815;9044:71;;;;;;;;;;;9133:16;9044:71;;;;;8986:3;9133:16;;530:12815;9129:68;;8986:3;530:12815;;8948:13;;9129:68;9169:13;;530:12815;9169:13;;:::i;:::-;9129:68;;;;;9044:71;;;;;;;;;;;;;:::i;:::-;;;;8963:21;;;;9326:40;8963:21;9326:40;:::i;:::-;9376:17;9408:13;;9446:3;530:12815;;9423:21;;;;;9548:13;;;;:::i;:::-;530:12815;;;;;;;9504:71;;530:12815;9504:71;;530:12815;9504:71;;9044;9504;;;;;;;;;;;;;9446:3;9593:16;9133;9593;;530:12815;9589:111;;9446:3;;530:12815;;9408:13;;9589:111;9629:31;9678:7;9629:31;;530:12815;9629:31;;;;:::i;:::-;;;;;;:::i;:::-;;9678:7;:::i;:::-;9589:111;;;;9504:71;;;;;;;;;;;;;:::i;:::-;;;;9423:21;530:12815;;;;;;;;;;;;9423:21;530:12815;:::i;:::-;;;;;;;;;;;;-1:-1:-1;530:12815:12;;;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;;;;;:::i;:::-;1315:72:8;;;:::i;:::-;2466:103:9;;:::i;:::-;5987:15:12;530:12815;;;-1:-1:-1;;;5987:60:12;;530:12815;5987:60;;530:12815;;;;-1:-1:-1;;;;;530:12815:12;5987:60;530:12815;;;;5987:60;;;;;;;;;;;530:12815;-1:-1:-1;530:12815:12;6065:19;;530:12815;7678:10;-1:-1:-1;;;;;530:12815:12;;;6065:29;530:12815;;845:5;6150:41;;;:102;;;530:12815;6129:175;;;:::i;:::-;530:12815;6373:23;;530:12815;6423:16;;;;530:12815;;;6687:19;530:12815;6687:19;;;6798:17;6687:19;;6798:17;;530:12815;;;;;;;;:::i;:::-;;;;7678:10;530:12815;6514:391;;530:12815;6514:391;530:12815;6514:391;;530:12815;;6514:391;;530:12815;;;6514:391;;6423:16;6514:391;;530:12815;6798:17;6514:391;;530:12815;6875:15;6514:391;;;530:12815;6450:465;;;;;530:12815;;6450:465;530:12815;;;;;;;;;;;;6450:465;;;530:12815;6450:465;;;:::i;:::-;;;;;;;;;;;530:12815;6982:28;;;530:12815;6982:28;;;;7237:154;6982:28;;;6978:123;;530:12815;7114:22;;;;;7110:112;;530:12815;7339:19;;;530:12815;;;;;;;;;;;;;;;:::i;:::-;;;;;;7678:10;;7237:154;;;;530:12815;;;;;7110:112;530:12815;7157:54;530:12815;;;;;;;;;;;7157:54;7110:112;;;;6978:123;530:12815;7031:59;530:12815;;;;;;;;;;;7031:59;6978:123;;;;6450:465;530:12815;6450:465;;;;7237:154;6450:465;;;;;;;:::i;:::-;;;;;;;;;;;6150:102;-1:-1:-1;930:8:12;6211:41;;;6150:102;;5987:60;;;;;;;;;;;;;;:::i;:::-;;;;;530:12815;;;;;;;;;;;;;11331:15;530:12815;;;-1:-1:-1;;;11331:57:12;;530:12815;11331:57;;530:12815;;;11384:3;530:12815;;;;;;;;;;11331:57;;530:12815;;-1:-1:-1;;;;;530:12815:12;11331:57;;;;;;;;;;;530:12815;11398:23;;11476:13;11515:3;530:12815;;11491:22;;;;;11538:23;:14;;;;:::i;:::-;;:23;530:12815;11534:75;;11515:3;530:12815;;11476:13;;11534:75;11581:13;;530:12815;11581:13;;:::i;:::-;11534:75;;;;;11491:22;;11762:40;11491:22;11762:40;:::i;:::-;11812:17;11883:3;530:12815;;11859:22;;;;;11538:23;11906:14;;;;:::i;:::-;;:23;530:12815;11902:125;;11883:3;530:12815;;11844:13;;11902:125;11973:14;12005:7;530:12815;11973:14;;;;;:::i;:::-;;11949:38;;;;:::i;12005:7::-;11902:125;;;;;11331:57;;;;;;;;;;;;;;:::i;:::-;;;;;;530:12815;;;;;;;;;;;;;630:36;530:12815;;;-1:-1:-1;;;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;;;845:5;530:12815;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;530:12815:12;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;530:12815:12;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;530:12815:12;;;;;-1:-1:-1;530:12815:12;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;530:12815:12;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;530:12815:12;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;530:12815:12;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;530:12815:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;530:12815:12;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;530:12815:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1878:128:8:-;530:12815:12;1796:7:8;530:12815:12;;;;1939:61:8;;1878:128::o;1939:61::-;1974:15;;;1796:7;1974:15;;1796:7;1974:15;2575:307:9;1899:1;2702:7;530:12815:12;2702:18:9;2698:86;;1899:1;2702:7;530:12815:12;2575:307:9:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:9;;-1:-1:-1;2743:30:9;1796:162:0;1710:6;530:12815:12;-1:-1:-1;;;;;530:12815:12;735:10:7;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:7;1901:40:0;530:12815:12;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "MAX_MONGO_DATA_LENGTH()": "e67d86f1",
              "MAX_PRICE_PER_SESSION()": "d4f38d04",
              "MIN_PRICE_PER_SESSION()": "09115e97",
              "REGISTRATION_COOLDOWN()": "b0ff6383",
              "adminContract()": "c05c5e94",
              "deactivateNetwork(uint256)": "4b9791e8",
              "getActiveHostNetworks(address)": "2b2a748c",
              "getAllActiveNetworks()": "16cb6eff",
              "getContractStats()": "dfe6b5d6",
              "getCurrentHostingFee()": "89ea28d9",
              "getHostNetworks(address)": "79f0dc57",
              "getHostStats(address)": "764ac734",
              "getHostedNetworkById(uint256)": "cd83fb9a",
              "getNetworksPaginated(uint256,uint256)": "fa9c81a4",
              "getTreasuryAddress()": "e0024604",
              "isHost(address)": "eb2931b7",
              "isRegisteredHost(address)": "867f1a09",
              "lastRegistrationTime(address)": "7f6e8cbf",
              "networkToHost(uint256)": "43355214",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "registerNetwork(uint256,string,bool)": "900e41b1",
              "renounceOwnership()": "715018a6",
              "setAdminContract(address)": "63a812f9",
              "setUsdtContract(address)": "576338a5",
              "storageContract()": "11ce0267",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a",
              "updateNetwork(uint256,uint256,bool)": "1b63fe67",
              "usdt()": "2f48ab7d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storageContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adminContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"HostAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"HostingFeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"NetworkPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"hostingFeePaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NetworkRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldStatus\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newStatus\",\"type\":\"bool\"}],\"name\":\"NetworkStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"NetworkUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_MONGO_DATA_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PRICE_PER_SESSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PRICE_PER_SESSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTRATION_COOLDOWN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminContract\",\"outputs\":[{\"internalType\":\"contract IZaaNetAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"}],\"name\":\"deactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getActiveHostNetworks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllActiveNetworks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalNetworks\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentHostingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostNetworks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalNetworks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeNetworks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEarnings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"}],\"name\":\"getHostedNetworkById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getNetworksPaginated\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"networks\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"totalCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isHost\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"isRegisteredHost\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastRegistrationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkToHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"registerNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdminContract\",\"type\":\"address\"}],\"name\":\"setAdminContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newUsdt\",\"type\":\"address\"}],\"name\":\"setUsdtContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"contract ZaaNetStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"updateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deactivateNetwork(uint256)\":{\"notice\":\"Deactivate a network (soft delete)\"},\"getActiveHostNetworks(address)\":{\"notice\":\"Get active networks for a host\"},\"getAllActiveNetworks()\":{\"notice\":\"Get all active networks (limited to prevent gas issues)\"},\"getContractStats()\":{\"notice\":\"Get contract statistics\"},\"getCurrentHostingFee()\":{\"notice\":\"Get current hosting fee\"},\"getHostNetworks(address)\":{\"notice\":\"Get all network IDs registered by a host\"},\"getHostStats(address)\":{\"notice\":\"Get host statistics\"},\"getHostedNetworkById(uint256)\":{\"notice\":\"Get full network details from storage\"},\"getNetworksPaginated(uint256,uint256)\":{\"notice\":\"Retrieve networks with pagination (gas-optimized)\"},\"getTreasuryAddress()\":{\"notice\":\"Get treasury address\"},\"isRegisteredHost(address)\":{\"notice\":\"Public method to check if an address is a registered host\"},\"pause()\":{\"notice\":\"Emergency pause (only owner)\"},\"registerNetwork(uint256,string,bool)\":{\"notice\":\"Register a new network with mongoDataID and pay hosting fee\"},\"setAdminContract(address)\":{\"notice\":\"Update admin contract address (owner only)\"},\"setUsdtContract(address)\":{\"notice\":\"Update USDT contract address (owner only)\"},\"unpause()\":{\"notice\":\"Unpause (only owner)\"},\"updateNetwork(uint256,uint256,bool)\":{\"notice\":\"Update existing network with new details\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetNetwork.sol\":\"ZaaNetNetwork\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ZaaNetNetwork.sol\":{\"keccak256\":\"0x625813a8e396071ba28ee2d451a718b8d61594b246d5612a9c5c9baebbd14dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e33657b0e178b9ac30aa08a3d4c89d68012afd08c7623181514477eee2a718f2\",\"dweb:/ipfs/QmPVDKcPkkHFXuJwK7Wn1Aj3q2VBiMtQGXj2AbuZLewPWA\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x44d8f24b593205bc37acf477ed961f1a8e7f7dfbcea2141ca98f77f22fdfae9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19b4964e5ccf5c0f2e2bc8c33f15bf1437dc9756ccfaf026adb2ffe5225e48e0\",\"dweb:/ipfs/QmUiKZxyg7oduxqwqUKZUfxzpyRowZ9mFbjziQEVoHpcM9\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetPayment.sol": {
        "IZaaNetAdmin": {
          "abi": [
            {
              "inputs": [],
              "name": "paymentAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "platformFeePercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paymentAddress()": "633423be",
              "platformFeePercent()": "8c639a85",
              "treasuryAddress()": "c5f956af"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"paymentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetPayment.sol\":\"IZaaNetAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ZaaNetPayment.sol\":{\"keccak256\":\"0x83dbc1ed599bc8ea32f8665e102edf3f544fbf1fab6681c4d11c165aa934dc52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb5bac978b64cd89c75405ae0b10e587784eebc0095f5a3a4c0a2bce10d37248\",\"dweb:/ipfs/QmNN2dNabNx75eCSq9W33FfgsBetTp8oZTsYC35JVcPDPK\"]}},\"version\":1}"
        },
        "IZaaNetStorage": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "getNetwork",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IZaaNetStorage.Network",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseHostEarnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseZaaNetEarnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "updateTotalHostingAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "updateTotalPaymentsAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "updateTotalWithdrawalsAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getNetwork(uint256)": "95ea5717",
              "increaseHostEarnings(address,uint256)": "e1c7a8aa",
              "increaseZaaNetEarnings(uint256)": "69009a13",
              "updateTotalHostingAmount(uint256)": "1190defd",
              "updateTotalPaymentsAmount(uint256)": "13a7dd1d",
              "updateTotalWithdrawalsAmount(uint256)": "bed31654"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"getNetwork\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct IZaaNetStorage.Network\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseHostEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseZaaNetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateTotalHostingAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateTotalPaymentsAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateTotalWithdrawalsAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetPayment.sol\":\"IZaaNetStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ZaaNetPayment.sol\":{\"keccak256\":\"0x83dbc1ed599bc8ea32f8665e102edf3f544fbf1fab6681c4d11c165aa934dc52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb5bac978b64cd89c75405ae0b10e587784eebc0095f5a3a4c0a2bce10d37248\",\"dweb:/ipfs/QmNN2dNabNx75eCSq9W33FfgsBetTp8oZTsYC35JVcPDPK\"]}},\"version\":1}"
        },
        "ZaaNetPayment": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_usdt",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_storageContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_adminContract",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "batchSize",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalPlatformFee",
                  "type": "uint256"
                }
              ],
              "name": "BatchPaymentProcessed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "treasury",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "attemptedAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "dailyLimit",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "alreadyWithdrawn",
                  "type": "uint256"
                }
              ],
              "name": "DailyLimitExceeded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "voucherId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "contractId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "payer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "grossAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "platformFee",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "hostAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "PaymentProcessed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_FEERATE_PERCENT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_INDIVIDUAL_PAYMENT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "adminContract",
              "outputs": [
                {
                  "internalType": "contract IZaaNetAdmin",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "contractTokenBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dailyWithdrawalLimit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "dailyWithdrawals",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRemainingDailyLimit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTodayWithdrawals",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_voucherId",
                  "type": "bytes32"
                }
              ],
              "name": "isVoucherProcessed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "contractId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "grossAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "voucherId",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct ZaaNetPayment.BatchPayment[]",
                  "name": "payments",
                  "type": "tuple[]"
                }
              ],
              "name": "processBatchPayments",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_contractId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_grossAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "_voucherId",
                  "type": "bytes32"
                }
              ],
              "name": "processPayment",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "processedVouchers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_erc20",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "rescueERC20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newLimit",
                  "type": "uint256"
                }
              ],
              "name": "setDailyWithdrawalLimit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storageContract",
              "outputs": [
                {
                  "internalType": "contract IZaaNetStorage",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tokenDecimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "usdt",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 669,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 612,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523461025f57606081611e08803803809161001f8285610264565b83398101031261025f576100328161029d565b9061004b60406100446020840161029d565b920161029d565b9033156102495760008054336001600160a01b0319821681178355604051959290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556402540be4006005556001600160a01b031692831561021a57506001600160a01b03169081156101e6576001600160a01b03169182156101b457600280546001600160a01b03198116831790915560405163313ce56760e01b8152909190602081600481855afa9081156101a857600091610165575b506001600160a81b03199092161760a09190911b60ff60a01b1617600255600380546001600160a01b031990811692909217905560048054909116919091179055604051611b5690816102b28239f35b6020813d6020116101a0575b8161017e60209383610264565b8101031261019c57519060ff82168203610199575038610115565b80fd5b5080fd5b3d9150610171565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152600a60248201526961646d696e207a65726f60b01b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b73746f72616765207a65726f60a01b6044820152606490fd5b62461bcd60e51b815260206004820152600a602482015269746f6b656e207a65726f60b01b6044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761028757604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361025f5756fe6080604052600436101561001257600080fd5b6000803560e01c806305483a15146115525780630604bfa41461020257806311ce0267146115295780632f48ab7d1461150057806333770245146114d65780633b97e856146114b25780633f4ba83a146114445780634342482d14610db05780634cf4caa514610d915780635b3c052814610d755780635c975abb14610d50578063715018a614610cf65780637620843a14610cd85780637ddd23e1146105a55780638456cb59146105445780638da5cb5b1461051d5780639e281a98146103765780639e9aed62146102dc578063a15f39e8146102b9578063b2118a8d14610231578063b9a2454414610202578063c05c5e94146101d9578063c4d276bc146101ad5763f2fde38b1461012557600080fd5b346101aa5760203660031901126101aa5761013e6115b0565b610146611a17565b6001600160a01b031680156101965781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b50346101aa57806003193601126101aa5760406020916201518042048152600683522054604051908152f35b50346101aa57806003193601126101aa576004546040516001600160a01b039091168152602090f35b50346101aa5760203660031901126101aa5760ff60406020926004358152600784522054166040519015158152f35b50346101aa5760603660031901126101aa5761024b6115b0565b602435906001600160a01b0382168083036102b557610268611a17565b156102865761028391604435916001600160a01b0316611a82565b80f35b60405162461bcd60e51b81526020600482015260076024820152667a65726f20746f60c81b6044820152606490fd5b8380fd5b50346101aa57806003193601126101aa5760206102d46119e4565b604051908152f35b50346101aa57806003193601126101aa576002546040516370a0823160e01b81523060048201529190602090839060249082906001600160a01b03165afa90811561036a5790610332575b602090604051908152f35b506020813d602011610362575b8161034c602093836115e9565b8101031261035d5760209051610327565b600080fd5b3d915061033f565b604051903d90823e3d90fd5b50346101aa5760403660031901126101aa576103906115b0565b60243561039b611a17565b6001600160a01b038216156104d8578015610494576002546040516370a0823160e01b81523060048201526001600160a01b039091169290602081602481875afa80156104895783908690610453575b6103f792501015611978565b6103ff6119e4565b821161040e5761028392611a82565b60405162461bcd60e51b815260206004820152601e60248201527f45786365656473206461696c79207769746864726177616c206c696d697400006044820152606490fd5b50506020813d602011610481575b8161046e602093836115e9565b8101031261035d57826103f791516103eb565b3d9150610461565b6040513d87823e3d90fd5b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606490fd5b50346101aa57806003193601126101aa57546040516001600160a01b039091168152602090f35b50346101aa57806003193601126101aa5761055d611a17565b610565611a40565b805460ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b50346101aa5760203660031901126101aa5760043567ffffffffffffffff811161082557366023820112156108255780600401359067ffffffffffffffff8211610cd45760248101906024369160608502010111610cd457610605611a40565b61060d611a60565b60018060a01b03600454169160405163319a11df60e11b8152602081600481875afa8015610489578590610c95575b61065191506001600160a01b03163314611635565b80151580610c8a575b15610c5057604051638c639a8560e01b815292849290602085600481845afa948515610c0e578695610c19575b5090602060049261069b6014881115611895565b60405163c5f956af60e01b815293849182905afa918215610c0e578692610bce575b506106d26001600160a01b03831615156118d0565b60035486906001600160a01b03165b848210610afc5750506106f26119e4565b8411610ac15762015180420486526006602052604086206107148582546115c6565b90556002546040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa8015610ab65785908890610a80575b8893925090610761911015611978565b8195825b85811061089957505050508380610829575b505060035484906001600160a01b0316803b15610825578180916024604051809481936313a7dd1d60e01b83528960048401525af1801561081a57610805575b50506107fb7f20eb9f3aebb74816a1325a7477cfa6f6ab692b692cd5930db98bd2d0343b70ca93604051938493846040919493926060820195825260208201520152565b0390a16001805580f35b8161080f916115e9565b6102b55783386107b7565b6040513d84823e3d90fd5b5080fd5b60025461083f92906001600160a01b0316611a82565b60035484906001600160a01b0316803b15610825578180916024604051809481936369009a1360e01b83528a60048401525af1801561081a57610884575b5083610777565b8161088e916115e9565b6102b557833861087d565b6108b06108ab828886979b959661190f565b611935565b60018060a01b03600354168982516024604051809481936395ea571760e01b835260048301525afa908115610a75578a91610a53575b50602082019160646108f98785516119c4565b04946109068685516119d7565b9061092b82602060018060a01b036002541696019560018060a01b0387511690611a82565b60035484516001600160a01b039081169116803b15610a4f576040516370e3d45560e11b81526001600160a01b03929092166004830152602482018490528e908290604490829084905af1908115610a42578e91610a25575b50509086610a186109b86001997fdaec0156f045fe9bffcc686bd77361f536743020f757603c9f1888937cdfc521956115c6565b9e604080870191825181526007602052208a60ff1982541617905551945195898060a01b039051169651604051938493429233869192608093969594919660a084019760018060a01b031684526020840152604083015260608201520152565b0390a40190879291610765565b81610a32919493946115e9565b610a3e57908c38610984565b8c80fd5b8e604051903d90823e3d90fd5b8e80fd5b610a6f91503d808c833e610a6781836115e9565b810190611700565b386108e6565b6040513d8c823e3d90fd5b50506020813d602011610aae575b81610a9b602093836115e9565b8101031261035d57846107619151610751565b3d9150610a8e565b6040513d89823e3d90fd5b60405162461bcd60e51b8152602060048201526013602482015272115e18d959591cc819185a5b1e481b1a5b5a5d606a1b6044820152606490fd5b9094610b0c6108ab87878661190f565b6020810190610b2682518015159081610bbf575b506116c3565b60408101518a526007602052610b4360ff60408c20541615611677565b5191604051926395ea571760e01b845260048401528983602481875afa918215610a7557610b96610b9d936001958d91610ba5575b50610b8860808201511515611817565b604083519101511115611858565b51906115c6565b9501906106e1565b610bb991503d808f833e610a6781836115e9565b38610b78565b6302faf0809150111538610b20565b9091506020813d602011610c06575b81610bea602093836115e9565b81010312610c0257610bfb90611621565b90386106bd565b8580fd5b3d9150610bdd565b6040513d88823e3d90fd5b919094506020823d602011610c48575b81610c36602093836115e9565b8101031261035d579051936020610687565b3d9150610c29565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c69642062617463682073697a6560701b6044820152606490fd5b50603281111561065a565b506020813d602011610ccc575b81610caf602093836115e9565b81010312610cc857610cc361065191611621565b61063c565b8480fd5b3d9150610ca2565b8280fd5b50346101aa57806003193601126101aa576020600554604051908152f35b50346101aa57806003193601126101aa57610d0f611a17565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101aa57806003193601126101aa5760ff6020915460a01c166040519015158152f35b50346101aa57806003193601126101aa57602060405160148152f35b50346101aa57806003193601126101aa5760206040516302faf0808152f35b50346101aa5760603660031901126101aa57602435600435604435610dd3611a40565b610ddb611a60565b6201518042048085526006602052610df78460408720546115c6565b906005548083116113a9575085526006602052604085205560018060a01b036004541660405163319a11df60e11b8152602081600481855afa8015610c0e57869061136e575b610e5291506001600160a01b03163314611635565b8185526007602052610e6b60ff60408720541615611677565b83151580611360575b610e7d906116c3565b6003546040516395ea571760e01b815260048101859052908690829060249082906001600160a01b03165afa908115610c0e578691611346575b50610ec760808201511515611817565b610ed76040820151861015611858565b604051638c639a8560e01b8152602081600481865afa908115610ab6578791611314575b50610f096014821115611895565b60405163c5f956af60e01b815292602084600481845afa9384156112c85788946112d3575b50600490602090610f496001600160a01b03871615156118d0565b60405163319a11df60e11b815292839182905afa9081156112c857889161128a575b506001600160a01b0316801561125357606491610f8c610fa9923314611635565b858952600760205260408920805460ff19166001179055876119c4565b04610fb481876119d7565b9160018060a01b0360025416936040516370a0823160e01b8152306004820152602081602481895afa908115610a75578a9161121d575b50610ff684866115c6565b116111c6576110158460208594019660018060a01b0388511690611a82565b81151591826111a9575b505060035484516001600160a01b03918216918a9116823b15610825576040516370e3d45560e11b81526001600160a01b0391909116600482015260248101869052918290604490829084905af1801561119e5761118a575b50611130575b60035487906001600160a01b0316803b15610825578180916024604051809481936313a7dd1d60e01b83528d60048401525af1801561081a57611117575b5050915160408051338152602081019790975286019290925260608501524260808501526001600160a01b0316927fdaec0156f045fe9bffcc686bd77361f536743020f757603c9f1888937cdfc5219060a090a46001805580f35b81611121916115e9565b61112c5786386110bc565b8680fd5b60035487906001600160a01b0316803b15610825578180916024604051809481936369009a1360e01b83528860048401525af1801561081a57611175575b505061107e565b8161117f916115e9565b61112c57863861116e565b88611197919992996115e9565b9638611078565b6040513d8b823e3d90fd5b6002546111bf92906001600160a01b0316611a82565b388261101f565b60405162461bcd60e51b815260206004820152602960248201527f496e73756666696369656e7420636f6e74726163742062616c616e636520666f6044820152681c881c185e5b595b9d60ba1b6064820152608490fd5b90506020813d60201161124b575b81611238602093836115e9565b81010312611247575138610feb565b8980fd5b3d915061122b565b60405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c185e5b595b9d608a1b6044820152606490fd5b90506020813d6020116112c0575b816112a5602093836115e9565b810103126112bc576112b690611621565b38610f6b565b8780fd5b3d9150611298565b6040513d8a823e3d90fd5b9093506020813d60201161130c575b816112ef602093836115e9565b810103126112bc576020611304600492611621565b949150610f2e565b3d91506112e2565b90506020813d60201161133e575b8161132f602093836115e9565b8101031261112c575138610efb565b3d9150611322565b61135a91503d8088833e610a6781836115e9565b38610eb7565b506302faf080841115610e74565b506020813d6020116113a1575b81611388602093836115e9565b81010312610c025761139c610e5291611621565b610e3d565b3d915061137b565b7fef6aa729d47e0c1661366cdf3d3e7bc905d9ef1ff95f7b5a9da45090f6ca88f3906040888894815260066020522054906113fc6040519283923396846040919493926060820195825260208201520152565b0390a260405162461bcd60e51b815260206004820152601f60248201527f4461696c79207769746864726177616c206c696d6974206578636565646564006044820152606490fd5b50346101aa57806003193601126101aa5761145d611a17565b805460ff8160a01c16156114a35760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b50346101aa57806003193601126101aa57602060ff60025460a01c16604051908152f35b50346101aa5760203660031901126101aa5760406020916004358152600683522054604051908152f35b50346101aa57806003193601126101aa576002546040516001600160a01b039091168152602090f35b50346101aa57806003193601126101aa576003546040516001600160a01b039091168152602090f35b50346101aa5760203660031901126101aa5760043561156f611a17565b801561157b5760055580f35b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081b1a5b5a5d609a1b6044820152606490fd5b600435906001600160a01b038216820361035d57565b919082018092116115d357565b634e487b7160e01b600052601160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761160b57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361035d57565b1561163c57565b60405162461bcd60e51b81526020600482015260136024820152724e6f74207061796d656e74206164647265737360681b6044820152606490fd5b1561167e57565b60405162461bcd60e51b815260206004820152601960248201527f566f756368657220616c72656164792070726f636573736564000000000000006044820152606490fd5b156116ca57565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b60208183031261035d5780519067ffffffffffffffff821161035d570160e08183031261035d576040519160e0830183811067ffffffffffffffff82111761160b576040528151835261175560208301611621565b602084015260408201516040840152606082015167ffffffffffffffff811161035d57820181601f8201121561035d5780519067ffffffffffffffff821161160b57604051926117af601f8401601f1916602001856115e9565b8284526020838301011161035d5760005b8281106118025750506020600091830101526060830152608081015190811515820361035d5760c091608084015260a081015160a0840152015160c082015290565b806020809284010151828287010152016117c0565b1561181e57565b60405162461bcd60e51b81526020600482015260126024820152714e6574776f726b206e6f742061637469766560701b6044820152606490fd5b1561185f57565b60405162461bcd60e51b815260206004820152600e60248201526d416d6f756e7420746f6f206c6f7760901b6044820152606490fd5b1561189c57565b60405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606490fd5b156118d757565b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420747265617375727960801b6044820152606490fd5b919081101561191f576060020190565b634e487b7160e01b600052603260045260246000fd5b60608136031261035d5760405190606082019082821067ffffffffffffffff83111761160b57604091825280358352602081013560208401520135604082015290565b1561197f57565b60405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606490fd5b818102929181159184041417156115d357565b919082039182116115d357565b62015180420460009081526006602052604090205460055490818110611a0b575050600090565b611a14916119d7565b90565b6000546001600160a01b03163303611a2b57565b63118cdaa760e01b6000523360045260246000fd5b60ff60005460a01c16611a4f57565b63d93c066560e01b60005260046000fd5b600260015414611a71576002600155565b633ee5aeb560e01b60005260046000fd5b60405163a9059cbb60e01b60208083019182526001600160a01b039490941660248301526044808301959095529381529092600091611ac26064826115e9565b519082855af115611b14576000513d611b0b57506001600160a01b0381163b155b611aea5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415611ae3565b6040513d6000823e3d90fdfea2646970667358221220444aace8aea35e832a8f338747915d135096031eb45a418812052fd54c61333764736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x25F JUMPI PUSH1 0x60 DUP2 PUSH2 0x1E08 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1F DUP3 DUP6 PUSH2 0x264 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x25F JUMPI PUSH2 0x32 DUP2 PUSH2 0x29D JUMP JUMPDEST SWAP1 PUSH2 0x4B PUSH1 0x40 PUSH2 0x44 PUSH1 0x20 DUP5 ADD PUSH2 0x29D JUMP JUMPDEST SWAP3 ADD PUSH2 0x29D JUMP JUMPDEST SWAP1 CALLER ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP6 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH5 0x2540BE400 PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x21A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x165 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND OR PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1B56 SWAP1 DUP2 PUSH2 0x2B2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A0 JUMPI JUMPDEST DUP2 PUSH2 0x17E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x264 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19C JUMPI MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x199 JUMPI POP CODESIZE PUSH2 0x115 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x61646D696E207A65726F PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x73746F72616765207A65726F PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x746F6B656E207A65726F PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x287 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x25F JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5483A15 EQ PUSH2 0x1552 JUMPI DUP1 PUSH4 0x604BFA4 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x1529 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1500 JUMPI DUP1 PUSH4 0x33770245 EQ PUSH2 0x14D6 JUMPI DUP1 PUSH4 0x3B97E856 EQ PUSH2 0x14B2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1444 JUMPI DUP1 PUSH4 0x4342482D EQ PUSH2 0xDB0 JUMPI DUP1 PUSH4 0x4CF4CAA5 EQ PUSH2 0xD91 JUMPI DUP1 PUSH4 0x5B3C0528 EQ PUSH2 0xD75 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xD50 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCF6 JUMPI DUP1 PUSH4 0x7620843A EQ PUSH2 0xCD8 JUMPI DUP1 PUSH4 0x7DDD23E1 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x9E9AED62 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA15F39E8 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xB2118A8D EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xB9A24544 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xC05C5E94 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xC4D276BC EQ PUSH2 0x1AD JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH2 0x13E PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x196 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH2 0x24B PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0x2B5 JUMPI PUSH2 0x268 PUSH2 0x1A17 JUMP JUMPDEST ISZERO PUSH2 0x286 JUMPI PUSH2 0x283 SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A82 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x7A65726F20746F PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x20 PUSH2 0x2D4 PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x36A JUMPI SWAP1 PUSH2 0x332 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x362 JUMPI JUMPDEST DUP2 PUSH2 0x34C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x35D JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x327 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH2 0x390 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x39B PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x4D8 JUMPI DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x489 JUMPI DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x453 JUMPI JUMPDEST PUSH2 0x3F7 SWAP3 POP LT ISZERO PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0x19E4 JUMP JUMPDEST DUP3 GT PUSH2 0x40E JUMPI PUSH2 0x283 SWAP3 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206461696C79207769746864726177616C206C696D69740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x481 JUMPI JUMPDEST DUP2 PUSH2 0x46E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x35D JUMPI DUP3 PUSH2 0x3F7 SWAP2 MLOAD PUSH2 0x3EB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH2 0x55D PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x565 PUSH2 0x1A40 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x825 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x825 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xCD4 JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 PUSH1 0x60 DUP6 MUL ADD ADD GT PUSH2 0xCD4 JUMPI PUSH2 0x605 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x60D PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP2 PUSH1 0x40 MLOAD PUSH4 0x319A11DF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x489 JUMPI DUP6 SWAP1 PUSH2 0xC95 JUMPI JUMPDEST PUSH2 0x651 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1635 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xC8A JUMPI JUMPDEST ISZERO PUSH2 0xC50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8C639A85 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP5 SWAP3 SWAP1 PUSH1 0x20 DUP6 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xC0E JUMPI DUP7 SWAP6 PUSH2 0xC19 JUMPI JUMPDEST POP SWAP1 PUSH1 0x20 PUSH1 0x4 SWAP3 PUSH2 0x69B PUSH1 0x14 DUP9 GT ISZERO PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xC0E JUMPI DUP7 SWAP3 PUSH2 0xBCE JUMPI JUMPDEST POP PUSH2 0x6D2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST DUP5 DUP3 LT PUSH2 0xAFC JUMPI POP POP PUSH2 0x6F2 PUSH2 0x19E4 JUMP JUMPDEST DUP5 GT PUSH2 0xAC1 JUMPI PUSH3 0x15180 TIMESTAMP DIV DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 PUSH2 0x714 DUP6 DUP3 SLOAD PUSH2 0x15C6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0xAB6 JUMPI DUP6 SWAP1 DUP9 SWAP1 PUSH2 0xA80 JUMPI JUMPDEST DUP9 SWAP4 SWAP3 POP SWAP1 PUSH2 0x761 SWAP2 LT ISZERO PUSH2 0x1978 JUMP JUMPDEST DUP2 SWAP6 DUP3 JUMPDEST DUP6 DUP2 LT PUSH2 0x899 JUMPI POP POP POP POP DUP4 DUP1 PUSH2 0x829 JUMPI JUMPDEST POP POP PUSH1 0x3 SLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x825 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x13A7DD1D PUSH1 0xE0 SHL DUP4 MSTORE DUP10 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x81A JUMPI PUSH2 0x805 JUMPI JUMPDEST POP POP PUSH2 0x7FB PUSH32 0x20EB9F3AEBB74816A1325A7477CFA6F6AB692B692CD5930DB98BD2D0343B70CA SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x80F SWAP2 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x2B5 JUMPI DUP4 CODESIZE PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x83F SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x825 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x69009A13 PUSH1 0xE0 SHL DUP4 MSTORE DUP11 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x81A JUMPI PUSH2 0x884 JUMPI JUMPDEST POP DUP4 PUSH2 0x777 JUMP JUMPDEST DUP2 PUSH2 0x88E SWAP2 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x2B5 JUMPI DUP4 CODESIZE PUSH2 0x87D JUMP JUMPDEST PUSH2 0x8B0 PUSH2 0x8AB DUP3 DUP9 DUP7 SWAP8 SWAP12 SWAP6 SWAP7 PUSH2 0x190F JUMP JUMPDEST PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP10 DUP3 MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA75 JUMPI DUP11 SWAP2 PUSH2 0xA53 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x64 PUSH2 0x8F9 DUP8 DUP6 MLOAD PUSH2 0x19C4 JUMP JUMPDEST DIV SWAP5 PUSH2 0x906 DUP7 DUP6 MLOAD PUSH2 0x19D7 JUMP JUMPDEST SWAP1 PUSH2 0x92B DUP3 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP7 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 MLOAD AND SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH4 0x70E3D455 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP15 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA42 JUMPI DUP15 SWAP2 PUSH2 0xA25 JUMPI JUMPDEST POP POP SWAP1 DUP7 PUSH2 0xA18 PUSH2 0x9B8 PUSH1 0x1 SWAP10 PUSH32 0xDAEC0156F045FE9BFFCC686BD77361F536743020F757603C9F1888937CDFC521 SWAP6 PUSH2 0x15C6 JUMP JUMPDEST SWAP15 PUSH1 0x40 DUP1 DUP8 ADD SWAP2 DUP3 MLOAD DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 DUP11 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD SWAP5 MLOAD SWAP6 DUP10 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP7 MLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 CALLER DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH1 0xA0 DUP5 ADD SWAP8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 ADD SWAP1 DUP8 SWAP3 SWAP2 PUSH2 0x765 JUMP JUMPDEST DUP2 PUSH2 0xA32 SWAP2 SWAP5 SWAP4 SWAP5 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0xA3E JUMPI SWAP1 DUP13 CODESIZE PUSH2 0x984 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP15 PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP15 DUP1 REVERT JUMPDEST PUSH2 0xA6F SWAP2 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0xA67 DUP2 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1700 JUMP JUMPDEST CODESIZE PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xAAE JUMPI JUMPDEST DUP2 PUSH2 0xA9B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x35D JUMPI DUP5 PUSH2 0x761 SWAP2 MLOAD PUSH2 0x751 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115E18D959591CC819185A5B1E481B1A5B5A5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP5 PUSH2 0xB0C PUSH2 0x8AB DUP8 DUP8 DUP7 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB26 DUP3 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xBBF JUMPI JUMPDEST POP PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP11 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xB43 PUSH1 0xFF PUSH1 0x40 DUP13 KECCAK256 SLOAD AND ISZERO PUSH2 0x1677 JUMP JUMPDEST MLOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP10 DUP4 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA75 JUMPI PUSH2 0xB96 PUSH2 0xB9D SWAP4 PUSH1 0x1 SWAP6 DUP14 SWAP2 PUSH2 0xBA5 JUMPI JUMPDEST POP PUSH2 0xB88 PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 DUP4 MLOAD SWAP2 ADD MLOAD GT ISZERO PUSH2 0x1858 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x15C6 JUMP JUMPDEST SWAP6 ADD SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0xBB9 SWAP2 POP RETURNDATASIZE DUP1 DUP16 DUP4 RETURNDATACOPY PUSH2 0xA67 DUP2 DUP4 PUSH2 0x15E9 JUMP JUMPDEST CODESIZE PUSH2 0xB78 JUMP JUMPDEST PUSH4 0x2FAF080 SWAP2 POP GT ISZERO CODESIZE PUSH2 0xB20 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC06 JUMPI JUMPDEST DUP2 PUSH2 0xBEA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC02 JUMPI PUSH2 0xBFB SWAP1 PUSH2 0x1621 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x6BD JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP5 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC48 JUMPI JUMPDEST DUP2 PUSH2 0xC36 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x35D JUMPI SWAP1 MLOAD SWAP4 PUSH1 0x20 PUSH2 0x687 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642062617463682073697A65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x32 DUP2 GT ISZERO PUSH2 0x65A JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCCC JUMPI JUMPDEST DUP2 PUSH2 0xCAF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xCC8 JUMPI PUSH2 0xCC3 PUSH2 0x651 SWAP2 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCA2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH2 0xD0F PUSH2 0x1A17 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2FAF080 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xDD3 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0xDDB PUSH2 0x1A60 JUMP JUMPDEST PUSH3 0x15180 TIMESTAMP DIV DUP1 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0xDF7 DUP5 PUSH1 0x40 DUP8 KECCAK256 SLOAD PUSH2 0x15C6 JUMP JUMPDEST SWAP1 PUSH1 0x5 SLOAD DUP1 DUP4 GT PUSH2 0x13A9 JUMPI POP DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x319A11DF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xC0E JUMPI DUP7 SWAP1 PUSH2 0x136E JUMPI JUMPDEST PUSH2 0xE52 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1635 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xE6B PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x1677 JUMP JUMPDEST DUP4 ISZERO ISZERO DUP1 PUSH2 0x1360 JUMPI JUMPDEST PUSH2 0xE7D SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP7 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC0E JUMPI DUP7 SWAP2 PUSH2 0x1346 JUMPI JUMPDEST POP PUSH2 0xEC7 PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH2 0x1817 JUMP JUMPDEST PUSH2 0xED7 PUSH1 0x40 DUP3 ADD MLOAD DUP7 LT ISZERO PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8C639A85 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAB6 JUMPI DUP8 SWAP2 PUSH2 0x1314 JUMPI JUMPDEST POP PUSH2 0xF09 PUSH1 0x14 DUP3 GT ISZERO PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 PUSH1 0x20 DUP5 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x12C8 JUMPI DUP9 SWAP5 PUSH2 0x12D3 JUMPI JUMPDEST POP PUSH1 0x4 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0xF49 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO ISZERO PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x319A11DF PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12C8 JUMPI DUP9 SWAP2 PUSH2 0x128A JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1253 JUMPI PUSH1 0x64 SWAP2 PUSH2 0xF8C PUSH2 0xFA9 SWAP3 CALLER EQ PUSH2 0x1635 JUMP JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP8 PUSH2 0x19C4 JUMP JUMPDEST DIV PUSH2 0xFB4 DUP2 DUP8 PUSH2 0x19D7 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP4 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA75 JUMPI DUP11 SWAP2 PUSH2 0x121D JUMPI JUMPDEST POP PUSH2 0xFF6 DUP5 DUP7 PUSH2 0x15C6 JUMP JUMPDEST GT PUSH2 0x11C6 JUMPI PUSH2 0x1015 DUP5 PUSH1 0x20 DUP6 SWAP5 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 MLOAD AND SWAP1 PUSH2 0x1A82 JUMP JUMPDEST DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x11A9 JUMPI JUMPDEST POP POP PUSH1 0x3 SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP11 SWAP2 AND DUP3 EXTCODESIZE ISZERO PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70E3D455 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x119E JUMPI PUSH2 0x118A JUMPI JUMPDEST POP PUSH2 0x1130 JUMPI JUMPDEST PUSH1 0x3 SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x825 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x13A7DD1D PUSH1 0xE0 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x81A JUMPI PUSH2 0x1117 JUMPI JUMPDEST POP POP SWAP2 MLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP6 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH32 0xDAEC0156F045FE9BFFCC686BD77361F536743020F757603C9F1888937CDFC521 SWAP1 PUSH1 0xA0 SWAP1 LOG4 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x1121 SWAP2 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x112C JUMPI DUP7 CODESIZE PUSH2 0x10BC JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x825 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x69009A13 PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x81A JUMPI PUSH2 0x1175 JUMPI JUMPDEST POP POP PUSH2 0x107E JUMP JUMPDEST DUP2 PUSH2 0x117F SWAP2 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x112C JUMPI DUP7 CODESIZE PUSH2 0x116E JUMP JUMPDEST DUP9 PUSH2 0x1197 SWAP2 SWAP10 SWAP3 SWAP10 PUSH2 0x15E9 JUMP JUMPDEST SWAP7 CODESIZE PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x11BF SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A82 JUMP JUMPDEST CODESIZE DUP3 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1C881C185E5B595B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x124B JUMPI JUMPDEST DUP2 PUSH2 0x1238 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1247 JUMPI MLOAD CODESIZE PUSH2 0xFEB JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x122B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081C185E5B595B9D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x12C0 JUMPI JUMPDEST DUP2 PUSH2 0x12A5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x12BC JUMPI PUSH2 0x12B6 SWAP1 PUSH2 0x1621 JUMP JUMPDEST CODESIZE PUSH2 0xF6B JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x130C JUMPI JUMPDEST DUP2 PUSH2 0x12EF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x12BC JUMPI PUSH1 0x20 PUSH2 0x1304 PUSH1 0x4 SWAP3 PUSH2 0x1621 JUMP JUMPDEST SWAP5 SWAP2 POP PUSH2 0xF2E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x12E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x133E JUMPI JUMPDEST DUP2 PUSH2 0x132F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x112C JUMPI MLOAD CODESIZE PUSH2 0xEFB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x135A SWAP2 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0xA67 DUP2 DUP4 PUSH2 0x15E9 JUMP JUMPDEST CODESIZE PUSH2 0xEB7 JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP5 GT ISZERO PUSH2 0xE74 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13A1 JUMPI JUMPDEST DUP2 PUSH2 0x1388 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC02 JUMPI PUSH2 0x139C PUSH2 0xE52 SWAP2 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x137B JUMP JUMPDEST PUSH32 0xEF6AA729D47E0C1661366CDF3D3E7BC905D9EF1FF95F7B5A9DA45090F6CA88F3 SWAP1 PUSH1 0x40 DUP9 DUP9 SWAP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0x13FC PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461696C79207769746864726177616C206C696D697420657863656564656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH2 0x145D PUSH2 0x1A17 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x14A3 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x156F PUSH2 0x1A17 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x157B JUMPI PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081B1A5B5A5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x35D JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x15D3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x160B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x35D JUMPI JUMP JUMPDEST ISZERO PUSH2 0x163C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F74207061796D656E742061646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x167E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F756368657220616C72656164792070726F63657373656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x16CA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x35D JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x35D JUMPI ADD PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0xE0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x160B JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP4 MSTORE PUSH2 0x1755 PUSH1 0x20 DUP4 ADD PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x35D JUMPI DUP3 ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x35D JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x160B JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x17AF PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x15E9 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x35D JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1802 JUMPI POP POP PUSH1 0x20 PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x35D JUMPI PUSH1 0xC0 SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x17C0 JUMP JUMPDEST ISZERO PUSH2 0x181E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6574776F726B206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x185F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x416D6F756E7420746F6F206C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x189C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18D7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207472656173757279 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x191F JUMPI PUSH1 0x60 MUL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 CALLDATASIZE SUB SLT PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x160B JUMPI PUSH1 0x40 SWAP2 DUP3 MSTORE DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x197F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x15D3 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x15D3 JUMPI JUMP JUMPDEST PUSH3 0x15180 TIMESTAMP DIV PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x5 SLOAD SWAP1 DUP2 DUP2 LT PUSH2 0x1A0B JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1A14 SWAP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1A2B JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1A4F JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1A71 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP2 MSTORE SWAP1 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1AC2 PUSH1 0x64 DUP3 PUSH2 0x15E9 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x1B14 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x1B0B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1AEA JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO BLOBBASEFEE 0xAC 0xE8 0xAE LOG3 MCOPY DUP4 0x2A DUP16 CALLER DUP8 SELFBALANCE SWAP2 TSTORE SGT POP SWAP7 SUB 0x1E 0xB4 GAS COINBASE DUP9 SLT SDIV 0x2F 0xD5 0x4C PUSH2 0x3337 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "1327:12932:13:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;3691:10;;1273:26:0;1269:95;;-1:-1:-1;1327:12932:13;;3691:10;-1:-1:-1;;;;;;1327:12932:13;;;;;;;;;;3691:10;;-1:-1:-1;;;;;1327:12932:13;;3052:40:0;;-1:-1:-1;3052:40:0;1857:1:9;1327:12932:13;;1929:17;;1327:12932;-1:-1:-1;;;;;1327:12932:13;;3721:19;;1327:12932;;-1:-1:-1;;;;;;1327:12932:13;;3773:30;;1327:12932;;-1:-1:-1;;;;;1327:12932:13;;3838:28;;1327:12932;;3892:20;1327:12932;;-1:-1:-1;;;;;;1327:12932:13;;;;;;;;;-1:-1:-1;;;3938:32:13;;1327:12932;;;;;3938:32;1327:12932;;3938:32;;;;;;;-1:-1:-1;3938:32:13;;;-1:-1:-1;;;;;;;;1327:12932:13;;;;;;;;;-1:-1:-1;;;1327:12932:13;;3892:20;1327:12932;3981:50;1327:12932;;-1:-1:-1;;;;;;1327:12932:13;;;;;;;;;3938:32;1327:12932;;;;;;;;;;;;;;;;;;;;3938:32;1327:12932;3938:32;;1327:12932;3938:32;;;;;;1327:12932;3938:32;;;:::i;:::-;;;1327:12932;;;;;;;;;;;;;3938:32;;;;1327:12932;;;;;;;3938:32;;;-1:-1:-1;3938:32:13;;;1327:12932;;;-1:-1:-1;1327:12932:13;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;1327:12932:13;;-1:-1:-1;1322:31:0;1327:12932:13;-1:-1:-1;1327:12932:13;;;;;;;-1:-1:-1;;1327:12932:13;;;;-1:-1:-1;;;;;1327:12932:13;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1327:12932:13;;;;;-1:-1:-1;1327:12932:13;;;;-1:-1:-1;;;;;1327:12932:13;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 5552,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 5665,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_struct_Network_fromMemory": {
                  "entryPoint": 5888,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "calldata_array_index_access_struct_BatchPayment_calldata_dyn_calldata": {
                  "entryPoint": 6415,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 5574,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 6596,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 6615,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "convert_struct_BatchPayment_calldata_to_struct_BatchPayment": {
                  "entryPoint": 6453,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 5609,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 6679,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getRemainingDailyLimit": {
                  "entryPoint": 6628,
                  "id": 3942,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 6752,
                  "id": 992,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 6720,
                  "id": 897,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_safeTransfer": {
                  "entryPoint": 6786,
                  "id": 386,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_2fd1": {
                  "entryPoint": 5827,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_48d9": {
                  "entryPoint": 6293,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_70ad": {
                  "entryPoint": 5685,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_7d1e": {
                  "entryPoint": 6167,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_842f": {
                  "entryPoint": 6352,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_d935": {
                  "entryPoint": 5751,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ec83": {
                  "entryPoint": 6520,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_eee5": {
                  "entryPoint": 6232,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5483A15 EQ PUSH2 0x1552 JUMPI DUP1 PUSH4 0x604BFA4 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x1529 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1500 JUMPI DUP1 PUSH4 0x33770245 EQ PUSH2 0x14D6 JUMPI DUP1 PUSH4 0x3B97E856 EQ PUSH2 0x14B2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1444 JUMPI DUP1 PUSH4 0x4342482D EQ PUSH2 0xDB0 JUMPI DUP1 PUSH4 0x4CF4CAA5 EQ PUSH2 0xD91 JUMPI DUP1 PUSH4 0x5B3C0528 EQ PUSH2 0xD75 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xD50 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCF6 JUMPI DUP1 PUSH4 0x7620843A EQ PUSH2 0xCD8 JUMPI DUP1 PUSH4 0x7DDD23E1 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x9E9AED62 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA15F39E8 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xB2118A8D EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xB9A24544 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xC05C5E94 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xC4D276BC EQ PUSH2 0x1AD JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH2 0x13E PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x196 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH2 0x24B PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0x2B5 JUMPI PUSH2 0x268 PUSH2 0x1A17 JUMP JUMPDEST ISZERO PUSH2 0x286 JUMPI PUSH2 0x283 SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A82 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x7A65726F20746F PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x20 PUSH2 0x2D4 PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x36A JUMPI SWAP1 PUSH2 0x332 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x362 JUMPI JUMPDEST DUP2 PUSH2 0x34C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x35D JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x327 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH2 0x390 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x39B PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x4D8 JUMPI DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x489 JUMPI DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x453 JUMPI JUMPDEST PUSH2 0x3F7 SWAP3 POP LT ISZERO PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0x19E4 JUMP JUMPDEST DUP3 GT PUSH2 0x40E JUMPI PUSH2 0x283 SWAP3 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206461696C79207769746864726177616C206C696D69740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x481 JUMPI JUMPDEST DUP2 PUSH2 0x46E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x35D JUMPI DUP3 PUSH2 0x3F7 SWAP2 MLOAD PUSH2 0x3EB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH2 0x55D PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x565 PUSH2 0x1A40 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x825 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x825 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xCD4 JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 PUSH1 0x60 DUP6 MUL ADD ADD GT PUSH2 0xCD4 JUMPI PUSH2 0x605 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x60D PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP2 PUSH1 0x40 MLOAD PUSH4 0x319A11DF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x489 JUMPI DUP6 SWAP1 PUSH2 0xC95 JUMPI JUMPDEST PUSH2 0x651 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1635 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xC8A JUMPI JUMPDEST ISZERO PUSH2 0xC50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8C639A85 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP5 SWAP3 SWAP1 PUSH1 0x20 DUP6 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xC0E JUMPI DUP7 SWAP6 PUSH2 0xC19 JUMPI JUMPDEST POP SWAP1 PUSH1 0x20 PUSH1 0x4 SWAP3 PUSH2 0x69B PUSH1 0x14 DUP9 GT ISZERO PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xC0E JUMPI DUP7 SWAP3 PUSH2 0xBCE JUMPI JUMPDEST POP PUSH2 0x6D2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST DUP5 DUP3 LT PUSH2 0xAFC JUMPI POP POP PUSH2 0x6F2 PUSH2 0x19E4 JUMP JUMPDEST DUP5 GT PUSH2 0xAC1 JUMPI PUSH3 0x15180 TIMESTAMP DIV DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 PUSH2 0x714 DUP6 DUP3 SLOAD PUSH2 0x15C6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0xAB6 JUMPI DUP6 SWAP1 DUP9 SWAP1 PUSH2 0xA80 JUMPI JUMPDEST DUP9 SWAP4 SWAP3 POP SWAP1 PUSH2 0x761 SWAP2 LT ISZERO PUSH2 0x1978 JUMP JUMPDEST DUP2 SWAP6 DUP3 JUMPDEST DUP6 DUP2 LT PUSH2 0x899 JUMPI POP POP POP POP DUP4 DUP1 PUSH2 0x829 JUMPI JUMPDEST POP POP PUSH1 0x3 SLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x825 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x13A7DD1D PUSH1 0xE0 SHL DUP4 MSTORE DUP10 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x81A JUMPI PUSH2 0x805 JUMPI JUMPDEST POP POP PUSH2 0x7FB PUSH32 0x20EB9F3AEBB74816A1325A7477CFA6F6AB692B692CD5930DB98BD2D0343B70CA SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x80F SWAP2 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x2B5 JUMPI DUP4 CODESIZE PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x83F SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x825 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x69009A13 PUSH1 0xE0 SHL DUP4 MSTORE DUP11 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x81A JUMPI PUSH2 0x884 JUMPI JUMPDEST POP DUP4 PUSH2 0x777 JUMP JUMPDEST DUP2 PUSH2 0x88E SWAP2 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x2B5 JUMPI DUP4 CODESIZE PUSH2 0x87D JUMP JUMPDEST PUSH2 0x8B0 PUSH2 0x8AB DUP3 DUP9 DUP7 SWAP8 SWAP12 SWAP6 SWAP7 PUSH2 0x190F JUMP JUMPDEST PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP10 DUP3 MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA75 JUMPI DUP11 SWAP2 PUSH2 0xA53 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x64 PUSH2 0x8F9 DUP8 DUP6 MLOAD PUSH2 0x19C4 JUMP JUMPDEST DIV SWAP5 PUSH2 0x906 DUP7 DUP6 MLOAD PUSH2 0x19D7 JUMP JUMPDEST SWAP1 PUSH2 0x92B DUP3 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP7 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 MLOAD AND SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH4 0x70E3D455 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP15 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA42 JUMPI DUP15 SWAP2 PUSH2 0xA25 JUMPI JUMPDEST POP POP SWAP1 DUP7 PUSH2 0xA18 PUSH2 0x9B8 PUSH1 0x1 SWAP10 PUSH32 0xDAEC0156F045FE9BFFCC686BD77361F536743020F757603C9F1888937CDFC521 SWAP6 PUSH2 0x15C6 JUMP JUMPDEST SWAP15 PUSH1 0x40 DUP1 DUP8 ADD SWAP2 DUP3 MLOAD DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 DUP11 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD SWAP5 MLOAD SWAP6 DUP10 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP7 MLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 CALLER DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH1 0xA0 DUP5 ADD SWAP8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 ADD SWAP1 DUP8 SWAP3 SWAP2 PUSH2 0x765 JUMP JUMPDEST DUP2 PUSH2 0xA32 SWAP2 SWAP5 SWAP4 SWAP5 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0xA3E JUMPI SWAP1 DUP13 CODESIZE PUSH2 0x984 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP15 PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP15 DUP1 REVERT JUMPDEST PUSH2 0xA6F SWAP2 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0xA67 DUP2 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1700 JUMP JUMPDEST CODESIZE PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xAAE JUMPI JUMPDEST DUP2 PUSH2 0xA9B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x35D JUMPI DUP5 PUSH2 0x761 SWAP2 MLOAD PUSH2 0x751 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115E18D959591CC819185A5B1E481B1A5B5A5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP5 PUSH2 0xB0C PUSH2 0x8AB DUP8 DUP8 DUP7 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB26 DUP3 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xBBF JUMPI JUMPDEST POP PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP11 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xB43 PUSH1 0xFF PUSH1 0x40 DUP13 KECCAK256 SLOAD AND ISZERO PUSH2 0x1677 JUMP JUMPDEST MLOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP10 DUP4 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA75 JUMPI PUSH2 0xB96 PUSH2 0xB9D SWAP4 PUSH1 0x1 SWAP6 DUP14 SWAP2 PUSH2 0xBA5 JUMPI JUMPDEST POP PUSH2 0xB88 PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 DUP4 MLOAD SWAP2 ADD MLOAD GT ISZERO PUSH2 0x1858 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x15C6 JUMP JUMPDEST SWAP6 ADD SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0xBB9 SWAP2 POP RETURNDATASIZE DUP1 DUP16 DUP4 RETURNDATACOPY PUSH2 0xA67 DUP2 DUP4 PUSH2 0x15E9 JUMP JUMPDEST CODESIZE PUSH2 0xB78 JUMP JUMPDEST PUSH4 0x2FAF080 SWAP2 POP GT ISZERO CODESIZE PUSH2 0xB20 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC06 JUMPI JUMPDEST DUP2 PUSH2 0xBEA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC02 JUMPI PUSH2 0xBFB SWAP1 PUSH2 0x1621 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x6BD JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP5 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC48 JUMPI JUMPDEST DUP2 PUSH2 0xC36 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x35D JUMPI SWAP1 MLOAD SWAP4 PUSH1 0x20 PUSH2 0x687 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642062617463682073697A65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x32 DUP2 GT ISZERO PUSH2 0x65A JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCCC JUMPI JUMPDEST DUP2 PUSH2 0xCAF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xCC8 JUMPI PUSH2 0xCC3 PUSH2 0x651 SWAP2 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCA2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH2 0xD0F PUSH2 0x1A17 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2FAF080 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xDD3 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0xDDB PUSH2 0x1A60 JUMP JUMPDEST PUSH3 0x15180 TIMESTAMP DIV DUP1 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0xDF7 DUP5 PUSH1 0x40 DUP8 KECCAK256 SLOAD PUSH2 0x15C6 JUMP JUMPDEST SWAP1 PUSH1 0x5 SLOAD DUP1 DUP4 GT PUSH2 0x13A9 JUMPI POP DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x319A11DF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xC0E JUMPI DUP7 SWAP1 PUSH2 0x136E JUMPI JUMPDEST PUSH2 0xE52 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1635 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xE6B PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x1677 JUMP JUMPDEST DUP4 ISZERO ISZERO DUP1 PUSH2 0x1360 JUMPI JUMPDEST PUSH2 0xE7D SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP7 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC0E JUMPI DUP7 SWAP2 PUSH2 0x1346 JUMPI JUMPDEST POP PUSH2 0xEC7 PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH2 0x1817 JUMP JUMPDEST PUSH2 0xED7 PUSH1 0x40 DUP3 ADD MLOAD DUP7 LT ISZERO PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8C639A85 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAB6 JUMPI DUP8 SWAP2 PUSH2 0x1314 JUMPI JUMPDEST POP PUSH2 0xF09 PUSH1 0x14 DUP3 GT ISZERO PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 PUSH1 0x20 DUP5 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x12C8 JUMPI DUP9 SWAP5 PUSH2 0x12D3 JUMPI JUMPDEST POP PUSH1 0x4 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0xF49 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO ISZERO PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x319A11DF PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12C8 JUMPI DUP9 SWAP2 PUSH2 0x128A JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1253 JUMPI PUSH1 0x64 SWAP2 PUSH2 0xF8C PUSH2 0xFA9 SWAP3 CALLER EQ PUSH2 0x1635 JUMP JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP8 PUSH2 0x19C4 JUMP JUMPDEST DIV PUSH2 0xFB4 DUP2 DUP8 PUSH2 0x19D7 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP4 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA75 JUMPI DUP11 SWAP2 PUSH2 0x121D JUMPI JUMPDEST POP PUSH2 0xFF6 DUP5 DUP7 PUSH2 0x15C6 JUMP JUMPDEST GT PUSH2 0x11C6 JUMPI PUSH2 0x1015 DUP5 PUSH1 0x20 DUP6 SWAP5 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 MLOAD AND SWAP1 PUSH2 0x1A82 JUMP JUMPDEST DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x11A9 JUMPI JUMPDEST POP POP PUSH1 0x3 SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP11 SWAP2 AND DUP3 EXTCODESIZE ISZERO PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70E3D455 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x119E JUMPI PUSH2 0x118A JUMPI JUMPDEST POP PUSH2 0x1130 JUMPI JUMPDEST PUSH1 0x3 SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x825 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x13A7DD1D PUSH1 0xE0 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x81A JUMPI PUSH2 0x1117 JUMPI JUMPDEST POP POP SWAP2 MLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP6 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH32 0xDAEC0156F045FE9BFFCC686BD77361F536743020F757603C9F1888937CDFC521 SWAP1 PUSH1 0xA0 SWAP1 LOG4 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x1121 SWAP2 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x112C JUMPI DUP7 CODESIZE PUSH2 0x10BC JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x825 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x69009A13 PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x81A JUMPI PUSH2 0x1175 JUMPI JUMPDEST POP POP PUSH2 0x107E JUMP JUMPDEST DUP2 PUSH2 0x117F SWAP2 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x112C JUMPI DUP7 CODESIZE PUSH2 0x116E JUMP JUMPDEST DUP9 PUSH2 0x1197 SWAP2 SWAP10 SWAP3 SWAP10 PUSH2 0x15E9 JUMP JUMPDEST SWAP7 CODESIZE PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x11BF SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A82 JUMP JUMPDEST CODESIZE DUP3 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1C881C185E5B595B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x124B JUMPI JUMPDEST DUP2 PUSH2 0x1238 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1247 JUMPI MLOAD CODESIZE PUSH2 0xFEB JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x122B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081C185E5B595B9D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x12C0 JUMPI JUMPDEST DUP2 PUSH2 0x12A5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x12BC JUMPI PUSH2 0x12B6 SWAP1 PUSH2 0x1621 JUMP JUMPDEST CODESIZE PUSH2 0xF6B JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x130C JUMPI JUMPDEST DUP2 PUSH2 0x12EF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x12BC JUMPI PUSH1 0x20 PUSH2 0x1304 PUSH1 0x4 SWAP3 PUSH2 0x1621 JUMP JUMPDEST SWAP5 SWAP2 POP PUSH2 0xF2E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x12E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x133E JUMPI JUMPDEST DUP2 PUSH2 0x132F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x112C JUMPI MLOAD CODESIZE PUSH2 0xEFB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x135A SWAP2 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0xA67 DUP2 DUP4 PUSH2 0x15E9 JUMP JUMPDEST CODESIZE PUSH2 0xEB7 JUMP JUMPDEST POP PUSH4 0x2FAF080 DUP5 GT ISZERO PUSH2 0xE74 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13A1 JUMPI JUMPDEST DUP2 PUSH2 0x1388 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC02 JUMPI PUSH2 0x139C PUSH2 0xE52 SWAP2 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x137B JUMP JUMPDEST PUSH32 0xEF6AA729D47E0C1661366CDF3D3E7BC905D9EF1FF95F7B5A9DA45090F6CA88F3 SWAP1 PUSH1 0x40 DUP9 DUP9 SWAP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0x13FC PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461696C79207769746864726177616C206C696D697420657863656564656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH2 0x145D PUSH2 0x1A17 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x14A3 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x156F PUSH2 0x1A17 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x157B JUMPI PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081B1A5B5A5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x35D JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x15D3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x160B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x35D JUMPI JUMP JUMPDEST ISZERO PUSH2 0x163C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F74207061796D656E742061646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x167E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F756368657220616C72656164792070726F63657373656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x16CA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x35D JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x35D JUMPI ADD PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0xE0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x160B JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP4 MSTORE PUSH2 0x1755 PUSH1 0x20 DUP4 ADD PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x35D JUMPI DUP3 ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x35D JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x160B JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x17AF PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x15E9 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x35D JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1802 JUMPI POP POP PUSH1 0x20 PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x35D JUMPI PUSH1 0xC0 SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x17C0 JUMP JUMPDEST ISZERO PUSH2 0x181E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6574776F726B206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x185F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x416D6F756E7420746F6F206C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x189C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18D7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207472656173757279 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x191F JUMPI PUSH1 0x60 MUL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 CALLDATASIZE SUB SLT PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x160B JUMPI PUSH1 0x40 SWAP2 DUP3 MSTORE DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x197F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x15D3 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x15D3 JUMPI JUMP JUMPDEST PUSH3 0x15180 TIMESTAMP DIV PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x5 SLOAD SWAP1 DUP2 DUP2 LT PUSH2 0x1A0B JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1A14 SWAP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1A2B JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1A4F JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1A71 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP2 MSTORE SWAP1 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1AC2 PUSH1 0x64 DUP3 PUSH2 0x15E9 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x1B14 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x1B0B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1AEA JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO BLOBBASEFEE 0xAC 0xE8 0xAE LOG3 MCOPY DUP4 0x2A DUP16 CALLER DUP8 SELFBALANCE SWAP2 TSTORE SGT POP SWAP7 SUB 0x1E 0xB4 GAS COINBASE DUP9 SLT SDIV 0x2F 0xD5 0x4C PUSH2 0x3337 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "1327:12932:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1327:12932:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;1327:12932:13;2627:22:0;;2623:91;;1327:12932:13;;-1:-1:-1;;;;;;1327:12932:13;;;;;;-1:-1:-1;;;;;1327:12932:13;3052:40:0;1327:12932:13;;3052:40:0;1327:12932:13;;2623:91:0;-1:-1:-1;;;2672:31:0;;1327:12932:13;;;;;2672:31:0;;1327:12932:13;;;;;;;;;;;;;;;;;;12688:15;12706:6;12688:15;1327:12932;;;12729:16;1327:12932;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1327:12932:13;;;;;;;;;;;;;;;-1:-1:-1;;1327:12932:13;;;;;;;;;;;;2075:49;1327:12932;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1327:12932:13;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1327:12932:13;;;;;;;1500:62:0;;:::i;:::-;14047:17:13;1327:12932;;14119:7;;1327:12932;;;-1:-1:-1;;;;;1327:12932:13;14119:7;:::i;:::-;1327:12932;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;14221:4;1327:12932;;;-1:-1:-1;;;14221:29:13;;14244:4;1327:12932;14221:29;;1327:12932;;;;;;;14221:29;;1327:12932;;-1:-1:-1;;;;;1327:12932:13;14221:29;;;;;;;;;;1327:12932;;;;;;;;;14221:29;;1327:12932;14221:29;;1327:12932;14221:29;;;;;;1327:12932;14221:29;;;:::i;:::-;;;1327:12932;;;;;;;14221:29;;1327:12932;-1:-1:-1;1327:12932:13;;14221:29;;;-1:-1:-1;14221:29:13;;;1327:12932;;;;;;;;;;;;;;;;;-1:-1:-1;;1327:12932:13;;;;;;:::i;:::-;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;1327:12932:13;;13428:17;1327:12932;;13493:11;;1327:12932;;13559:4;1327:12932;;;-1:-1:-1;;;13559:29:13;;13582:4;1327:12932;13559:29;;1327:12932;-1:-1:-1;;;;;1327:12932:13;;;;;;;;;;13559:29;;;;;;;;;;;;1327:12932;13551:82;13559:40;;;;13551:82;:::i;:::-;13662:24;;:::i;:::-;13651:35;;1327:12932;;13754:7;;;:::i;1327:12932::-;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;;;;;;;;;13559:29;;;1327:12932;13559:29;;1327:12932;13559:29;;;;;;1327:12932;13559:29;;;:::i;:::-;;;1327:12932;;;;;13551:82;1327:12932;;13559:29;;;;;-1:-1:-1;13559:29:13;;;1327:12932;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1327:12932:13;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1315:72:8;;:::i;:::-;1327:12932:13;;-1:-1:-1;;;;1327:12932:13;-1:-1:-1;;;1327:12932:13;;;;;735:10:7;1327:12932:13;;2427:20:8;;1327:12932:13;;2427:20:8;1327:12932:13;;;;;;;;;-1:-1:-1;;1327:12932:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:72:8;;:::i;:::-;2466:103:9;;:::i;:::-;1327:12932:13;;;;;;;;;;;;;;6679:30;;1327:12932;6679:30;1327:12932;6679:30;;;;;;;;;;;;1327:12932;6644:110;;-1:-1:-1;;;;;;1327:12932:13;6665:10;:44;6644:110;:::i;:::-;6785:19;;;:44;;;1327:12932;;;;;;-1:-1:-1;;;6938:34:13;;1327:12932;6884:23;;1327:12932;;;;;;6938:34;;;;;;;;;;;1327:12932;6990:33;;1327:12932;;6990:33;6982:58;1836:2;6990:33;;;6982:58;:::i;:::-;1327:12932;;-1:-1:-1;;;7076:31:13;;1327:12932;;;;;7076:31;;;;;;;;;;;1327:12932;-1:-1:-1;7117:57:13;-1:-1:-1;;;;;1327:12932:13;;7125:28;;7117:57;:::i;:::-;7786:15;1327:12932;7255:13;;-1:-1:-1;;;;;1327:12932:13;7270:19;;;;;;8194:24;;;;:::i;:::-;8179:39;;1327:12932;;8323:6;8305:15;1327:12932;;;8339:16;1327:12932;;;;;8339:38;1327:12932;;;8339:38;:::i;:::-;1327:12932;;8443:4;1327:12932;;;-1:-1:-1;;;8443:29:13;;8466:4;1327:12932;8443:29;;1327:12932;;;;;;;;;;-1:-1:-1;;;;;1327:12932:13;8443:29;;;;;;;;;;;;7250:866;8443:44;;;;;8422:120;8443:44;;;8422:120;:::i;:::-;8598:28;8642:13;;8657:19;;;;;;9854:20;;;;;;9850:172;;8637:1163;-1:-1:-1;;7786:15:13;1327:12932;;;-1:-1:-1;;;;;1327:12932:13;10083:54;;;;;1327:12932;;;;;;;;;;;;;10083:54;;;1327:12932;10083:54;;1327:12932;10083:54;;;;;;;;8637:1163;1327:12932;;10153:115;;1327:12932;;;10153:115;;;;1327:12932;;;;;;;;;;;;;;;;;;10153:115;;;;1327:12932;;;;;10083:54;;;;;:::i;:::-;1327:12932;;10083:54;;;;;1327:12932;;;;;;;;;10083:54;1327:12932;;;9850:172;8443:4;1327:12932;9924:16;;1327:12932;-1:-1:-1;;;;;1327:12932:13;9924:16;:::i;:::-;7786:15;1327:12932;;;-1:-1:-1;;;;;1327:12932:13;9955:56;;;;;1327:12932;;;;;;;;;;;;;9955:56;;;1327:12932;9955:56;;1327:12932;9955:56;;;;;;;;9850:172;;;;;9955:56;;;;;:::i;:::-;1327:12932;;9955:56;;;;8678:3;8697:41;8727:11;;;;;;;;;:::i;:::-;8697:41;:::i;:::-;1327:12932;;;;;7786:15;1327:12932;;;;;;;;;;;;;;;8793:76;;1327:12932;8793:76;;1327:12932;8793:76;;;;;;;;;;;8678:3;8907:19;1327:12932;8907:19;;1327:12932;8943:3;8907:32;1327:12932;;;8907:32;:::i;:::-;1327:12932;;8981:33;1327:12932;;;8981:33;:::i;:::-;1327:12932;9100:10;1327:12932;;;;;;;8443:4;1327:12932;;9079:19;;1327:12932;;;;;;;;;9100:10;;:::i;:::-;7786:15;1327:12932;;;-1:-1:-1;;;;;1327:12932:13;;;;;9157:115;;;;;1327:12932;;-1:-1:-1;;;9157:115:13;;-1:-1:-1;;;;;1327:12932:13;;;;;9157:115;;1327:12932;;;;;;;;;;;;;;;;;9157:115;;;;;;;;;;;8678:3;9287:31;;;;9496:293;9287:31;1327:12932;9287:31;9496:293;9287:31;;:::i;:::-;9414:17;1327:12932;9414:17;;;1327:12932;;;;;7604:17;1327:12932;;;;;;;;;;;;;;;;;;;;;;;;;;;;8305:15;;;;6665:10;;9496:293;1327:12932;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9496:293;;;;1327:12932;8642:13;;;;;;9157:115;;;;;;;;:::i;:::-;1327:12932;;9157:115;;;;;1327:12932;;;;9157:115;1327:12932;;;;;;;;;;;9157:115;1327:12932;;;8793:76;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;1327:12932;;;;;;;;;8443:29;;;1327:12932;8443:29;;1327:12932;8443:29;;;;;;1327:12932;8443:29;;;:::i;:::-;;;1327:12932;;;;;8422:120;1327:12932;;8443:29;;;;;-1:-1:-1;8443:29:13;;;1327:12932;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;7291:3;7340:11;;7310:41;7340:11;;;;;:::i;7310:41::-;1327:12932;7424:19;;1327:12932;7399:165;1327:12932;;7424:23;;;:92;;;;7291:3;7399:165;;:::i;:::-;1327:12932;7622:17;;1327:12932;;;7604:17;1327:12932;;7578:121;1327:12932;;;;;;7603:37;7578:121;:::i;:::-;1327:12932;;;;;;;;7786:76;;1327:12932;7786:76;;1327:12932;7786:76;;1327:12932;7786:76;;;;;;;;;7937:119;8071:34;7786:76;1327:12932;7786:76;;;;;7291:3;7884:16;7876:47;7884:16;;;1327:12932;;;7876:47;:::i;:::-;1327:12932;;;7985:23;;1327:12932;-1:-1:-1;7962:46:13;7937:119;:::i;:::-;1327:12932;8071:34;;:::i;:::-;7291:3;1327:12932;7255:13;;;7786:76;;;-1:-1:-1;7786:76:13;;;;;;;;;:::i;:::-;;;;7424:92;1758:14;7471:45;;;;7424:92;;;7076:31;;;;1327:12932;7076:31;;1327:12932;7076:31;;;;;;1327:12932;7076:31;;;:::i;:::-;;;1327:12932;;;;;;;:::i;:::-;7076:31;;;;1327:12932;;;;7076:31;;;-1:-1:-1;7076:31:13;;;1327:12932;;;;;;;;;6938:34;;;;;1327:12932;6938:34;;1327:12932;6938:34;;;;;;1327:12932;6938:34;;;:::i;:::-;;;1327:12932;;;;;;;;6938:34;;;;;-1:-1:-1;6938:34:13;;1327:12932;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;6785:44;6808:21;6827:2;6808:21;;;6785:44;;6679:30;;1327:12932;6679:30;;1327:12932;6679:30;;;;;;1327:12932;6679:30;;;:::i;:::-;;;1327:12932;;;;;6644:110;1327:12932;;:::i;:::-;6679:30;;1327:12932;;;;6679:30;;;-1:-1:-1;6679:30:13;;1327:12932;;;;;;;;;;;;;;;;;;1891:55;1327:12932;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1327:12932:13;;-1:-1:-1;;;;;;1327:12932:13;;;;;;-1:-1:-1;;;;;1327:12932:13;3052:40:0;1327:12932:13;;3052:40:0;1327:12932:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:2;1327:12932;;;;;;;;;;;;;;;;;;;1758:14;1327:12932;;;;;;;;;;-1:-1:-1;;1327:12932:13;;;;;;;;;;1315:72:8;;:::i;:::-;2466:103:9;;:::i;:::-;3122:6:13;3104:15;1327:12932;;;;3162:16;1327:12932;;3162:32;1327:12932;;;;;3162:32;:::i;:::-;1327:12932;3225:20;1327:12932;3209:36;;;3205:298;;1327:12932;;;3162:16;1327:12932;;;;;;;;;;;;;;;;;;;4770:30;;1327:12932;4770:30;1327:12932;4770:30;;;;;;;;;;;;1327:12932;4735:110;;-1:-1:-1;;;;;;1327:12932:13;4756:10;:44;4735:110;:::i;:::-;1327:12932;;;4902:17;1327:12932;;4893:68;1327:12932;;;;;;4901:30;4893:68;:::i;:::-;5063:16;;;:58;;;1327:12932;5042:119;;;:::i;:::-;5240:15;1327:12932;;;-1:-1:-1;;;5240:61:13;;1327:12932;5240:61;;1327:12932;;;;;;;;;;;;-1:-1:-1;;;;;1327:12932:13;5240:61;;;;;;;;;;;1327:12932;5319:16;5311:47;5319:16;;;1327:12932;;;5311:47;:::i;:::-;5368:66;1327:12932;5392:23;;1327:12932;5376:39;;;5368:66;:::i;:::-;1327:12932;;-1:-1:-1;;;5494:34:13;;1327:12932;;;;5494:34;;;;;;;;;;;;1327:12932;5546:33;5538:58;1836:2;5546:33;;;5538:58;:::i;:::-;1327:12932;;-1:-1:-1;;;5664:31:13;;1327:12932;;;;;;5664:31;;;;;;;;;;;1327:12932;-1:-1:-1;1327:12932:13;;;;5705:57;-1:-1:-1;;;;;1327:12932:13;;5713:28;;5705:57;:::i;:::-;1327:12932;;-1:-1:-1;;;5828:30:13;;1327:12932;;;;;5828:30;;;;;;;;;;;1327:12932;-1:-1:-1;;;;;;1327:12932:13;5876:27;;1327:12932;;11222:3;4756:10;5933:59;11193:25;4756:10;;5941:27;5933:59;:::i;:::-;1327:12932;;;4902:17;1327:12932;;;;;;;-1:-1:-1;;1327:12932:13;;;;;11193:25;;:::i;:::-;1327:12932;11256:26;;;;:::i;:::-;1327:12932;;;;;;11345:4;1327:12932;;;;;;;;11345:29;;11368:4;1327:12932;11345:29;;1327:12932;;11345:29;1327:12932;11345:29;;;;;;;;;;;;;1327:12932;11378:24;;;;;:::i;:::-;-1:-1:-1;1327:12932:13;;11552:10;11531:19;1327:12932;11531:19;;;1327:12932;;;;;;;;;11552:10;;:::i;:::-;11611:15;;;11607:92;;;;1327:12932;-1:-1:-1;;5240:15:13;1327:12932;;;-1:-1:-1;;;;;1327:12932:13;;;;;;;11735:69;;;;;1327:12932;;-1:-1:-1;;;11735:69:13;;-1:-1:-1;;;;;1327:12932:13;;;;;11735:69;;1327:12932;;;;;;;;;;;;;;;;11735:69;;;;;;;;1327:12932;11814:97;;;1327:12932;5240:15;1327:12932;;;-1:-1:-1;;;;;1327:12932:13;11972:55;;;;;1327:12932;;;;;;;;;;;;;11972:55;;;1327:12932;11972:55;;1327:12932;11972:55;;;;;;;;1327:12932;-1:-1:-1;;1327:12932:13;;;;;4756:10;1327:12932;;;;;;;;;;;;;;;;;;;3104:15;1327:12932;;;;-1:-1:-1;;;;;1327:12932:13;;12043:236;;1327:12932;;12043:236;1327:12932;;;;;11972:55;;;;;:::i;:::-;1327:12932;;11972:55;;;;1327:12932;;;;11814:97;5240:15;1327:12932;;;-1:-1:-1;;;;;1327:12932:13;11849:51;;;;;1327:12932;;;;;;;;;;;;;11849:51;;;1327:12932;11849:51;;1327:12932;11849:51;;;;;;;;11814:97;;;;;11849:51;;;;;:::i;:::-;1327:12932;;11849:51;;;;11735:69;;;;;;;;:::i;:::-;;;;;;1327:12932;;;;;;;;;11607:92;11345:4;1327:12932;11676:11;;1327:12932;-1:-1:-1;;;;;1327:12932:13;11676:11;:::i;:::-;11607:92;;;;1327:12932;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;11222:3:13;1327:12932;;;;;;11345:29;;;1327:12932;11345:29;;1327:12932;11345:29;;;;;;1327:12932;11345:29;;;:::i;:::-;;;1327:12932;;;;;11345:29;;;1327:12932;;;;11345:29;;;-1:-1:-1;11345:29:13;;1327:12932;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;5828:30;;;1327:12932;5828:30;;1327:12932;5828:30;;;;;;1327:12932;5828:30;;;:::i;:::-;;;1327:12932;;;;;;;:::i;:::-;5828:30;;;1327:12932;;;;5828:30;;;-1:-1:-1;5828:30:13;;;1327:12932;;;;;;;;;5664:31;;;;1327:12932;5664:31;;1327:12932;5664:31;;;;;;1327:12932;5664:31;;;:::i;:::-;;;1327:12932;;;;;;;;;:::i;:::-;5664:31;;;;;;;;-1:-1:-1;5664:31:13;;5494:34;;;1327:12932;5494:34;;1327:12932;5494:34;;;;;;1327:12932;5494:34;;;:::i;:::-;;;1327:12932;;;;;5494:34;;;;;;-1:-1:-1;5494:34:13;;5240:61;;;;;;;;;;;;;:::i;:::-;;;;5063:58;-1:-1:-1;1758:14:13;5083:38;;;5063:58;;4770:30;;1327:12932;4770:30;;1327:12932;4770:30;;;;;;1327:12932;4770:30;;;:::i;:::-;;;1327:12932;;;;;4735:110;1327:12932;;:::i;:::-;4770:30;;;;;-1:-1:-1;4770:30:13;;3205:298;3266:163;1327:12932;;;;;;;3162:16;1327:12932;;;;;3266:163;1327:12932;;3302:10;;;;3266:163;;1327:12932;;;;;;;;;;;;;;;;;;3266:163;;;;1327:12932;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1327:12932:13;;;;;;;2140:9:8;2136:62;;-1:-1:-1;;;;1327:12932:13;;;;;735:10:7;1327:12932:13;;2674:22:8;;1327:12932:13;;2674:22:8;1327:12932:13;;2136:62:8;-1:-1:-1;;;2172:15:8;;1327:12932:13;2172:15:8;;1327:12932:13;;;;;;;;;;;;;;;1451:26;1327:12932;;;;;;;;;;;;;;;;;-1:-1:-1;;1327:12932:13;;;;;;;;;;;1964:51;1327:12932;;;;;;;;;;;;;;;;;;;;;;;1427:18;1327:12932;;;-1:-1:-1;;;;;1327:12932:13;;;;;;;;;;;;;;;;;;;;;1484:37;1327:12932;;;-1:-1:-1;;;;;1327:12932:13;;;;;;;;;;;;;;;-1:-1:-1;;1327:12932:13;;;;;;1500:62:0;;:::i;:::-;12452:13:13;;1327:12932;;12493:32;1327:12932;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;-1:-1:-1;;;;;1327:12932:13;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1327:12932:13;;;;;-1:-1:-1;1327:12932:13;;;;-1:-1:-1;;;;;1327:12932:13;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1327:12932:13;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;1327:12932:13;;;;;;;;;-1:-1:-1;1327:12932:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1327:12932:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;13039:248::-;13147:6;13129:15;1327:12932;-1:-1:-1;1327:12932:13;;;13178:16;1327:12932;;;;;;13226:20;1327:12932;;13218:28;;;;;:62;;-1:-1:-1;13039:248:13;:::o;13218:62::-;13253:27;;;:::i;:::-;13039:248;:::o;1796:162:0:-;1710:6;1327:12932:13;-1:-1:-1;;;;;1327:12932:13;735:10:7;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:7;1901:40:0;1327:12932:13;;1710:6:0;1901:40;1878:128:8;1327:12932:13;1796:7:8;1327:12932:13;;;;1939:61:8;;1878:128::o;1939:61::-;1974:15;;;1796:7;1974:15;;1796:7;1974:15;2575:307:9;1899:1;2702:7;1327:12932:13;2702:18:9;2698:86;;1899:1;2702:7;1327:12932:13;2575:307:9:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:9;;-1:-1:-1;2743:30:9;1219:160:6;1327:12932:13;;-1:-1:-1;;;1328:43:6;;;;;;;-1:-1:-1;;;;;1327:12932:13;;;;1328:43:6;;;1327:12932:13;;;;;;;;;1328:43:6;;;1219:160;;-1:-1:-1;;1328:43:6;1327:12932:13;;1328:43:6;:::i;:::-;8507:421;;;;;;;;;-1:-1:-1;8507:421:6;;8942:15;;-1:-1:-1;;;;;;1327:12932:13;;8960:26:6;:31;8942:68;8938:146;;1219:160;:::o;8938:146::-;-1:-1:-1;;;;9033:40:6;;;-1:-1:-1;;;;;1327:12932:13;;;;9033:40:6;1327:12932:13;1328:43:6;;9033:40;8942:68;9009:1;8994:16;;8942:68;;8507:421;1327:12932:13;8507:421:6;;-1:-1:-1;8507:421:6;;;;"
            },
            "methodIdentifiers": {
              "MAX_FEERATE_PERCENT()": "5b3c0528",
              "MAX_INDIVIDUAL_PAYMENT()": "4cf4caa5",
              "adminContract()": "c05c5e94",
              "contractTokenBalance()": "9e9aed62",
              "dailyWithdrawalLimit()": "7620843a",
              "dailyWithdrawals(uint256)": "33770245",
              "getRemainingDailyLimit()": "a15f39e8",
              "getTodayWithdrawals()": "c4d276bc",
              "isVoucherProcessed(bytes32)": "0604bfa4",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "processBatchPayments((uint256,uint256,bytes32)[])": "7ddd23e1",
              "processPayment(uint256,uint256,bytes32)": "4342482d",
              "processedVouchers(bytes32)": "b9a24544",
              "renounceOwnership()": "715018a6",
              "rescueERC20(address,address,uint256)": "b2118a8d",
              "setDailyWithdrawalLimit(uint256)": "05483a15",
              "storageContract()": "11ce0267",
              "tokenDecimals()": "3b97e856",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a",
              "usdt()": "2f48ab7d",
              "withdrawToken(address,uint256)": "9e281a98"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_storageContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adminContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPlatformFee\",\"type\":\"uint256\"}],\"name\":\"BatchPaymentProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"attemptedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dailyLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"alreadyWithdrawn\",\"type\":\"uint256\"}],\"name\":\"DailyLimitExceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"voucherId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"grossAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"hostAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PaymentProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEERATE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_INDIVIDUAL_PAYMENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminContract\",\"outputs\":[{\"internalType\":\"contract IZaaNetAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyWithdrawalLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dailyWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemainingDailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTodayWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_voucherId\",\"type\":\"bytes32\"}],\"name\":\"isVoucherProcessed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grossAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"voucherId\",\"type\":\"bytes32\"}],\"internalType\":\"struct ZaaNetPayment.BatchPayment[]\",\"name\":\"payments\",\"type\":\"tuple[]\"}],\"name\":\"processBatchPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_grossAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_voucherId\",\"type\":\"bytes32\"}],\"name\":\"processPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"processedVouchers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLimit\",\"type\":\"uint256\"}],\"name\":\"setDailyWithdrawalLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"contract IZaaNetStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"processBatchPayments((uint256,uint256,bytes32)[])\":{\"details\":\"Limits: max 50 payments per batch, total batch amount must not exceed daily limit\",\"params\":{\"payments\":\"Array of BatchPayment structs\"}},\"processPayment(uint256,uint256,bytes32)\":{\"details\":\"Enforces max individual payment, daily limits, and prevents double processing\",\"params\":{\"_contractId\":\"The ID of the network contract\",\"_grossAmount\":\"The total amount paid by the user (in USDT, 6 decimals)\",\"_voucherId\":\"Unique voucher ID to prevent double processing\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRemainingDailyLimit()\":{\"notice\":\"Get remaining daily limit\"},\"getTodayWithdrawals()\":{\"notice\":\"Get today's withdrawal amount\"},\"isVoucherProcessed(bytes32)\":{\"notice\":\"Check if voucher has been processed\"},\"processBatchPayments((uint256,uint256,bytes32)[])\":{\"notice\":\"Process a batch of payments for vouchers with enhanced security controls\"},\"processPayment(uint256,uint256,bytes32)\":{\"notice\":\"Process a payment for a voucher with enhanced security controls\"},\"setDailyWithdrawalLimit(uint256)\":{\"notice\":\"Set daily withdrawal limit (owner only)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetPayment.sol\":\"ZaaNetPayment\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ZaaNetPayment.sol\":{\"keccak256\":\"0x83dbc1ed599bc8ea32f8665e102edf3f544fbf1fab6681c4d11c165aa934dc52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb5bac978b64cd89c75405ae0b10e587784eebc0095f5a3a4c0a2bce10d37248\",\"dweb:/ipfs/QmNN2dNabNx75eCSq9W33FfgsBetTp8oZTsYC35JVcPDPK\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetStorage.sol": {
        "ZaaNetStorage": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "AllowedCallerUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalEarned",
                  "type": "uint256"
                }
              ],
              "name": "HostEarningsUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                }
              ],
              "name": "NetworkStored",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "NetworkUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "paymentAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "SessionStored",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalEarned",
                  "type": "uint256"
                }
              ],
              "name": "ZaaNetEarningsUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowedCallers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "emergencyDeactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostNetworks",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "getNetwork",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "offset",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                }
              ],
              "name": "getNetworksPaginated",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "total",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getZaaNetEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "hostEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "hostNetworkIds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseHostEarnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseZaaNetEarnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "incrementNetworkId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networkExists",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "networkIdCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networks",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "sessionExists",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_caller",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setAllowedCaller",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_callers",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setAllowedCallers",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "net",
                  "type": "tuple"
                }
              ],
              "name": "setNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalHostingAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalPaymentsAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalWithdrawalsAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "updateTotalHostingAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "updateTotalPaymentsAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "updateTotalWithdrawalsAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "zaanetEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234608d57331560775760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805560006004556000600555600060065560006007556116d090816100938239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80631190defd1461102f57806313a7dd1d14610fbe578063217c682d14610fa057806322a4808b14610f64578063242d30bc14610f8257806329c718b5146108cc5780634ce083be14610f6457806350c0d41c14610a7d5780635290ffc614610a025780635a2f406f1461097757806369009a13146109065780636d65573f146108cc578063715018a61461087357806373f9a5d71461075857806379f0dc571461069e5780637b3341541461065f5780637bae8f5e146106065780637ee3b6fc146105e8578063879ecf10146105b75780638bb0a17c146105245780638da5cb5b146104fb57806395ea571714610494578063ad2c30b114610476578063bed3165414610405578063d8b0e71614610376578063e1c7a8aa146102a1578063ec13f2a114610270578063f2fde38b146101e75763fa9c81a41461015b57600080fd5b346101e25760403660031901126101e25761017a60243560043561153e565b9060405190604082016040835281518091526060830190602060608260051b8601019301916000905b8282106101b7578580868960208301520390f35b909192936020806101d4600193605f198a82030186528851611250565b9601920192019092916101a3565b600080fd5b346101e25760203660031901126101e2576102006110a0565b610208611671565b6001600160a01b0316801561025a57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101e25760203660031901126101e257600435600052600b602052602060ff604060002054166040519015158152f35b346101e25760403660031901126101e2576102ba6110a0565b6024359033600052600260205260ff604060002054168015610362575b6102e0906112ac565b6102e861164f565b6001600160a01b0316906102fd821515611356565b6103088115156112e9565b8160005260096020526103216040600020918254611335565b90558060005260096020527f61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be06020604060002054604051908152a260018055005b506000546001600160a01b031633146102d7565b346101e25760403660031901126101e25761038f6110a0565b7fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f60206103ba6110b6565b926103c3611671565b6001600160a01b0316926103d8841515611421565b83600052600282526103fa8160406000209060ff801983541691151516179055565b6040519015158152a2005b346101e25760203660031901126101e25761045960043533600052600260205260ff604060002054168015610462575b61043e906112ac565b61044661164f565b6104518115156112e9565b600554611335565b60055560018055005b506000546001600160a01b03163314610435565b346101e25760003660031901126101e2576020600554604051908152f35b346101e25760203660031901126101e2576004356104b0611466565b5080600052600b6020526104cb60ff604060002054166113cc565b60005260086020526104f76104e3604060002061149d565b604051918291602083526020830190611250565b0390f35b346101e25760003660031901126101e2576000546040516001600160a01b039091168152602090f35b346101e25760203660031901126101e25760043560005260086020526040600020805460018060a01b036001830154169160028101546105666003830161116b565b916105a160ff60048301541693600660058401549301549360405197889788526020880152604087015260e0606087015260e086019061120f565b921515608085015260a084015260c08301520390f35b346101e25760203660031901126101e257600435600052600c602052602060ff604060002054166040519015158152f35b346101e25760003660031901126101e2576020600454604051908152f35b346101e25760403660031901126101e25761061f6110a0565b6001600160a01b03166000908152600a60205260409020805460243591908210156101e257602091610650916110c5565b90549060031b1c604051908152f35b346101e25760203660031901126101e2576001600160a01b036106806110a0565b166000526002602052602060ff604060002054166040519015158152f35b346101e25760203660031901126101e2576001600160a01b036106bf6110a0565b16600052600a60205260406000206040518060208354918281520190819360005260206000209060005b81811061074257505050816106ff910382611149565b6040519182916020830190602084525180915260408301919060005b818110610729575050500390f35b825184528594506020938401939092019160010161071b565b82548452602090930192600192830192016106e9565b346101e25760403660031901126101e25760043567ffffffffffffffff81116101e257366023820112156101e257806004013567ffffffffffffffff81116101e2576024820191602436918360051b0101116101e2576107b66110b6565b6107be611671565b8015159060005b8381106107ce57005b6001906107f76001600160a01b036107ef6107ea84898b611411565b611342565b161515611421565b818060a01b0361080b6107ea83888a611411565b16600052600260205261082e8360406000209060ff801983541691151516179055565b818060a01b036108426107ea83888a611411565b167fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f6020604051878152a2016107c5565b346101e25760003660031901126101e25761088c611671565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101e25760203660031901126101e2576001600160a01b036108ed6110a0565b1660005260096020526020604060002054604051908152f35b346101e25760203660031901126101e25761095a60043533600052600260205260ff604060002054168015610963575b61093f906112ac565b61094761164f565b6109528115156112e9565b600754611335565b60075560018055005b506000546001600160a01b03163314610936565b346101e25760203660031901126101e257600435610993611671565b80600052600b6020526109ad60ff604060002054166113cc565b600081815260086020526040812060048101805460ff19169055426006820155600101546001600160a01b031691907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c9080a3005b346101e25760003660031901126101e25733600052600260205260ff604060002054168015610a69575b610a35906112ac565b6003546000198114610a535760016020910180600355604051908152f35b634e487b7160e01b600052601160045260246000fd5b506000546001600160a01b03163314610a2c565b346101e25760403660031901126101e25760243560043567ffffffffffffffff82116101e257816004019160e060031982360301126101e25733600052600260205260ff604060002054168015610f50575b610ad8906112ac565b8115610f16576024810190610aff6001600160a01b03610af784611342565b161515611356565b6044810135938415610ed15760648201610b198183611399565b905015610e955784600052600b602052608460ff604060002054161593610b49610b4287611342565b9385611399565b9290910135908115158092036101e2578515610e7d5742925b60405195610b6f8761112d565b3586526001600160a01b0390941660208601908152604086018a8152909467ffffffffffffffff8111610d665760405192610bb4601f8301601f191660200185611149565b81845236828201116101e257816000926020928387013784010152606086019182526080860192835260a086019384524260c0870190815260008a81526008602052604090209651875594516001870180546001600160a01b0319166001600160a01b0392909216919091179055516002860155518051600386019167ffffffffffffffff8211610d6657610c4983546110f3565b601f8111610e35575b50602090601f8311600114610dc5579180610ca39492600698979694600092610dba575b50508160011b916000199060031b1c19161790555b511515600486019060ff801983541691151516179055565b5160058401555191015515610d7c576000828152600b60205260409020805460ff191660011790556001600160a01b03610cdc82611342565b16600052600a60205260406000209081549068010000000000000000821015610d6657610d32827f3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e9460016020950181556110c5565b815460001960039290921b91821b19169086901b1790556001600160a01b0390610d5b90611342565b1693604051908152a3005b634e487b7160e01b600052604160045260246000fd5b9091506001600160a01b0390610d9190611342565b16907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c600080a3005b015190508d80610c76565b90601f1983169184600052816000209260005b818110610e1d575092600192859260069a999896610ca3989610610e04575b505050811b019055610c8b565b015160001960f88460031b161c191690558d8080610df7565b92936020600181928786015181550195019301610dd8565b836000526020600020601f840160051c81019160208510610e73575b601f0160051c01905b818110610e675750610c52565b60008155600101610e5a565b9091508190610e51565b87600052600860205260056040600020015492610b62565b60405162461bcd60e51b8152602060048201526014602482015273135bdb99dbd1185d185251081c995c5d5a5c995960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b995d1ddbdc9ac8125160721b6044820152606490fd5b506000546001600160a01b03163314610acf565b346101e25760003660031901126101e2576020600754604051908152f35b346101e25760003660031901126101e2576020600654604051908152f35b346101e25760003660031901126101e2576020600354604051908152f35b346101e25760203660031901126101e25761101260043533600052600260205260ff60406000205416801561101b575b610ff7906112ac565b610fff61164f565b61100a8115156112e9565b600454611335565b60045560018055005b506000546001600160a01b03163314610fee565b346101e25760203660031901126101e25761108360043533600052600260205260ff60406000205416801561108c575b611068906112ac565b61107061164f565b61107b8115156112e9565b600654611335565b60065560018055005b506000546001600160a01b0316331461105f565b600435906001600160a01b03821682036101e257565b6024359081151582036101e257565b80548210156110dd5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611123575b602083101461110d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611102565b60e0810190811067ffffffffffffffff821117610d6657604052565b90601f8019910116810190811067ffffffffffffffff821117610d6657604052565b906040519182600082549261117f846110f3565b80845293600181169081156111ed57506001146111a6575b506111a492500383611149565b565b90506000929192526020600020906000915b8183106111d15750509060206111a49282010138611197565b60209193508060019154838589010152019101909184926111b8565b9050602092506111a494915060ff191682840152151560051b82010138611197565b919082519283825260005b84811061123b575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161121a565b908151815260018060a01b0360208301511660208201526040820151604082015260c08061128d606085015160e0606086015260e085019061120f565b9360808101511515608085015260a081015160a0850152015191015290565b156112b357565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b156112f057565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b91908201809211610a5357565b356001600160a01b03811681036101e25790565b1561135d57565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420686f7374206164647265737360601b6044820152606490fd5b903590601e19813603018212156101e2570180359067ffffffffffffffff82116101e2576020019181360383136101e257565b156113d357565b60405162461bcd60e51b815260206004820152601660248201527513995d1ddbdc9ac8191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b91908110156110dd5760051b0190565b1561142857565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642063616c6c6572206164647265737360501b6044820152606490fd5b604051906114738261112d565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b906040516114aa8161112d565b8254815260018301546001600160a01b031660208201526002830154604082015291829060c0906006906114e06003820161116b565b606085015260ff60048201541615156080850152600581015460a08501520154910152565b67ffffffffffffffff8111610d665760051b60200190565b91908203918211610a5357565b80518210156110dd5760209160051b010190565b600354929183821015611613576115559082611335565b83811161160c575b611567828261151d565b9161157183611505565b9261157f6040519485611149565b80845261158e601f1991611505565b0160005b8181106115f5575050805b8281106115ab575050509190565b6001810190818111610a535760019160005260086020526115ee60406000206115dd6115d7868561151d565b9161149d565b6115e7828961152a565b528661152a565b500161159d565b602090611600611466565b82828801015201611592565b508261155d565b50506040516000611625602083611149565b81526000805b8181106116385750509190565b602090611643611466565b8282860101520161162b565b600260015414611660576002600155565b633ee5aeb560e01b60005260046000fd5b6000546001600160a01b0316330361168557565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212204d93320ff27e527ccc1b9ebb664e49e9f444c2bcfe6c28d77bcb3aaf1d4d1bfb64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x8D JUMPI CALLER ISZERO PUSH1 0x77 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x6 SSTORE PUSH1 0x0 PUSH1 0x7 SSTORE PUSH2 0x16D0 SWAP1 DUP2 PUSH2 0x93 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1190DEFD EQ PUSH2 0x102F JUMPI DUP1 PUSH4 0x13A7DD1D EQ PUSH2 0xFBE JUMPI DUP1 PUSH4 0x217C682D EQ PUSH2 0xFA0 JUMPI DUP1 PUSH4 0x22A4808B EQ PUSH2 0xF64 JUMPI DUP1 PUSH4 0x242D30BC EQ PUSH2 0xF82 JUMPI DUP1 PUSH4 0x29C718B5 EQ PUSH2 0x8CC JUMPI DUP1 PUSH4 0x4CE083BE EQ PUSH2 0xF64 JUMPI DUP1 PUSH4 0x50C0D41C EQ PUSH2 0xA7D JUMPI DUP1 PUSH4 0x5290FFC6 EQ PUSH2 0xA02 JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0x977 JUMPI DUP1 PUSH4 0x69009A13 EQ PUSH2 0x906 JUMPI DUP1 PUSH4 0x6D65573F EQ PUSH2 0x8CC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x873 JUMPI DUP1 PUSH4 0x73F9A5D7 EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0x69E JUMPI DUP1 PUSH4 0x7B334154 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0x7BAE8F5E EQ PUSH2 0x606 JUMPI DUP1 PUSH4 0x7EE3B6FC EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0x879ECF10 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x8BB0A17C EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x95EA5717 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xAD2C30B1 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xBED31654 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xD8B0E716 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xE1C7A8AA EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xEC13F2A1 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E7 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x17A PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x153E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1B7 JUMPI DUP6 DUP1 DUP7 DUP10 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x1D4 PUSH1 0x1 SWAP4 PUSH1 0x5F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1250 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x200 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x2BA PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x362 JUMPI JUMPDEST PUSH2 0x2E0 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x2E8 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2FD DUP3 ISZERO ISZERO PUSH2 0x1356 JUMP JUMPDEST PUSH2 0x308 DUP2 ISZERO ISZERO PUSH2 0x12E9 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x321 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1335 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH32 0x61A8B1A557E4D03803DB90D13FF76DB2C25FBA3ED24882CECDA8C8423B9B2BE0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D7 JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x38F PUSH2 0x10A0 JUMP JUMPDEST PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH2 0x3BA PUSH2 0x10B6 JUMP JUMPDEST SWAP3 PUSH2 0x3C3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0x3D8 DUP5 ISZERO ISZERO PUSH2 0x1421 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x3FA DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x459 PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x462 JUMPI JUMPDEST PUSH2 0x43E SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x446 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x451 DUP2 ISZERO ISZERO PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x435 JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4B0 PUSH2 0x1466 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x4CB PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x4F7 PUSH2 0x4E3 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1250 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x566 PUSH1 0x3 DUP4 ADD PUSH2 0x116B JUMP JUMPDEST SWAP2 PUSH2 0x5A1 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x6 PUSH1 0x5 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x61F PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x650 SWAP2 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x680 PUSH2 0x10A0 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6BF PUSH2 0x10A0 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x742 JUMPI POP POP POP DUP2 PUSH2 0x6FF SWAP2 SUB DUP3 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x729 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x71B JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x6E9 JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E2 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1E2 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E2 JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1E2 JUMPI PUSH2 0x7B6 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x7BE PUSH2 0x1671 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x7CE JUMPI STOP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x7F7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7EF PUSH2 0x7EA DUP5 DUP10 DUP12 PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x1342 JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1421 JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x80B PUSH2 0x7EA DUP4 DUP9 DUP11 PUSH2 0x1411 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x82E DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x842 PUSH2 0x7EA DUP4 DUP9 DUP11 PUSH2 0x1411 JUMP JUMPDEST AND PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE LOG2 ADD PUSH2 0x7C5 JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x88C PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x8ED PUSH2 0x10A0 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x95A PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x963 JUMPI JUMPDEST PUSH2 0x93F SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x947 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x952 DUP2 ISZERO ISZERO PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x936 JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x993 PUSH2 0x1671 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x9AD PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C SWAP1 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xA69 JUMPI JUMPDEST PUSH2 0xA35 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA53 JUMPI PUSH1 0x1 PUSH1 0x20 SWAP2 ADD DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA2C JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1E2 JUMPI DUP2 PUSH1 0x4 ADD SWAP2 PUSH1 0xE0 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1E2 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xF50 JUMPI JUMPDEST PUSH2 0xAD8 SWAP1 PUSH2 0x12AC JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF16 JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH2 0xAFF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xAF7 DUP5 PUSH2 0x1342 JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP4 DUP5 ISZERO PUSH2 0xED1 JUMPI PUSH1 0x64 DUP3 ADD PUSH2 0xB19 DUP2 DUP4 PUSH2 0x1399 JUMP JUMPDEST SWAP1 POP ISZERO PUSH2 0xE95 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x84 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP4 PUSH2 0xB49 PUSH2 0xB42 DUP8 PUSH2 0x1342 JUMP JUMPDEST SWAP4 DUP6 PUSH2 0x1399 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1E2 JUMPI DUP6 ISZERO PUSH2 0xE7D JUMPI TIMESTAMP SWAP3 JUMPDEST PUSH1 0x40 MLOAD SWAP6 PUSH2 0xB6F DUP8 PUSH2 0x112D JUMP JUMPDEST CALLDATALOAD DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD DUP11 DUP2 MSTORE SWAP1 SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD66 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xBB4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1149 JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE DUP3 DUP3 ADD GT PUSH2 0x1E2 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 DUP5 MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP7 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x3 DUP7 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xD66 JUMPI PUSH2 0xC49 DUP4 SLOAD PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE35 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDC5 JUMPI SWAP2 DUP1 PUSH2 0xCA3 SWAP5 SWAP3 PUSH1 0x6 SWAP9 SWAP8 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xDBA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ISZERO PUSH2 0xD7C JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCDC DUP3 PUSH2 0x1342 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xD66 JUMPI PUSH2 0xD32 DUP3 PUSH32 0x3A3EE326DD9451112D67D1BABDAF697562D06E41E2571DDD356B4E9BE0DE478E SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD DUP2 SSTORE PUSH2 0x10C5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP7 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xD5B SWAP1 PUSH2 0x1342 JUMP JUMPDEST AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xD91 SWAP1 PUSH2 0x1342 JUMP JUMPDEST AND SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xC76 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xE1D JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x6 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0xCA3 SWAP9 SWAP7 LT PUSH2 0xE04 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xC8B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0xDF7 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xDD8 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xE73 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xE67 JUMPI POP PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE5A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xE51 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135BDB99DBD1185D185251081C995C5D5A5C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081B995D1DDBDC9AC81251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xACF JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x1012 PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x101B JUMPI JUMPDEST PUSH2 0xFF7 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0xFFF PUSH2 0x164F JUMP JUMPDEST PUSH2 0x100A DUP2 ISZERO ISZERO PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFEE JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x1083 PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x108C JUMPI JUMPDEST PUSH2 0x1068 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x1070 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x107B DUP2 ISZERO ISZERO PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x105F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1E2 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1E2 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x10DD JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1123 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x110D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD66 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD66 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x117F DUP5 PUSH2 0x10F3 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x11ED JUMPI POP PUSH1 0x1 EQ PUSH2 0x11A6 JUMPI JUMPDEST POP PUSH2 0x11A4 SWAP3 POP SUB DUP4 PUSH2 0x1149 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x11D1 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x11A4 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x11A4 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x1197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x123B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x121A JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x128D PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12B3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12F0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA53 JUMPI JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1E2 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x135D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420686F73742061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1E2 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1E2 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1E2 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x13D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13995D1DDBDC9AC8191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x10DD JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1428 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642063616C6C65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1473 DUP3 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x14AA DUP2 PUSH2 0x112D JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0xC0 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x14E0 PUSH1 0x3 DUP3 ADD PUSH2 0x116B JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD66 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xA53 JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x10DD JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP3 SWAP2 DUP4 DUP3 LT ISZERO PUSH2 0x1613 JUMPI PUSH2 0x1555 SWAP1 DUP3 PUSH2 0x1335 JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x160C JUMPI JUMPDEST PUSH2 0x1567 DUP3 DUP3 PUSH2 0x151D JUMP JUMPDEST SWAP2 PUSH2 0x1571 DUP4 PUSH2 0x1505 JUMP JUMPDEST SWAP3 PUSH2 0x157F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1149 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x158E PUSH1 0x1F NOT SWAP2 PUSH2 0x1505 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x15F5 JUMPI POP POP DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x15AB JUMPI POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0xA53 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x15EE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x15DD PUSH2 0x15D7 DUP7 DUP6 PUSH2 0x151D JUMP JUMPDEST SWAP2 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x15E7 DUP3 DUP10 PUSH2 0x152A JUMP JUMPDEST MSTORE DUP7 PUSH2 0x152A JUMP JUMPDEST POP ADD PUSH2 0x159D JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1600 PUSH2 0x1466 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x1592 JUMP JUMPDEST POP DUP3 PUSH2 0x155D JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1625 PUSH1 0x20 DUP4 PUSH2 0x1149 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1638 JUMPI POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1643 PUSH2 0x1466 JUMP JUMPDEST DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x162B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1660 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1685 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D SWAP4 ORIGIN 0xF CALLCODE PUSH31 0x527CCC1B9EBB664E49E9F444C2BCFE6C28D77BCB3AAF1D4D1BFB64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "172:6589:14:-:0;;;;;;;2021:10;1273:26:0;1269:95;;1297:1;172:6589:14;;2021:10;-1:-1:-1;;;;;;172:6589:14;;;;;;2021:10;-1:-1:-1;;;;;172:6589:14;;;;3052:40:0;;1297:1;3052:40;1857:1:9;172:6589:14;;1297:1:0;644::14;172:6589;1297:1:0;734::14;172:6589;1297:1:0;823::14;172:6589;1297:1:0;904::14;172:6589;;;;;;;;1269:95:0;1322:31;;;1297:1;1322:31;1297:1;1322:31;172:6589:14;;1297:1:0;1322:31;172:6589:14;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 4256,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool": {
                  "entryPoint": 4278,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 4623,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_Network": {
                  "entryPoint": 4688,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "access_calldata_tail_string_calldata": {
                  "entryPoint": 5017,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "allocate_and_zero_memory_struct_struct_Network": {
                  "entryPoint": 5222,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_Network_dyn": {
                  "entryPoint": 5381,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "calldata_array_index_access_address_dyn_calldata": {
                  "entryPoint": 5137,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 4917,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 5405,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 4459,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 4339,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 4425,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_17262": {
                  "entryPoint": 4397,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 5745,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getNetworksPaginated": {
                  "entryPoint": 5438,
                  "id": 4504,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 5711,
                  "id": 992,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "memory_array_index_access_struct_Network_dyn": {
                  "entryPoint": 5418,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_calldatat_address": {
                  "entryPoint": 4930,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_reference_type_struct_Network": {
                  "entryPoint": 5277,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_3e76": {
                  "entryPoint": 4841,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_6ca8": {
                  "entryPoint": 5153,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_b1b0": {
                  "entryPoint": 5068,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ecf3": {
                  "entryPoint": 4950,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_fac3": {
                  "entryPoint": 4780,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_uint256_dyn": {
                  "entryPoint": 4293,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c80631190defd1461102f57806313a7dd1d14610fbe578063217c682d14610fa057806322a4808b14610f64578063242d30bc14610f8257806329c718b5146108cc5780634ce083be14610f6457806350c0d41c14610a7d5780635290ffc614610a025780635a2f406f1461097757806369009a13146109065780636d65573f146108cc578063715018a61461087357806373f9a5d71461075857806379f0dc571461069e5780637b3341541461065f5780637bae8f5e146106065780637ee3b6fc146105e8578063879ecf10146105b75780638bb0a17c146105245780638da5cb5b146104fb57806395ea571714610494578063ad2c30b114610476578063bed3165414610405578063d8b0e71614610376578063e1c7a8aa146102a1578063ec13f2a114610270578063f2fde38b146101e75763fa9c81a41461015b57600080fd5b346101e25760403660031901126101e25761017a60243560043561153e565b9060405190604082016040835281518091526060830190602060608260051b8601019301916000905b8282106101b7578580868960208301520390f35b909192936020806101d4600193605f198a82030186528851611250565b9601920192019092916101a3565b600080fd5b346101e25760203660031901126101e2576102006110a0565b610208611671565b6001600160a01b0316801561025a57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101e25760203660031901126101e257600435600052600b602052602060ff604060002054166040519015158152f35b346101e25760403660031901126101e2576102ba6110a0565b6024359033600052600260205260ff604060002054168015610362575b6102e0906112ac565b6102e861164f565b6001600160a01b0316906102fd821515611356565b6103088115156112e9565b8160005260096020526103216040600020918254611335565b90558060005260096020527f61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be06020604060002054604051908152a260018055005b506000546001600160a01b031633146102d7565b346101e25760403660031901126101e25761038f6110a0565b7fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f60206103ba6110b6565b926103c3611671565b6001600160a01b0316926103d8841515611421565b83600052600282526103fa8160406000209060ff801983541691151516179055565b6040519015158152a2005b346101e25760203660031901126101e25761045960043533600052600260205260ff604060002054168015610462575b61043e906112ac565b61044661164f565b6104518115156112e9565b600554611335565b60055560018055005b506000546001600160a01b03163314610435565b346101e25760003660031901126101e2576020600554604051908152f35b346101e25760203660031901126101e2576004356104b0611466565b5080600052600b6020526104cb60ff604060002054166113cc565b60005260086020526104f76104e3604060002061149d565b604051918291602083526020830190611250565b0390f35b346101e25760003660031901126101e2576000546040516001600160a01b039091168152602090f35b346101e25760203660031901126101e25760043560005260086020526040600020805460018060a01b036001830154169160028101546105666003830161116b565b916105a160ff60048301541693600660058401549301549360405197889788526020880152604087015260e0606087015260e086019061120f565b921515608085015260a084015260c08301520390f35b346101e25760203660031901126101e257600435600052600c602052602060ff604060002054166040519015158152f35b346101e25760003660031901126101e2576020600454604051908152f35b346101e25760403660031901126101e25761061f6110a0565b6001600160a01b03166000908152600a60205260409020805460243591908210156101e257602091610650916110c5565b90549060031b1c604051908152f35b346101e25760203660031901126101e2576001600160a01b036106806110a0565b166000526002602052602060ff604060002054166040519015158152f35b346101e25760203660031901126101e2576001600160a01b036106bf6110a0565b16600052600a60205260406000206040518060208354918281520190819360005260206000209060005b81811061074257505050816106ff910382611149565b6040519182916020830190602084525180915260408301919060005b818110610729575050500390f35b825184528594506020938401939092019160010161071b565b82548452602090930192600192830192016106e9565b346101e25760403660031901126101e25760043567ffffffffffffffff81116101e257366023820112156101e257806004013567ffffffffffffffff81116101e2576024820191602436918360051b0101116101e2576107b66110b6565b6107be611671565b8015159060005b8381106107ce57005b6001906107f76001600160a01b036107ef6107ea84898b611411565b611342565b161515611421565b818060a01b0361080b6107ea83888a611411565b16600052600260205261082e8360406000209060ff801983541691151516179055565b818060a01b036108426107ea83888a611411565b167fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f6020604051878152a2016107c5565b346101e25760003660031901126101e25761088c611671565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101e25760203660031901126101e2576001600160a01b036108ed6110a0565b1660005260096020526020604060002054604051908152f35b346101e25760203660031901126101e25761095a60043533600052600260205260ff604060002054168015610963575b61093f906112ac565b61094761164f565b6109528115156112e9565b600754611335565b60075560018055005b506000546001600160a01b03163314610936565b346101e25760203660031901126101e257600435610993611671565b80600052600b6020526109ad60ff604060002054166113cc565b600081815260086020526040812060048101805460ff19169055426006820155600101546001600160a01b031691907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c9080a3005b346101e25760003660031901126101e25733600052600260205260ff604060002054168015610a69575b610a35906112ac565b6003546000198114610a535760016020910180600355604051908152f35b634e487b7160e01b600052601160045260246000fd5b506000546001600160a01b03163314610a2c565b346101e25760403660031901126101e25760243560043567ffffffffffffffff82116101e257816004019160e060031982360301126101e25733600052600260205260ff604060002054168015610f50575b610ad8906112ac565b8115610f16576024810190610aff6001600160a01b03610af784611342565b161515611356565b6044810135938415610ed15760648201610b198183611399565b905015610e955784600052600b602052608460ff604060002054161593610b49610b4287611342565b9385611399565b9290910135908115158092036101e2578515610e7d5742925b60405195610b6f8761112d565b3586526001600160a01b0390941660208601908152604086018a8152909467ffffffffffffffff8111610d665760405192610bb4601f8301601f191660200185611149565b81845236828201116101e257816000926020928387013784010152606086019182526080860192835260a086019384524260c0870190815260008a81526008602052604090209651875594516001870180546001600160a01b0319166001600160a01b0392909216919091179055516002860155518051600386019167ffffffffffffffff8211610d6657610c4983546110f3565b601f8111610e35575b50602090601f8311600114610dc5579180610ca39492600698979694600092610dba575b50508160011b916000199060031b1c19161790555b511515600486019060ff801983541691151516179055565b5160058401555191015515610d7c576000828152600b60205260409020805460ff191660011790556001600160a01b03610cdc82611342565b16600052600a60205260406000209081549068010000000000000000821015610d6657610d32827f3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e9460016020950181556110c5565b815460001960039290921b91821b19169086901b1790556001600160a01b0390610d5b90611342565b1693604051908152a3005b634e487b7160e01b600052604160045260246000fd5b9091506001600160a01b0390610d9190611342565b16907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c600080a3005b015190508d80610c76565b90601f1983169184600052816000209260005b818110610e1d575092600192859260069a999896610ca3989610610e04575b505050811b019055610c8b565b015160001960f88460031b161c191690558d8080610df7565b92936020600181928786015181550195019301610dd8565b836000526020600020601f840160051c81019160208510610e73575b601f0160051c01905b818110610e675750610c52565b60008155600101610e5a565b9091508190610e51565b87600052600860205260056040600020015492610b62565b60405162461bcd60e51b8152602060048201526014602482015273135bdb99dbd1185d185251081c995c5d5a5c995960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b995d1ddbdc9ac8125160721b6044820152606490fd5b506000546001600160a01b03163314610acf565b346101e25760003660031901126101e2576020600754604051908152f35b346101e25760003660031901126101e2576020600654604051908152f35b346101e25760003660031901126101e2576020600354604051908152f35b346101e25760203660031901126101e25761101260043533600052600260205260ff60406000205416801561101b575b610ff7906112ac565b610fff61164f565b61100a8115156112e9565b600454611335565b60045560018055005b506000546001600160a01b03163314610fee565b346101e25760203660031901126101e25761108360043533600052600260205260ff60406000205416801561108c575b611068906112ac565b61107061164f565b61107b8115156112e9565b600654611335565b60065560018055005b506000546001600160a01b0316331461105f565b600435906001600160a01b03821682036101e257565b6024359081151582036101e257565b80548210156110dd5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611123575b602083101461110d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611102565b60e0810190811067ffffffffffffffff821117610d6657604052565b90601f8019910116810190811067ffffffffffffffff821117610d6657604052565b906040519182600082549261117f846110f3565b80845293600181169081156111ed57506001146111a6575b506111a492500383611149565b565b90506000929192526020600020906000915b8183106111d15750509060206111a49282010138611197565b60209193508060019154838589010152019101909184926111b8565b9050602092506111a494915060ff191682840152151560051b82010138611197565b919082519283825260005b84811061123b575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161121a565b908151815260018060a01b0360208301511660208201526040820151604082015260c08061128d606085015160e0606086015260e085019061120f565b9360808101511515608085015260a081015160a0850152015191015290565b156112b357565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b156112f057565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b91908201809211610a5357565b356001600160a01b03811681036101e25790565b1561135d57565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420686f7374206164647265737360601b6044820152606490fd5b903590601e19813603018212156101e2570180359067ffffffffffffffff82116101e2576020019181360383136101e257565b156113d357565b60405162461bcd60e51b815260206004820152601660248201527513995d1ddbdc9ac8191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b91908110156110dd5760051b0190565b1561142857565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642063616c6c6572206164647265737360501b6044820152606490fd5b604051906114738261112d565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b906040516114aa8161112d565b8254815260018301546001600160a01b031660208201526002830154604082015291829060c0906006906114e06003820161116b565b606085015260ff60048201541615156080850152600581015460a08501520154910152565b67ffffffffffffffff8111610d665760051b60200190565b91908203918211610a5357565b80518210156110dd5760209160051b010190565b600354929183821015611613576115559082611335565b83811161160c575b611567828261151d565b9161157183611505565b9261157f6040519485611149565b80845261158e601f1991611505565b0160005b8181106115f5575050805b8281106115ab575050509190565b6001810190818111610a535760019160005260086020526115ee60406000206115dd6115d7868561151d565b9161149d565b6115e7828961152a565b528661152a565b500161159d565b602090611600611466565b82828801015201611592565b508261155d565b50506040516000611625602083611149565b81526000805b8181106116385750509190565b602090611643611466565b8282860101520161162b565b600260015414611660576002600155565b633ee5aeb560e01b60005260046000fd5b6000546001600160a01b0316330361168557565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212204d93320ff27e527ccc1b9ebb664e49e9f444c2bcfe6c28d77bcb3aaf1d4d1bfb64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1190DEFD EQ PUSH2 0x102F JUMPI DUP1 PUSH4 0x13A7DD1D EQ PUSH2 0xFBE JUMPI DUP1 PUSH4 0x217C682D EQ PUSH2 0xFA0 JUMPI DUP1 PUSH4 0x22A4808B EQ PUSH2 0xF64 JUMPI DUP1 PUSH4 0x242D30BC EQ PUSH2 0xF82 JUMPI DUP1 PUSH4 0x29C718B5 EQ PUSH2 0x8CC JUMPI DUP1 PUSH4 0x4CE083BE EQ PUSH2 0xF64 JUMPI DUP1 PUSH4 0x50C0D41C EQ PUSH2 0xA7D JUMPI DUP1 PUSH4 0x5290FFC6 EQ PUSH2 0xA02 JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0x977 JUMPI DUP1 PUSH4 0x69009A13 EQ PUSH2 0x906 JUMPI DUP1 PUSH4 0x6D65573F EQ PUSH2 0x8CC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x873 JUMPI DUP1 PUSH4 0x73F9A5D7 EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0x69E JUMPI DUP1 PUSH4 0x7B334154 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0x7BAE8F5E EQ PUSH2 0x606 JUMPI DUP1 PUSH4 0x7EE3B6FC EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0x879ECF10 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x8BB0A17C EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x95EA5717 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xAD2C30B1 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xBED31654 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xD8B0E716 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xE1C7A8AA EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xEC13F2A1 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E7 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x17A PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x153E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1B7 JUMPI DUP6 DUP1 DUP7 DUP10 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x1D4 PUSH1 0x1 SWAP4 PUSH1 0x5F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1250 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x200 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x2BA PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x362 JUMPI JUMPDEST PUSH2 0x2E0 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x2E8 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2FD DUP3 ISZERO ISZERO PUSH2 0x1356 JUMP JUMPDEST PUSH2 0x308 DUP2 ISZERO ISZERO PUSH2 0x12E9 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x321 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1335 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH32 0x61A8B1A557E4D03803DB90D13FF76DB2C25FBA3ED24882CECDA8C8423B9B2BE0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D7 JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x38F PUSH2 0x10A0 JUMP JUMPDEST PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH2 0x3BA PUSH2 0x10B6 JUMP JUMPDEST SWAP3 PUSH2 0x3C3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0x3D8 DUP5 ISZERO ISZERO PUSH2 0x1421 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x3FA DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x459 PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x462 JUMPI JUMPDEST PUSH2 0x43E SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x446 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x451 DUP2 ISZERO ISZERO PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x435 JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4B0 PUSH2 0x1466 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x4CB PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x4F7 PUSH2 0x4E3 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1250 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x566 PUSH1 0x3 DUP4 ADD PUSH2 0x116B JUMP JUMPDEST SWAP2 PUSH2 0x5A1 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x6 PUSH1 0x5 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x61F PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x650 SWAP2 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x680 PUSH2 0x10A0 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6BF PUSH2 0x10A0 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x742 JUMPI POP POP POP DUP2 PUSH2 0x6FF SWAP2 SUB DUP3 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x729 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x71B JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x6E9 JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E2 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1E2 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E2 JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1E2 JUMPI PUSH2 0x7B6 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x7BE PUSH2 0x1671 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x7CE JUMPI STOP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x7F7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7EF PUSH2 0x7EA DUP5 DUP10 DUP12 PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x1342 JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1421 JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x80B PUSH2 0x7EA DUP4 DUP9 DUP11 PUSH2 0x1411 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x82E DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x842 PUSH2 0x7EA DUP4 DUP9 DUP11 PUSH2 0x1411 JUMP JUMPDEST AND PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE LOG2 ADD PUSH2 0x7C5 JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x88C PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x8ED PUSH2 0x10A0 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x95A PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x963 JUMPI JUMPDEST PUSH2 0x93F SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x947 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x952 DUP2 ISZERO ISZERO PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x936 JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x993 PUSH2 0x1671 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x9AD PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C SWAP1 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xA69 JUMPI JUMPDEST PUSH2 0xA35 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA53 JUMPI PUSH1 0x1 PUSH1 0x20 SWAP2 ADD DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA2C JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1E2 JUMPI DUP2 PUSH1 0x4 ADD SWAP2 PUSH1 0xE0 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1E2 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xF50 JUMPI JUMPDEST PUSH2 0xAD8 SWAP1 PUSH2 0x12AC JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF16 JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH2 0xAFF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xAF7 DUP5 PUSH2 0x1342 JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP4 DUP5 ISZERO PUSH2 0xED1 JUMPI PUSH1 0x64 DUP3 ADD PUSH2 0xB19 DUP2 DUP4 PUSH2 0x1399 JUMP JUMPDEST SWAP1 POP ISZERO PUSH2 0xE95 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x84 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP4 PUSH2 0xB49 PUSH2 0xB42 DUP8 PUSH2 0x1342 JUMP JUMPDEST SWAP4 DUP6 PUSH2 0x1399 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1E2 JUMPI DUP6 ISZERO PUSH2 0xE7D JUMPI TIMESTAMP SWAP3 JUMPDEST PUSH1 0x40 MLOAD SWAP6 PUSH2 0xB6F DUP8 PUSH2 0x112D JUMP JUMPDEST CALLDATALOAD DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD DUP11 DUP2 MSTORE SWAP1 SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD66 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xBB4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1149 JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE DUP3 DUP3 ADD GT PUSH2 0x1E2 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 DUP5 MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP7 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x3 DUP7 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xD66 JUMPI PUSH2 0xC49 DUP4 SLOAD PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE35 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDC5 JUMPI SWAP2 DUP1 PUSH2 0xCA3 SWAP5 SWAP3 PUSH1 0x6 SWAP9 SWAP8 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xDBA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ISZERO PUSH2 0xD7C JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCDC DUP3 PUSH2 0x1342 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xD66 JUMPI PUSH2 0xD32 DUP3 PUSH32 0x3A3EE326DD9451112D67D1BABDAF697562D06E41E2571DDD356B4E9BE0DE478E SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD DUP2 SSTORE PUSH2 0x10C5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP7 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xD5B SWAP1 PUSH2 0x1342 JUMP JUMPDEST AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xD91 SWAP1 PUSH2 0x1342 JUMP JUMPDEST AND SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xC76 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xE1D JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x6 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0xCA3 SWAP9 SWAP7 LT PUSH2 0xE04 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xC8B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0xDF7 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xDD8 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xE73 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xE67 JUMPI POP PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE5A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xE51 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135BDB99DBD1185D185251081C995C5D5A5C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081B995D1DDBDC9AC81251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xACF JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x1012 PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x101B JUMPI JUMPDEST PUSH2 0xFF7 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0xFFF PUSH2 0x164F JUMP JUMPDEST PUSH2 0x100A DUP2 ISZERO ISZERO PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFEE JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E2 JUMPI PUSH2 0x1083 PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x108C JUMPI JUMPDEST PUSH2 0x1068 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x1070 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x107B DUP2 ISZERO ISZERO PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x105F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1E2 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1E2 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x10DD JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1123 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x110D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD66 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD66 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x117F DUP5 PUSH2 0x10F3 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x11ED JUMPI POP PUSH1 0x1 EQ PUSH2 0x11A6 JUMPI JUMPDEST POP PUSH2 0x11A4 SWAP3 POP SUB DUP4 PUSH2 0x1149 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x11D1 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x11A4 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x11A4 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x1197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x123B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x121A JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x128D PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12B3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12F0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA53 JUMPI JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1E2 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x135D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420686F73742061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1E2 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1E2 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1E2 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x13D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13995D1DDBDC9AC8191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x10DD JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1428 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642063616C6C65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1473 DUP3 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x14AA DUP2 PUSH2 0x112D JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0xC0 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x14E0 PUSH1 0x3 DUP3 ADD PUSH2 0x116B JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD66 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xA53 JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x10DD JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP3 SWAP2 DUP4 DUP3 LT ISZERO PUSH2 0x1613 JUMPI PUSH2 0x1555 SWAP1 DUP3 PUSH2 0x1335 JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x160C JUMPI JUMPDEST PUSH2 0x1567 DUP3 DUP3 PUSH2 0x151D JUMP JUMPDEST SWAP2 PUSH2 0x1571 DUP4 PUSH2 0x1505 JUMP JUMPDEST SWAP3 PUSH2 0x157F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1149 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x158E PUSH1 0x1F NOT SWAP2 PUSH2 0x1505 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x15F5 JUMPI POP POP DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x15AB JUMPI POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0xA53 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x15EE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x15DD PUSH2 0x15D7 DUP7 DUP6 PUSH2 0x151D JUMP JUMPDEST SWAP2 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x15E7 DUP3 DUP10 PUSH2 0x152A JUMP JUMPDEST MSTORE DUP7 PUSH2 0x152A JUMP JUMPDEST POP ADD PUSH2 0x159D JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1600 PUSH2 0x1466 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x1592 JUMP JUMPDEST POP DUP3 PUSH2 0x155D JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1625 PUSH1 0x20 DUP4 PUSH2 0x1149 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1638 JUMPI POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1643 PUSH2 0x1466 JUMP JUMPDEST DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x162B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1660 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1685 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D SWAP4 ORIGIN 0xF CALLCODE PUSH31 0x527CCC1B9EBB664E49E9F444C2BCFE6C28D77BCB3AAF1D4D1BFB64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "172:6589:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;172:6589:14;2627:22:0;;2623:91;;172:6589:14;;;-1:-1:-1;;;;;;172:6589:14;;;;;;-1:-1:-1;;;;;172:6589:14;;3052:40:0;;172:6589:14;3052:40:0;172:6589:14;2623:91:0;2672:31;;;172:6589:14;2672:31:0;172:6589:14;;;;;2672:31:0;172:6589:14;;;;;;-1:-1:-1;;172:6589:14;;;;;;;;1161:45;172:6589;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;;:::i;:::-;;;1333:10;;172:6589;;1318:14;172:6589;;;;;;;;1318:51;;;;172:6589;1297:112;;;:::i;:::-;2466:103:9;;:::i;:::-;-1:-1:-1;;;;;172:6589:14;;5033:58;5041:25;;;5033:58;:::i;:::-;5101:52;5109:10;;;5101:52;:::i;:::-;172:6589;;;5164:12;172:6589;;5164:35;172:6589;;;;;;5164:35;:::i;:::-;172:6589;;;;;5164:12;172:6589;;5214:59;172:6589;;;;;;;;;;5214:59;172:6589;;;;1318:51;-1:-1:-1;172:6589:14;;-1:-1:-1;;;;;172:6589:14;1333:10;1348:21;1318:51;;172:6589;;;;;;-1:-1:-1;;172:6589:14;;;;;;:::i;:::-;2272:37;172:6589;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;172:6589:14;;2159:56;2167:21;;;2159:56;:::i;:::-;172:6589;;;2225:14;172:6589;;2225:32;172:6589;;;;;;;;;;;;;;;;;;;2225:32;172:6589;;;;;;;2272:37;172:6589;;;;;;;-1:-1:-1;;172:6589:14;;;;6129:32;172:6589;;1333:10;172:6589;;1318:14;172:6589;;;;;;;;1318:51;;;;172:6589;1297:112;;;:::i;:::-;2466:103:9;;:::i;:::-;6067:52:14;6075:10;;;6067:52;:::i;:::-;6129:32;172:6589;6129:32;:::i;:::-;;172:6589;;;;;1318:51;-1:-1:-1;172:6589:14;;-1:-1:-1;;;;;172:6589:14;1333:10;1348:21;1318:51;;172:6589;;;;;;-1:-1:-1;;172:6589:14;;;;;694:41;172:6589;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;;;;:::i;:::-;;;;;4026:13;172:6589;;4018:52;172:6589;;;;;;4018:52;:::i;:::-;172:6589;;4087:8;172:6589;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;;;;-1:-1:-1;;;;;172:6589:14;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;;;;949:43;172:6589;;;;;;;;;;;;;949:43;;172:6589;;949:43;;;;172:6589;949:43;;;;;:::i;:::-;;172:6589;;;949:43;;172:6589;;949:43;;;;;172:6589;949:43;;172:6589;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;;;;1212:45;172:6589;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;;:::i;:::-;-1:-1:-1;;;;;172:6589:14;;;;;1104:51;172:6589;;;;;;;;;;;1104:51;;;;;172:6589;1104:51;;;;:::i;:::-;172:6589;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;-1:-1:-1;;;;;172:6589:14;;:::i;:::-;;;;444:46;172:6589;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;-1:-1:-1;;;;;172:6589:14;;:::i;:::-;;;;4836:14;172:6589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:6589:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;172:6589:14;;;;;2513:19;;;;;;172:6589;2534:3;172:6589;;2553:60;-1:-1:-1;;;;;2561:11:14;;172:6589;2561:11;;;:::i;:::-;;:::i;:::-;172:6589;2561:25;;2553:60;:::i;:::-;172:6589;;;;;2642:11;;;;;;:::i;:::-;172:6589;;;2627:14;172:6589;;2627:36;172:6589;;;;;;;;;;;;;;;;;;;2627:36;172:6589;;;;;2703:11;;;;;;:::i;:::-;172:6589;2682:41;172:6589;;;;;;2682:41;172:6589;2498:13;;172:6589;;;;;;-1:-1:-1;;172:6589:14;;;;1500:62:0;;:::i;:::-;172:6589:14;;;-1:-1:-1;;;;;;172:6589:14;;;;-1:-1:-1;;;;;172:6589:14;3052:40:0;172:6589:14;;3052:40:0;172:6589:14;;;;;;;-1:-1:-1;;172:6589:14;;;;-1:-1:-1;;;;;172:6589:14;;:::i;:::-;;;;5395:12;172:6589;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;5601:24;172:6589;;1333:10;172:6589;;1318:14;172:6589;;;;;;;;1318:51;;;;172:6589;1297:112;;;:::i;:::-;2466:103:9;;:::i;:::-;5539:52:14;5547:10;;;5539:52;:::i;:::-;5601:24;172:6589;5601:24;:::i;:::-;;172:6589;;;;;1318:51;-1:-1:-1;172:6589:14;;-1:-1:-1;;;;;172:6589:14;1333:10;1348:21;1318:51;;172:6589;;;;;;-1:-1:-1;;172:6589:14;;;;;;1500:62:0;;:::i;:::-;172:6589:14;;;6525:13;172:6589;;6517:59;172:6589;;;;;;6517:59;:::i;:::-;172:6589;;;;6586:8;172:6589;;;;;;6586:28;;172:6589;;-1:-1:-1;;172:6589:14;;;6664:15;6632:29;;;172:6589;-1:-1:-1;6720:31:14;172:6589;-1:-1:-1;;;;;172:6589:14;;;6694:58;;172:6589;6694:58;172:6589;;;;;;;-1:-1:-1;;172:6589:14;;;;1333:10;172:6589;;1318:14;172:6589;;;;;;;;1318:51;;;;172:6589;1297:112;;;:::i;:::-;2865:18;172:6589;-1:-1:-1;;172:6589:14;;;;;;;;;2865:18;172:6589;;;;;;;;;;;;;;;;;;;1318:51;-1:-1:-1;172:6589:14;;-1:-1:-1;;;;;172:6589:14;1333:10;1348:21;1318:51;;172:6589;;;;;;-1:-1:-1;;172:6589:14;;;;;;;;;;;;;;;;;;;;;;;;;;;1333:10;172:6589;;1318:14;172:6589;;;;;;;;1318:51;;;;172:6589;1297:112;;;:::i;:::-;2989:6;;172:6589;;;3036:15;;;3028:62;-1:-1:-1;;;;;3036:15:14;;;:::i;:::-;172:6589;3036:29;;3028:62;:::i;:::-;3108:19;;;172:6589;3108:23;;;172:6589;;3188:15;;;;;;;:::i;:::-;3182:33;;;172:6589;;;;;3272:13;172:6589;;3505:12;172:6589;;;;;;3271:18;3374:15;3466;3374;;;:::i;:::-;3466;;;:::i;:::-;3505:12;;;;172:6589;;;;;;;;;;3542:55;;;;3557:15;3542:55;;172:6589;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;172:6589:14;;;;3315:333;;172:6589;;;;3315:333;;172:6589;;;3315:333;;172:6589;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3188:15;3315:333;;172:6589;;;3505:12;3315:333;;172:6589;;;3315:333;;;172:6589;;;3622:15;3315:333;;;172:6589;;;-1:-1:-1;172:6589:14;;;3300:8;172:6589;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;172:6589:14;-1:-1:-1;;;;;172:6589:14;;;;;;;;;;;1318:14;172:6589;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;3542:55;172:6589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3659:266;;;172:6589;;;;3272:13;172:6589;;;;;;;-1:-1:-1;;172:6589:14;;;;;-1:-1:-1;;;;;3744:15:14;;;:::i;:::-;172:6589;;;3729:14;172:6589;;;;;;;;;;;;;;;;;3788:55;172:6589;;;;;;;;:::i;:::-;;;-1:-1:-1;;172:6589:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:6589:14;3806:15;;;:::i;:::-;172:6589;;;;;;;3788:55;172:6589;;;;;;;;;;;;;3659:266;172:6589;;-1:-1:-1;;;;;;172:6589:14;3898:15;;;:::i;:::-;172:6589;3879:35;;172:6589;3879:35;;172:6589;;;;;-1:-1:-1;172:6589:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:6589:14;;;;3542:55;172:6589;;;3575:8;172:6589;;3575:22;172:6589;;;3575:22;172:6589;3542:55;;;172:6589;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;-1:-1:-1;;;3108:19:14;172:6589;;;3188:15;;172:6589;;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;;3108:19;172:6589;;;;;;;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;-1:-1:-1;;;172:6589:14;;;;;;;1318:51;-1:-1:-1;172:6589:14;;-1:-1:-1;;;;;172:6589:14;1333:10;1348:21;1318:51;;172:6589;;;;;;-1:-1:-1;;172:6589:14;;;;;872:33;172:6589;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;787:37;172:6589;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;;543:31;172:6589;;;;;;;;;;;;;-1:-1:-1;;172:6589:14;;;;5914:29;172:6589;;1333:10;172:6589;;1318:14;172:6589;;;;;;;;1318:51;;;;172:6589;1297:112;;;:::i;:::-;2466:103:9;;:::i;:::-;5852:52:14;5860:10;;;5852:52;:::i;:::-;172:6589;;5914:29;:::i;:::-;172:6589;;;;;;1318:51;-1:-1:-1;172:6589:14;;-1:-1:-1;;;;;172:6589:14;1333:10;1348:21;1318:51;;172:6589;;;;;;-1:-1:-1;;172:6589:14;;;;6343:28;172:6589;;1333:10;172:6589;;1318:14;172:6589;;;;;;;;1318:51;;;;172:6589;1297:112;;;:::i;:::-;2466:103:9;;:::i;:::-;6281:52:14;6289:10;;;6281:52;:::i;:::-;6343:28;172:6589;6343:28;:::i;:::-;;172:6589;;;;;1318:51;-1:-1:-1;172:6589:14;;-1:-1:-1;;;;;172:6589:14;1333:10;1348:21;1318:51;;172:6589;;;;-1:-1:-1;;;;;172:6589:14;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;172:6589:14;;-1:-1:-1;172:6589:14;;;-1:-1:-1;172:6589:14;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;172:6589:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;172:6589:14;;;;;-1:-1:-1;172:6589:14;;-1:-1:-1;172:6589:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;172:6589:14;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;-1:-1:-1;;;172:6589:14;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;172:6589:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;172:6589:14;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;4112:600::-;4269:16;172:6589;;4112:600;4299:15;;;;4295:78;;4397:14;;;;:::i;:::-;4425:11;;;4421:53;;4112:600;4524:12;;;;:::i;:::-;4510:27;172:6589;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;-1:-1:-1;172:6589:14;;;;;;4552:18;;;4572:7;;;;;;4683:22;;;;4112:600;:::o;4581:3::-;4634:1;172:6589;;;;;;;;4634:1;172:6589;-1:-1:-1;172:6589:14;4621:8;172:6589;;4600:36;172:6589;-1:-1:-1;172:6589:14;;4607:10;;;;:::i;:::-;172:6589;;:::i;:::-;4600:36;;;;:::i;:::-;;;;:::i;:::-;;172:6589;4552:18;;172:6589;;;;;:::i;:::-;;;;;;;;;;4421:53;4452:11;;4421:53;;4295:78;-1:-1:-1;;172:6589:14;;-1:-1:-1;172:6589:14;;;;:::i;:::-;;;-1:-1:-1;;172:6589:14;;;;;;4330:32;;;;:::o;172:6589::-;;;;;:::i;:::-;;;;;;;;;;2575:307:9;1899:1;2702:7;172:6589:14;2702:18:9;2698:86;;1899:1;2702:7;172:6589:14;2575:307:9:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:9;;-1:-1:-1;2743:30:9;1796:162:0;1710:6;172:6589:14;-1:-1:-1;;;;;172:6589:14;735:10:7;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:7;1901:40:0;172:6589:14;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "allowedCallers(address)": "7b334154",
              "emergencyDeactivateNetwork(uint256)": "5a2f406f",
              "getHostEarnings(address)": "6d65573f",
              "getHostNetworks(address)": "79f0dc57",
              "getNetwork(uint256)": "95ea5717",
              "getNetworksPaginated(uint256,uint256)": "fa9c81a4",
              "getZaaNetEarnings()": "22a4808b",
              "hostEarnings(address)": "29c718b5",
              "hostNetworkIds(address,uint256)": "7bae8f5e",
              "increaseHostEarnings(address,uint256)": "e1c7a8aa",
              "increaseZaaNetEarnings(uint256)": "69009a13",
              "incrementNetworkId()": "5290ffc6",
              "networkExists(uint256)": "ec13f2a1",
              "networkIdCounter()": "217c682d",
              "networks(uint256)": "8bb0a17c",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "sessionExists(uint256)": "879ecf10",
              "setAllowedCaller(address,bool)": "d8b0e716",
              "setAllowedCallers(address[],bool)": "73f9a5d7",
              "setNetwork(uint256,(uint256,address,uint256,string,bool,uint256,uint256))": "50c0d41c",
              "totalHostingAmount()": "242d30bc",
              "totalPaymentsAmount()": "7ee3b6fc",
              "totalWithdrawalsAmount()": "ad2c30b1",
              "transferOwnership(address)": "f2fde38b",
              "updateTotalHostingAmount(uint256)": "1190defd",
              "updateTotalPaymentsAmount(uint256)": "13a7dd1d",
              "updateTotalWithdrawalsAmount(uint256)": "bed31654",
              "zaanetEarnings()": "4ce083be"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"AllowedCallerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalEarned\",\"type\":\"uint256\"}],\"name\":\"HostEarningsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"}],\"name\":\"NetworkStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"NetworkUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SessionStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalEarned\",\"type\":\"uint256\"}],\"name\":\"ZaaNetEarningsUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostNetworks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getNetwork\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getNetworksPaginated\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZaaNetEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hostEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hostNetworkIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseHostEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseZaaNetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNetworkId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"networkIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sessionExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAllowedCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAllowedCallers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"net\",\"type\":\"tuple\"}],\"name\":\"setNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalHostingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPaymentsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawalsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateTotalHostingAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateTotalPaymentsAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateTotalWithdrawalsAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zaanetEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetStorage.sol\":\"ZaaNetStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x44d8f24b593205bc37acf477ed961f1a8e7f7dfbcea2141ca98f77f22fdfae9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19b4964e5ccf5c0f2e2bc8c33f15bf1437dc9756ccfaf026adb2ffe5225e48e0\",\"dweb:/ipfs/QmUiKZxyg7oduxqwqUKZUfxzpyRowZ9mFbjziQEVoHpcM9\"]}},\"version\":1}"
        }
      }
    }
  }
}